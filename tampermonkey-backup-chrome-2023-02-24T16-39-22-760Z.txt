{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"redirect 外链跳转","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^https?:\\/\\/www\\.google\\..{2,7}url/"],"orig_matches":["*://www.jianshu.com/go-wild*","*://link.zhihu.com/*","*://t.cn/*","*://weibo.cn/sinaurl*","*://mail.qq.com/cgi-bin/*","*://c.pc.qq.com/middlem.html*","*://app.yinxiang.com/OutboundRedirect.action*","*://jump.bdimg.com/safecheck/*","*://jump2.bdimg.com/safecheck/*","*://link.csdn.net/*","*://www.youtube.com/redirect*","*://weixin110.qq.com/cgi-bin/mmspamsupport-bin/newredirectconfirmcgi*","*://developers.weixin.qq.com/community/middlepage/href*","*://www.itdaan.com/link/*","*://www.douban.com/link2/*","*://www.360doc.com/content/*","*://www.pixiv.net/jump.php*","*://m.sogou.com/*/tc*","*://m.sogou.com*/tc*","*://www.chinaz.com/go.shtml*","*://www.oschina.net/action/GoToLink*","*://link.juejin.cn/*","*://docs.qq.com/scenario/link.html*","*://www.pc6.com/goread.html*","*://afdian.net/link*","*://gitee.com/link*","*://www.tianyancha.com/security*","*://aiqicha.baidu.com/safetip*","*://www.qcc.com/web/transfer-link*","*://link.uisdc.com/*","*://blog.51cto.com/transfer*","*://leetcode.cn/link*","*://huaban.com/go*","*://security.feishu.cn/link/safety*","*://redirect.epicgames.com/*","*://steamcommunity.com/linkfilter/*","*://www.yuque.com/r/goto*","*://hd.nowcoder.com/link.html*","*://game.bilibili.com/linkfilter/*","*://sspai.com/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1675752956840,"data":{}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/416338-redirect-%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC/code/redirect%20%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC.user.js","uuid":"8b6d2b22-b335-4cb4-bd6f-d9ae956f3142","source":""},{"name":"Google Infinite Scroll (+ Site Icon)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.google.com/search*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1675752981230,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/439575-google-infinite-scroll-site-icon/code/Google%20Infinite%20Scroll%20(+%20Site%20Icon).user.js","uuid":"b7c02a06-59d3-4136-b262-c5ceae1b43a3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBTaXRlIEljb24pCi8vIEBuYW1lOmFyCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsg2KPZitmC2YjZhtipINin2YTZhdmI2YLYuSkKLy8gQG5hbWU6YXoJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBzYXl0IHNpbXZvbHUpCi8vIEBuYW1lOmJlCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsg0LfQvdCw0YfQvtC6INGB0LDQudGC0LApCi8vIEBuYW1lOmJnCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsg0LjQutC+0L3QsCDQvdCwINGB0LDQudGC0LApCi8vIEBuYW1lOmJuCeCml+CngeCml+CmsiDgpoXgprjgp4Dgpq4g4Ka44KeN4KaV4KeN4Kaw4KeL4KayICgrIOCmuOCmvuCmh+CmnyDgpobgpofgppXgpqgpCi8vIEBuYW1lOmNhCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgaWNvbmEgZGVsIGxsb2MpCi8vIEBuYW1lOmNzCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgaWtvbmEgd2VidSkKLy8gQG5hbWU6Y3kJU2dyb2wgSW5maW5pdGUgR29vZ2xlICgrIEVpY29uIFNhZmxlKQovLyBAbmFtZTpkYQlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIFNpdGUgSWNvbikKLy8gQG5hbWU6ZGUJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBTaXRlIC1TeW1ib2wpCi8vIEBuYW1lOmVsCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgzpXOuc66zr/Ovc6vzrTOuc6/IM65z4PPhM+Mz4TOv8+Azr/PhSkKLy8gQG5hbWU6ZW4JR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBTaXRlIEljb24pCi8vIEBuYW1lOmVvCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgcmV0ZWpvIC1pa29ubykKLy8gQG5hbWU6ZXMJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpY29ubyBkZWwgc2l0aW8pCi8vIEBuYW1lOmV0CUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgc2FpZGkgaWtvb24pCi8vIEBuYW1lOmV1CUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgR3VuZWFyZW4gaWtvbm9hKQovLyBAbmFtZTpmYQlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrINmG2YXYp9ivINiz2KfbjNiqKQovLyBAbmFtZTpmaQlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIFNpdnVzdG9rdXZha2UpCi8vIEBuYW1lOmZyCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgaWPDtG5lIGR1IHNpdGUpCi8vIEBuYW1lOmdhCVNjcm9sbGFpZ2ggR29vZ2xlIEluZmluaXRlICgrIGRlaWxiaMOtbiBhbiB0c3XDrW1oKQovLyBAbmFtZTpnbAlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIGljb25hIGRvIHNpdGlvKQovLyBAbmFtZTpndQngqpfgq4LgqpfgqrIg4KqF4Kqo4KqC4KqkIOCquOCrjeCqleCrjeCqsOCri+CqsiAoKyDgqrjgqr7gqofgqp8g4Kqa4Kq/4Kq54KuN4KqoKQovLyBAbmFtZTpoaQlHb29nbGUg4KSF4KSo4KSC4KSkIOCkuOCljeCkleCljeCksOClieCksiAoKyDgpLjgpL7gpIfgpJ8g4KSG4KSH4KSV4KSoKQovLyBAbmFtZTpocglHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIGlrb25hIHdlYiBtamVzdGEpCi8vIEBuYW1lOmh0CUdvb2dsZSBlbmZpbmkgd291bG8gbGl2ICgrIGljb24gc2l0KQovLyBAbmFtZTpodQlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIFNpdGUgaWtvbikKLy8gQG5hbWU6aWQJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBJa29uIFNpdHVzKQovLyBAbmFtZTppcwlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIFNpdGUgSWNvbikKLy8gQG5hbWU6aXQJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpY29uYSBkZWwgc2l0bykKLy8gQG5hbWU6aXcJ15LXnNeZ15zXlCDXkNeZ16DXodeV16TXmdeqINep15wg15LXldeS15wgKCsg16HXntecINeQ16rXqCkKLy8gQG5hbWU6amEJR29vZ2xlIEluZmluaXRlIFNjcm9sbO+8iCvjgrXjgqTjg4jjgqLjgqTjgrPjg7PvvIkKLy8gQG5hbWU6a2EJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyDhg6Hhg5Dhg5jhg6Lhg5jhg6Eg4YOu4YOQ4YOi4YOYKQovLyBAbmFtZTprbgngspfgs4LgspfgsrLgs40g4LKH4LKo4LON4LKr4LOI4LKo4LOI4LKf4LONIOCyuOCzjeCyleCzjeCysOCyvuCysuCzjSAoKyDgsrjgs4jgsp/gs40g4LKQ4LKV4LK+4LKo4LONKQovLyBAbmFtZTprbwlHb29nbGUgSW5maW5pdGUg7Iqk7YGs66GkICgrIOyCrOydtO2KuCDslYTsnbTsvZgpCi8vIEBuYW1lOmxhCUdvb2dsZSBpbmZpbml0dW0gdm9sdW1lbiAoKyBzaXRlIGljb24pCi8vIEBuYW1lOmx0CeKAnkdvb2dsZSBJbmZpbml0ZSBTY3JvbGzigJwgKCsgc3ZldGFpbsSXcyBwaWt0b2dyYW1hKQovLyBAbmFtZTpsdglHb29nbGUgSW5maW5pdGUgcml0aW7EgcWhYW5hICgrIHZpZXRuZXMgaWtvbmEpCi8vIEBuYW1lOm1rCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsg0LjQutC+0L3QsCDQvdCwINGB0YLRgNCw0L3QuNGG0LDRgtCwKQovLyBAbmFtZTptcwlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIGlrb24gdGFwYWspCi8vIEBuYW1lOm10CUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgSWtvbmEgdGFzLVNpdCkKLy8gQG5hbWU6bmwJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBzaXRlcGljdG9ncmFtKQovLyBAbmFtZTpubwlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIG5ldHRzdGVkaWtvbikKLy8gQG5hbWU6cGwJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpa29uYSB3aXRyeW55KQovLyBAbmFtZTpwdAlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIMOtY29uZSBkbyBzaXRlKQovLyBAbmFtZTpybwlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIHBpY3RvZ3JhbWEgc2l0ZSAtdWx1aSkKLy8gQG5hbWU6cnUJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyDQt9C90LDRh9C+0Log0YHQsNC50YLQsCkKLy8gQG5hbWU6c2sJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpa29uYSBzdHLDoW5vaykKLy8gQG5hbWU6c2wJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpa29uYSBzcGxldG5lZ2EgbWVzdGEpCi8vIEBuYW1lOnNxCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgaWtvbmEgZSBmYXFlcykKLy8gQG5hbWU6c3IJ0JPQvtC+0LPQu9C1INCY0L3RhNC40L3QuNGC0LUg0KHRhtGA0L7Qu9C7ICgrINC40LrQvtC90LAg0YHQsNGY0YLQsCkKLy8gQG5hbWU6c3YJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyB3ZWJicGxhdHNpa29uKQovLyBAbmFtZTpzdwlHb29nbGUgSW5maW5pdGUgS2l0YWJ1ICgrIEljb24geWEgVG92dXRpKQovLyBAbmFtZTp0YQngrpXgr4LgrpXgrr/grrPgr40g4K6O4K6y4K+N4K6y4K+I4K6v4K6x4K+N4K6xIOCumuCvgeCusOCvgeCus+CvjSAoKyDgrqTgrrMg4K6Q4K6V4K6+4K6p4K+NKQovLyBAbmFtZTp0ZQngsJfgsYLgsJfgsYHgsLLgsY0g4LCF4LCo4LCC4LCk4LCu4LGI4LCoIOCwuOCxjeCwleCxjeCwsOCxi+CwsuCxjSAoKyDgsLjgsYjgsJ/gsY0g4LCQ4LCV4LC+4LCo4LGNKQovLyBAbmFtZTp0aAlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrIOC5hOC4reC4hOC4reC4meC5hOC4i+C4leC5jCkKLy8gQG5hbWU6dGwJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBpY29uIG5nIHNpdGUpCi8vIEBuYW1lOnRyCUdvb2dsZSBJbmZpbml0ZSBTY3JvbGwgKCsgc2l0ZSBzaW1nZXNpKQovLyBAbmFtZTp1awlHb29nbGUgSW5maW5pdGUgU2Nyb2xsICgrINC30L3QsNGH0L7QuiDRgdCw0LnRgtGDKQovLyBAbmFtZTp1cgnar9mI2q/ZhCDZhNin2YXYrdiv2YjYryDYp9iz2qnYsdmI2YQgKCsg2LPYp9im2bkg2KLYptuM2qnZhikKLy8gQG5hbWU6dmkJR29vZ2xlIEluZmluaXRlIFNjcm9sbCAoKyBCaeG7g3UgdMaw4bujbmcgdHJhbmcgd2ViKQovLyBAbmFtZTp5aQnXkteV15LXnCDXmdeg16TXkNa316DXkNa315gg157XoteS15nXnNeiICgrINek1rzXnNeQ1rfXpSDXmdeZ16fXkNa3158pCi8vIEBuYW1lOnpoLUNOCUdvb2dsZeaXoOmZkOa7muWKqO+8iCvnq5nngrnlm77moIfvvIkKLy8gQG5hbWU6emgtVFcJR29vZ2xl54Sh6ZmQ5ru+5YuV77yIK+ermem7nuWcluaome+8iQoKLy8gQGRlc2NyaXB0aW9uCUdvb2dsZSBTZWFyY2ggRW5oYW5jZW1lbnQgdG9vbCB0aGF0IGRpc3BsYXlzIHVubGltaXRlZCBzZWFyY2ggcmVzdWx0cyBzY3JvbGxpbmcgYW5kIHNpdGUgaWNvbnMgdG9nZXRoZXIuCi8vIEBkZXNjcmlwdGlvbjphcgnYo9iv2KfYqSDYqtit2LPZitmGINin2YTYqNit2Ksg2YHZiiBHb29nbGUg2KfZhNiq2Yog2KrYudix2LYg2YbYqtin2KbYrCDYp9mE2KjYrdirINi62YrYsSDYp9mE2YXYrdiv2YjYr9ipINmE2YTYqtmF2LHZitixINmI2KfZhNmF2YjYp9mC2Lkg2YXYudmL2KcuCi8vIEBkZXNjcmlwdGlvbjpheglMaW1pdHNpeiBheHRhcsSxxZ8gbsmZdGljyZlsyZlyaW5pIHPDvHLDvMWfbcmZIHbJmSBzYXl0IG5pxZ9hbmxhcsSxbsSxIGJpcmxpa2TJmSBnw7ZzdMmZcsmZbiBHb29nbGUgYXh0YXLEscWfIGfDvGNsyZluZGlybcmZIHZhc2l0yZlzaS4KLy8gQGRlc2NyaXB0aW9uOmJlCdCG0L3RgdGC0YDRg9C80LXQvdGCINC/0LDQu9GP0L/RiNGN0L3QvdGPINC/0L7RiNGD0LrRgyBHb29nbGUsINGP0LrRliDQsNC00LvRjtGB0YLRgNC+0Z7QstCw0LUg0L3QtdCw0LHQvNC10LbQsNCy0LDQvdGL0Y8g0LLRi9C90ZbQutGWINC/0L7RiNGD0LrRgyDQv9GA0LDQutGA0YPRgtC60ZYg0ZYg0LfQvdCw0YfQutGWINGB0LDQudGC0LAg0YDQsNC30LDQvC4KLy8gQGRlc2NyaXB0aW9uOmJnCdCY0L3RgdGC0YDRg9C80LXQvdGCINC30LAg0L/QvtC00L7QsdGA0Y/QstCw0L3QtSDQvdCwINGC0YrRgNGB0LXQvdC10YLQviDQsiBHb29nbGUsINC60L7QudGC0L4g0L/QvtC60LDQt9Cy0LAg0L3QtdC+0LPRgNCw0L3QuNGH0LXQvdC4INGA0LXQt9GD0LvRgtCw0YLQuCDQt9CwINGC0YrRgNGB0LXQvdC1INC4INC40LrQvtC90Lgg0L3QsCDRgdCw0LnRgtCwINC30LDQtdC00L3Qvi4KLy8gQGRlc2NyaXB0aW9uOmJuCeCml+CngeCml+CmsiDgpoXgpqjgp4Hgprjgpqjgp43gpqfgpr7gpqgg4Kas4Kaw4KeN4Kan4KaoIOCmuOCmsOCmnuCnjeCmnOCmvuCmriDgpq/gpr4g4Ka44KeA4Kau4Ka+4Ka54KeA4KaoIOCmheCmqOCngeCmuOCmqOCnjeCmp+CmvuCmqCDgpqvgprLgpr7gpqvgprIg4Ka44KeN4KaV4KeN4Kaw4KeL4Kay4Ka/4KaCIOCmj+CmrOCmgiDgprjgpr7gpofgpp8g4KaG4KaH4KaV4KaoIOCmj+CmleCmuOCmvuCmpeCnhyDgpqrgp43gprDgpqbgprDgp43gprbgpqgg4KaV4Kaw4KeH4KWkCi8vIEBkZXNjcmlwdGlvbjpjYQlFaW5hIGRlIG1pbGxvcmEgZGUgbGEgY2VyY2EgZGUgR29vZ2xlIHF1ZSBtb3N0cmEgZWxzIHJlc3VsdGF0cyBkZSBsYSBjZXJjYSBpbMK3bGltaXRhdHMgaSBsZXMgaWNvbmVzIGRlbCBsbG9jLgovLyBAZGVzY3JpcHRpb246Y3MJTsOhc3Ryb2ogcHJvIHZ5bGVwxaFlbsOtIHZ5aGxlZMOhdsOhbsOtIEdvb2dsZSwga3RlcsO9IHpvYnJhenVqZSBuZW9tZXplbsOpIHbDvXNsZWRreSB2eWhsZWTDoXbDoW7DrSBwb3NvdXbDoW7DrSBhIGlrb255IHdlYnUgZG9ocm9tYWR5LgovLyBAZGVzY3JpcHRpb246Y3kJT2ZmZXJ5biBHd2VsbGEgQ2h3aWxpbyBHb29nbGUgc3knbiBBcmRkYW5nb3MgQ2FubHluaWFkYXUgQ2h3aWxpbyBEaWRlcmZ5biB5biBzZ3JvbGlvIGFjIGVpY29uYXUgZ3dlZmFuIGd5ZGEnaSBnaWx5ZGQuCi8vIEBkZXNjcmlwdGlvbjpkYQlHb29nbGUgU2VhcmNoIEVuaGFuY2VtZW50IFRvb2wsIGRlciB2aXNlciB1YmVncsOmbnNlZGUgc8O4Z2VyZXN1bHRhdGVyIHJ1bG5pbmcgb2cgc3RlZGlrb25lciBzYW1tZW4uCi8vIEBkZXNjcmlwdGlvbjpkZQlUb29sIGbDvHIgR29vZ2xlIFNlYXJjaCBFbmhhbmNlbWVudCwgbWl0IGRlbSB1bmJlZ3Jlbnp0ZSBTdWNoZXJnZWJuaXNzZSBzY3JvbGxlbiB1bmQgU2l0ZSAtU3ltYm9sZSB6dXNhbW1lbiBhbmdlemVpZ3Qgd2VyZGVuLgovLyBAZGVzY3JpcHRpb246ZWwJzqTOvyDOtc+BzrPOsc67zrXOr86/IM6yzrXOu8+Ezq/Pic+DzrfPgiDPhM63z4IgzrHOvc6xzrbOrs+EzrfPg863z4IgR29vZ2xlIM+Azr/PhSDOtc68z4bOsc69zq/Ots61zrkgzrHPgM61z4HOuc+Mz4HOuc+Dz4TOsSDOsc+Azr/PhM61zrvOrc+DzrzOsc+EzrEgzrHOvc6xzrbOrs+EzrfPg863z4IgzrrOsc65IM61zrnOus6/zr3Or860zrnOsSDOuc+Dz4TPjM+Ezr/PgM6/z4UgzrzOsc62zq8uCi8vIEBkZXNjcmlwdGlvbjplbglHb29nbGUgU2VhcmNoIEVuaGFuY2VtZW50IHRvb2wgdGhhdCBkaXNwbGF5cyB1bmxpbWl0ZWQgc2VhcmNoIHJlc3VsdHMgc2Nyb2xsaW5nIGFuZCBzaXRlIGljb25zIHRvZ2V0aGVyLgovLyBAZGVzY3JpcHRpb246ZW8JR29vZ2xlIFNlYXJjaCBFbmhhbmNlbWVudCAtaWxvLCBraXUgbW9udHJhcyBzZW5saW1ham4gc2VyxIlyZXp1bHRvam4gbW92acSdYW50YWpuIGthaiByZXRlamFqbiBpa29ub2puIGt1bmUuCi8vIEBkZXNjcmlwdGlvbjplcwlIZXJyYW1pZW50YSBkZSBtZWpvcmEgZGUgbGEgYsO6c3F1ZWRhIGRlIEdvb2dsZSBxdWUgbXVlc3RyYSBsb3MgcmVzdWx0YWRvcyBkZSBiw7pzcXVlZGEgaWxpbWl0YWRvcyBkZSBkZXNwbGF6YW1pZW50byBlIGljb25vcyBkZWwgc2l0aW8ganVudG9zLgovLyBAZGVzY3JpcHRpb246ZXQJR29vZ2xlJ2kgb3RzaW5ndSB0w6RpdXN0YW1pc2UgdMO2w7ZyaWlzdCwgbWlzIGt1dmFiIHBpaXJhbWF0dSBvdHNpbmd1dHVsZW11c3RlIGtlcmltaXNlIGphIHNhaWRpIGlrb29uaWQga29vcy4KLy8gQGRlc2NyaXB0aW9uOmV1CUdvb2dsZSBCaWxhdHUgaG9iZXR6ZWtvIHRyZXNuYSBtdWdhZ2FiZWEgZGEgYmlsYWtldGEtZW1haXR6YWsgZXRhIGd1bmVhcmVuIGlrb25vYWsgYmF0ZXJhIGJpc3RhcmF0emVuIGRpdHVlbmEuCi8vIEBkZXNjcmlwdGlvbjpmYQnYp9io2LLYp9ixINiq2YLZiNuM2Kog2KzYs9iq2KzZiNuMIEdvb2dsZSDaqdmHINmG2KrYp9uM2Kwg2KzYs9iq2KzZiNuMINmG2KfZhdit2K/ZiNiv24wg2LHYpyDZhti02KfZhiDZhduMINiv2YfYryDZiCDZhtmF2KfYr9mH2KfbjCDYs9in24zYqiDYsdinINio2Kcg2YfZhSDZhti02KfZhiDZhduMINiv2YfYry4KLy8gQGRlc2NyaXB0aW9uOmZpCUdvb2dsZSAtaGF1biBwYXJhbm51c3R5w7ZrYWx1LCBqb2thIG7DpHl0dMOkw6QgcmFqb2l0dGFtYXR0b21hdCBoYWt1dHVsb2tzZXQgdmllcml0eXMtIGphIHNpdnVzdG9rdXZha2tlZXQgeWhkZXNzw6QuCi8vIEBkZXNjcmlwdGlvbjpmcglPdXRpbCBkJ2Ftw6lsaW9yYXRpb24gZGUgbGEgcmVjaGVyY2hlIEdvb2dsZSBxdWkgYWZmaWNoZSBsZXMgcsOpc3VsdGF0cyBkZSByZWNoZXJjaGUgaWxsaW1pdMOpcyBldCBsZXMgaWPDtG5lcyBkdSBzaXRlIGVuc2VtYmxlLgovLyBAZGVzY3JpcHRpb246Z2EJVWlybGlzIGZlYWJoc2FpdGhlIGN1YXJkYWlnaCBHb29nbGUgYSB0aGFpc3Blw6FuYW5uIHNjcm9sbGFpZ2ggdG9ydGhhw60gY3VhcmRhaWdoIG5lYW1odGhlb3JhbnRhIGFndXMgZGVpbGJow61uw60gc3XDrW1oIGxlIGNow6lpbGUuCi8vIEBkZXNjcmlwdGlvbjpnbAlGZXJyYW1lbnRhIGRlIG1lbGxvcmEgZGEgYnVzY2EgZGUgR29vZ2xlIHF1ZSBtb3N0cmEgb3MgcmVzdWx0YWRvcyBkZSBidXNjYSBpbGltaXRhZG9zIGUgYXMgaWNvbmFzIGRvIHNpdGlvIHh1bnRvcy4KLy8gQGRlc2NyaXB0aW9uOmd1CeCql+CrguCql+CqsiDgqrjgqrDgq43gqpog4KqP4Kqo4KuN4Kq54Kq+4Kqo4KuN4Kq44Kqu4KuH4Kqo4KuN4KqfIOCqn+CrguCqsiDgqpzgq4cg4KqF4Kqu4Kqw4KuN4Kqv4Kq+4Kqm4Kq/4KqkIOCqtuCri+CqpyDgqqrgqrDgqr/gqqPgqr7gqq4g4Kq44KuN4KqV4KuN4Kqw4KuL4Kqy4Kq/4KqC4KqXIOCqheCqqOCrhyDgqrjgqr7gqofgqp8g4Kqa4Kq/4Kq54KuN4Kqo4KuLIOCqj+CqlSDgqrjgqr7gqqXgq4cg4Kqq4KuN4Kqw4Kqm4Kqw4KuN4Kq24Kq/4KqkIOCqleCqsOCrhyDgqpvgq4cuCi8vIEBkZXNjcmlwdGlvbjpoaQlHb29nbGUg4KSW4KWL4KScIOCkj+CkqOCljeCkueCkvuCkguCkuOCkruClh+CkguCknyDgpJ/gpYLgpLIg4KSc4KWLIOCkheCkuOClgOCkruCkv+CkpCDgpJbgpYvgpJwg4KSq4KSw4KS/4KSj4KS+4KSuIOCkuOCljeCkleCljeCksOClieCksuCkv+CkguCklyDgpJTgpLAg4KS44KS+4KSH4KSfIOCkhuCkh+CkleCkqCDgpJXgpYsg4KSP4KSVIOCkuOCkvuCkpSDgpKrgpY3gpLDgpKbgpLDgpY3gpLbgpL/gpKQg4KSV4KSw4KSk4KS+IOCkueCliOClpAovLyBAZGVzY3JpcHRpb246aHIJR29vZ2xlIGFsYXQgemEgcG9ib2xqxaFhbmplIHByZXRyYcW+aXZhbmphIGtvamkgcHJpa2F6dWplIG5lb2dyYW5pxI1lbm8gcG9taWNhbmplIHJlenVsdGF0YSBwcmV0cmHFvml2YW5qYSBpIGlrb25lIHdlYiBtamVzdGEgemFqZWRuby4KLy8gQGRlc2NyaXB0aW9uOmh0CVpvdXRpIGFtZWx5b3Jhc3lvbiByZWNow6hjaCBHb29nbGUga2kgbW9udHJlIHJlemlsdGEgcmVjaMOoY2ggc2FuIGxpbWl0IGRlZmlsZSBhayBpa29uIHNpdCB5byBhbnNhbm0uCi8vIEBkZXNjcmlwdGlvbjpodQlBIEdvb2dsZSBTZWFyY2ggRW5oYW5jZW1lbnQgZXN6a8O2eiwgYW1lbHkgYSBrb3Jsw6F0bGFuIGtlcmVzw6lzaSBlcmVkbcOpbnlla2V0IGplbGVuw610aSBtZWcgYSBnw7ZyZ2V0w6lzaSDDqXMgYSB3ZWJoZWx5IGlrb25qYWl0LgovLyBAZGVzY3JpcHRpb246aWQJQWxhdCBQZW5pbmdrYXRhbiBQZW5jYXJpYW4gR29vZ2xlIHlhbmcgbWVuYW1waWxrYW4gaGFzaWwgcGVuY2FyaWFuIHRhbnBhIGJhdGFzIGRhbiBpa29uIHNpdHVzIGJlcnNhbWEgLXNhbWEuCi8vIEBkZXNjcmlwdGlvbjppcwlHb29nbGUgbGVpdGFydXBwYsOzdGFydMOma2kgc2VtIHPDvW5pciDDs3Rha21hcmthw7BhciBsZWl0YXJuacOwdXJzdMO2w7B1ciBzZW0gc2tydW4gb2cgdMOha25teW5kaXIgc2FtYW4uCi8vIEBkZXNjcmlwdGlvbjppdAlTdHJ1bWVudG8gZGkgbWlnbGlvcmFtZW50byBkZWxsYSByaWNlcmNhIGRpIEdvb2dsZSBjaGUgdmlzdWFsaXp6YSBpbnNpZW1lIGkgcmlzdWx0YXRpIGRpIHJpY2VyY2EgaWxsaW1pdGF0aSBlIGxlIGljb25lIGRlbCBzaXRvLgovLyBAZGVzY3JpcHRpb246aXcJ15vXnNeZINep15nXpNeV16gg15fXmdek15XXqSDXqdecINeS15XXktecINeU157XpteZ15Ig15nXl9eTINeq15XXpteQ15XXqiDXl9eZ16TXldepINec15zXkCDXlNeS15HXnNeUINeV16HXntec15kg15DXqteoLgovLyBAZGVzY3JpcHRpb246amEJ54Sh5Yi26ZmQ44Gu5qSc57Si57WQ5p6c44KS6KGo56S644GZ44KLR29vZ2xlIFNlYXJjaCBFbmhhbmNlbWVudCBUb29sbGluZ+OCueOCr+ODreODvOODq+OBqOOCteOCpOODiOOCouOCpOOCs+ODs+OCkuS4gOe3kuOBq+ihqOekuuOBl+OBvuOBmeOAggovLyBAZGVzY3JpcHRpb246a2EJR29vZ2xlIFNlYXJjaCBFbmhhbmNlbWVudCDhg5jhg5zhg6Hhg6Lhg6Dhg6Phg5vhg5Thg5zhg6Lhg5gsIOGDoOGDneGDm+GDlOGDmuGDmOGDqiDhg5Dhg6nhg5Xhg5Thg5zhg5Thg5Hhg6Eg4YOo4YOU4YOj4YOW4YOm4YOj4YOT4YOQ4YOV4YOYIOGDq+GDmOGDlOGDkeGDmOGDoSDhg6jhg5Thg5Phg5Thg5Lhg5Thg5Hhg5jhg6Eg4YOS4YOQ4YOT4YOQ4YOu4YOV4YOU4YOV4YOQ4YOhIOGDk+GDkCDhg6Hhg5Dhg5jhg6Lhg5jhg6Eg4YOu4YOQ4YOi4YOU4YOR4YOhIOGDlOGDoOGDl+GDkOGDky4KLy8gQGRlc2NyaXB0aW9uOmtuCeCyheCyqOCyv+Cyr+CyruCyv+CypCDgsrngs4HgsqHgs4HgspXgsr7gsp8g4LKr4LKy4LK/4LKk4LK+4LKC4LK24LKX4LKz4LKo4LON4LKo4LOBIOCyuOCzjeCyleCzjeCysOCzi+CysuCyv+CyguCyl+CzjSDgsq7gsqTgs43gsqTgs4Eg4LK44LOI4LKf4LONIOCykOCyleCyvuCyqOCzjeKAjOCyl+Cys+CyqOCzjeCyqOCzgSDgspLgsp/gs43gsp/gsr/gspfgs4Yg4LKq4LON4LKw4LKm4LKw4LON4LK24LK/4LK44LOB4LK1IOCyl+CzguCyl+CysuCzjSDgsrngs4HgsqHgs4HgspXgsr7gsp8g4LK14LKw4LON4LKn4LKo4LOGIOCyuOCyvuCyp+CyqC4KLy8gQGRlc2NyaXB0aW9uOmtvCeustOygnO2VnCDqsoDsg4kg6rKw6rO8IOyKpO2BrOuhpCDrsI8g7IKs7J207Yq4IOyVhOydtOy9mOydhCDtlajqu5gg7ZGc7Iuc7ZWY64qUIEdvb2dsZSDqsoDsg4kg7Zal7IOBIOuPhOq1rC4KLy8gQGRlc2NyaXB0aW9uOmxhCUdvb2dsZSBRdWFlcmVyZSBFbmhhbmNlbWVudCBpbnN0cnVtZW50dW0gcXVvZCBEaXNwbGF5cyBpbmZpbml0YW0gU2VhcmNoIFJlc3VsdHMgU2Nyb2xsaW5nIGV0IFNpdGUgSWNvbmVzIHNpbXVsLgovLyBAZGVzY3JpcHRpb246bHQJ4oCeR29vZ2xl4oCcIHBhaWXFoWtvcyBwYXRvYnVsaW5pbW8gxK9yYW5raXMsIHJvZGFudGlzIG5lcmlib3TEhSBwYWllxaFrb3MgcmV6dWx0YXTFsyBzbGlua2ltbyBpciBzdmV0YWluxJdzIHBpa3RvZ3JhbW9zIGthcnR1LgovLyBAZGVzY3JpcHRpb246bHYJR29vZ2xlIG1la2zEk8WhYW5hcyB1emxhYm/FoWFuYXMgcsSra3MsIGthcyBwYXLEgWRhIG5laWVyb2Jlxb5vdHUgbWVrbMSTxaFhbmFzIHJlenVsdMSBdHUgcml0aW7EgcWhYW51IHVuIHZpZXRuZXMgaWtvbmFzIGtvcMSBLgovLyBAZGVzY3JpcHRpb246bWsJ0JDQu9Cw0YLQutCwINC30LAg0L/QvtC00L7QsdGA0YPQstCw0ZrQtSDQvdCwINC/0YDQtdCx0LDRgNGD0LLQsNGa0LXRgtC+INC90LAgR29vZ2xlINGI0YLQviDQv9GA0LjQutCw0LbRg9Cy0LAg0L3QtdC+0LPRgNCw0L3QuNGH0LXQvdC4INGA0LXQt9GD0LvRgtCw0YLQuCDQvtC0INC/0YDQtdCx0LDRgNGD0LLQsNGa0LXRgtC+INC30LAg0LTQstC40LbQtdGa0LUg0Lgg0LjQutC+0L3QuCDQvdCwINGB0YLRgNCw0L3QuNGG0Lgg0LfQsNC10LTQvdC+LgovLyBAZGVzY3JpcHRpb246bXMJQWxhdCBQZW5pbmdrYXRhbiBDYXJpYW4gR29vZ2xlIHlhbmcgbWVtYXBhcmthbiBoYXNpbCBjYXJpYW4gdGFucGEgaGFkIGRhbiBpa29uIGxhbWFuIHdlYiBiZXJzYW1hIC1zYW1hLgovLyBAZGVzY3JpcHRpb246bXQJR8Snb2RkYSBnxKdhdC1UaXRqaWIgdGF0LVRpZnRpeCB0YWwtR29vZ2xlIGxpIHR1cmkgci1yacW8dWx0YXRpIHRhdC10Zml0dHhpamEgaWxsaW1pdGF0aSB1IGwtaWtvbmkgdGFzLXNpdCBmbGlta2llbi4KLy8gQGRlc2NyaXB0aW9uOm5sCUdvb2dsZSB6b2VrdmVyYmV0ZXJpbmdzdG9vbCBtZXQgb25iZXBlcmt0ZSB6b2VrcmVzdWx0YXRlbiBkaWUgc2Nyb2xsZW4gZW4gc2l0ZXBpY3RvZ3JhbW1lbiBzYW1lbiB3ZWVyZ2V2ZW4uCi8vIEBkZXNjcmlwdGlvbjpubwlHb29nbGUgU2VhcmNoIEVuaGFuY2VtZW50IFRvb2wgc29tIHZpc2VyIHViZWdyZW5zZWRlIHPDuGtlcmVzdWx0YXRlciBydWxsaW5nIG9nIG5ldHRzdGVkaWtvbmVyIHNhbW1lbi4KLy8gQGRlc2NyaXB0aW9uOnBsCU5hcnrEmWR6aWUgdWxlcHN6ZW5pYSB3eXN6dWtpd2FuaWEgR29vZ2xlLCBrdMOzcmUgd3nFm3dpZXRsYSBuaWVvZ3Jhbmljem9uZSB3eW5pa2kgd3lzenVraXdhbmlhIGkgaWtvbnkgd2l0cnlueS4KLy8gQGRlc2NyaXB0aW9uOnB0CUZlcnJhbWVudGEgZGUgYXByaW1vcmFtZW50byBkZSBwZXNxdWlzYSBkbyBHb29nbGUgcXVlIGV4aWJlIG9zIHJlc3VsdGFkb3MgaWxpbWl0YWRvcyBkb3MgcmVzdWx0YWRvcyBkYSBwZXNxdWlzYSBlIMOtY29uZXMgZG8gc2l0ZS4KLy8gQGRlc2NyaXB0aW9uOnJvCUluc3RydW1lbnQgZGUgw65tYnVuxIN0xIPIm2lyZSBhIGPEg3V0xINyaWkgR29vZ2xlIGNhcmUgYWZpyJllYXrEgyDDrm1wcmV1bsSDIHJlenVsdGF0ZWxlIGPEg3V0xINyaWkgbmVsaW1pdGF0ZSDImWkgcGljdG9ncmFtZWxlIHNpdGUgLXVsdWkuCi8vIEBkZXNjcmlwdGlvbjpydQnQmNC90YHRgtGA0YPQvNC10L3RgiDRg9C70YPRh9GI0LXQvdC40Y8g0L/QvtC40YHQutCwIEdvb2dsZSwg0LrQvtGC0L7RgNGL0Lkg0L7RgtC+0LHRgNCw0LbQsNC10YIg0L3QtdC+0LPRgNCw0L3QuNGH0LXQvdC90YvQtSDRgNC10LfRg9C70YzRgtCw0YLRiyDQv9C+0LjRgdC60LAg0L/RgNC+0LrRgNGD0YLQutCwINC4INC30L3QsNGH0LrQuCDRgdCw0LnRgtCwINCy0LzQtdGB0YLQtS4KLy8gQGRlc2NyaXB0aW9uOnNrCU7DoXN0cm9qIG5hIHZ5bGVwxaFlbmllIHZ5aMS+YWTDoXZhbmlhIEdvb2dsZSwga3RvcsO9IHpvYnJhenVqZSBuZW9ibWVkemVuw6kgdsO9c2xlZGt5IHZ5aMS+YWTDoXZhbmlhLCBwb3PDunZhIGEgaWtvbnkgc3Ryw6Fub2sgc3BvbHUuCi8vIEBkZXNjcmlwdGlvbjpzbAlHb29nbGUgT3JvZGplIHphIGl6Ym9sasWhYW5qZSBpc2thbmphLCBraSBwcmlrYXp1amUgbmVvbWVqZW5lIHJlenVsdGF0ZSBpc2thbmphIGluIGlrb25lIHNwbGV0bmVnYSBtZXN0YS4KLy8gQGRlc2NyaXB0aW9uOnNxCVZlZ8OrbCBww6tyIHDDq3JtaXLDq3NpbWluIGUga8OrcmtpbWl0IHTDqyBHb29nbGUgccOrIHRyZWdvbiByZXp1bHRhdGV0IGUgcGFrdWZpenVhcmEgdMOrIGvDq3JraW1pdCB0w6sgbMOrdml6amVzIGRoZSBpa29uYXQgZSBmYXFlcyBzw6sgYmFzaGt1LgovLyBAZGVzY3JpcHRpb246c3IJ0JPQvtC+0LPQu9C1INCQ0LvQsNGCINC30LAg0YPQvdCw0L/RgNC10ZLQtdGa0LUg0L/RgNC10YLRgNCw0LbQuNCy0LDRmtCwINC60L7RmNC4INC/0YDQuNC60LDQt9GD0ZjQtSDQvdC10L7Qs9GA0LDQvdC40YfQtdC90LUg0YDQtdC30YPQu9GC0LDRgtC1INC/0YDQtdGC0YDQsNC20LjQstCw0ZrQsCDQuCDQuNC60L7QvdC1INGB0LDRmNGC0LAg0LfQsNGY0LXQtNC90L4uCi8vIEBkZXNjcmlwdGlvbjpzdglHb29nbGVzIHPDtmtmw7ZyYsOkdHRyaW5nc3Zlcmt0eWcgc29tIHZpc2FyIG9iZWdyw6Ruc2FkZSBzw7ZrcmVzdWx0YXRydWxsbmluZyBvY2ggd2ViYnBsYXRzaWtvbmVyIHRpbGxzYW1tYW5zLgovLyBAZGVzY3JpcHRpb246c3cJQ2hvbWJvIGNoYSBVaW1hcmlzaGFqaSB3YSBVdGFmdXRhamkgd2EgR29vZ2xlIGFtYmFjaG8ga2luYW9ueWVzaGEgbWF0b2tlbyB5YSB1dGFmdGFqaSB1c2lvIG5hIGtpa29tbyBuYSBpY29ucyB6YSB3YXZ1dGkgcGFtb2phLgovLyBAZGVzY3JpcHRpb246dGEJ4K614K6w4K6u4K+N4K6q4K6x4K+N4K6xIOCupOCvh+Cun+CusuCvjSDgrq7gr4Hgrp/grr/grrXgr4HgrpXgrrPgr40g4K644K+N4K6V4K+N4K6w4K+L4K6y4K6/4K6Z4K+NIOCuruCuseCvjeCuseCvgeCuruCvjSDgrqTgrrMg4K6a4K6/4K6p4K+N4K6p4K6Z4K+N4K6V4K6z4K+IIOCukuCuqeCvjeCuseCuvuCuleCuleCvjSDgrpXgrr7grqPgr43grqrgrr/grpXgr43grpXgr4Hgrq7gr40g4K6V4K+C4K6V4K6/4K6z4K+NIOCupOCvh+Cun+CusuCvjSDgrq7gr4fgrq7gr43grqrgrr7grp/gr43grp/gr4Eg4K6V4K6w4K+B4K614K6/LgovLyBAZGVzY3JpcHRpb246dGUJ4LCF4LCq4LCw4LC/4LCu4LC/4LCkIOCwtuCxi+Cwp+CwqCDgsKvgsLLgsL/gsKTgsL7gsLLgsKjgsYEg4LC44LGN4LCV4LGN4LCw4LGL4LCy4LC/4LCC4LCX4LGNIOCwruCwsOCwv+Cwr+CxgSDgsLjgsYjgsJ/gsY0g4LCa4LC/4LC54LGN4LCo4LC+4LCy4LCo4LGBIOCwleCwsuCwv+CwuOCwvyDgsKrgsY3gsLDgsKbgsLDgsY3gsLbgsL/gsILgsJrgsYcg4LCX4LGC4LCX4LGB4LCy4LGNIOCwuOCxhuCwsOCxjeCwmuCxjSDgsI7gsKjgsY3igIzgsLngsL7gsKjgsY3gsLjgsY3igIzgsK7gsYbgsILgsJ/gsY0g4LC44LC+4LCn4LCo4LCCLgovLyBAZGVzY3JpcHRpb246dGgJ4LmA4LiE4Lij4Li34LmI4Lit4LiH4Lih4Li34Lit4LmA4Lie4Li04LmI4Lih4Lib4Lij4Liw4Liq4Li04LiX4LiY4Li04Lig4Liy4Lie4LiC4Lit4LiHIEdvb2dsZSBTZWFyY2gg4LiX4Li14LmI4LmB4Liq4LiU4LiH4Lic4Lil4LiB4Liy4Lij4LiE4LmJ4LiZ4Lir4Liy4LiB4Liy4Lij4LiE4LmJ4LiZ4Lir4Liy4LmB4Lia4Lia4LmE4Lih4LmIIOC4iOC4s+C4geC4seC4lCDguYHguKXguLDguYTguK3guITguK3guJnguYTguIvguJXguYzguKPguYjguKfguKHguIHguLHguJkKLy8gQGRlc2NyaXB0aW9uOnRsCUFuZyB0b29sIHNhIHBhZ3BhcGFodXNheSBuZyBwYWdoYWhhbmFwIHNhIEdvb2dsZSBuYSBuYWdwYXBha2l0YSBuZyB3YWxhbmcgbGltaXRhc3lvbmcgbWdhIHJlc3VsdGEgbmcgcGFnaGFoYW5hcCBzYSBwYWcgLXNjcm9sbCBhdCBtZ2EgaWNvbiBuZyBzaXRlIG5hbmcgbWFna2FzYW1hLgovLyBAZGVzY3JpcHRpb246dHIJU8SxbsSxcnPEsXogYXJhbWEgc29udcOnbGFyxLEga2F5ZMSxcm1hIHZlIHNpdGUgc2ltZ2VsZXJpbmkgYmlyIGFyYXlhIGdldGlyZW4gR29vZ2xlIEFyYW1hIEdlbGnFn3Rpcm1lIGFyYWPEsS4KLy8gQGRlc2NyaXB0aW9uOnVrCdCG0L3RgdGC0YDRg9C80LXQvdGCINGD0LTQvtGB0LrQvtC90LDQu9C10L3QvdGPINC/0L7RiNGD0LrRgyBHb29nbGUsINGP0LrQuNC5INCy0ZbQtNC+0LHRgNCw0LbQsNGUINC90LXQvtCx0LzQtdC20LXQvdGWINGA0LXQt9GD0LvRjNGC0LDRgtC4INC/0L7RiNGD0LrRgyDRgtCwINC/0ZbQutGC0L7Qs9GA0LDQvNC4INGB0LDQudGC0YMuCi8vIEBkZXNjcmlwdGlvbjp1cgnar9mI2q/ZhCDYs9ix2oYg2KfZhti024zZhtiz2YXZhtm5INm52YjZhCDYrNmIINmE2KfZhdit2K/ZiNivINiq2YTYp9i0INqp25Ig2YbYqtin2KbYrCDYs9qp2LHZiNmE2YbaryDYp9mI2LEg2LPYp9im2bkg2qnbkiDYtNio24zbgduM2rog2KfbjNqpINiz2KfYqtq+INiv2qnavtin2KrYpyDbgduS25QKLy8gQGRlc2NyaXB0aW9uOnZpCUPDtG5nIGPhu6UgdMSDbmcgY8aw4budbmcgdMOsbSBraeG6v20gY+G7p2EgR29vZ2xlIGhp4buDbiB0aOG7iyBjw6FjIGJp4buDdSB0xrDhu6NuZyBr4bq/dCBxdeG6oyB0w6xtIGtp4bq/bSBraMO0bmcgZ2nhu5tpIGjhuqFuIHbDoCBjw6FjIGJp4buDdSB0xrDhu6NuZyB0cmFuZyB3ZWIgY8O5bmcgbmhhdS4KLy8gQGRlc2NyaXB0aW9uOnlpCUdvb2dsZSDXlteV15vXnyDXoteg15vXkNa316DXodee15DWt9eg15gg15LXotem15nXmda315Ig15XXldeQ1rjXoSDXk9eZ16HXpNa815zXmdeZ15Yg15DWt9eg15zXmdee15DWt9eY15DWt9eTINeW15XXm9efINeo16LXlteV15zXmNeQ1rfXmNefINeh16fXqNeQ1rjXnNec15nXoNeSINeQ15XXnyDXodek16LXmdehINeZ15nXp9eQ1rfXoNeWINem15XXlteQ1rfXntei158uCi8vIEBkZXNjcmlwdGlvbjp6aC1DTglHb29nbGXmkJzntKLlop7lvLrlt6XlhbfvvIzlsIbml6DpmZDmkJzntKLnu5Pmnpzmu5rliqjlkoznq5nngrnlm77moIfkuIDotbfmmL7npLrjgIIKLy8gQGRlc2NyaXB0aW9uOnpoLVRXCUdvb2dsZeaQnOe0ouWinuW8t+W3peWFt++8jOWwh+eEoemZkOaQnOe0oue1kOaenOa7vuWLleWSjOermem7nuWcluaomeS4gOi1t+mhr+ekuuOAggoKLy8gQG5hbWVzcGFjZSAgICAgICAgIGh0dHBzOi8vbmRhZXNpay50aXN0b3J5LmNvbS8KLy8gQHZlcnNpb24gICAgICAgICAgIDIwMjIuMTAuMDQuMDguMjQKLy8gQGF1dGhvciAgICAgICAgICAgIG5kYWVzaWsKLy8gQGljb24gICAgICAgICAgICAgIGh0dHBzOi8vdDEuZ3N0YXRpYy5jb20vZmF2aWNvblYyP2NsaWVudD1TT0NJQUwmdHlwZT1GQVZJQ09OJmZhbGxiYWNrX29wdHM9VFlQRSxTSVpFLFVSTCZ1cmw9aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQovLyBAbWF0Y2ggICAgICAgICAgICAgKjovL3d3dy5nb29nbGUuY29tL3NlYXJjaCoKLy8gPT0vVXNlclNjcmlwdD09Cgpjb25zdCBjdXJyZW50U2VhcmNoVGFiID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2FyaWEtY3VycmVudF0nKQpjb25zdCBjaGVja0FsbFJlc3VsdHNQYWdlID0gY3VycmVudFNlYXJjaFRhYiAhPT0gbnVsbCAmJiBjdXJyZW50U2VhcmNoVGFiLnByZXZpb3VzU2libGluZyA9PSBudWxsCmxldCBwYWdlQ291bnRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJykKcGFnZUNvdW50ZXIuaW5uZXJUZXh0ID0gYAovKiAqLwp2aWRlby12b3lhZ2VyIGNpdGUsCmctc2VjdGlvbi13aXRoLWhlYWRlciB7ZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7fQoKLyogcGFnZSBjb3VudGVyICovCiNyZXNbcm9sZT0ibWFpbiJdIHtjb3VudGVyLWluY3JlbWVudDogbnVtYmVyOyBib3JkZXItdG9wOiBzb2xpZCAke3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9wX25hdiA+IGRpdicpICkuZ2V0UHJvcGVydHlWYWx1ZSgnYm9yZGVyLWJvdHRvbS1jb2xvcicpfSAxcHg7IH0KI3Jlc1tyb2xlPSJtYWluIl06OmJlZm9yZSB7Y29udGVudDogY291bnRlcihudW1iZXIpOwpmb250LXNpemU6IDE0cHg7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgcmlnaHQ6IDA7IG1hcmdpbi10b3A6IC0xMHB4OyBwYWRkaW5nLXJpZ2h0OiA4cHg7IHBhZGRpbmctbGVmdDogMTJweDsKY29sb3I6ICR7d2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXN1bHQtc3RhdHMnKSApLmdldFByb3BlcnR5VmFsdWUoJ2NvbG9yJyl9OwpiYWNrZ3JvdW5kLWNvbG9yOiAke3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkb2N1bWVudC5ib2R5ICkuZ2V0UHJvcGVydHlWYWx1ZSgnYmFja2dyb3VuZC1jb2xvcicpfX1gCmxldCByZW1vdmVOYXZOdW1icyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJykKcmVtb3ZlTmF2TnVtYnMuaW5uZXJUZXh0ID0gYCNib3RzdHVmZiBbcm9sZT0ibmF2aWdhdGlvbiJdIHt2aXNpYmlsaXR5OiBoaWRkZW47IGhlaWdodDogMDt9YApkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHJlbW92ZU5hdk51bWJzKQoKaWYgKCBjaGVja0FsbFJlc3VsdHNQYWdlICkgewogICAgLy8gY3JlYXRlIGZhdmljb25zCiAgICBmdW5jdGlvbiBjcmVhdGVGYXZpY29ucyh0YXJnZXQpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKCdjaXRlJykubGVuZ3RoOyArK2kpIHsKICAgICAgICAgICAgbGV0IGxuayA9IHRhcmdldC5xdWVyeVNlbGVjdG9yKCcjY2VudGVyX2NvbD5bcm9sZT0ibWFpbiJdJykucXVlcnlTZWxlY3RvckFsbCgnY2l0ZScpW2ldCiAgICAgICAgICAgICAgLCB0eHQgPSBsbmsudGV4dENvbnRlbnQKICAgICAgICAgICAgICAsIHVybCA9IHR4dC5tYXRjaCgvXC4vZykgPyAodHh0Lm1hdGNoKC9cL1wvL2cpID8gdHh0Lm1hdGNoKC8oPzw9XC9cLylbXlxzXSovZykgOiB0eHQubWF0Y2goL15bXlxzXSovZykpIDogZmFsc2UKICAgICAgICAgICAgICAsIGZhdiA9IHVybCA/ICcvczIvZmF2aWNvbnM/ZG9tYWluPScgKyB1cmwgOiAnJzsKICAgICAgICAgICAgaWYgKHVybCkgewogICAgICAgICAgICAgICAgbGV0IGltZyA9IHRhcmdldC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgICAgIGltZy5zdHlsZS5jc3NUZXh0ID0gYGJhY2tncm91bmQtaW1hZ2U6dXJsKCIke2Zhdn0iKTsgd2lkdGg6MTZweDsgaGVpZ2h0OjE2cHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrOyBtYXJnaW4tcmlnaHQ6NnB4YDsKICAgICAgICAgICAgICAgIGxuay5wcmVwZW5kKGltZykKICAgICAgICAgICAgICAgIGxuay5zdHlsZS5jc3NUZXh0ID0gJ2Rpc3BsYXk6aW5saW5lLWJsb2NrJwogICAgICAgICAgICB9OwogICAgICAgIH07CiAgICB9OwogICAgY3JlYXRlRmF2aWNvbnMoZG9jdW1lbnQpOwoKICAgIC8vIGxvYWQgcGFnZXMgd2hlbiBpdCdzIGJvdHRvbSArIGNyZWF0ZSBmYXZpY29ucwogICAgbGV0IHBhZ2VOdW1iZXIgPSAwCiAgICBsZXQgbG9hZE5ld1Jlc3VsdHMgPSBfID0+IHsKICAgICAgICBsZXQgbmV4dFVSTCA9IG5ldyBVUkwoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tyb2xlPSJuYXZpZ2F0aW9uIl0+W3JvbGU9InByZXNlbnRhdGlvbiJdIGE6Zmlyc3QtY2hpbGQnKS5ocmVmKS5yZXBsYWNlKC8oPzw9c3RhcnQ9KSguKj8pKD89XCYpL2cscGFnZU51bWJlciAqIDEwKSk7CiAgICAgICAgZmV0Y2goIG5leHRVUkwuaHJlZiApCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSkKICAgICAgICAgICAgLnRoZW4odGV4dCA9PiB7CiAgICAgICAgICAgIGxldCBuZXdEb2N1bWVudCA9IChuZXcgRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyggdGV4dCwgJ3RleHQvaHRtbCcpCiAgICAgICAgICAgIGxldCBuZXdSZXN1bHRzID0gbmV3RG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjZW50ZXJfY29sID4gW3JvbGU9Im1haW4iXScpCiAgICAgICAgICAgIGNyZWF0ZUZhdmljb25zKG5ld0RvY3VtZW50KTsKCiAgICAgICAgICAgIGxldCBjaGVja01vcmVSZXN1bHRzID0gbmV3RG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvcHN0dWZmIHAgPiBzcGFuID4gZW0nKSA9PSBudWxsCiAgICAgICAgICAgIGlmICggY2hlY2tNb3JlUmVzdWx0cyApIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLmFwcGVuZENoaWxkKG5ld1Jlc3VsdHMpCiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2VudGVyX2NvbCA+IFtyb2xlPSJtYWluIl0nKS5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKG5ld1Jlc3VsdHMpCiAgICAgICAgICAgIH07CiAgICAgICAgfSk7CgogICAgICAgIGlmICggcGFnZU51bWJlciA9IDEgKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocGFnZUNvdW50ZXIpCiAgICAgICAgfTsKICAgIH07CgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgXyA9PiB7CiAgICAgICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCArIHdpbmRvdy5wYWdlWU9mZnNldCA+PSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCkgewogICAgICAgICAgICBwYWdlTnVtYmVyID0gcGFnZU51bWJlciArIDEKICAgICAgICAgICAgbG9hZE5ld1Jlc3VsdHMoKTsKICAgICAgICB9OwogICAgfSk7Cn07"},{"name":"【玩的嗨】VIP工具箱,百度文库解析导出,全网VIP视频免费破解去广告,一站式音乐搜索下载,获取B站封面,下载B站视频等众多功能聚合 长期更新,放心使用","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["shangxueba365.com","api.wandhi.com","cdn.jsdelivr.net","tool.manmanbuy.com","xbeibeix.com","gwdang.com","scriptcat.org","quark.cn"],"orig_excludes":["*://tv.wandhi.com/*","*://vip.wandhi.com/*"],"orig_includes":["*://m.youku.com/v*","*://m.youku.com/a*","*://v.youku.com/v_*","*://v.youku.com/pad_show*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/w_*","*://*.iqiyi.com/a_*","*://*.iqiyi.com/adv*","*.iq.com/play/*","*://*.le.com/ptv/vplay/*","*v.qq.com/x/cover/*","*v.qq.com/x/page/*","*v.qq.com/*play*","*v.qq.com/cover*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.tudou.com/v*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/v/*","*://*.acfun.cn/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/anime/*","*://*.bilibili.com/bangumi/play/*","*://*.pptv.com/show/*","*://*.baofeng.com/play/*","*://*.wasu.cn/Play/show*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.wasu.cn/Play/show/*","*://music.taihe.com/song*","*://item.taobao.com/*","*://s.taobao.com/search*","*://list.tmall.com/search_product.htm*","*://detail.tmall.com/*","*://chaoshi.detail.tmall.com/*","*://detail.tmall.hk/*","*://item.yiyaojd.com/*","*://item.jd.com/*","*://search.jd.com/*","*://item.jd.hk/*","*://search.kaola.com/*","*://goods.kaola.com*","*://detail.vip.com/detail-*","*://product.suning.com/*","*://music.163.com/song*","*://music.163.com/m/song*","*://y.qq.com/*","*://*.kugou.com/*","*://*.kuwo.cn/*","*://*.xiami.com/*","*://music.taihe.com/*","*://*.1ting.com/player*","*://www.qingting.fm/*","*://www.lizhi.fm/*","*://music.migu.cn/*","*://www.shangxueba.com/ask/*.html","*://www.ximalaya.com/*","*://www.shangxueba.com/ask/*.html","*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*","*://wenku.baidu.com/view/*","*blog.csdn.net/*","*://link.csdn.net/*","*://link.zhihu.com/*","*://browser.gwdang.com/*","*www.jianshu.com/go-wild*","*://*gitee.com/link*","*://*juejin.cn/?target*","*://www.aliyundrive.com/drive*","*://www.youtube.com/watch?v=*","*://support.qq.com/products*","*://weibo.cn/sinaurl*","*://afdian.net/link*","*://*oschina.net/action/GoToLink*","*://jump2.bdimg.com/safecheck*","*://www.douban.com/link2/?url*","*://link.17173.com*","*://search.suning.com/*","*://pan.quark.cn/*","*://docs.qq.com/scenario/link*","*://settings.wandhi.com/*"],"orig_matches":["*://www.baidu.com/*","*://www.google.com/*","*://www.sogou.com/*","*://www.so.com/s*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1677234932222,"data":{"aXNVcGRhdGU=":"s{\"key\":\"isUpdate\",\"value\":true,\"exp\":1677238532222}"}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/384538-%E7%8E%A9%E7%9A%84%E5%97%A8-vip%E5%B7%A5%E5%85%B7%E7%AE%B1-%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E8%A7%A3%E6%9E%90%E5%AF%BC%E5%87%BA-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E4%B8%80%E7%AB%99%E5%BC%8F%E9%9F%B3%E4%B9%90%E6%90%9C%E7%B4%A2%E4%B8%8B%E8%BD%BD-%E8%8E%B7%E5%8F%96b%E7%AB%99%E5%B0%81%E9%9D%A2-%E4%B8%8B%E8%BD%BDb%E7%AB%99%E8%A7%86%E9%A2%91%E7%AD%89%E4%BC%97%E5%A4%9A%E5%8A%9F%E8%83%BD%E8%81%9A%E5%90%88-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0-%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8/code/%E3%80%90%E7%8E%A9%E7%9A%84%E5%97%A8%E3%80%91VIP%E5%B7%A5%E5%85%B7%E7%AE%B1,%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E8%A7%A3%E6%9E%90%E5%AF%BC%E5%87%BA,%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A,%E4%B8%80%E7%AB%99%E5%BC%8F%E9%9F%B3%E4%B9%90%E6%90%9C%E7%B4%A2%E4%B8%8B%E8%BD%BD,%E8%8E%B7%E5%8F%96B%E7%AB%99%E5%B0%81%E9%9D%A2,%E4%B8%8B%E8%BD%BDB%E7%AB%99%E8%A7%86%E9%A2%91%E7%AD%89%E4%BC%97%E5%A4%9A%E5%8A%9F%E8%83%BD%E8%81%9A%E5%90%88%20%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0,%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8.user.js","uuid":"6c91232f-af78-45e7-9fd6-f3b59fb0c9a4","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://lib.baomitu.com/jquery/1.12.4/jquery.min.js","ts":1676036817491,"mimetype":"text/javascript"},"source":"LyohIGpRdWVyeSB2MS4xMi40IHwgKGMpIGpRdWVyeSBGb3VuZGF0aW9uIHwganF1ZXJ5Lm9yZy9saWNlbnNlICovCiFmdW5jdGlvbihhLGIpeyJvYmplY3QiPT10eXBlb2YgbW9kdWxlJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWEuZG9jdW1lbnQ/YihhLCEwKTpmdW5jdGlvbihhKXtpZighYS5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnQiKTtyZXR1cm4gYihhKX06YihhKX0oInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OnRoaXMsZnVuY3Rpb24oYSxiKXt2YXIgYz1bXSxkPWEuZG9jdW1lbnQsZT1jLnNsaWNlLGY9Yy5jb25jYXQsZz1jLnB1c2gsaD1jLmluZGV4T2YsaT17fSxqPWkudG9TdHJpbmcsaz1pLmhhc093blByb3BlcnR5LGw9e30sbT0iMS4xMi40IixuPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBuLmZuLmluaXQoYSxiKX0sbz0vXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2cscD0vXi1tcy0vLHE9Ly0oW1xkYS16XSkvZ2kscj1mdW5jdGlvbihhLGIpe3JldHVybiBiLnRvVXBwZXJDYXNlKCl9O24uZm49bi5wcm90b3R5cGU9e2pxdWVyeTptLGNvbnN0cnVjdG9yOm4sc2VsZWN0b3I6IiIsbGVuZ3RoOjAsdG9BcnJheTpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9YT8wPmE/dGhpc1thK3RoaXMubGVuZ3RoXTp0aGlzW2FdOmUuY2FsbCh0aGlzKX0scHVzaFN0YWNrOmZ1bmN0aW9uKGEpe3ZhciBiPW4ubWVyZ2UodGhpcy5jb25zdHJ1Y3RvcigpLGEpO3JldHVybiBiLnByZXZPYmplY3Q9dGhpcyxiLmNvbnRleHQ9dGhpcy5jb250ZXh0LGJ9LGVhY2g6ZnVuY3Rpb24oYSl7cmV0dXJuIG4uZWFjaCh0aGlzLGEpfSxtYXA6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKG4ubWFwKHRoaXMsZnVuY3Rpb24oYixjKXtyZXR1cm4gYS5jYWxsKGIsYyxiKX0pKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxmaXJzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKDApfSxsYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpfSxlcTpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmxlbmd0aCxjPSthKygwPmE/YjowKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soYz49MCYmYj5jP1t0aGlzW2NdXTpbXSl9LGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnByZXZPYmplY3R8fHRoaXMuY29uc3RydWN0b3IoKX0scHVzaDpnLHNvcnQ6Yy5zb3J0LHNwbGljZTpjLnNwbGljZX0sbi5leHRlbmQ9bi5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlLGYsZz1hcmd1bWVudHNbMF18fHt9LGg9MSxpPWFyZ3VtZW50cy5sZW5ndGgsaj0hMTtmb3IoImJvb2xlYW4iPT10eXBlb2YgZyYmKGo9ZyxnPWFyZ3VtZW50c1toXXx8e30saCsrKSwib2JqZWN0Ij09dHlwZW9mIGd8fG4uaXNGdW5jdGlvbihnKXx8KGc9e30pLGg9PT1pJiYoZz10aGlzLGgtLSk7aT5oO2grKylpZihudWxsIT0oZT1hcmd1bWVudHNbaF0pKWZvcihkIGluIGUpYT1nW2RdLGM9ZVtkXSxnIT09YyYmKGomJmMmJihuLmlzUGxhaW5PYmplY3QoYyl8fChiPW4uaXNBcnJheShjKSkpPyhiPyhiPSExLGY9YSYmbi5pc0FycmF5KGEpP2E6W10pOmY9YSYmbi5pc1BsYWluT2JqZWN0KGEpP2E6e30sZ1tkXT1uLmV4dGVuZChqLGYsYykpOnZvaWQgMCE9PWMmJihnW2RdPWMpKTtyZXR1cm4gZ30sbi5leHRlbmQoe2V4cGFuZG86ImpRdWVyeSIrKG0rTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXEQvZywiIiksaXNSZWFkeTohMCxlcnJvcjpmdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoYSl9LG5vb3A6ZnVuY3Rpb24oKXt9LGlzRnVuY3Rpb246ZnVuY3Rpb24oYSl7cmV0dXJuImZ1bmN0aW9uIj09PW4udHlwZShhKX0saXNBcnJheTpBcnJheS5pc0FycmF5fHxmdW5jdGlvbihhKXtyZXR1cm4iYXJyYXkiPT09bi50eXBlKGEpfSxpc1dpbmRvdzpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9YSYmYT09YS53aW5kb3d9LGlzTnVtZXJpYzpmdW5jdGlvbihhKXt2YXIgYj1hJiZhLnRvU3RyaW5nKCk7cmV0dXJuIW4uaXNBcnJheShhKSYmYi1wYXJzZUZsb2F0KGIpKzE+PTB9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI7Zm9yKGIgaW4gYSlyZXR1cm4hMTtyZXR1cm4hMH0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihhKXt2YXIgYjtpZighYXx8Im9iamVjdCIhPT1uLnR5cGUoYSl8fGEubm9kZVR5cGV8fG4uaXNXaW5kb3coYSkpcmV0dXJuITE7dHJ5e2lmKGEuY29uc3RydWN0b3ImJiFrLmNhbGwoYSwiY29uc3RydWN0b3IiKSYmIWsuY2FsbChhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwiaXNQcm90b3R5cGVPZiIpKXJldHVybiExfWNhdGNoKGMpe3JldHVybiExfWlmKCFsLm93bkZpcnN0KWZvcihiIGluIGEpcmV0dXJuIGsuY2FsbChhLGIpO2ZvcihiIGluIGEpO3JldHVybiB2b2lkIDA9PT1ifHxrLmNhbGwoYSxiKX0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9hKyIiOiJvYmplY3QiPT10eXBlb2YgYXx8ImZ1bmN0aW9uIj09dHlwZW9mIGE/aVtqLmNhbGwoYSldfHwib2JqZWN0Ijp0eXBlb2YgYX0sZ2xvYmFsRXZhbDpmdW5jdGlvbihiKXtiJiZuLnRyaW0oYikmJihhLmV4ZWNTY3JpcHR8fGZ1bmN0aW9uKGIpe2EuZXZhbC5jYWxsKGEsYil9KShiKX0sY2FtZWxDYXNlOmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UocCwibXMtIikucmVwbGFjZShxLHIpfSxub2RlTmFtZTpmdW5jdGlvbihhLGIpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1iLnRvTG93ZXJDYXNlKCl9LGVhY2g6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTA7aWYocyhhKSl7Zm9yKGM9YS5sZW5ndGg7Yz5kO2QrKylpZihiLmNhbGwoYVtkXSxkLGFbZF0pPT09ITEpYnJlYWt9ZWxzZSBmb3IoZCBpbiBhKWlmKGIuY2FsbChhW2RdLGQsYVtkXSk9PT0hMSlicmVhaztyZXR1cm4gYX0sdHJpbTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8iIjooYSsiIikucmVwbGFjZShvLCIiKX0sbWFrZUFycmF5OmZ1bmN0aW9uKGEsYil7dmFyIGM9Ynx8W107cmV0dXJuIG51bGwhPWEmJihzKE9iamVjdChhKSk/bi5tZXJnZShjLCJzdHJpbmciPT10eXBlb2YgYT9bYV06YSk6Zy5jYWxsKGMsYSkpLGN9LGluQXJyYXk6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKGIpe2lmKGgpcmV0dXJuIGguY2FsbChiLGEsYyk7Zm9yKGQ9Yi5sZW5ndGgsYz1jPzA+Yz9NYXRoLm1heCgwLGQrYyk6YzowO2Q+YztjKyspaWYoYyBpbiBiJiZiW2NdPT09YSlyZXR1cm4gY31yZXR1cm4tMX0sbWVyZ2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz0rYi5sZW5ndGgsZD0wLGU9YS5sZW5ndGg7d2hpbGUoYz5kKWFbZSsrXT1iW2QrK107aWYoYyE9PWMpd2hpbGUodm9pZCAwIT09YltkXSlhW2UrK109YltkKytdO3JldHVybiBhLmxlbmd0aD1lLGF9LGdyZXA6ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZCxlPVtdLGY9MCxnPWEubGVuZ3RoLGg9IWM7Zz5mO2YrKylkPSFiKGFbZl0sZiksZCE9PWgmJmUucHVzaChhW2ZdKTtyZXR1cm4gZX0sbWFwOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGc9MCxoPVtdO2lmKHMoYSkpZm9yKGQ9YS5sZW5ndGg7ZD5nO2crKyllPWIoYVtnXSxnLGMpLG51bGwhPWUmJmgucHVzaChlKTtlbHNlIGZvcihnIGluIGEpZT1iKGFbZ10sZyxjKSxudWxsIT1lJiZoLnB1c2goZSk7cmV0dXJuIGYuYXBwbHkoW10saCl9LGd1aWQ6MSxwcm94eTpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZjtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGImJihmPWFbYl0sYj1hLGE9Ziksbi5pc0Z1bmN0aW9uKGEpPyhjPWUuY2FsbChhcmd1bWVudHMsMiksZD1mdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGJ8fHRoaXMsYy5jb25jYXQoZS5jYWxsKGFyZ3VtZW50cykpKX0sZC5ndWlkPWEuZ3VpZD1hLmd1aWR8fG4uZ3VpZCsrLGQpOnZvaWQgMH0sbm93OmZ1bmN0aW9uKCl7cmV0dXJuK25ldyBEYXRlfSxzdXBwb3J0Omx9KSwiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYobi5mbltTeW1ib2wuaXRlcmF0b3JdPWNbU3ltYm9sLml0ZXJhdG9yXSksbi5lYWNoKCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbCIuc3BsaXQoIiAiKSxmdW5jdGlvbihhLGIpe2lbIltvYmplY3QgIitiKyJdIl09Yi50b0xvd2VyQ2FzZSgpfSk7ZnVuY3Rpb24gcyhhKXt2YXIgYj0hIWEmJiJsZW5ndGgiaW4gYSYmYS5sZW5ndGgsYz1uLnR5cGUoYSk7cmV0dXJuImZ1bmN0aW9uIj09PWN8fG4uaXNXaW5kb3coYSk/ITE6ImFycmF5Ij09PWN8fDA9PT1ifHwibnVtYmVyIj09dHlwZW9mIGImJmI+MCYmYi0xIGluIGF9dmFyIHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQsdT0ic2l6emxlIisxKm5ldyBEYXRlLHY9YS5kb2N1bWVudCx3PTAseD0wLHk9Z2EoKSx6PWdhKCksQT1nYSgpLEI9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09PWImJihsPSEwKSwwfSxDPTE8PDMxLEQ9e30uaGFzT3duUHJvcGVydHksRT1bXSxGPUUucG9wLEc9RS5wdXNoLEg9RS5wdXNoLEk9RS5zbGljZSxKPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTAsZD1hLmxlbmd0aDtkPmM7YysrKWlmKGFbY109PT1iKXJldHVybiBjO3JldHVybi0xfSxLPSJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZCIsTD0iW1xceDIwXFx0XFxyXFxuXFxmXSIsTT0iKD86XFxcXC58W1xcdy1dfFteXFx4MDAtXFx4YTBdKSsiLE49IlxcWyIrTCsiKigiK00rIikoPzoiK0wrIiooWypeJHwhfl0/PSkiK0wrIiooPzonKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcInwoIitNKyIpKXwpIitMKyIqXFxdIixPPSI6KCIrTSsiKSg/OlxcKCgoJygoPzpcXFxcLnxbXlxcXFwnXSkqKSd8XCIoKD86XFxcXC58W15cXFxcXCJdKSopXCIpfCgoPzpcXFxcLnxbXlxcXFwoKVtcXF1dfCIrTisiKSopfC4qKVxcKXwpIixQPW5ldyBSZWdFeHAoTCsiKyIsImciKSxRPW5ldyBSZWdFeHAoIl4iK0wrIit8KCg/Ol58W15cXFxcXSkoPzpcXFxcLikqKSIrTCsiKyQiLCJnIiksUj1uZXcgUmVnRXhwKCJeIitMKyIqLCIrTCsiKiIpLFM9bmV3IFJlZ0V4cCgiXiIrTCsiKihbPit+XXwiK0wrIikiK0wrIioiKSxUPW5ldyBSZWdFeHAoIj0iK0wrIiooW15cXF0nXCJdKj8pIitMKyIqXFxdIiwiZyIpLFU9bmV3IFJlZ0V4cChPKSxWPW5ldyBSZWdFeHAoIl4iK00rIiQiKSxXPXtJRDpuZXcgUmVnRXhwKCJeIygiK00rIikiKSxDTEFTUzpuZXcgUmVnRXhwKCJeXFwuKCIrTSsiKSIpLFRBRzpuZXcgUmVnRXhwKCJeKCIrTSsifFsqXSkiKSxBVFRSOm5ldyBSZWdFeHAoIl4iK04pLFBTRVVETzpuZXcgUmVnRXhwKCJeIitPKSxDSElMRDpuZXcgUmVnRXhwKCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXCgiK0wrIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK0wrIiooPzooWystXXwpIitMKyIqKFxcZCspfCkpIitMKyIqXFwpfCkiLCJpIiksYm9vbDpuZXcgUmVnRXhwKCJeKD86IitLKyIpJCIsImkiKSxuZWVkc0NvbnRleHQ6bmV3IFJlZ0V4cCgiXiIrTCsiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFwoIitMKyIqKCg/Oi1cXGQpP1xcZCopIitMKyIqXFwpfCkoPz1bXi1dfCQpIiwiaSIpfSxYPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksWT0vXmhcZCQvaSxaPS9eW157XStce1xzKlxbbmF0aXZlIFx3LywkPS9eKD86IyhbXHctXSspfChcdyspfFwuKFtcdy1dKykpJC8sXz0vWyt+XS8sYWE9Lyd8XFwvZyxiYT1uZXcgUmVnRXhwKCJcXFxcKFtcXGRhLWZdezEsNn0iK0wrIj98KCIrTCsiKXwuKSIsImlnIiksY2E9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPSIweCIrYi02NTUzNjtyZXR1cm4gZCE9PWR8fGM/YjowPmQ/U3RyaW5nLmZyb21DaGFyQ29kZShkKzY1NTM2KTpTdHJpbmcuZnJvbUNoYXJDb2RlKGQ+PjEwfDU1Mjk2LDEwMjMmZHw1NjMyMCl9LGRhPWZ1bmN0aW9uKCl7bSgpfTt0cnl7SC5hcHBseShFPUkuY2FsbCh2LmNoaWxkTm9kZXMpLHYuY2hpbGROb2RlcyksRVt2LmNoaWxkTm9kZXMubGVuZ3RoXS5ub2RlVHlwZX1jYXRjaChlYSl7SD17YXBwbHk6RS5sZW5ndGg/ZnVuY3Rpb24oYSxiKXtHLmFwcGx5KGEsSS5jYWxsKGIpKX06ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmxlbmd0aCxkPTA7d2hpbGUoYVtjKytdPWJbZCsrXSk7YS5sZW5ndGg9Yy0xfX19ZnVuY3Rpb24gZmEoYSxiLGQsZSl7dmFyIGYsaCxqLGssbCxvLHIscyx3PWImJmIub3duZXJEb2N1bWVudCx4PWI/Yi5ub2RlVHlwZTo5O2lmKGQ9ZHx8W10sInN0cmluZyIhPXR5cGVvZiBhfHwhYXx8MSE9PXgmJjkhPT14JiYxMSE9PXgpcmV0dXJuIGQ7aWYoIWUmJigoYj9iLm93bmVyRG9jdW1lbnR8fGI6dikhPT1uJiZtKGIpLGI9Ynx8bixwKSl7aWYoMTEhPT14JiYobz0kLmV4ZWMoYSkpKWlmKGY9b1sxXSl7aWYoOT09PXgpe2lmKCEoaj1iLmdldEVsZW1lbnRCeUlkKGYpKSlyZXR1cm4gZDtpZihqLmlkPT09ZilyZXR1cm4gZC5wdXNoKGopLGR9ZWxzZSBpZih3JiYoaj13LmdldEVsZW1lbnRCeUlkKGYpKSYmdChiLGopJiZqLmlkPT09ZilyZXR1cm4gZC5wdXNoKGopLGR9ZWxzZXtpZihvWzJdKXJldHVybiBILmFwcGx5KGQsYi5nZXRFbGVtZW50c0J5VGFnTmFtZShhKSksZDtpZigoZj1vWzNdKSYmYy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUpcmV0dXJuIEguYXBwbHkoZCxiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoZikpLGR9aWYoYy5xc2EmJiFBW2ErIiAiXSYmKCFxfHwhcS50ZXN0KGEpKSl7aWYoMSE9PXgpdz1iLHM9YTtlbHNlIGlmKCJvYmplY3QiIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXsoaz1iLmdldEF0dHJpYnV0ZSgiaWQiKSk/az1rLnJlcGxhY2UoYWEsIlxcJCYiKTpiLnNldEF0dHJpYnV0ZSgiaWQiLGs9dSkscj1nKGEpLGg9ci5sZW5ndGgsbD1WLnRlc3Qoayk/IiMiK2s6IltpZD0nIitrKyInXSI7d2hpbGUoaC0tKXJbaF09bCsiICIrcWEocltoXSk7cz1yLmpvaW4oIiwiKSx3PV8udGVzdChhKSYmb2EoYi5wYXJlbnROb2RlKXx8Yn1pZihzKXRyeXtyZXR1cm4gSC5hcHBseShkLHcucXVlcnlTZWxlY3RvckFsbChzKSksZH1jYXRjaCh5KXt9ZmluYWxseXtrPT09dSYmYi5yZW1vdmVBdHRyaWJ1dGUoImlkIil9fX1yZXR1cm4gaShhLnJlcGxhY2UoUSwiJDEiKSxiLGQsZSl9ZnVuY3Rpb24gZ2EoKXt2YXIgYT1bXTtmdW5jdGlvbiBiKGMsZSl7cmV0dXJuIGEucHVzaChjKyIgIik+ZC5jYWNoZUxlbmd0aCYmZGVsZXRlIGJbYS5zaGlmdCgpXSxiW2MrIiAiXT1lfXJldHVybiBifWZ1bmN0aW9uIGhhKGEpe3JldHVybiBhW3VdPSEwLGF9ZnVuY3Rpb24gaWEoYSl7dmFyIGI9bi5jcmVhdGVFbGVtZW50KCJkaXYiKTt0cnl7cmV0dXJuISFhKGIpfWNhdGNoKGMpe3JldHVybiExfWZpbmFsbHl7Yi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYiksYj1udWxsfX1mdW5jdGlvbiBqYShhLGIpe3ZhciBjPWEuc3BsaXQoInwiKSxlPWMubGVuZ3RoO3doaWxlKGUtLSlkLmF0dHJIYW5kbGVbY1tlXV09Yn1mdW5jdGlvbiBrYShhLGIpe3ZhciBjPWImJmEsZD1jJiYxPT09YS5ub2RlVHlwZSYmMT09PWIubm9kZVR5cGUmJih+Yi5zb3VyY2VJbmRleHx8QyktKH5hLnNvdXJjZUluZGV4fHxDKTtpZihkKXJldHVybiBkO2lmKGMpd2hpbGUoYz1jLm5leHRTaWJsaW5nKWlmKGM9PT1iKXJldHVybi0xO3JldHVybiBhPzE6LTF9ZnVuY3Rpb24gbGEoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4iaW5wdXQiPT09YyYmYi50eXBlPT09YX19ZnVuY3Rpb24gbWEoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oImlucHV0Ij09PWN8fCJidXR0b24iPT09YykmJmIudHlwZT09PWF9fWZ1bmN0aW9uIG5hKGEpe3JldHVybiBoYShmdW5jdGlvbihiKXtyZXR1cm4gYj0rYixoYShmdW5jdGlvbihjLGQpe3ZhciBlLGY9YShbXSxjLmxlbmd0aCxiKSxnPWYubGVuZ3RoO3doaWxlKGctLSljW2U9ZltnXV0mJihjW2VdPSEoZFtlXT1jW2VdKSl9KX0pfWZ1bmN0aW9uIG9hKGEpe3JldHVybiBhJiYidW5kZWZpbmVkIiE9dHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUmJmF9Yz1mYS5zdXBwb3J0PXt9LGY9ZmEuaXNYTUw9ZnVuY3Rpb24oYSl7dmFyIGI9YSYmKGEub3duZXJEb2N1bWVudHx8YSkuZG9jdW1lbnRFbGVtZW50O3JldHVybiBiPyJIVE1MIiE9PWIubm9kZU5hbWU6ITF9LG09ZmEuc2V0RG9jdW1lbnQ9ZnVuY3Rpb24oYSl7dmFyIGIsZSxnPWE/YS5vd25lckRvY3VtZW50fHxhOnY7cmV0dXJuIGchPT1uJiY5PT09Zy5ub2RlVHlwZSYmZy5kb2N1bWVudEVsZW1lbnQ/KG49ZyxvPW4uZG9jdW1lbnRFbGVtZW50LHA9IWYobiksKGU9bi5kZWZhdWx0VmlldykmJmUudG9wIT09ZSYmKGUuYWRkRXZlbnRMaXN0ZW5lcj9lLmFkZEV2ZW50TGlzdGVuZXIoInVubG9hZCIsZGEsITEpOmUuYXR0YWNoRXZlbnQmJmUuYXR0YWNoRXZlbnQoIm9udW5sb2FkIixkYSkpLGMuYXR0cmlidXRlcz1pYShmdW5jdGlvbihhKXtyZXR1cm4gYS5jbGFzc05hbWU9ImkiLCFhLmdldEF0dHJpYnV0ZSgiY2xhc3NOYW1lIil9KSxjLmdldEVsZW1lbnRzQnlUYWdOYW1lPWlhKGZ1bmN0aW9uKGEpe3JldHVybiBhLmFwcGVuZENoaWxkKG4uY3JlYXRlQ29tbWVudCgiIikpLCFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RofSksYy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lPVoudGVzdChuLmdldEVsZW1lbnRzQnlDbGFzc05hbWUpLGMuZ2V0QnlJZD1pYShmdW5jdGlvbihhKXtyZXR1cm4gby5hcHBlbmRDaGlsZChhKS5pZD11LCFuLmdldEVsZW1lbnRzQnlOYW1lfHwhbi5nZXRFbGVtZW50c0J5TmFtZSh1KS5sZW5ndGh9KSxjLmdldEJ5SWQ/KGQuZmluZC5JRD1mdW5jdGlvbihhLGIpe2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgYi5nZXRFbGVtZW50QnlJZCYmcCl7dmFyIGM9Yi5nZXRFbGVtZW50QnlJZChhKTtyZXR1cm4gYz9bY106W119fSxkLmZpbHRlci5JRD1mdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoYmEsY2EpO3JldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoImlkIik9PT1ifX0pOihkZWxldGUgZC5maW5kLklELGQuZmlsdGVyLklEPWZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShiYSxjYSk7cmV0dXJuIGZ1bmN0aW9uKGEpe3ZhciBjPSJ1bmRlZmluZWQiIT10eXBlb2YgYS5nZXRBdHRyaWJ1dGVOb2RlJiZhLmdldEF0dHJpYnV0ZU5vZGUoImlkIik7cmV0dXJuIGMmJmMudmFsdWU9PT1ifX0pLGQuZmluZC5UQUc9Yy5nZXRFbGVtZW50c0J5VGFnTmFtZT9mdW5jdGlvbihhLGIpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgYi5nZXRFbGVtZW50c0J5VGFnTmFtZT9iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpOmMucXNhP2IucXVlcnlTZWxlY3RvckFsbChhKTp2b2lkIDB9OmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPTAsZj1iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpO2lmKCIqIj09PWEpe3doaWxlKGM9ZltlKytdKTE9PT1jLm5vZGVUeXBlJiZkLnB1c2goYyk7cmV0dXJuIGR9cmV0dXJuIGZ9LGQuZmluZC5DTEFTUz1jLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmZ1bmN0aW9uKGEsYil7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJnA/Yi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGEpOnZvaWQgMH0scj1bXSxxPVtdLChjLnFzYT1aLnRlc3Qobi5xdWVyeVNlbGVjdG9yQWxsKSkmJihpYShmdW5jdGlvbihhKXtvLmFwcGVuZENoaWxkKGEpLmlubmVySFRNTD0iPGEgaWQ9JyIrdSsiJz48L2E+PHNlbGVjdCBpZD0nIit1KyItXHJcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD4iLGEucXVlcnlTZWxlY3RvckFsbCgiW21zYWxsb3djYXB0dXJlXj0nJ10iKS5sZW5ndGgmJnEucHVzaCgiWypeJF09IitMKyIqKD86Jyd8XCJcIikiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoIltzZWxlY3RlZF0iKS5sZW5ndGh8fHEucHVzaCgiXFxbIitMKyIqKD86dmFsdWV8IitLKyIpIiksYS5xdWVyeVNlbGVjdG9yQWxsKCJbaWR+PSIrdSsiLV0iKS5sZW5ndGh8fHEucHVzaCgifj0iKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoIjpjaGVja2VkIikubGVuZ3RofHxxLnB1c2goIjpjaGVja2VkIiksYS5xdWVyeVNlbGVjdG9yQWxsKCJhIyIrdSsiKyoiKS5sZW5ndGh8fHEucHVzaCgiLiMuK1srfl0iKX0pLGlhKGZ1bmN0aW9uKGEpe3ZhciBiPW4uY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtiLnNldEF0dHJpYnV0ZSgidHlwZSIsImhpZGRlbiIpLGEuYXBwZW5kQ2hpbGQoYikuc2V0QXR0cmlidXRlKCJuYW1lIiwiRCIpLGEucXVlcnlTZWxlY3RvckFsbCgiW25hbWU9ZF0iKS5sZW5ndGgmJnEucHVzaCgibmFtZSIrTCsiKlsqXiR8IX5dPz0iKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoIjplbmFibGVkIikubGVuZ3RofHxxLnB1c2goIjplbmFibGVkIiwiOmRpc2FibGVkIiksYS5xdWVyeVNlbGVjdG9yQWxsKCIqLDp4IikscS5wdXNoKCIsLio6Iil9KSksKGMubWF0Y2hlc1NlbGVjdG9yPVoudGVzdChzPW8ubWF0Y2hlc3x8by53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fG8ubW96TWF0Y2hlc1NlbGVjdG9yfHxvLm9NYXRjaGVzU2VsZWN0b3J8fG8ubXNNYXRjaGVzU2VsZWN0b3IpKSYmaWEoZnVuY3Rpb24oYSl7Yy5kaXNjb25uZWN0ZWRNYXRjaD1zLmNhbGwoYSwiZGl2Iikscy5jYWxsKGEsIltzIT0nJ106eCIpLHIucHVzaCgiIT0iLE8pfSkscT1xLmxlbmd0aCYmbmV3IFJlZ0V4cChxLmpvaW4oInwiKSkscj1yLmxlbmd0aCYmbmV3IFJlZ0V4cChyLmpvaW4oInwiKSksYj1aLnRlc3Qoby5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiksdD1ifHxaLnRlc3Qoby5jb250YWlucyk/ZnVuY3Rpb24oYSxiKXt2YXIgYz05PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLGQ9YiYmYi5wYXJlbnROb2RlO3JldHVybiBhPT09ZHx8ISghZHx8MSE9PWQubm9kZVR5cGV8fCEoYy5jb250YWlucz9jLmNvbnRhaW5zKGQpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24mJjE2JmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZCkpKX06ZnVuY3Rpb24oYSxiKXtpZihiKXdoaWxlKGI9Yi5wYXJlbnROb2RlKWlmKGI9PT1hKXJldHVybiEwO3JldHVybiExfSxCPWI/ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gbD0hMCwwO3ZhciBkPSFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uLSFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uO3JldHVybiBkP2Q6KGQ9KGEub3duZXJEb2N1bWVudHx8YSk9PT0oYi5vd25lckRvY3VtZW50fHxiKT9hLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpOjEsMSZkfHwhYy5zb3J0RGV0YWNoZWQmJmIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYSk9PT1kP2E9PT1ufHxhLm93bmVyRG9jdW1lbnQ9PT12JiZ0KHYsYSk/LTE6Yj09PW58fGIub3duZXJEb2N1bWVudD09PXYmJnQodixiKT8xOms/SihrLGEpLUooayxiKTowOjQmZD8tMToxKX06ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gbD0hMCwwO3ZhciBjLGQ9MCxlPWEucGFyZW50Tm9kZSxmPWIucGFyZW50Tm9kZSxnPVthXSxoPVtiXTtpZighZXx8IWYpcmV0dXJuIGE9PT1uPy0xOmI9PT1uPzE6ZT8tMTpmPzE6az9KKGssYSktSihrLGIpOjA7aWYoZT09PWYpcmV0dXJuIGthKGEsYik7Yz1hO3doaWxlKGM9Yy5wYXJlbnROb2RlKWcudW5zaGlmdChjKTtjPWI7d2hpbGUoYz1jLnBhcmVudE5vZGUpaC51bnNoaWZ0KGMpO3doaWxlKGdbZF09PT1oW2RdKWQrKztyZXR1cm4gZD9rYShnW2RdLGhbZF0pOmdbZF09PT12Py0xOmhbZF09PT12PzE6MH0sbik6bn0sZmEubWF0Y2hlcz1mdW5jdGlvbihhLGIpe3JldHVybiBmYShhLG51bGwsbnVsbCxiKX0sZmEubWF0Y2hlc1NlbGVjdG9yPWZ1bmN0aW9uKGEsYil7aWYoKGEub3duZXJEb2N1bWVudHx8YSkhPT1uJiZtKGEpLGI9Yi5yZXBsYWNlKFQsIj0nJDEnXSIpLGMubWF0Y2hlc1NlbGVjdG9yJiZwJiYhQVtiKyIgIl0mJighcnx8IXIudGVzdChiKSkmJighcXx8IXEudGVzdChiKSkpdHJ5e3ZhciBkPXMuY2FsbChhLGIpO2lmKGR8fGMuZGlzY29ubmVjdGVkTWF0Y2h8fGEuZG9jdW1lbnQmJjExIT09YS5kb2N1bWVudC5ub2RlVHlwZSlyZXR1cm4gZH1jYXRjaChlKXt9cmV0dXJuIGZhKGIsbixudWxsLFthXSkubGVuZ3RoPjB9LGZhLmNvbnRhaW5zPWZ1bmN0aW9uKGEsYil7cmV0dXJuKGEub3duZXJEb2N1bWVudHx8YSkhPT1uJiZtKGEpLHQoYSxiKX0sZmEuYXR0cj1mdW5jdGlvbihhLGIpeyhhLm93bmVyRG9jdW1lbnR8fGEpIT09biYmbShhKTt2YXIgZT1kLmF0dHJIYW5kbGVbYi50b0xvd2VyQ2FzZSgpXSxmPWUmJkQuY2FsbChkLmF0dHJIYW5kbGUsYi50b0xvd2VyQ2FzZSgpKT9lKGEsYiwhcCk6dm9pZCAwO3JldHVybiB2b2lkIDAhPT1mP2Y6Yy5hdHRyaWJ1dGVzfHwhcD9hLmdldEF0dHJpYnV0ZShiKTooZj1hLmdldEF0dHJpYnV0ZU5vZGUoYikpJiZmLnNwZWNpZmllZD9mLnZhbHVlOm51bGx9LGZhLmVycm9yPWZ1bmN0aW9uKGEpe3Rocm93IG5ldyBFcnJvcigiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogIithKX0sZmEudW5pcXVlU29ydD1mdW5jdGlvbihhKXt2YXIgYixkPVtdLGU9MCxmPTA7aWYobD0hYy5kZXRlY3REdXBsaWNhdGVzLGs9IWMuc29ydFN0YWJsZSYmYS5zbGljZSgwKSxhLnNvcnQoQiksbCl7d2hpbGUoYj1hW2YrK10pYj09PWFbZl0mJihlPWQucHVzaChmKSk7d2hpbGUoZS0tKWEuc3BsaWNlKGRbZV0sMSl9cmV0dXJuIGs9bnVsbCxhfSxlPWZhLmdldFRleHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz0iIixkPTAsZj1hLm5vZGVUeXBlO2lmKGYpe2lmKDE9PT1mfHw5PT09Znx8MTE9PT1mKXtpZigic3RyaW5nIj09dHlwZW9mIGEudGV4dENvbnRlbnQpcmV0dXJuIGEudGV4dENvbnRlbnQ7Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWMrPWUoYSl9ZWxzZSBpZigzPT09Znx8ND09PWYpcmV0dXJuIGEubm9kZVZhbHVlfWVsc2Ugd2hpbGUoYj1hW2QrK10pYys9ZShiKTtyZXR1cm4gY30sZD1mYS5zZWxlY3RvcnM9e2NhY2hlTGVuZ3RoOjUwLGNyZWF0ZVBzZXVkbzpoYSxtYXRjaDpXLGF0dHJIYW5kbGU6e30sZmluZDp7fSxyZWxhdGl2ZTp7Ij4iOntkaXI6InBhcmVudE5vZGUiLGZpcnN0OiEwfSwiICI6e2RpcjoicGFyZW50Tm9kZSJ9LCIrIjp7ZGlyOiJwcmV2aW91c1NpYmxpbmciLGZpcnN0OiEwfSwifiI6e2RpcjoicHJldmlvdXNTaWJsaW5nIn19LHByZUZpbHRlcjp7QVRUUjpmdW5jdGlvbihhKXtyZXR1cm4gYVsxXT1hWzFdLnJlcGxhY2UoYmEsY2EpLGFbM109KGFbM118fGFbNF18fGFbNV18fCIiKS5yZXBsYWNlKGJhLGNhKSwifj0iPT09YVsyXSYmKGFbM109IiAiK2FbM10rIiAiKSxhLnNsaWNlKDAsNCl9LENISUxEOmZ1bmN0aW9uKGEpe3JldHVybiBhWzFdPWFbMV0udG9Mb3dlckNhc2UoKSwibnRoIj09PWFbMV0uc2xpY2UoMCwzKT8oYVszXXx8ZmEuZXJyb3IoYVswXSksYVs0XT0rKGFbNF0/YVs1XSsoYVs2XXx8MSk6MiooImV2ZW4iPT09YVszXXx8Im9kZCI9PT1hWzNdKSksYVs1XT0rKGFbN10rYVs4XXx8Im9kZCI9PT1hWzNdKSk6YVszXSYmZmEuZXJyb3IoYVswXSksYX0sUFNFVURPOmZ1bmN0aW9uKGEpe3ZhciBiLGM9IWFbNl0mJmFbMl07cmV0dXJuIFcuQ0hJTEQudGVzdChhWzBdKT9udWxsOihhWzNdP2FbMl09YVs0XXx8YVs1XXx8IiI6YyYmVS50ZXN0KGMpJiYoYj1nKGMsITApKSYmKGI9Yy5pbmRleE9mKCIpIixjLmxlbmd0aC1iKS1jLmxlbmd0aCkmJihhWzBdPWFbMF0uc2xpY2UoMCxiKSxhWzJdPWMuc2xpY2UoMCxiKSksYS5zbGljZSgwLDMpKX19LGZpbHRlcjp7VEFHOmZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShiYSxjYSkudG9Mb3dlckNhc2UoKTtyZXR1cm4iKiI9PT1hP2Z1bmN0aW9uKCl7cmV0dXJuITB9OmZ1bmN0aW9uKGEpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1ifX0sQ0xBU1M6ZnVuY3Rpb24oYSl7dmFyIGI9eVthKyIgIl07cmV0dXJuIGJ8fChiPW5ldyBSZWdFeHAoIihefCIrTCsiKSIrYSsiKCIrTCsifCQpIikpJiZ5KGEsZnVuY3Rpb24oYSl7cmV0dXJuIGIudGVzdCgic3RyaW5nIj09dHlwZW9mIGEuY2xhc3NOYW1lJiZhLmNsYXNzTmFtZXx8InVuZGVmaW5lZCIhPXR5cGVvZiBhLmdldEF0dHJpYnV0ZSYmYS5nZXRBdHRyaWJ1dGUoImNsYXNzIil8fCIiKX0pfSxBVFRSOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCl7dmFyIGU9ZmEuYXR0cihkLGEpO3JldHVybiBudWxsPT1lPyIhPSI9PT1iOmI/KGUrPSIiLCI9Ij09PWI/ZT09PWM6IiE9Ij09PWI/ZSE9PWM6Il49Ij09PWI/YyYmMD09PWUuaW5kZXhPZihjKToiKj0iPT09Yj9jJiZlLmluZGV4T2YoYyk+LTE6IiQ9Ij09PWI/YyYmZS5zbGljZSgtYy5sZW5ndGgpPT09Yzoifj0iPT09Yj8oIiAiK2UucmVwbGFjZShQLCIgIikrIiAiKS5pbmRleE9mKGMpPi0xOiJ8PSI9PT1iP2U9PT1jfHxlLnNsaWNlKDAsYy5sZW5ndGgrMSk9PT1jKyItIjohMSk6ITB9fSxDSElMRDpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPSJudGgiIT09YS5zbGljZSgwLDMpLGc9Imxhc3QiIT09YS5zbGljZSgtNCksaD0ib2YtdHlwZSI9PT1iO3JldHVybiAxPT09ZCYmMD09PWU/ZnVuY3Rpb24oYSl7cmV0dXJuISFhLnBhcmVudE5vZGV9OmZ1bmN0aW9uKGIsYyxpKXt2YXIgaixrLGwsbSxuLG8scD1mIT09Zz8ibmV4dFNpYmxpbmciOiJwcmV2aW91c1NpYmxpbmciLHE9Yi5wYXJlbnROb2RlLHI9aCYmYi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLHM9IWkmJiFoLHQ9ITE7aWYocSl7aWYoZil7d2hpbGUocCl7bT1iO3doaWxlKG09bVtwXSlpZihoP20ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXI6MT09PW0ubm9kZVR5cGUpcmV0dXJuITE7bz1wPSJvbmx5Ij09PWEmJiFvJiYibmV4dFNpYmxpbmcifXJldHVybiEwfWlmKG89W2c/cS5maXJzdENoaWxkOnEubGFzdENoaWxkXSxnJiZzKXttPXEsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biYmalsyXSxtPW4mJnEuY2hpbGROb2Rlc1tuXTt3aGlsZShtPSsrbiYmbSYmbVtwXXx8KHQ9bj0wKXx8by5wb3AoKSlpZigxPT09bS5ub2RlVHlwZSYmKyt0JiZtPT09Yil7a1thXT1bdyxuLHRdO2JyZWFrfX1lbHNlIGlmKHMmJihtPWIsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biksdD09PSExKXdoaWxlKG09KytuJiZtJiZtW3BdfHwodD1uPTApfHxvLnBvcCgpKWlmKChoP20ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXI6MT09PW0ubm9kZVR5cGUpJiYrK3QmJihzJiYobD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksa1thXT1bdyx0XSksbT09PWIpKWJyZWFrO3JldHVybiB0LT1lLHQ9PT1kfHx0JWQ9PT0wJiZ0L2Q+PTB9fX0sUFNFVURPOmZ1bmN0aW9uKGEsYil7dmFyIGMsZT1kLnBzZXVkb3NbYV18fGQuc2V0RmlsdGVyc1thLnRvTG93ZXJDYXNlKCldfHxmYS5lcnJvcigidW5zdXBwb3J0ZWQgcHNldWRvOiAiK2EpO3JldHVybiBlW3VdP2UoYik6ZS5sZW5ndGg+MT8oYz1bYSxhLCIiLGJdLGQuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eShhLnRvTG93ZXJDYXNlKCkpP2hhKGZ1bmN0aW9uKGEsYyl7dmFyIGQsZj1lKGEsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pZD1KKGEsZltnXSksYVtkXT0hKGNbZF09ZltnXSl9KTpmdW5jdGlvbihhKXtyZXR1cm4gZShhLDAsYyl9KTplfX0scHNldWRvczp7bm90OmhhKGZ1bmN0aW9uKGEpe3ZhciBiPVtdLGM9W10sZD1oKGEucmVwbGFjZShRLCIkMSIpKTtyZXR1cm4gZFt1XT9oYShmdW5jdGlvbihhLGIsYyxlKXt2YXIgZixnPWQoYSxudWxsLGUsW10pLGg9YS5sZW5ndGg7d2hpbGUoaC0tKShmPWdbaF0pJiYoYVtoXT0hKGJbaF09ZikpfSk6ZnVuY3Rpb24oYSxlLGYpe3JldHVybiBiWzBdPWEsZChiLG51bGwsZixjKSxiWzBdPW51bGwsIWMucG9wKCl9fSksaGFzOmhhKGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gZmEoYSxiKS5sZW5ndGg+MH19KSxjb250YWluczpoYShmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoYmEsY2EpLGZ1bmN0aW9uKGIpe3JldHVybihiLnRleHRDb250ZW50fHxiLmlubmVyVGV4dHx8ZShiKSkuaW5kZXhPZihhKT4tMX19KSxsYW5nOmhhKGZ1bmN0aW9uKGEpe3JldHVybiBWLnRlc3QoYXx8IiIpfHxmYS5lcnJvcigidW5zdXBwb3J0ZWQgbGFuZzogIithKSxhPWEucmVwbGFjZShiYSxjYSkudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihiKXt2YXIgYztkbyBpZihjPXA/Yi5sYW5nOmIuZ2V0QXR0cmlidXRlKCJ4bWw6bGFuZyIpfHxiLmdldEF0dHJpYnV0ZSgibGFuZyIpKXJldHVybiBjPWMudG9Mb3dlckNhc2UoKSxjPT09YXx8MD09PWMuaW5kZXhPZihhKyItIik7d2hpbGUoKGI9Yi5wYXJlbnROb2RlKSYmMT09PWIubm9kZVR5cGUpO3JldHVybiExfX0pLHRhcmdldDpmdW5jdGlvbihiKXt2YXIgYz1hLmxvY2F0aW9uJiZhLmxvY2F0aW9uLmhhc2g7cmV0dXJuIGMmJmMuc2xpY2UoMSk9PT1iLmlkfSxyb290OmZ1bmN0aW9uKGEpe3JldHVybiBhPT09b30sZm9jdXM6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1uLmFjdGl2ZUVsZW1lbnQmJighbi5oYXNGb2N1c3x8bi5oYXNGb2N1cygpKSYmISEoYS50eXBlfHxhLmhyZWZ8fH5hLnRhYkluZGV4KX0sZW5hYmxlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kaXNhYmxlZD09PSExfSxkaXNhYmxlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kaXNhYmxlZD09PSEwfSxjaGVja2VkOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4iaW5wdXQiPT09YiYmISFhLmNoZWNrZWR8fCJvcHRpb24iPT09YiYmISFhLnNlbGVjdGVkfSxzZWxlY3RlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5wYXJlbnROb2RlJiZhLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCxhLnNlbGVjdGVkPT09ITB9LGVtcHR5OmZ1bmN0aW9uKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZylpZihhLm5vZGVUeXBlPDYpcmV0dXJuITE7cmV0dXJuITB9LHBhcmVudDpmdW5jdGlvbihhKXtyZXR1cm4hZC5wc2V1ZG9zLmVtcHR5KGEpfSxoZWFkZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIFkudGVzdChhLm5vZGVOYW1lKX0saW5wdXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFgudGVzdChhLm5vZGVOYW1lKX0sYnV0dG9uOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4iaW5wdXQiPT09YiYmImJ1dHRvbiI9PT1hLnR5cGV8fCJidXR0b24iPT09Yn0sdGV4dDpmdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4iaW5wdXQiPT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpJiYidGV4dCI9PT1hLnR5cGUmJihudWxsPT0oYj1hLmdldEF0dHJpYnV0ZSgidHlwZSIpKXx8InRleHQiPT09Yi50b0xvd2VyQ2FzZSgpKX0sZmlyc3Q6bmEoZnVuY3Rpb24oKXtyZXR1cm5bMF19KSxsYXN0Om5hKGZ1bmN0aW9uKGEsYil7cmV0dXJuW2ItMV19KSxlcTpuYShmdW5jdGlvbihhLGIsYyl7cmV0dXJuWzA+Yz9jK2I6Y119KSxldmVuOm5hKGZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7Yj5jO2MrPTIpYS5wdXNoKGMpO3JldHVybiBhfSksb2RkOm5hKGZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTE7Yj5jO2MrPTIpYS5wdXNoKGMpO3JldHVybiBhfSksbHQ6bmEoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD0wPmM/YytiOmM7LS1kPj0wOylhLnB1c2goZCk7cmV0dXJuIGF9KSxndDpuYShmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPTA+Yz9jK2I6YzsrK2Q8YjspYS5wdXNoKGQpO3JldHVybiBhfSl9fSxkLnBzZXVkb3MubnRoPWQucHNldWRvcy5lcTtmb3IoYiBpbntyYWRpbzohMCxjaGVja2JveDohMCxmaWxlOiEwLHBhc3N3b3JkOiEwLGltYWdlOiEwfSlkLnBzZXVkb3NbYl09bGEoYik7Zm9yKGIgaW57c3VibWl0OiEwLHJlc2V0OiEwfSlkLnBzZXVkb3NbYl09bWEoYik7ZnVuY3Rpb24gcGEoKXt9cGEucHJvdG90eXBlPWQuZmlsdGVycz1kLnBzZXVkb3MsZC5zZXRGaWx0ZXJzPW5ldyBwYSxnPWZhLnRva2VuaXplPWZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGcsaCxpLGosaz16W2ErIiAiXTtpZihrKXJldHVybiBiPzA6ay5zbGljZSgwKTtoPWEsaT1bXSxqPWQucHJlRmlsdGVyO3doaWxlKGgpe2MmJiEoZT1SLmV4ZWMoaCkpfHwoZSYmKGg9aC5zbGljZShlWzBdLmxlbmd0aCl8fGgpLGkucHVzaChmPVtdKSksYz0hMSwoZT1TLmV4ZWMoaCkpJiYoYz1lLnNoaWZ0KCksZi5wdXNoKHt2YWx1ZTpjLHR5cGU6ZVswXS5yZXBsYWNlKFEsIiAiKX0pLGg9aC5zbGljZShjLmxlbmd0aCkpO2ZvcihnIGluIGQuZmlsdGVyKSEoZT1XW2ddLmV4ZWMoaCkpfHxqW2ddJiYhKGU9altnXShlKSl8fChjPWUuc2hpZnQoKSxmLnB1c2goe3ZhbHVlOmMsdHlwZTpnLG1hdGNoZXM6ZX0pLGg9aC5zbGljZShjLmxlbmd0aCkpO2lmKCFjKWJyZWFrfXJldHVybiBiP2gubGVuZ3RoOmg/ZmEuZXJyb3IoYSk6eihhLGkpLnNsaWNlKDApfTtmdW5jdGlvbiBxYShhKXtmb3IodmFyIGI9MCxjPWEubGVuZ3RoLGQ9IiI7Yz5iO2IrKylkKz1hW2JdLnZhbHVlO3JldHVybiBkfWZ1bmN0aW9uIHJhKGEsYixjKXt2YXIgZD1iLmRpcixlPWMmJiJwYXJlbnROb2RlIj09PWQsZj14Kys7cmV0dXJuIGIuZmlyc3Q/ZnVuY3Rpb24oYixjLGYpe3doaWxlKGI9YltkXSlpZigxPT09Yi5ub2RlVHlwZXx8ZSlyZXR1cm4gYShiLGMsZil9OmZ1bmN0aW9uKGIsYyxnKXt2YXIgaCxpLGosaz1bdyxmXTtpZihnKXt3aGlsZShiPWJbZF0paWYoKDE9PT1iLm5vZGVUeXBlfHxlKSYmYShiLGMsZykpcmV0dXJuITB9ZWxzZSB3aGlsZShiPWJbZF0paWYoMT09PWIubm9kZVR5cGV8fGUpe2lmKGo9Ylt1XXx8KGJbdV09e30pLGk9altiLnVuaXF1ZUlEXXx8KGpbYi51bmlxdWVJRF09e30pLChoPWlbZF0pJiZoWzBdPT09dyYmaFsxXT09PWYpcmV0dXJuIGtbMl09aFsyXTtpZihpW2RdPWssa1syXT1hKGIsYyxnKSlyZXR1cm4hMH19fWZ1bmN0aW9uIHNhKGEpe3JldHVybiBhLmxlbmd0aD4xP2Z1bmN0aW9uKGIsYyxkKXt2YXIgZT1hLmxlbmd0aDt3aGlsZShlLS0paWYoIWFbZV0oYixjLGQpKXJldHVybiExO3JldHVybiEwfTphWzBdfWZ1bmN0aW9uIHRhKGEsYixjKXtmb3IodmFyIGQ9MCxlPWIubGVuZ3RoO2U+ZDtkKyspZmEoYSxiW2RdLGMpO3JldHVybiBjfWZ1bmN0aW9uIHVhKGEsYixjLGQsZSl7Zm9yKHZhciBmLGc9W10saD0wLGk9YS5sZW5ndGgsaj1udWxsIT1iO2k+aDtoKyspKGY9YVtoXSkmJihjJiYhYyhmLGQsZSl8fChnLnB1c2goZiksaiYmYi5wdXNoKGgpKSk7cmV0dXJuIGd9ZnVuY3Rpb24gdmEoYSxiLGMsZCxlLGYpe3JldHVybiBkJiYhZFt1XSYmKGQ9dmEoZCkpLGUmJiFlW3VdJiYoZT12YShlLGYpKSxoYShmdW5jdGlvbihmLGcsaCxpKXt2YXIgaixrLGwsbT1bXSxuPVtdLG89Zy5sZW5ndGgscD1mfHx0YShifHwiKiIsaC5ub2RlVHlwZT9baF06aCxbXSkscT0hYXx8IWYmJmI/cDp1YShwLG0sYSxoLGkpLHI9Yz9lfHwoZj9hOm98fGQpP1tdOmc6cTtpZihjJiZjKHEscixoLGkpLGQpe2o9dWEocixuKSxkKGosW10saCxpKSxrPWoubGVuZ3RoO3doaWxlKGstLSkobD1qW2tdKSYmKHJbbltrXV09IShxW25ba11dPWwpKX1pZihmKXtpZihlfHxhKXtpZihlKXtqPVtdLGs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiZqLnB1c2gocVtrXT1sKTtlKG51bGwscj1bXSxqLGkpfWs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiYoaj1lP0ooZixsKTptW2tdKT4tMSYmKGZbal09IShnW2pdPWwpKX19ZWxzZSByPXVhKHI9PT1nP3Iuc3BsaWNlKG8sci5sZW5ndGgpOnIpLGU/ZShudWxsLGcscixpKTpILmFwcGx5KGcscil9KX1mdW5jdGlvbiB3YShhKXtmb3IodmFyIGIsYyxlLGY9YS5sZW5ndGgsZz1kLnJlbGF0aXZlW2FbMF0udHlwZV0saD1nfHxkLnJlbGF0aXZlWyIgIl0saT1nPzE6MCxrPXJhKGZ1bmN0aW9uKGEpe3JldHVybiBhPT09Yn0saCwhMCksbD1yYShmdW5jdGlvbihhKXtyZXR1cm4gSihiLGEpPi0xfSxoLCEwKSxtPVtmdW5jdGlvbihhLGMsZCl7dmFyIGU9IWcmJihkfHxjIT09ail8fCgoYj1jKS5ub2RlVHlwZT9rKGEsYyxkKTpsKGEsYyxkKSk7cmV0dXJuIGI9bnVsbCxlfV07Zj5pO2krKylpZihjPWQucmVsYXRpdmVbYVtpXS50eXBlXSltPVtyYShzYShtKSxjKV07ZWxzZXtpZihjPWQuZmlsdGVyW2FbaV0udHlwZV0uYXBwbHkobnVsbCxhW2ldLm1hdGNoZXMpLGNbdV0pe2ZvcihlPSsraTtmPmU7ZSsrKWlmKGQucmVsYXRpdmVbYVtlXS50eXBlXSlicmVhaztyZXR1cm4gdmEoaT4xJiZzYShtKSxpPjEmJnFhKGEuc2xpY2UoMCxpLTEpLmNvbmNhdCh7dmFsdWU6IiAiPT09YVtpLTJdLnR5cGU/IioiOiIifSkpLnJlcGxhY2UoUSwiJDEiKSxjLGU+aSYmd2EoYS5zbGljZShpLGUpKSxmPmUmJndhKGE9YS5zbGljZShlKSksZj5lJiZxYShhKSl9bS5wdXNoKGMpfXJldHVybiBzYShtKX1mdW5jdGlvbiB4YShhLGIpe3ZhciBjPWIubGVuZ3RoPjAsZT1hLmxlbmd0aD4wLGY9ZnVuY3Rpb24oZixnLGgsaSxrKXt2YXIgbCxvLHEscj0wLHM9IjAiLHQ9ZiYmW10sdT1bXSx2PWoseD1mfHxlJiZkLmZpbmQuVEFHKCIqIixrKSx5PXcrPW51bGw9PXY/MTpNYXRoLnJhbmRvbSgpfHwuMSx6PXgubGVuZ3RoO2ZvcihrJiYoaj1nPT09bnx8Z3x8ayk7cyE9PXomJm51bGwhPShsPXhbc10pO3MrKyl7aWYoZSYmbCl7bz0wLGd8fGwub3duZXJEb2N1bWVudD09PW58fChtKGwpLGg9IXApO3doaWxlKHE9YVtvKytdKWlmKHEobCxnfHxuLGgpKXtpLnB1c2gobCk7YnJlYWt9ayYmKHc9eSl9YyYmKChsPSFxJiZsKSYmci0tLGYmJnQucHVzaChsKSl9aWYocis9cyxjJiZzIT09cil7bz0wO3doaWxlKHE9YltvKytdKXEodCx1LGcsaCk7aWYoZil7aWYocj4wKXdoaWxlKHMtLSl0W3NdfHx1W3NdfHwodVtzXT1GLmNhbGwoaSkpO3U9dWEodSl9SC5hcHBseShpLHUpLGsmJiFmJiZ1Lmxlbmd0aD4wJiZyK2IubGVuZ3RoPjEmJmZhLnVuaXF1ZVNvcnQoaSl9cmV0dXJuIGsmJih3PXksaj12KSx0fTtyZXR1cm4gYz9oYShmKTpmfXJldHVybiBoPWZhLmNvbXBpbGU9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPVtdLGU9W10sZj1BW2ErIiAiXTtpZighZil7Ynx8KGI9ZyhhKSksYz1iLmxlbmd0aDt3aGlsZShjLS0pZj13YShiW2NdKSxmW3VdP2QucHVzaChmKTplLnB1c2goZik7Zj1BKGEseGEoZSxkKSksZi5zZWxlY3Rvcj1hfXJldHVybiBmfSxpPWZhLnNlbGVjdD1mdW5jdGlvbihhLGIsZSxmKXt2YXIgaSxqLGssbCxtLG49ImZ1bmN0aW9uIj09dHlwZW9mIGEmJmEsbz0hZiYmZyhhPW4uc2VsZWN0b3J8fGEpO2lmKGU9ZXx8W10sMT09PW8ubGVuZ3RoKXtpZihqPW9bMF09b1swXS5zbGljZSgwKSxqLmxlbmd0aD4yJiYiSUQiPT09KGs9alswXSkudHlwZSYmYy5nZXRCeUlkJiY5PT09Yi5ub2RlVHlwZSYmcCYmZC5yZWxhdGl2ZVtqWzFdLnR5cGVdKXtpZihiPShkLmZpbmQuSUQoay5tYXRjaGVzWzBdLnJlcGxhY2UoYmEsY2EpLGIpfHxbXSlbMF0sIWIpcmV0dXJuIGU7biYmKGI9Yi5wYXJlbnROb2RlKSxhPWEuc2xpY2Uoai5zaGlmdCgpLnZhbHVlLmxlbmd0aCl9aT1XLm5lZWRzQ29udGV4dC50ZXN0KGEpPzA6ai5sZW5ndGg7d2hpbGUoaS0tKXtpZihrPWpbaV0sZC5yZWxhdGl2ZVtsPWsudHlwZV0pYnJlYWs7aWYoKG09ZC5maW5kW2xdKSYmKGY9bShrLm1hdGNoZXNbMF0ucmVwbGFjZShiYSxjYSksXy50ZXN0KGpbMF0udHlwZSkmJm9hKGIucGFyZW50Tm9kZSl8fGIpKSl7aWYoai5zcGxpY2UoaSwxKSxhPWYubGVuZ3RoJiZxYShqKSwhYSlyZXR1cm4gSC5hcHBseShlLGYpLGU7YnJlYWt9fX1yZXR1cm4obnx8aChhLG8pKShmLGIsIXAsZSwhYnx8Xy50ZXN0KGEpJiZvYShiLnBhcmVudE5vZGUpfHxiKSxlfSxjLnNvcnRTdGFibGU9dS5zcGxpdCgiIikuc29ydChCKS5qb2luKCIiKT09PXUsYy5kZXRlY3REdXBsaWNhdGVzPSEhbCxtKCksYy5zb3J0RGV0YWNoZWQ9aWEoZnVuY3Rpb24oYSl7cmV0dXJuIDEmYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihuLmNyZWF0ZUVsZW1lbnQoImRpdiIpKX0pLGlhKGZ1bmN0aW9uKGEpe3JldHVybiBhLmlubmVySFRNTD0iPGEgaHJlZj0nIyc+PC9hPiIsIiMiPT09YS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgiaHJlZiIpfSl8fGphKCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoIixmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGM/dm9pZCAwOmEuZ2V0QXR0cmlidXRlKGIsInR5cGUiPT09Yi50b0xvd2VyQ2FzZSgpPzE6Mil9KSxjLmF0dHJpYnV0ZXMmJmlhKGZ1bmN0aW9uKGEpe3JldHVybiBhLmlubmVySFRNTD0iPGlucHV0Lz4iLGEuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoInZhbHVlIiwiIiksIiI9PT1hLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpfSl8fGphKCJ2YWx1ZSIsZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjfHwiaW5wdXQiIT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP3ZvaWQgMDphLmRlZmF1bHRWYWx1ZX0pLGlhKGZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hLmdldEF0dHJpYnV0ZSgiZGlzYWJsZWQiKX0pfHxqYShLLGZ1bmN0aW9uKGEsYixjKXt2YXIgZDtyZXR1cm4gYz92b2lkIDA6YVtiXT09PSEwP2IudG9Mb3dlckNhc2UoKTooZD1hLmdldEF0dHJpYnV0ZU5vZGUoYikpJiZkLnNwZWNpZmllZD9kLnZhbHVlOm51bGx9KSxmYX0oYSk7bi5maW5kPXQsbi5leHByPXQuc2VsZWN0b3JzLG4uZXhwclsiOiJdPW4uZXhwci5wc2V1ZG9zLG4udW5pcXVlU29ydD1uLnVuaXF1ZT10LnVuaXF1ZVNvcnQsbi50ZXh0PXQuZ2V0VGV4dCxuLmlzWE1MRG9jPXQuaXNYTUwsbi5jb250YWlucz10LmNvbnRhaW5zO3ZhciB1PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1bXSxlPXZvaWQgMCE9PWM7d2hpbGUoKGE9YVtiXSkmJjkhPT1hLm5vZGVUeXBlKWlmKDE9PT1hLm5vZGVUeXBlKXtpZihlJiZuKGEpLmlzKGMpKWJyZWFrO2QucHVzaChhKX1yZXR1cm4gZH0sdj1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1bXTthO2E9YS5uZXh0U2libGluZykxPT09YS5ub2RlVHlwZSYmYSE9PWImJmMucHVzaChhKTtyZXR1cm4gY30sdz1uLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LHg9L148KFtcdy1dKylccypcLz8+KD86PFwvXDE+fCkkLyx5PS9eLlteOiNcW1wuLF0qJC87ZnVuY3Rpb24geihhLGIsYyl7aWYobi5pc0Z1bmN0aW9uKGIpKXJldHVybiBuLmdyZXAoYSxmdW5jdGlvbihhLGQpe3JldHVybiEhYi5jYWxsKGEsZCxhKSE9PWN9KTtpZihiLm5vZGVUeXBlKXJldHVybiBuLmdyZXAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYT09PWIhPT1jfSk7aWYoInN0cmluZyI9PXR5cGVvZiBiKXtpZih5LnRlc3QoYikpcmV0dXJuIG4uZmlsdGVyKGIsYSxjKTtiPW4uZmlsdGVyKGIsYSl9cmV0dXJuIG4uZ3JlcChhLGZ1bmN0aW9uKGEpe3JldHVybiBuLmluQXJyYXkoYSxiKT4tMSE9PWN9KX1uLmZpbHRlcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9YlswXTtyZXR1cm4gYyYmKGE9Ijpub3QoIithKyIpIiksMT09PWIubGVuZ3RoJiYxPT09ZC5ub2RlVHlwZT9uLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGQsYSk/W2RdOltdOm4uZmluZC5tYXRjaGVzKGEsbi5ncmVwKGIsZnVuY3Rpb24oYSl7cmV0dXJuIDE9PT1hLm5vZGVUeXBlfSkpfSxuLmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbihhKXt2YXIgYixjPVtdLGQ9dGhpcyxlPWQubGVuZ3RoO2lmKCJzdHJpbmciIT10eXBlb2YgYSlyZXR1cm4gdGhpcy5wdXNoU3RhY2sobihhKS5maWx0ZXIoZnVuY3Rpb24oKXtmb3IoYj0wO2U+YjtiKyspaWYobi5jb250YWlucyhkW2JdLHRoaXMpKXJldHVybiEwfSkpO2ZvcihiPTA7ZT5iO2IrKyluLmZpbmQoYSxkW2JdLGMpO3JldHVybiBjPXRoaXMucHVzaFN0YWNrKGU+MT9uLnVuaXF1ZShjKTpjKSxjLnNlbGVjdG9yPXRoaXMuc2VsZWN0b3I/dGhpcy5zZWxlY3RvcisiICIrYTphLGN9LGZpbHRlcjpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soeih0aGlzLGF8fFtdLCExKSl9LG5vdDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soeih0aGlzLGF8fFtdLCEwKSl9LGlzOmZ1bmN0aW9uKGEpe3JldHVybiEheih0aGlzLCJzdHJpbmciPT10eXBlb2YgYSYmdy50ZXN0KGEpP24oYSk6YXx8W10sITEpLmxlbmd0aH19KTt2YXIgQSxCPS9eKD86XHMqKDxbXHdcV10rPilbXj5dKnwjKFtcdy1dKikpJC8sQz1uLmZuLmluaXQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBlLGY7aWYoIWEpcmV0dXJuIHRoaXM7aWYoYz1jfHxBLCJzdHJpbmciPT10eXBlb2YgYSl7aWYoZT0iPCI9PT1hLmNoYXJBdCgwKSYmIj4iPT09YS5jaGFyQXQoYS5sZW5ndGgtMSkmJmEubGVuZ3RoPj0zP1tudWxsLGEsbnVsbF06Qi5leGVjKGEpLCFlfHwhZVsxXSYmYilyZXR1cm4hYnx8Yi5qcXVlcnk/KGJ8fGMpLmZpbmQoYSk6dGhpcy5jb25zdHJ1Y3RvcihiKS5maW5kKGEpO2lmKGVbMV0pe2lmKGI9YiBpbnN0YW5jZW9mIG4/YlswXTpiLG4ubWVyZ2UodGhpcyxuLnBhcnNlSFRNTChlWzFdLGImJmIubm9kZVR5cGU/Yi5vd25lckRvY3VtZW50fHxiOmQsITApKSx4LnRlc3QoZVsxXSkmJm4uaXNQbGFpbk9iamVjdChiKSlmb3IoZSBpbiBiKW4uaXNGdW5jdGlvbih0aGlzW2VdKT90aGlzW2VdKGJbZV0pOnRoaXMuYXR0cihlLGJbZV0pO3JldHVybiB0aGlzfWlmKGY9ZC5nZXRFbGVtZW50QnlJZChlWzJdKSxmJiZmLnBhcmVudE5vZGUpe2lmKGYuaWQhPT1lWzJdKXJldHVybiBBLmZpbmQoYSk7dGhpcy5sZW5ndGg9MSx0aGlzWzBdPWZ9cmV0dXJuIHRoaXMuY29udGV4dD1kLHRoaXMuc2VsZWN0b3I9YSx0aGlzfXJldHVybiBhLm5vZGVUeXBlPyh0aGlzLmNvbnRleHQ9dGhpc1swXT1hLHRoaXMubGVuZ3RoPTEsdGhpcyk6bi5pc0Z1bmN0aW9uKGEpPyJ1bmRlZmluZWQiIT10eXBlb2YgYy5yZWFkeT9jLnJlYWR5KGEpOmEobik6KHZvaWQgMCE9PWEuc2VsZWN0b3ImJih0aGlzLnNlbGVjdG9yPWEuc2VsZWN0b3IsdGhpcy5jb250ZXh0PWEuY29udGV4dCksbi5tYWtlQXJyYXkoYSx0aGlzKSl9O0MucHJvdG90eXBlPW4uZm4sQT1uKGQpO3ZhciBEPS9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLEU9e2NoaWxkcmVuOiEwLGNvbnRlbnRzOiEwLG5leHQ6ITAscHJldjohMH07bi5mbi5leHRlbmQoe2hhczpmdW5jdGlvbihhKXt2YXIgYixjPW4oYSx0aGlzKSxkPWMubGVuZ3RoO3JldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpe2ZvcihiPTA7ZD5iO2IrKylpZihuLmNvbnRhaW5zKHRoaXMsY1tiXSkpcmV0dXJuITB9KX0sY2xvc2VzdDpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYyxkPTAsZT10aGlzLmxlbmd0aCxmPVtdLGc9dy50ZXN0KGEpfHwic3RyaW5nIiE9dHlwZW9mIGE/bihhLGJ8fHRoaXMuY29udGV4dCk6MDtlPmQ7ZCsrKWZvcihjPXRoaXNbZF07YyYmYyE9PWI7Yz1jLnBhcmVudE5vZGUpaWYoYy5ub2RlVHlwZTwxMSYmKGc/Zy5pbmRleChjKT4tMToxPT09Yy5ub2RlVHlwZSYmbi5maW5kLm1hdGNoZXNTZWxlY3RvcihjLGEpKSl7Zi5wdXNoKGMpO2JyZWFrfXJldHVybiB0aGlzLnB1c2hTdGFjayhmLmxlbmd0aD4xP24udW5pcXVlU29ydChmKTpmKX0saW5kZXg6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/InN0cmluZyI9PXR5cGVvZiBhP24uaW5BcnJheSh0aGlzWzBdLG4oYSkpOm4uaW5BcnJheShhLmpxdWVyeT9hWzBdOmEsdGhpcyk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2sobi51bmlxdWVTb3J0KG4ubWVyZ2UodGhpcy5nZXQoKSxuKGEsYikpKSl9LGFkZEJhY2s6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYWRkKG51bGw9PWE/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIoYSkpfX0pO2Z1bmN0aW9uIEYoYSxiKXtkbyBhPWFbYl07d2hpbGUoYSYmMSE9PWEubm9kZVR5cGUpO3JldHVybiBhfW4uZWFjaCh7cGFyZW50OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmMTEhPT1iLm5vZGVUeXBlP2I6bnVsbH0scGFyZW50czpmdW5jdGlvbihhKXtyZXR1cm4gdShhLCJwYXJlbnROb2RlIil9LHBhcmVudHNVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHUoYSwicGFyZW50Tm9kZSIsYyl9LG5leHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIEYoYSwibmV4dFNpYmxpbmciKX0scHJldjpmdW5jdGlvbihhKXtyZXR1cm4gRihhLCJwcmV2aW91c1NpYmxpbmciKX0sbmV4dEFsbDpmdW5jdGlvbihhKXtyZXR1cm4gdShhLCJuZXh0U2libGluZyIpfSxwcmV2QWxsOmZ1bmN0aW9uKGEpe3JldHVybiB1KGEsInByZXZpb3VzU2libGluZyIpfSxuZXh0VW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB1KGEsIm5leHRTaWJsaW5nIixjKX0scHJldlVudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdShhLCJwcmV2aW91c1NpYmxpbmciLGMpfSxzaWJsaW5nczpmdW5jdGlvbihhKXtyZXR1cm4gdigoYS5wYXJlbnROb2RlfHx7fSkuZmlyc3RDaGlsZCxhKX0sY2hpbGRyZW46ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYS5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIG4ubm9kZU5hbWUoYSwiaWZyYW1lIik/YS5jb250ZW50RG9jdW1lbnR8fGEuY29udGVudFdpbmRvdy5kb2N1bWVudDpuLm1lcmdlKFtdLGEuY2hpbGROb2Rlcyl9fSxmdW5jdGlvbihhLGIpe24uZm5bYV09ZnVuY3Rpb24oYyxkKXt2YXIgZT1uLm1hcCh0aGlzLGIsYyk7cmV0dXJuIlVudGlsIiE9PWEuc2xpY2UoLTUpJiYoZD1jKSxkJiYic3RyaW5nIj09dHlwZW9mIGQmJihlPW4uZmlsdGVyKGQsZSkpLHRoaXMubGVuZ3RoPjEmJihFW2FdfHwoZT1uLnVuaXF1ZVNvcnQoZSkpLEQudGVzdChhKSYmKGU9ZS5yZXZlcnNlKCkpKSx0aGlzLnB1c2hTdGFjayhlKX19KTt2YXIgRz0vXFMrL2c7ZnVuY3Rpb24gSChhKXt2YXIgYj17fTtyZXR1cm4gbi5lYWNoKGEubWF0Y2goRyl8fFtdLGZ1bmN0aW9uKGEsYyl7YltjXT0hMH0pLGJ9bi5DYWxsYmFja3M9ZnVuY3Rpb24oYSl7YT0ic3RyaW5nIj09dHlwZW9mIGE/SChhKTpuLmV4dGVuZCh7fSxhKTt2YXIgYixjLGQsZSxmPVtdLGc9W10saD0tMSxpPWZ1bmN0aW9uKCl7Zm9yKGU9YS5vbmNlLGQ9Yj0hMDtnLmxlbmd0aDtoPS0xKXtjPWcuc2hpZnQoKTt3aGlsZSgrK2g8Zi5sZW5ndGgpZltoXS5hcHBseShjWzBdLGNbMV0pPT09ITEmJmEuc3RvcE9uRmFsc2UmJihoPWYubGVuZ3RoLGM9ITEpfWEubWVtb3J5fHwoYz0hMSksYj0hMSxlJiYoZj1jP1tdOiIiKX0saj17YWRkOmZ1bmN0aW9uKCl7cmV0dXJuIGYmJihjJiYhYiYmKGg9Zi5sZW5ndGgtMSxnLnB1c2goYykpLGZ1bmN0aW9uIGQoYil7bi5lYWNoKGIsZnVuY3Rpb24oYixjKXtuLmlzRnVuY3Rpb24oYyk/YS51bmlxdWUmJmouaGFzKGMpfHxmLnB1c2goYyk6YyYmYy5sZW5ndGgmJiJzdHJpbmciIT09bi50eXBlKGMpJiZkKGMpfSl9KGFyZ3VtZW50cyksYyYmIWImJmkoKSksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIG4uZWFjaChhcmd1bWVudHMsZnVuY3Rpb24oYSxiKXt2YXIgYzt3aGlsZSgoYz1uLmluQXJyYXkoYixmLGMpKT4tMSlmLnNwbGljZShjLDEpLGg+PWMmJmgtLX0pLHRoaXN9LGhhczpmdW5jdGlvbihhKXtyZXR1cm4gYT9uLmluQXJyYXkoYSxmKT4tMTpmLmxlbmd0aD4wfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBmJiYoZj1bXSksdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBlPWc9W10sZj1jPSIiLHRoaXN9LGRpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIWZ9LGxvY2s6ZnVuY3Rpb24oKXtyZXR1cm4gZT0hMCxjfHxqLmRpc2FibGUoKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWV9LGZpcmVXaXRoOmZ1bmN0aW9uKGEsYyl7cmV0dXJuIGV8fChjPWN8fFtdLGM9W2EsYy5zbGljZT9jLnNsaWNlKCk6Y10sZy5wdXNoKGMpLGJ8fGkoKSksdGhpc30sZmlyZTpmdW5jdGlvbigpe3JldHVybiBqLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKSx0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhZH19O3JldHVybiBqfSxuLmV4dGVuZCh7RGVmZXJyZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9W1sicmVzb2x2ZSIsImRvbmUiLG4uQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLCJyZXNvbHZlZCJdLFsicmVqZWN0IiwiZmFpbCIsbi5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlamVjdGVkIl0sWyJub3RpZnkiLCJwcm9ncmVzcyIsbi5DYWxsYmFja3MoIm1lbW9yeSIpXV0sYz0icGVuZGluZyIsZD17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gY30sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGUuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSx0aGVuOmZ1bmN0aW9uKCl7dmFyIGE9YXJndW1lbnRzO3JldHVybiBuLkRlZmVycmVkKGZ1bmN0aW9uKGMpe24uZWFjaChiLGZ1bmN0aW9uKGIsZil7dmFyIGc9bi5pc0Z1bmN0aW9uKGFbYl0pJiZhW2JdO2VbZlsxXV0oZnVuY3Rpb24oKXt2YXIgYT1nJiZnLmFwcGx5KHRoaXMsYXJndW1lbnRzKTthJiZuLmlzRnVuY3Rpb24oYS5wcm9taXNlKT9hLnByb21pc2UoKS5wcm9ncmVzcyhjLm5vdGlmeSkuZG9uZShjLnJlc29sdmUpLmZhaWwoYy5yZWplY3QpOmNbZlswXSsiV2l0aCJdKHRoaXM9PT1kP2MucHJvbWlzZSgpOnRoaXMsZz9bYV06YXJndW1lbnRzKX0pfSksYT1udWxsfSkucHJvbWlzZSgpfSxwcm9taXNlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT1hP24uZXh0ZW5kKGEsZCk6ZH19LGU9e307cmV0dXJuIGQucGlwZT1kLnRoZW4sbi5lYWNoKGIsZnVuY3Rpb24oYSxmKXt2YXIgZz1mWzJdLGg9ZlszXTtkW2ZbMV1dPWcuYWRkLGgmJmcuYWRkKGZ1bmN0aW9uKCl7Yz1ofSxiWzFeYV1bMl0uZGlzYWJsZSxiWzJdWzJdLmxvY2spLGVbZlswXV09ZnVuY3Rpb24oKXtyZXR1cm4gZVtmWzBdKyJXaXRoIl0odGhpcz09PWU/ZDp0aGlzLGFyZ3VtZW50cyksdGhpc30sZVtmWzBdKyJXaXRoIl09Zy5maXJlV2l0aH0pLGQucHJvbWlzZShlKSxhJiZhLmNhbGwoZSxlKSxlfSx3aGVuOmZ1bmN0aW9uKGEpe3ZhciBiPTAsYz1lLmNhbGwoYXJndW1lbnRzKSxkPWMubGVuZ3RoLGY9MSE9PWR8fGEmJm4uaXNGdW5jdGlvbihhLnByb21pc2UpP2Q6MCxnPTE9PT1mP2E6bi5EZWZlcnJlZCgpLGg9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmdW5jdGlvbihkKXtiW2FdPXRoaXMsY1thXT1hcmd1bWVudHMubGVuZ3RoPjE/ZS5jYWxsKGFyZ3VtZW50cyk6ZCxjPT09aT9nLm5vdGlmeVdpdGgoYixjKTotLWZ8fGcucmVzb2x2ZVdpdGgoYixjKX19LGksaixrO2lmKGQ+MSlmb3IoaT1uZXcgQXJyYXkoZCksaj1uZXcgQXJyYXkoZCksaz1uZXcgQXJyYXkoZCk7ZD5iO2IrKyljW2JdJiZuLmlzRnVuY3Rpb24oY1tiXS5wcm9taXNlKT9jW2JdLnByb21pc2UoKS5wcm9ncmVzcyhoKGIsaixpKSkuZG9uZShoKGIsayxjKSkuZmFpbChnLnJlamVjdCk6LS1mO3JldHVybiBmfHxnLnJlc29sdmVXaXRoKGssYyksZy5wcm9taXNlKCl9fSk7dmFyIEk7bi5mbi5yZWFkeT1mdW5jdGlvbihhKXtyZXR1cm4gbi5yZWFkeS5wcm9taXNlKCkuZG9uZShhKSx0aGlzfSxuLmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxob2xkUmVhZHk6ZnVuY3Rpb24oYSl7YT9uLnJlYWR5V2FpdCsrOm4ucmVhZHkoITApfSxyZWFkeTpmdW5jdGlvbihhKXsoYT09PSEwPy0tbi5yZWFkeVdhaXQ6bi5pc1JlYWR5KXx8KG4uaXNSZWFkeT0hMCxhIT09ITAmJi0tbi5yZWFkeVdhaXQ+MHx8KEkucmVzb2x2ZVdpdGgoZCxbbl0pLG4uZm4udHJpZ2dlckhhbmRsZXImJihuKGQpLnRyaWdnZXJIYW5kbGVyKCJyZWFkeSIpLG4oZCkub2ZmKCJyZWFkeSIpKSkpfX0pO2Z1bmN0aW9uIEooKXtkLmFkZEV2ZW50TGlzdGVuZXI/KGQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsSyksYS5yZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIixLKSk6KGQuZGV0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsSyksYS5kZXRhY2hFdmVudCgib25sb2FkIixLKSl9ZnVuY3Rpb24gSygpeyhkLmFkZEV2ZW50TGlzdGVuZXJ8fCJsb2FkIj09PWEuZXZlbnQudHlwZXx8ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSkmJihKKCksbi5yZWFkeSgpKX1uLnJlYWR5LnByb21pc2U9ZnVuY3Rpb24oYil7aWYoIUkpaWYoST1uLkRlZmVycmVkKCksImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZXx8ImxvYWRpbmciIT09ZC5yZWFkeVN0YXRlJiYhZC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwpYS5zZXRUaW1lb3V0KG4ucmVhZHkpO2Vsc2UgaWYoZC5hZGRFdmVudExpc3RlbmVyKWQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsSyksYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixLKTtlbHNle2QuYXR0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsSyksYS5hdHRhY2hFdmVudCgib25sb2FkIixLKTt2YXIgYz0hMTt0cnl7Yz1udWxsPT1hLmZyYW1lRWxlbWVudCYmZC5kb2N1bWVudEVsZW1lbnR9Y2F0Y2goZSl7fWMmJmMuZG9TY3JvbGwmJiFmdW5jdGlvbiBmKCl7aWYoIW4uaXNSZWFkeSl7dHJ5e2MuZG9TY3JvbGwoImxlZnQiKX1jYXRjaChiKXtyZXR1cm4gYS5zZXRUaW1lb3V0KGYsNTApfUooKSxuLnJlYWR5KCl9fSgpfXJldHVybiBJLnByb21pc2UoYil9LG4ucmVhZHkucHJvbWlzZSgpO3ZhciBMO2ZvcihMIGluIG4obCkpYnJlYWs7bC5vd25GaXJzdD0iMCI9PT1MLGwuaW5saW5lQmxvY2tOZWVkc0xheW91dD0hMSxuKGZ1bmN0aW9uKCl7dmFyIGEsYixjLGU7Yz1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0sYyYmYy5zdHlsZSYmKGI9ZC5jcmVhdGVFbGVtZW50KCJkaXYiKSxlPWQuY3JlYXRlRWxlbWVudCgiZGl2IiksZS5zdHlsZS5jc3NUZXh0PSJwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXI6MDt3aWR0aDowO2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweCIsYy5hcHBlbmRDaGlsZChlKS5hcHBlbmRDaGlsZChiKSwidW5kZWZpbmVkIiE9dHlwZW9mIGIuc3R5bGUuem9vbSYmKGIuc3R5bGUuY3NzVGV4dD0iZGlzcGxheTppbmxpbmU7bWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzoxcHg7d2lkdGg6MXB4O3pvb206MSIsbC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0PWE9Mz09PWIub2Zmc2V0V2lkdGgsYSYmKGMuc3R5bGUuem9vbT0xKSksYy5yZW1vdmVDaGlsZChlKSl9KSxmdW5jdGlvbigpe3ZhciBhPWQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bC5kZWxldGVFeHBhbmRvPSEwO3RyeXtkZWxldGUgYS50ZXN0fWNhdGNoKGIpe2wuZGVsZXRlRXhwYW5kbz0hMX1hPW51bGx9KCk7dmFyIE09ZnVuY3Rpb24oYSl7dmFyIGI9bi5ub0RhdGFbKGEubm9kZU5hbWUrIiAiKS50b0xvd2VyQ2FzZSgpXSxjPSthLm5vZGVUeXBlfHwxO3JldHVybiAxIT09YyYmOSE9PWM/ITE6IWJ8fGIhPT0hMCYmYS5nZXRBdHRyaWJ1dGUoImNsYXNzaWQiKT09PWJ9LE49L14oPzpce1tcd1xXXSpcfXxcW1tcd1xXXSpcXSkkLyxPPS8oW0EtWl0pL2c7ZnVuY3Rpb24gUChhLGIsYyl7aWYodm9pZCAwPT09YyYmMT09PWEubm9kZVR5cGUpe3ZhciBkPSJkYXRhLSIrYi5yZXBsYWNlKE8sIi0kMSIpLnRvTG93ZXJDYXNlKCk7aWYoYz1hLmdldEF0dHJpYnV0ZShkKSwic3RyaW5nIj09dHlwZW9mIGMpe3RyeXtjPSJ0cnVlIj09PWM/ITA6ImZhbHNlIj09PWM/ITE6Im51bGwiPT09Yz9udWxsOitjKyIiPT09Yz8rYzpOLnRlc3QoYyk/bi5wYXJzZUpTT04oYyk6Y31jYXRjaChlKXt9bi5kYXRhKGEsYixjKX1lbHNlIGM9dm9pZCAwOwp9cmV0dXJuIGN9ZnVuY3Rpb24gUShhKXt2YXIgYjtmb3IoYiBpbiBhKWlmKCgiZGF0YSIhPT1ifHwhbi5pc0VtcHR5T2JqZWN0KGFbYl0pKSYmInRvSlNPTiIhPT1iKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIFIoYSxiLGQsZSl7aWYoTShhKSl7dmFyIGYsZyxoPW4uZXhwYW5kbyxpPWEubm9kZVR5cGUsaj1pP24uY2FjaGU6YSxrPWk/YVtoXTphW2hdJiZoO2lmKGsmJmpba10mJihlfHxqW2tdLmRhdGEpfHx2b2lkIDAhPT1kfHwic3RyaW5nIiE9dHlwZW9mIGIpcmV0dXJuIGt8fChrPWk/YVtoXT1jLnBvcCgpfHxuLmd1aWQrKzpoKSxqW2tdfHwoaltrXT1pP3t9Ont0b0pTT046bi5ub29wfSksIm9iamVjdCIhPXR5cGVvZiBiJiYiZnVuY3Rpb24iIT10eXBlb2YgYnx8KGU/altrXT1uLmV4dGVuZChqW2tdLGIpOmpba10uZGF0YT1uLmV4dGVuZChqW2tdLmRhdGEsYikpLGc9altrXSxlfHwoZy5kYXRhfHwoZy5kYXRhPXt9KSxnPWcuZGF0YSksdm9pZCAwIT09ZCYmKGdbbi5jYW1lbENhc2UoYildPWQpLCJzdHJpbmciPT10eXBlb2YgYj8oZj1nW2JdLG51bGw9PWYmJihmPWdbbi5jYW1lbENhc2UoYildKSk6Zj1nLGZ9fWZ1bmN0aW9uIFMoYSxiLGMpe2lmKE0oYSkpe3ZhciBkLGUsZj1hLm5vZGVUeXBlLGc9Zj9uLmNhY2hlOmEsaD1mP2Fbbi5leHBhbmRvXTpuLmV4cGFuZG87aWYoZ1toXSl7aWYoYiYmKGQ9Yz9nW2hdOmdbaF0uZGF0YSkpe24uaXNBcnJheShiKT9iPWIuY29uY2F0KG4ubWFwKGIsbi5jYW1lbENhc2UpKTpiIGluIGQ/Yj1bYl06KGI9bi5jYW1lbENhc2UoYiksYj1iIGluIGQ/W2JdOmIuc3BsaXQoIiAiKSksZT1iLmxlbmd0aDt3aGlsZShlLS0pZGVsZXRlIGRbYltlXV07aWYoYz8hUShkKTohbi5pc0VtcHR5T2JqZWN0KGQpKXJldHVybn0oY3x8KGRlbGV0ZSBnW2hdLmRhdGEsUShnW2hdKSkpJiYoZj9uLmNsZWFuRGF0YShbYV0sITApOmwuZGVsZXRlRXhwYW5kb3x8ZyE9Zy53aW5kb3c/ZGVsZXRlIGdbaF06Z1toXT12b2lkIDApfX19bi5leHRlbmQoe2NhY2hlOnt9LG5vRGF0YTp7ImFwcGxldCAiOiEwLCJlbWJlZCAiOiEwLCJvYmplY3QgIjoiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwIn0saGFzRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gYT1hLm5vZGVUeXBlP24uY2FjaGVbYVtuLmV4cGFuZG9dXTphW24uZXhwYW5kb10sISFhJiYhUShhKX0sZGF0YTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFIoYSxiLGMpfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoYSxiKX0sX2RhdGE6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBSKGEsYixjLCEwKX0sX3JlbW92ZURhdGE6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUyhhLGIsITApfX0pLG4uZm4uZXh0ZW5kKHtkYXRhOmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGY9dGhpc1swXSxnPWYmJmYuYXR0cmlidXRlcztpZih2b2lkIDA9PT1hKXtpZih0aGlzLmxlbmd0aCYmKGU9bi5kYXRhKGYpLDE9PT1mLm5vZGVUeXBlJiYhbi5fZGF0YShmLCJwYXJzZWRBdHRycyIpKSl7Yz1nLmxlbmd0aDt3aGlsZShjLS0pZ1tjXSYmKGQ9Z1tjXS5uYW1lLDA9PT1kLmluZGV4T2YoImRhdGEtIikmJihkPW4uY2FtZWxDYXNlKGQuc2xpY2UoNSkpLFAoZixkLGVbZF0pKSk7bi5fZGF0YShmLCJwYXJzZWRBdHRycyIsITApfXJldHVybiBlfXJldHVybiJvYmplY3QiPT10eXBlb2YgYT90aGlzLmVhY2goZnVuY3Rpb24oKXtuLmRhdGEodGhpcyxhKX0pOmFyZ3VtZW50cy5sZW5ndGg+MT90aGlzLmVhY2goZnVuY3Rpb24oKXtuLmRhdGEodGhpcyxhLGIpfSk6Zj9QKGYsYSxuLmRhdGEoZixhKSk6dm9pZCAwfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtuLnJlbW92ZURhdGEodGhpcyxhKX0pfX0pLG4uZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7cmV0dXJuIGE/KGI9KGJ8fCJmeCIpKyJxdWV1ZSIsZD1uLl9kYXRhKGEsYiksYyYmKCFkfHxuLmlzQXJyYXkoYyk/ZD1uLl9kYXRhKGEsYixuLm1ha2VBcnJheShjKSk6ZC5wdXNoKGMpKSxkfHxbXSk6dm9pZCAwfSxkZXF1ZXVlOmZ1bmN0aW9uKGEsYil7Yj1ifHwiZngiO3ZhciBjPW4ucXVldWUoYSxiKSxkPWMubGVuZ3RoLGU9Yy5zaGlmdCgpLGY9bi5fcXVldWVIb29rcyhhLGIpLGc9ZnVuY3Rpb24oKXtuLmRlcXVldWUoYSxiKX07ImlucHJvZ3Jlc3MiPT09ZSYmKGU9Yy5zaGlmdCgpLGQtLSksZSYmKCJmeCI9PT1iJiZjLnVuc2hpZnQoImlucHJvZ3Jlc3MiKSxkZWxldGUgZi5zdG9wLGUuY2FsbChhLGcsZikpLCFkJiZmJiZmLmVtcHR5LmZpcmUoKX0sX3F1ZXVlSG9va3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iKyJxdWV1ZUhvb2tzIjtyZXR1cm4gbi5fZGF0YShhLGMpfHxuLl9kYXRhKGEsYyx7ZW1wdHk6bi5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IikuYWRkKGZ1bmN0aW9uKCl7bi5fcmVtb3ZlRGF0YShhLGIrInF1ZXVlIiksbi5fcmVtb3ZlRGF0YShhLGMpfSl9KX19KSxuLmZuLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz0yO3JldHVybiJzdHJpbmciIT10eXBlb2YgYSYmKGI9YSxhPSJmeCIsYy0tKSxhcmd1bWVudHMubGVuZ3RoPGM/bi5xdWV1ZSh0aGlzWzBdLGEpOnZvaWQgMD09PWI/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1uLnF1ZXVlKHRoaXMsYSxiKTtuLl9xdWV1ZUhvb2tzKHRoaXMsYSksImZ4Ij09PWEmJiJpbnByb2dyZXNzIiE9PWNbMF0mJm4uZGVxdWV1ZSh0aGlzLGEpfSl9LGRlcXVldWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe24uZGVxdWV1ZSh0aGlzLGEpfSl9LGNsZWFyUXVldWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucXVldWUoYXx8ImZ4IixbXSl9LHByb21pc2U6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTEsZT1uLkRlZmVycmVkKCksZj10aGlzLGc9dGhpcy5sZW5ndGgsaD1mdW5jdGlvbigpey0tZHx8ZS5yZXNvbHZlV2l0aChmLFtmXSl9OyJzdHJpbmciIT10eXBlb2YgYSYmKGI9YSxhPXZvaWQgMCksYT1hfHwiZngiO3doaWxlKGctLSljPW4uX2RhdGEoZltnXSxhKyJxdWV1ZUhvb2tzIiksYyYmYy5lbXB0eSYmKGQrKyxjLmVtcHR5LmFkZChoKSk7cmV0dXJuIGgoKSxlLnByb21pc2UoYil9fSksZnVuY3Rpb24oKXt2YXIgYTtsLnNocmlua1dyYXBCbG9ja3M9ZnVuY3Rpb24oKXtpZihudWxsIT1hKXJldHVybiBhO2E9ITE7dmFyIGIsYyxlO3JldHVybiBjPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXSxjJiZjLnN0eWxlPyhiPWQuY3JlYXRlRWxlbWVudCgiZGl2IiksZT1kLmNyZWF0ZUVsZW1lbnQoImRpdiIpLGUuc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHgiLGMuYXBwZW5kQ2hpbGQoZSkuYXBwZW5kQ2hpbGQoYiksInVuZGVmaW5lZCIhPXR5cGVvZiBiLnN0eWxlLnpvb20mJihiLnN0eWxlLmNzc1RleHQ9Ii13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDstbW96LWJveC1zaXppbmc6Y29udGVudC1ib3g7Ym94LXNpemluZzpjb250ZW50LWJveDtkaXNwbGF5OmJsb2NrO21hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MXB4O3dpZHRoOjFweDt6b29tOjEiLGIuYXBwZW5kQ2hpbGQoZC5jcmVhdGVFbGVtZW50KCJkaXYiKSkuc3R5bGUud2lkdGg9IjVweCIsYT0zIT09Yi5vZmZzZXRXaWR0aCksYy5yZW1vdmVDaGlsZChlKSxhKTp2b2lkIDB9fSgpO3ZhciBUPS9bKy1dPyg/OlxkKlwufClcZCsoPzpbZUVdWystXT9cZCt8KS8uc291cmNlLFU9bmV3IFJlZ0V4cCgiXig/OihbKy1dKT18KSgiK1QrIikoW2EteiVdKikkIiwiaSIpLFY9WyJUb3AiLCJSaWdodCIsIkJvdHRvbSIsIkxlZnQiXSxXPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9Ynx8YSwibm9uZSI9PT1uLmNzcyhhLCJkaXNwbGF5Iil8fCFuLmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKX07ZnVuY3Rpb24gWChhLGIsYyxkKXt2YXIgZSxmPTEsZz0yMCxoPWQ/ZnVuY3Rpb24oKXtyZXR1cm4gZC5jdXIoKX06ZnVuY3Rpb24oKXtyZXR1cm4gbi5jc3MoYSxiLCIiKX0saT1oKCksaj1jJiZjWzNdfHwobi5jc3NOdW1iZXJbYl0/IiI6InB4Iiksaz0obi5jc3NOdW1iZXJbYl18fCJweCIhPT1qJiYraSkmJlUuZXhlYyhuLmNzcyhhLGIpKTtpZihrJiZrWzNdIT09ail7aj1qfHxrWzNdLGM9Y3x8W10saz0raXx8MTtkbyBmPWZ8fCIuNSIsay89ZixuLnN0eWxlKGEsYixrK2opO3doaWxlKGYhPT0oZj1oKCkvaSkmJjEhPT1mJiYtLWcpfXJldHVybiBjJiYoaz0ra3x8K2l8fDAsZT1jWzFdP2srKGNbMV0rMSkqY1syXTorY1syXSxkJiYoZC51bml0PWosZC5zdGFydD1rLGQuZW5kPWUpKSxlfXZhciBZPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe3ZhciBoPTAsaT1hLmxlbmd0aCxqPW51bGw9PWM7aWYoIm9iamVjdCI9PT1uLnR5cGUoYykpe2U9ITA7Zm9yKGggaW4gYylZKGEsYixoLGNbaF0sITAsZixnKX1lbHNlIGlmKHZvaWQgMCE9PWQmJihlPSEwLG4uaXNGdW5jdGlvbihkKXx8KGc9ITApLGomJihnPyhiLmNhbGwoYSxkKSxiPW51bGwpOihqPWIsYj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGouY2FsbChuKGEpLGMpfSkpLGIpKWZvcig7aT5oO2grKyliKGFbaF0sYyxnP2Q6ZC5jYWxsKGFbaF0saCxiKGFbaF0sYykpKTtyZXR1cm4gZT9hOmo/Yi5jYWxsKGEpOmk/YihhWzBdLGMpOmZ9LFo9L14oPzpjaGVja2JveHxyYWRpbykkL2ksJD0vPChbXHc6LV0rKS8sXz0vXiR8XC8oPzpqYXZhfGVjbWEpc2NyaXB0L2ksYWE9L15ccysvLGJhPSJhYmJyfGFydGljbGV8YXNpZGV8YXVkaW98YmRpfGNhbnZhc3xkYXRhfGRhdGFsaXN0fGRldGFpbHN8ZGlhbG9nfGZpZ2NhcHRpb258ZmlndXJlfGZvb3RlcnxoZWFkZXJ8aGdyb3VwfG1haW58bWFya3xtZXRlcnxuYXZ8b3V0cHV0fHBpY3R1cmV8cHJvZ3Jlc3N8c2VjdGlvbnxzdW1tYXJ5fHRlbXBsYXRlfHRpbWV8dmlkZW8iO2Z1bmN0aW9uIGNhKGEpe3ZhciBiPWJhLnNwbGl0KCJ8IiksYz1hLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihjLmNyZWF0ZUVsZW1lbnQpd2hpbGUoYi5sZW5ndGgpYy5jcmVhdGVFbGVtZW50KGIucG9wKCkpO3JldHVybiBjfSFmdW5jdGlvbigpe3ZhciBhPWQuY3JlYXRlRWxlbWVudCgiZGl2IiksYj1kLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxjPWQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTthLmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IixsLmxlYWRpbmdXaGl0ZXNwYWNlPTM9PT1hLmZpcnN0Q2hpbGQubm9kZVR5cGUsbC50Ym9keT0hYS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJvZHkiKS5sZW5ndGgsbC5odG1sU2VyaWFsaXplPSEhYS5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGluayIpLmxlbmd0aCxsLmh0bWw1Q2xvbmU9Ijw6bmF2PjwvOm5hdj4iIT09ZC5jcmVhdGVFbGVtZW50KCJuYXYiKS5jbG9uZU5vZGUoITApLm91dGVySFRNTCxjLnR5cGU9ImNoZWNrYm94IixjLmNoZWNrZWQ9ITAsYi5hcHBlbmRDaGlsZChjKSxsLmFwcGVuZENoZWNrZWQ9Yy5jaGVja2VkLGEuaW5uZXJIVE1MPSI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+IixsLm5vQ2xvbmVDaGVja2VkPSEhYS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWUsYi5hcHBlbmRDaGlsZChhKSxjPWQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxjLnNldEF0dHJpYnV0ZSgidHlwZSIsInJhZGlvIiksYy5zZXRBdHRyaWJ1dGUoImNoZWNrZWQiLCJjaGVja2VkIiksYy5zZXRBdHRyaWJ1dGUoIm5hbWUiLCJ0IiksYS5hcHBlbmRDaGlsZChjKSxsLmNoZWNrQ2xvbmU9YS5jbG9uZU5vZGUoITApLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmNoZWNrZWQsbC5ub0Nsb25lRXZlbnQ9ISFhLmFkZEV2ZW50TGlzdGVuZXIsYVtuLmV4cGFuZG9dPTEsbC5hdHRyaWJ1dGVzPSFhLmdldEF0dHJpYnV0ZShuLmV4cGFuZG8pfSgpO3ZhciBkYT17b3B0aW9uOlsxLCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+IiwiPC9zZWxlY3Q+Il0sbGVnZW5kOlsxLCI8ZmllbGRzZXQ+IiwiPC9maWVsZHNldD4iXSxhcmVhOlsxLCI8bWFwPiIsIjwvbWFwPiJdLHBhcmFtOlsxLCI8b2JqZWN0PiIsIjwvb2JqZWN0PiJdLHRoZWFkOlsxLCI8dGFibGU+IiwiPC90YWJsZT4iXSx0cjpbMiwiPHRhYmxlPjx0Ym9keT4iLCI8L3Rib2R5PjwvdGFibGU+Il0sY29sOlsyLCI8dGFibGU+PHRib2R5PjwvdGJvZHk+PGNvbGdyb3VwPiIsIjwvY29sZ3JvdXA+PC90YWJsZT4iXSx0ZDpbMywiPHRhYmxlPjx0Ym9keT48dHI+IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il0sX2RlZmF1bHQ6bC5odG1sU2VyaWFsaXplP1swLCIiLCIiXTpbMSwiWDxkaXY+IiwiPC9kaXY+Il19O2RhLm9wdGdyb3VwPWRhLm9wdGlvbixkYS50Ym9keT1kYS50Zm9vdD1kYS5jb2xncm91cD1kYS5jYXB0aW9uPWRhLnRoZWFkLGRhLnRoPWRhLnRkO2Z1bmN0aW9uIGVhKGEsYil7dmFyIGMsZCxlPTAsZj0idW5kZWZpbmVkIiE9dHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWU/YS5nZXRFbGVtZW50c0J5VGFnTmFtZShifHwiKiIpOiJ1bmRlZmluZWQiIT10eXBlb2YgYS5xdWVyeVNlbGVjdG9yQWxsP2EucXVlcnlTZWxlY3RvckFsbChifHwiKiIpOnZvaWQgMDtpZighZilmb3IoZj1bXSxjPWEuY2hpbGROb2Rlc3x8YTtudWxsIT0oZD1jW2VdKTtlKyspIWJ8fG4ubm9kZU5hbWUoZCxiKT9mLnB1c2goZCk6bi5tZXJnZShmLGVhKGQsYikpO3JldHVybiB2b2lkIDA9PT1ifHxiJiZuLm5vZGVOYW1lKGEsYik/bi5tZXJnZShbYV0sZik6Zn1mdW5jdGlvbiBmYShhLGIpe2Zvcih2YXIgYyxkPTA7bnVsbCE9KGM9YVtkXSk7ZCsrKW4uX2RhdGEoYywiZ2xvYmFsRXZhbCIsIWJ8fG4uX2RhdGEoYltkXSwiZ2xvYmFsRXZhbCIpKX12YXIgZ2E9Lzx8JiM/XHcrOy8saGE9Lzx0Ym9keS9pO2Z1bmN0aW9uIGlhKGEpe1oudGVzdChhLnR5cGUpJiYoYS5kZWZhdWx0Q2hlY2tlZD1hLmNoZWNrZWQpfWZ1bmN0aW9uIGphKGEsYixjLGQsZSl7Zm9yKHZhciBmLGcsaCxpLGosayxtLG89YS5sZW5ndGgscD1jYShiKSxxPVtdLHI9MDtvPnI7cisrKWlmKGc9YVtyXSxnfHwwPT09ZylpZigib2JqZWN0Ij09PW4udHlwZShnKSluLm1lcmdlKHEsZy5ub2RlVHlwZT9bZ106Zyk7ZWxzZSBpZihnYS50ZXN0KGcpKXtpPWl8fHAuYXBwZW5kQ2hpbGQoYi5jcmVhdGVFbGVtZW50KCJkaXYiKSksaj0oJC5leGVjKGcpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpLG09ZGFbal18fGRhLl9kZWZhdWx0LGkuaW5uZXJIVE1MPW1bMV0rbi5odG1sUHJlZmlsdGVyKGcpK21bMl0sZj1tWzBdO3doaWxlKGYtLSlpPWkubGFzdENoaWxkO2lmKCFsLmxlYWRpbmdXaGl0ZXNwYWNlJiZhYS50ZXN0KGcpJiZxLnB1c2goYi5jcmVhdGVUZXh0Tm9kZShhYS5leGVjKGcpWzBdKSksIWwudGJvZHkpe2c9InRhYmxlIiE9PWp8fGhhLnRlc3QoZyk/Ijx0YWJsZT4iIT09bVsxXXx8aGEudGVzdChnKT8wOmk6aS5maXJzdENoaWxkLGY9ZyYmZy5jaGlsZE5vZGVzLmxlbmd0aDt3aGlsZShmLS0pbi5ub2RlTmFtZShrPWcuY2hpbGROb2Rlc1tmXSwidGJvZHkiKSYmIWsuY2hpbGROb2Rlcy5sZW5ndGgmJmcucmVtb3ZlQ2hpbGQoayl9bi5tZXJnZShxLGkuY2hpbGROb2RlcyksaS50ZXh0Q29udGVudD0iIjt3aGlsZShpLmZpcnN0Q2hpbGQpaS5yZW1vdmVDaGlsZChpLmZpcnN0Q2hpbGQpO2k9cC5sYXN0Q2hpbGR9ZWxzZSBxLnB1c2goYi5jcmVhdGVUZXh0Tm9kZShnKSk7aSYmcC5yZW1vdmVDaGlsZChpKSxsLmFwcGVuZENoZWNrZWR8fG4uZ3JlcChlYShxLCJpbnB1dCIpLGlhKSxyPTA7d2hpbGUoZz1xW3IrK10paWYoZCYmbi5pbkFycmF5KGcsZCk+LTEpZSYmZS5wdXNoKGcpO2Vsc2UgaWYoaD1uLmNvbnRhaW5zKGcub3duZXJEb2N1bWVudCxnKSxpPWVhKHAuYXBwZW5kQ2hpbGQoZyksInNjcmlwdCIpLGgmJmZhKGkpLGMpe2Y9MDt3aGlsZShnPWlbZisrXSlfLnRlc3QoZy50eXBlfHwiIikmJmMucHVzaChnKX1yZXR1cm4gaT1udWxsLHB9IWZ1bmN0aW9uKCl7dmFyIGIsYyxlPWQuY3JlYXRlRWxlbWVudCgiZGl2Iik7Zm9yKGIgaW57c3VibWl0OiEwLGNoYW5nZTohMCxmb2N1c2luOiEwfSljPSJvbiIrYiwobFtiXT1jIGluIGEpfHwoZS5zZXRBdHRyaWJ1dGUoYywidCIpLGxbYl09ZS5hdHRyaWJ1dGVzW2NdLmV4cGFuZG89PT0hMSk7ZT1udWxsfSgpO3ZhciBrYT0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYSkkL2ksbGE9L15rZXkvLG1hPS9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyxuYT0vXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sb2E9L14oW14uXSopKD86XC4oLispfCkvO2Z1bmN0aW9uIHBhKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWEoKXtyZXR1cm4hMX1mdW5jdGlvbiByYSgpe3RyeXtyZXR1cm4gZC5hY3RpdmVFbGVtZW50fWNhdGNoKGEpe319ZnVuY3Rpb24gc2EoYSxiLGMsZCxlLGYpe3ZhciBnLGg7aWYoIm9iamVjdCI9PXR5cGVvZiBiKXsic3RyaW5nIiE9dHlwZW9mIGMmJihkPWR8fGMsYz12b2lkIDApO2ZvcihoIGluIGIpc2EoYSxoLGMsZCxiW2hdLGYpO3JldHVybiBhfWlmKG51bGw9PWQmJm51bGw9PWU/KGU9YyxkPWM9dm9pZCAwKTpudWxsPT1lJiYoInN0cmluZyI9PXR5cGVvZiBjPyhlPWQsZD12b2lkIDApOihlPWQsZD1jLGM9dm9pZCAwKSksZT09PSExKWU9cWE7ZWxzZSBpZighZSlyZXR1cm4gYTtyZXR1cm4gMT09PWYmJihnPWUsZT1mdW5jdGlvbihhKXtyZXR1cm4gbigpLm9mZihhKSxnLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZS5ndWlkPWcuZ3VpZHx8KGcuZ3VpZD1uLmd1aWQrKykpLGEuZWFjaChmdW5jdGlvbigpe24uZXZlbnQuYWRkKHRoaXMsYixlLGQsYyl9KX1uLmV2ZW50PXtnbG9iYWw6e30sYWRkOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZyxoLGksaixrLGwsbSxvLHAscSxyPW4uX2RhdGEoYSk7aWYocil7Yy5oYW5kbGVyJiYoaT1jLGM9aS5oYW5kbGVyLGU9aS5zZWxlY3RvciksYy5ndWlkfHwoYy5ndWlkPW4uZ3VpZCsrKSwoZz1yLmV2ZW50cyl8fChnPXIuZXZlbnRzPXt9KSwoaz1yLmhhbmRsZSl8fChrPXIuaGFuZGxlPWZ1bmN0aW9uKGEpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2Ygbnx8YSYmbi5ldmVudC50cmlnZ2VyZWQ9PT1hLnR5cGU/dm9pZCAwOm4uZXZlbnQuZGlzcGF0Y2guYXBwbHkoay5lbGVtLGFyZ3VtZW50cyl9LGsuZWxlbT1hKSxiPShifHwiIikubWF0Y2goRyl8fFsiIl0saD1iLmxlbmd0aDt3aGlsZShoLS0pZj1vYS5leGVjKGJbaF0pfHxbXSxvPXE9ZlsxXSxwPShmWzJdfHwiIikuc3BsaXQoIi4iKS5zb3J0KCksbyYmKGo9bi5ldmVudC5zcGVjaWFsW29dfHx7fSxvPShlP2ouZGVsZWdhdGVUeXBlOmouYmluZFR5cGUpfHxvLGo9bi5ldmVudC5zcGVjaWFsW29dfHx7fSxsPW4uZXh0ZW5kKHt0eXBlOm8sb3JpZ1R5cGU6cSxkYXRhOmQsaGFuZGxlcjpjLGd1aWQ6Yy5ndWlkLHNlbGVjdG9yOmUsbmVlZHNDb250ZXh0OmUmJm4uZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdChlKSxuYW1lc3BhY2U6cC5qb2luKCIuIil9LGkpLChtPWdbb10pfHwobT1nW29dPVtdLG0uZGVsZWdhdGVDb3VudD0wLGouc2V0dXAmJmouc2V0dXAuY2FsbChhLGQscCxrKSE9PSExfHwoYS5hZGRFdmVudExpc3RlbmVyP2EuYWRkRXZlbnRMaXN0ZW5lcihvLGssITEpOmEuYXR0YWNoRXZlbnQmJmEuYXR0YWNoRXZlbnQoIm9uIitvLGspKSksai5hZGQmJihqLmFkZC5jYWxsKGEsbCksbC5oYW5kbGVyLmd1aWR8fChsLmhhbmRsZXIuZ3VpZD1jLmd1aWQpKSxlP20uc3BsaWNlKG0uZGVsZWdhdGVDb3VudCsrLDAsbCk6bS5wdXNoKGwpLG4uZXZlbnQuZ2xvYmFsW29dPSEwKTthPW51bGx9fSxyZW1vdmU6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZixnLGgsaSxqLGssbCxtLG8scCxxLHI9bi5oYXNEYXRhKGEpJiZuLl9kYXRhKGEpO2lmKHImJihrPXIuZXZlbnRzKSl7Yj0oYnx8IiIpLm1hdGNoKEcpfHxbIiJdLGo9Yi5sZW5ndGg7d2hpbGUoai0tKWlmKGg9b2EuZXhlYyhiW2pdKXx8W10sbz1xPWhbMV0scD0oaFsyXXx8IiIpLnNwbGl0KCIuIikuc29ydCgpLG8pe2w9bi5ldmVudC5zcGVjaWFsW29dfHx7fSxvPShkP2wuZGVsZWdhdGVUeXBlOmwuYmluZFR5cGUpfHxvLG09a1tvXXx8W10saD1oWzJdJiZuZXcgUmVnRXhwKCIoXnxcXC4pIitwLmpvaW4oIlxcLig/Oi4qXFwufCkiKSsiKFxcLnwkKSIpLGk9Zj1tLmxlbmd0aDt3aGlsZShmLS0pZz1tW2ZdLCFlJiZxIT09Zy5vcmlnVHlwZXx8YyYmYy5ndWlkIT09Zy5ndWlkfHxoJiYhaC50ZXN0KGcubmFtZXNwYWNlKXx8ZCYmZCE9PWcuc2VsZWN0b3ImJigiKioiIT09ZHx8IWcuc2VsZWN0b3IpfHwobS5zcGxpY2UoZiwxKSxnLnNlbGVjdG9yJiZtLmRlbGVnYXRlQ291bnQtLSxsLnJlbW92ZSYmbC5yZW1vdmUuY2FsbChhLGcpKTtpJiYhbS5sZW5ndGgmJihsLnRlYXJkb3duJiZsLnRlYXJkb3duLmNhbGwoYSxwLHIuaGFuZGxlKSE9PSExfHxuLnJlbW92ZUV2ZW50KGEsbyxyLmhhbmRsZSksZGVsZXRlIGtbb10pfWVsc2UgZm9yKG8gaW4gayluLmV2ZW50LnJlbW92ZShhLG8rYltqXSxjLGQsITApO24uaXNFbXB0eU9iamVjdChrKSYmKGRlbGV0ZSByLmhhbmRsZSxuLl9yZW1vdmVEYXRhKGEsImV2ZW50cyIpKX19LHRyaWdnZXI6ZnVuY3Rpb24oYixjLGUsZil7dmFyIGcsaCxpLGosbCxtLG8scD1bZXx8ZF0scT1rLmNhbGwoYiwidHlwZSIpP2IudHlwZTpiLHI9ay5jYWxsKGIsIm5hbWVzcGFjZSIpP2IubmFtZXNwYWNlLnNwbGl0KCIuIik6W107aWYoaT1tPWU9ZXx8ZCwzIT09ZS5ub2RlVHlwZSYmOCE9PWUubm9kZVR5cGUmJiFuYS50ZXN0KHErbi5ldmVudC50cmlnZ2VyZWQpJiYocS5pbmRleE9mKCIuIik+LTEmJihyPXEuc3BsaXQoIi4iKSxxPXIuc2hpZnQoKSxyLnNvcnQoKSksaD1xLmluZGV4T2YoIjoiKTwwJiYib24iK3EsYj1iW24uZXhwYW5kb10/YjpuZXcgbi5FdmVudChxLCJvYmplY3QiPT10eXBlb2YgYiYmYiksYi5pc1RyaWdnZXI9Zj8yOjMsYi5uYW1lc3BhY2U9ci5qb2luKCIuIiksYi5ybmFtZXNwYWNlPWIubmFtZXNwYWNlP25ldyBSZWdFeHAoIihefFxcLikiK3Iuam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIik6bnVsbCxiLnJlc3VsdD12b2lkIDAsYi50YXJnZXR8fChiLnRhcmdldD1lKSxjPW51bGw9PWM/W2JdOm4ubWFrZUFycmF5KGMsW2JdKSxsPW4uZXZlbnQuc3BlY2lhbFtxXXx8e30sZnx8IWwudHJpZ2dlcnx8bC50cmlnZ2VyLmFwcGx5KGUsYykhPT0hMSkpe2lmKCFmJiYhbC5ub0J1YmJsZSYmIW4uaXNXaW5kb3coZSkpe2ZvcihqPWwuZGVsZWdhdGVUeXBlfHxxLG5hLnRlc3QoaitxKXx8KGk9aS5wYXJlbnROb2RlKTtpO2k9aS5wYXJlbnROb2RlKXAucHVzaChpKSxtPWk7bT09PShlLm93bmVyRG9jdW1lbnR8fGQpJiZwLnB1c2gobS5kZWZhdWx0Vmlld3x8bS5wYXJlbnRXaW5kb3d8fGEpfW89MDt3aGlsZSgoaT1wW28rK10pJiYhYi5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWIudHlwZT1vPjE/ajpsLmJpbmRUeXBlfHxxLGc9KG4uX2RhdGEoaSwiZXZlbnRzIil8fHt9KVtiLnR5cGVdJiZuLl9kYXRhKGksImhhbmRsZSIpLGcmJmcuYXBwbHkoaSxjKSxnPWgmJmlbaF0sZyYmZy5hcHBseSYmTShpKSYmKGIucmVzdWx0PWcuYXBwbHkoaSxjKSxiLnJlc3VsdD09PSExJiZiLnByZXZlbnREZWZhdWx0KCkpO2lmKGIudHlwZT1xLCFmJiYhYi5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmKCFsLl9kZWZhdWx0fHxsLl9kZWZhdWx0LmFwcGx5KHAucG9wKCksYyk9PT0hMSkmJk0oZSkmJmgmJmVbcV0mJiFuLmlzV2luZG93KGUpKXttPWVbaF0sbSYmKGVbaF09bnVsbCksbi5ldmVudC50cmlnZ2VyZWQ9cTt0cnl7ZVtxXSgpfWNhdGNoKHMpe31uLmV2ZW50LnRyaWdnZXJlZD12b2lkIDAsbSYmKGVbaF09bSl9cmV0dXJuIGIucmVzdWx0fX0sZGlzcGF0Y2g6ZnVuY3Rpb24oYSl7YT1uLmV2ZW50LmZpeChhKTt2YXIgYixjLGQsZixnLGg9W10saT1lLmNhbGwoYXJndW1lbnRzKSxqPShuLl9kYXRhKHRoaXMsImV2ZW50cyIpfHx7fSlbYS50eXBlXXx8W10saz1uLmV2ZW50LnNwZWNpYWxbYS50eXBlXXx8e307aWYoaVswXT1hLGEuZGVsZWdhdGVUYXJnZXQ9dGhpcywhay5wcmVEaXNwYXRjaHx8ay5wcmVEaXNwYXRjaC5jYWxsKHRoaXMsYSkhPT0hMSl7aD1uLmV2ZW50LmhhbmRsZXJzLmNhbGwodGhpcyxhLGopLGI9MDt3aGlsZSgoZj1oW2IrK10pJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKXthLmN1cnJlbnRUYXJnZXQ9Zi5lbGVtLGM9MDt3aGlsZSgoZz1mLmhhbmRsZXJzW2MrK10pJiYhYS5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpKWEucm5hbWVzcGFjZSYmIWEucm5hbWVzcGFjZS50ZXN0KGcubmFtZXNwYWNlKXx8KGEuaGFuZGxlT2JqPWcsYS5kYXRhPWcuZGF0YSxkPSgobi5ldmVudC5zcGVjaWFsW2cub3JpZ1R5cGVdfHx7fSkuaGFuZGxlfHxnLmhhbmRsZXIpLmFwcGx5KGYuZWxlbSxpKSx2b2lkIDAhPT1kJiYoYS5yZXN1bHQ9ZCk9PT0hMSYmKGEucHJldmVudERlZmF1bHQoKSxhLnN0b3BQcm9wYWdhdGlvbigpKSl9cmV0dXJuIGsucG9zdERpc3BhdGNoJiZrLnBvc3REaXNwYXRjaC5jYWxsKHRoaXMsYSksYS5yZXN1bHR9fSxoYW5kbGVyczpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc9W10saD1iLmRlbGVnYXRlQ291bnQsaT1hLnRhcmdldDtpZihoJiZpLm5vZGVUeXBlJiYoImNsaWNrIiE9PWEudHlwZXx8aXNOYU4oYS5idXR0b24pfHxhLmJ1dHRvbjwxKSlmb3IoO2khPXRoaXM7aT1pLnBhcmVudE5vZGV8fHRoaXMpaWYoMT09PWkubm9kZVR5cGUmJihpLmRpc2FibGVkIT09ITB8fCJjbGljayIhPT1hLnR5cGUpKXtmb3IoZD1bXSxjPTA7aD5jO2MrKylmPWJbY10sZT1mLnNlbGVjdG9yKyIgIix2b2lkIDA9PT1kW2VdJiYoZFtlXT1mLm5lZWRzQ29udGV4dD9uKGUsdGhpcykuaW5kZXgoaSk+LTE6bi5maW5kKGUsdGhpcyxudWxsLFtpXSkubGVuZ3RoKSxkW2VdJiZkLnB1c2goZik7ZC5sZW5ndGgmJmcucHVzaCh7ZWxlbTppLGhhbmRsZXJzOmR9KX1yZXR1cm4gaDxiLmxlbmd0aCYmZy5wdXNoKHtlbGVtOnRoaXMsaGFuZGxlcnM6Yi5zbGljZShoKX0pLGd9LGZpeDpmdW5jdGlvbihhKXtpZihhW24uZXhwYW5kb10pcmV0dXJuIGE7dmFyIGIsYyxlLGY9YS50eXBlLGc9YSxoPXRoaXMuZml4SG9va3NbZl07aHx8KHRoaXMuZml4SG9va3NbZl09aD1tYS50ZXN0KGYpP3RoaXMubW91c2VIb29rczpsYS50ZXN0KGYpP3RoaXMua2V5SG9va3M6e30pLGU9aC5wcm9wcz90aGlzLnByb3BzLmNvbmNhdChoLnByb3BzKTp0aGlzLnByb3BzLGE9bmV3IG4uRXZlbnQoZyksYj1lLmxlbmd0aDt3aGlsZShiLS0pYz1lW2JdLGFbY109Z1tjXTtyZXR1cm4gYS50YXJnZXR8fChhLnRhcmdldD1nLnNyY0VsZW1lbnR8fGQpLDM9PT1hLnRhcmdldC5ub2RlVHlwZSYmKGEudGFyZ2V0PWEudGFyZ2V0LnBhcmVudE5vZGUpLGEubWV0YUtleT0hIWEubWV0YUtleSxoLmZpbHRlcj9oLmZpbHRlcihhLGcpOmF9LHByb3BzOiJhbHRLZXkgYnViYmxlcyBjYW5jZWxhYmxlIGN0cmxLZXkgY3VycmVudFRhcmdldCBkZXRhaWwgZXZlbnRQaGFzZSBtZXRhS2V5IHJlbGF0ZWRUYXJnZXQgc2hpZnRLZXkgdGFyZ2V0IHRpbWVTdGFtcCB2aWV3IHdoaWNoIi5zcGxpdCgiICIpLGZpeEhvb2tzOnt9LGtleUhvb2tzOntwcm9wczoiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZSIuc3BsaXQoIiAiKSxmaWx0ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbD09YS53aGljaCYmKGEud2hpY2g9bnVsbCE9Yi5jaGFyQ29kZT9iLmNoYXJDb2RlOmIua2V5Q29kZSksYX19LG1vdXNlSG9va3M6e3Byb3BzOiJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VYIHBhZ2VZIHNjcmVlblggc2NyZWVuWSB0b0VsZW1lbnQiLnNwbGl0KCIgIiksZmlsdGVyOmZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGc9Yi5idXR0b24saD1iLmZyb21FbGVtZW50O3JldHVybiBudWxsPT1hLnBhZ2VYJiZudWxsIT1iLmNsaWVudFgmJihlPWEudGFyZ2V0Lm93bmVyRG9jdW1lbnR8fGQsZj1lLmRvY3VtZW50RWxlbWVudCxjPWUuYm9keSxhLnBhZ2VYPWIuY2xpZW50WCsoZiYmZi5zY3JvbGxMZWZ0fHxjJiZjLnNjcm9sbExlZnR8fDApLShmJiZmLmNsaWVudExlZnR8fGMmJmMuY2xpZW50TGVmdHx8MCksYS5wYWdlWT1iLmNsaWVudFkrKGYmJmYuc2Nyb2xsVG9wfHxjJiZjLnNjcm9sbFRvcHx8MCktKGYmJmYuY2xpZW50VG9wfHxjJiZjLmNsaWVudFRvcHx8MCkpLCFhLnJlbGF0ZWRUYXJnZXQmJmgmJihhLnJlbGF0ZWRUYXJnZXQ9aD09PWEudGFyZ2V0P2IudG9FbGVtZW50OmgpLGEud2hpY2h8fHZvaWQgMD09PWd8fChhLndoaWNoPTEmZz8xOjImZz8zOjQmZz8yOjApLGF9fSxzcGVjaWFsOntsb2FkOntub0J1YmJsZTohMH0sZm9jdXM6e3RyaWdnZXI6ZnVuY3Rpb24oKXtpZih0aGlzIT09cmEoKSYmdGhpcy5mb2N1cyl0cnl7cmV0dXJuIHRoaXMuZm9jdXMoKSwhMX1jYXRjaChhKXt9fSxkZWxlZ2F0ZVR5cGU6ImZvY3VzaW4ifSxibHVyOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM9PT1yYSgpJiZ0aGlzLmJsdXI/KHRoaXMuYmx1cigpLCExKTp2b2lkIDB9LGRlbGVnYXRlVHlwZToiZm9jdXNvdXQifSxjbGljazp7dHJpZ2dlcjpmdW5jdGlvbigpe3JldHVybiBuLm5vZGVOYW1lKHRoaXMsImlucHV0IikmJiJjaGVja2JveCI9PT10aGlzLnR5cGUmJnRoaXMuY2xpY2s/KHRoaXMuY2xpY2soKSwhMSk6dm9pZCAwfSxfZGVmYXVsdDpmdW5jdGlvbihhKXtyZXR1cm4gbi5ub2RlTmFtZShhLnRhcmdldCwiYSIpfX0sYmVmb3JldW5sb2FkOntwb3N0RGlzcGF0Y2g6ZnVuY3Rpb24oYSl7dm9pZCAwIT09YS5yZXN1bHQmJmEub3JpZ2luYWxFdmVudCYmKGEub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZT1hLnJlc3VsdCl9fX0sc2ltdWxhdGU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW4uZXh0ZW5kKG5ldyBuLkV2ZW50LGMse3R5cGU6YSxpc1NpbXVsYXRlZDohMH0pO24uZXZlbnQudHJpZ2dlcihkLG51bGwsYiksZC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmYy5wcmV2ZW50RGVmYXVsdCgpfX0sbi5yZW1vdmVFdmVudD1kLnJlbW92ZUV2ZW50TGlzdGVuZXI/ZnVuY3Rpb24oYSxiLGMpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lciYmYS5yZW1vdmVFdmVudExpc3RlbmVyKGIsYyl9OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD0ib24iK2I7YS5kZXRhY2hFdmVudCYmKCJ1bmRlZmluZWQiPT10eXBlb2YgYVtkXSYmKGFbZF09bnVsbCksYS5kZXRhY2hFdmVudChkLGMpKX0sbi5FdmVudD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzIGluc3RhbmNlb2Ygbi5FdmVudD8oYSYmYS50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9YSx0aGlzLnR5cGU9YS50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWEuZGVmYXVsdFByZXZlbnRlZHx8dm9pZCAwPT09YS5kZWZhdWx0UHJldmVudGVkJiZhLnJldHVyblZhbHVlPT09ITE/cGE6cWEpOnRoaXMudHlwZT1hLGImJm4uZXh0ZW5kKHRoaXMsYiksdGhpcy50aW1lU3RhbXA9YSYmYS50aW1lU3RhbXB8fG4ubm93KCksdm9pZCh0aGlzW24uZXhwYW5kb109ITApKTpuZXcgbi5FdmVudChhLGIpfSxuLkV2ZW50LnByb3RvdHlwZT17Y29uc3RydWN0b3I6bi5FdmVudCxpc0RlZmF1bHRQcmV2ZW50ZWQ6cWEsaXNQcm9wYWdhdGlvblN0b3BwZWQ6cWEsaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6cWEscHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGEsYSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOmEucmV0dXJuVmFsdWU9ITEpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wYSxhJiYhdGhpcy5pc1NpbXVsYXRlZCYmKGEuc3RvcFByb3BhZ2F0aW9uJiZhLnN0b3BQcm9wYWdhdGlvbigpLGEuY2FuY2VsQnViYmxlPSEwKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9cGEsYSYmYS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24mJmEuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19LG4uZWFjaCh7bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCIscG9pbnRlcmVudGVyOiJwb2ludGVyb3ZlciIscG9pbnRlcmxlYXZlOiJwb2ludGVyb3V0In0sZnVuY3Rpb24oYSxiKXtuLmV2ZW50LnNwZWNpYWxbYV09e2RlbGVnYXRlVHlwZTpiLGJpbmRUeXBlOmIsaGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBjLGQ9dGhpcyxlPWEucmVsYXRlZFRhcmdldCxmPWEuaGFuZGxlT2JqO3JldHVybiBlJiYoZT09PWR8fG4uY29udGFpbnMoZCxlKSl8fChhLnR5cGU9Zi5vcmlnVHlwZSxjPWYuaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksYS50eXBlPWIpLGN9fX0pLGwuc3VibWl0fHwobi5ldmVudC5zcGVjaWFsLnN1Ym1pdD17c2V0dXA6ZnVuY3Rpb24oKXtyZXR1cm4gbi5ub2RlTmFtZSh0aGlzLCJmb3JtIik/ITE6dm9pZCBuLmV2ZW50LmFkZCh0aGlzLCJjbGljay5fc3VibWl0IGtleXByZXNzLl9zdWJtaXQiLGZ1bmN0aW9uKGEpe3ZhciBiPWEudGFyZ2V0LGM9bi5ub2RlTmFtZShiLCJpbnB1dCIpfHxuLm5vZGVOYW1lKGIsImJ1dHRvbiIpP24ucHJvcChiLCJmb3JtIik6dm9pZCAwO2MmJiFuLl9kYXRhKGMsInN1Ym1pdCIpJiYobi5ldmVudC5hZGQoYywic3VibWl0Ll9zdWJtaXQiLGZ1bmN0aW9uKGEpe2EuX3N1Ym1pdEJ1YmJsZT0hMH0pLG4uX2RhdGEoYywic3VibWl0IiwhMCkpfSl9LHBvc3REaXNwYXRjaDpmdW5jdGlvbihhKXthLl9zdWJtaXRCdWJibGUmJihkZWxldGUgYS5fc3VibWl0QnViYmxlLHRoaXMucGFyZW50Tm9kZSYmIWEuaXNUcmlnZ2VyJiZuLmV2ZW50LnNpbXVsYXRlKCJzdWJtaXQiLHRoaXMucGFyZW50Tm9kZSxhKSl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7cmV0dXJuIG4ubm9kZU5hbWUodGhpcywiZm9ybSIpPyExOnZvaWQgbi5ldmVudC5yZW1vdmUodGhpcywiLl9zdWJtaXQiKX19KSxsLmNoYW5nZXx8KG4uZXZlbnQuc3BlY2lhbC5jaGFuZ2U9e3NldHVwOmZ1bmN0aW9uKCl7cmV0dXJuIGthLnRlc3QodGhpcy5ub2RlTmFtZSk/KCJjaGVja2JveCIhPT10aGlzLnR5cGUmJiJyYWRpbyIhPT10aGlzLnR5cGV8fChuLmV2ZW50LmFkZCh0aGlzLCJwcm9wZXJ0eWNoYW5nZS5fY2hhbmdlIixmdW5jdGlvbihhKXsiY2hlY2tlZCI9PT1hLm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lJiYodGhpcy5fanVzdENoYW5nZWQ9ITApfSksbi5ldmVudC5hZGQodGhpcywiY2xpY2suX2NoYW5nZSIsZnVuY3Rpb24oYSl7dGhpcy5fanVzdENoYW5nZWQmJiFhLmlzVHJpZ2dlciYmKHRoaXMuX2p1c3RDaGFuZ2VkPSExKSxuLmV2ZW50LnNpbXVsYXRlKCJjaGFuZ2UiLHRoaXMsYSl9KSksITEpOnZvaWQgbi5ldmVudC5hZGQodGhpcywiYmVmb3JlYWN0aXZhdGUuX2NoYW5nZSIsZnVuY3Rpb24oYSl7dmFyIGI9YS50YXJnZXQ7a2EudGVzdChiLm5vZGVOYW1lKSYmIW4uX2RhdGEoYiwiY2hhbmdlIikmJihuLmV2ZW50LmFkZChiLCJjaGFuZ2UuX2NoYW5nZSIsZnVuY3Rpb24oYSl7IXRoaXMucGFyZW50Tm9kZXx8YS5pc1NpbXVsYXRlZHx8YS5pc1RyaWdnZXJ8fG4uZXZlbnQuc2ltdWxhdGUoImNoYW5nZSIsdGhpcy5wYXJlbnROb2RlLGEpfSksbi5fZGF0YShiLCJjaGFuZ2UiLCEwKSl9KX0saGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEudGFyZ2V0O3JldHVybiB0aGlzIT09Ynx8YS5pc1NpbXVsYXRlZHx8YS5pc1RyaWdnZXJ8fCJyYWRpbyIhPT1iLnR5cGUmJiJjaGVja2JveCIhPT1iLnR5cGU/YS5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dm9pZCAwfSx0ZWFyZG93bjpmdW5jdGlvbigpe3JldHVybiBuLmV2ZW50LnJlbW92ZSh0aGlzLCIuX2NoYW5nZSIpLCFrYS50ZXN0KHRoaXMubm9kZU5hbWUpfX0pLGwuZm9jdXNpbnx8bi5lYWNoKHtmb2N1czoiZm9jdXNpbiIsYmx1cjoiZm9jdXNvdXQifSxmdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKGEpe24uZXZlbnQuc2ltdWxhdGUoYixhLnRhcmdldCxuLmV2ZW50LmZpeChhKSl9O24uZXZlbnQuc3BlY2lhbFtiXT17c2V0dXA6ZnVuY3Rpb24oKXt2YXIgZD10aGlzLm93bmVyRG9jdW1lbnR8fHRoaXMsZT1uLl9kYXRhKGQsYik7ZXx8ZC5hZGRFdmVudExpc3RlbmVyKGEsYywhMCksbi5fZGF0YShkLGIsKGV8fDApKzEpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3ZhciBkPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxlPW4uX2RhdGEoZCxiKS0xO2U/bi5fZGF0YShkLGIsZSk6KGQucmVtb3ZlRXZlbnRMaXN0ZW5lcihhLGMsITApLG4uX3JlbW92ZURhdGEoZCxiKSl9fX0pLG4uZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gc2EodGhpcyxhLGIsYyxkKX0sb25lOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBzYSh0aGlzLGEsYixjLGQsMSl9LG9mZjpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZTtpZihhJiZhLnByZXZlbnREZWZhdWx0JiZhLmhhbmRsZU9iailyZXR1cm4gZD1hLmhhbmRsZU9iaixuKGEuZGVsZWdhdGVUYXJnZXQpLm9mZihkLm5hbWVzcGFjZT9kLm9yaWdUeXBlKyIuIitkLm5hbWVzcGFjZTpkLm9yaWdUeXBlLGQuc2VsZWN0b3IsZC5oYW5kbGVyKSx0aGlzO2lmKCJvYmplY3QiPT10eXBlb2YgYSl7Zm9yKGUgaW4gYSl0aGlzLm9mZihlLGIsYVtlXSk7cmV0dXJuIHRoaXN9cmV0dXJuIGIhPT0hMSYmImZ1bmN0aW9uIiE9dHlwZW9mIGJ8fChjPWIsYj12b2lkIDApLGM9PT0hMSYmKGM9cWEpLHRoaXMuZWFjaChmdW5jdGlvbigpe24uZXZlbnQucmVtb3ZlKHRoaXMsYSxjLGIpfSl9LHRyaWdnZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7bi5ldmVudC50cmlnZ2VyKGEsYix0aGlzKX0pfSx0cmlnZ2VySGFuZGxlcjpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXNbMF07cmV0dXJuIGM/bi5ldmVudC50cmlnZ2VyKGEsYixjLCEwKTp2b2lkIDB9fSk7dmFyIHRhPS8galF1ZXJ5XGQrPSIoPzpudWxsfFxkKykiL2csdWE9bmV3IFJlZ0V4cCgiPCg/OiIrYmErIilbXFxzLz5dIiwiaSIpLHZhPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcdzotXSspW14+XSopXC8+L2dpLHdhPS88c2NyaXB0fDxzdHlsZXw8bGluay9pLHhhPS9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLHlhPS9edHJ1ZVwvKC4qKS8semE9L15ccyo8ISg/OlxbQ0RBVEFcW3wtLSl8KD86XF1cXXwtLSk+XHMqJC9nLEFhPWNhKGQpLEJhPUFhLmFwcGVuZENoaWxkKGQuY3JlYXRlRWxlbWVudCgiZGl2IikpO2Z1bmN0aW9uIENhKGEsYil7cmV0dXJuIG4ubm9kZU5hbWUoYSwidGFibGUiKSYmbi5ub2RlTmFtZSgxMSE9PWIubm9kZVR5cGU/YjpiLmZpcnN0Q2hpbGQsInRyIik/YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJvZHkiKVswXXx8YS5hcHBlbmRDaGlsZChhLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGJvZHkiKSk6YX1mdW5jdGlvbiBEYShhKXtyZXR1cm4gYS50eXBlPShudWxsIT09bi5maW5kLmF0dHIoYSwidHlwZSIpKSsiLyIrYS50eXBlLGF9ZnVuY3Rpb24gRWEoYSl7dmFyIGI9eWEuZXhlYyhhLnR5cGUpO3JldHVybiBiP2EudHlwZT1iWzFdOmEucmVtb3ZlQXR0cmlidXRlKCJ0eXBlIiksYX1mdW5jdGlvbiBGYShhLGIpe2lmKDE9PT1iLm5vZGVUeXBlJiZuLmhhc0RhdGEoYSkpe3ZhciBjLGQsZSxmPW4uX2RhdGEoYSksZz1uLl9kYXRhKGIsZiksaD1mLmV2ZW50cztpZihoKXtkZWxldGUgZy5oYW5kbGUsZy5ldmVudHM9e307Zm9yKGMgaW4gaClmb3IoZD0wLGU9aFtjXS5sZW5ndGg7ZT5kO2QrKyluLmV2ZW50LmFkZChiLGMsaFtjXVtkXSl9Zy5kYXRhJiYoZy5kYXRhPW4uZXh0ZW5kKHt9LGcuZGF0YSkpfX1mdW5jdGlvbiBHYShhLGIpe3ZhciBjLGQsZTtpZigxPT09Yi5ub2RlVHlwZSl7aWYoYz1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksIWwubm9DbG9uZUV2ZW50JiZiW24uZXhwYW5kb10pe2U9bi5fZGF0YShiKTtmb3IoZCBpbiBlLmV2ZW50cyluLnJlbW92ZUV2ZW50KGIsZCxlLmhhbmRsZSk7Yi5yZW1vdmVBdHRyaWJ1dGUobi5leHBhbmRvKX0ic2NyaXB0Ij09PWMmJmIudGV4dCE9PWEudGV4dD8oRGEoYikudGV4dD1hLnRleHQsRWEoYikpOiJvYmplY3QiPT09Yz8oYi5wYXJlbnROb2RlJiYoYi5vdXRlckhUTUw9YS5vdXRlckhUTUwpLGwuaHRtbDVDbG9uZSYmYS5pbm5lckhUTUwmJiFuLnRyaW0oYi5pbm5lckhUTUwpJiYoYi5pbm5lckhUTUw9YS5pbm5lckhUTUwpKToiaW5wdXQiPT09YyYmWi50ZXN0KGEudHlwZSk/KGIuZGVmYXVsdENoZWNrZWQ9Yi5jaGVja2VkPWEuY2hlY2tlZCxiLnZhbHVlIT09YS52YWx1ZSYmKGIudmFsdWU9YS52YWx1ZSkpOiJvcHRpb24iPT09Yz9iLmRlZmF1bHRTZWxlY3RlZD1iLnNlbGVjdGVkPWEuZGVmYXVsdFNlbGVjdGVkOiJpbnB1dCIhPT1jJiYidGV4dGFyZWEiIT09Y3x8KGIuZGVmYXVsdFZhbHVlPWEuZGVmYXVsdFZhbHVlKX19ZnVuY3Rpb24gSGEoYSxiLGMsZCl7Yj1mLmFwcGx5KFtdLGIpO3ZhciBlLGcsaCxpLGosayxtPTAsbz1hLmxlbmd0aCxwPW8tMSxxPWJbMF0scj1uLmlzRnVuY3Rpb24ocSk7aWYocnx8bz4xJiYic3RyaW5nIj09dHlwZW9mIHEmJiFsLmNoZWNrQ2xvbmUmJnhhLnRlc3QocSkpcmV0dXJuIGEuZWFjaChmdW5jdGlvbihlKXt2YXIgZj1hLmVxKGUpO3ImJihiWzBdPXEuY2FsbCh0aGlzLGUsZi5odG1sKCkpKSxIYShmLGIsYyxkKX0pO2lmKG8mJihrPWphKGIsYVswXS5vd25lckRvY3VtZW50LCExLGEsZCksZT1rLmZpcnN0Q2hpbGQsMT09PWsuY2hpbGROb2Rlcy5sZW5ndGgmJihrPWUpLGV8fGQpKXtmb3IoaT1uLm1hcChlYShrLCJzY3JpcHQiKSxEYSksaD1pLmxlbmd0aDtvPm07bSsrKWc9ayxtIT09cCYmKGc9bi5jbG9uZShnLCEwLCEwKSxoJiZuLm1lcmdlKGksZWEoZywic2NyaXB0IikpKSxjLmNhbGwoYVttXSxnLG0pO2lmKGgpZm9yKGo9aVtpLmxlbmd0aC0xXS5vd25lckRvY3VtZW50LG4ubWFwKGksRWEpLG09MDtoPm07bSsrKWc9aVttXSxfLnRlc3QoZy50eXBlfHwiIikmJiFuLl9kYXRhKGcsImdsb2JhbEV2YWwiKSYmbi5jb250YWlucyhqLGcpJiYoZy5zcmM/bi5fZXZhbFVybCYmbi5fZXZhbFVybChnLnNyYyk6bi5nbG9iYWxFdmFsKChnLnRleHR8fGcudGV4dENvbnRlbnR8fGcuaW5uZXJIVE1MfHwiIikucmVwbGFjZSh6YSwiIikpKTtrPWU9bnVsbH1yZXR1cm4gYX1mdW5jdGlvbiBJYShhLGIsYyl7Zm9yKHZhciBkLGU9Yj9uLmZpbHRlcihiLGEpOmEsZj0wO251bGwhPShkPWVbZl0pO2YrKyljfHwxIT09ZC5ub2RlVHlwZXx8bi5jbGVhbkRhdGEoZWEoZCkpLGQucGFyZW50Tm9kZSYmKGMmJm4uY29udGFpbnMoZC5vd25lckRvY3VtZW50LGQpJiZmYShlYShkLCJzY3JpcHQiKSksZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpKTtyZXR1cm4gYX1uLmV4dGVuZCh7aHRtbFByZWZpbHRlcjpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKHZhLCI8JDE+PC8kMj4iKX0sY2xvbmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGgsaT1uLmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKTtpZihsLmh0bWw1Q2xvbmV8fG4uaXNYTUxEb2MoYSl8fCF1YS50ZXN0KCI8IithLm5vZGVOYW1lKyI+Iik/Zj1hLmNsb25lTm9kZSghMCk6KEJhLmlubmVySFRNTD1hLm91dGVySFRNTCxCYS5yZW1vdmVDaGlsZChmPUJhLmZpcnN0Q2hpbGQpKSwhKGwubm9DbG9uZUV2ZW50JiZsLm5vQ2xvbmVDaGVja2VkfHwxIT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlfHxuLmlzWE1MRG9jKGEpKSlmb3IoZD1lYShmKSxoPWVhKGEpLGc9MDtudWxsIT0oZT1oW2ddKTsrK2cpZFtnXSYmR2EoZSxkW2ddKTtpZihiKWlmKGMpZm9yKGg9aHx8ZWEoYSksZD1kfHxlYShmKSxnPTA7bnVsbCE9KGU9aFtnXSk7ZysrKUZhKGUsZFtnXSk7ZWxzZSBGYShhLGYpO3JldHVybiBkPWVhKGYsInNjcmlwdCIpLGQubGVuZ3RoPjAmJmZhKGQsIWkmJmVhKGEsInNjcmlwdCIpKSxkPWg9ZT1udWxsLGZ9LGNsZWFuRGF0YTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgZCxlLGYsZyxoPTAsaT1uLmV4cGFuZG8saj1uLmNhY2hlLGs9bC5hdHRyaWJ1dGVzLG09bi5ldmVudC5zcGVjaWFsO251bGwhPShkPWFbaF0pO2grKylpZigoYnx8TShkKSkmJihmPWRbaV0sZz1mJiZqW2ZdKSl7aWYoZy5ldmVudHMpZm9yKGUgaW4gZy5ldmVudHMpbVtlXT9uLmV2ZW50LnJlbW92ZShkLGUpOm4ucmVtb3ZlRXZlbnQoZCxlLGcuaGFuZGxlKTtqW2ZdJiYoZGVsZXRlIGpbZl0sa3x8InVuZGVmaW5lZCI9PXR5cGVvZiBkLnJlbW92ZUF0dHJpYnV0ZT9kW2ldPXZvaWQgMDpkLnJlbW92ZUF0dHJpYnV0ZShpKSxjLnB1c2goZikpfX19KSxuLmZuLmV4dGVuZCh7ZG9tTWFuaXA6SGEsZGV0YWNoOmZ1bmN0aW9uKGEpe3JldHVybiBJYSh0aGlzLGEsITApfSxyZW1vdmU6ZnVuY3Rpb24oYSl7cmV0dXJuIElhKHRoaXMsYSl9LHRleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFkodGhpcyxmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YT9uLnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmFwcGVuZCgodGhpc1swXSYmdGhpc1swXS5vd25lckRvY3VtZW50fHxkKS5jcmVhdGVUZXh0Tm9kZShhKSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0sYXBwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIEhhKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGEpe2lmKDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKXt2YXIgYj1DYSh0aGlzLGEpO2IuYXBwZW5kQ2hpbGQoYSl9fSl9LHByZXBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gSGEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciBiPUNhKHRoaXMsYSk7Yi5pbnNlcnRCZWZvcmUoYSxiLmZpcnN0Q2hpbGQpfX0pfSxiZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gSGEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcyl9KX0sYWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gSGEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcy5uZXh0U2libGluZyl9KX0sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIGEsYj0wO251bGwhPShhPXRoaXNbYl0pO2IrKyl7MT09PWEubm9kZVR5cGUmJm4uY2xlYW5EYXRhKGVhKGEsITEpKTt3aGlsZShhLmZpcnN0Q2hpbGQpYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Eub3B0aW9ucyYmbi5ub2RlTmFtZShhLCJzZWxlY3QiKSYmKGEub3B0aW9ucy5sZW5ndGg9MCl9cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9bnVsbD09YT8hMTphLGI9bnVsbD09Yj9hOmIsdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gbi5jbG9uZSh0aGlzLGEsYil9KX0saHRtbDpmdW5jdGlvbihhKXtyZXR1cm4gWSh0aGlzLGZ1bmN0aW9uKGEpe3ZhciBiPXRoaXNbMF18fHt9LGM9MCxkPXRoaXMubGVuZ3RoO2lmKHZvaWQgMD09PWEpcmV0dXJuIDE9PT1iLm5vZGVUeXBlP2IuaW5uZXJIVE1MLnJlcGxhY2UodGEsIiIpOnZvaWQgMDtpZigic3RyaW5nIj09dHlwZW9mIGEmJiF3YS50ZXN0KGEpJiYobC5odG1sU2VyaWFsaXplfHwhdWEudGVzdChhKSkmJihsLmxlYWRpbmdXaGl0ZXNwYWNlfHwhYWEudGVzdChhKSkmJiFkYVsoJC5leGVjKGEpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7YT1uLmh0bWxQcmVmaWx0ZXIoYSk7dHJ5e2Zvcig7ZD5jO2MrKyliPXRoaXNbY118fHt9LDE9PT1iLm5vZGVUeXBlJiYobi5jbGVhbkRhdGEoZWEoYiwhMSkpLGIuaW5uZXJIVE1MPWEpO2I9MH1jYXRjaChlKXt9fWImJnRoaXMuZW1wdHkoKS5hcHBlbmQoYSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgYT1bXTtyZXR1cm4gSGEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5wYXJlbnROb2RlO24uaW5BcnJheSh0aGlzLGEpPDAmJihuLmNsZWFuRGF0YShlYSh0aGlzKSksYyYmYy5yZXBsYWNlQ2hpbGQoYix0aGlzKSl9LGEpfX0pLG4uZWFjaCh7YXBwZW5kVG86ImFwcGVuZCIscHJlcGVuZFRvOiJwcmVwZW5kIixpbnNlcnRCZWZvcmU6ImJlZm9yZSIsaW5zZXJ0QWZ0ZXI6ImFmdGVyIixyZXBsYWNlQWxsOiJyZXBsYWNlV2l0aCJ9LGZ1bmN0aW9uKGEsYil7bi5mblthXT1mdW5jdGlvbihhKXtmb3IodmFyIGMsZD0wLGU9W10sZj1uKGEpLGg9Zi5sZW5ndGgtMTtoPj1kO2QrKyljPWQ9PT1oP3RoaXM6dGhpcy5jbG9uZSghMCksbihmW2RdKVtiXShjKSxnLmFwcGx5KGUsYy5nZXQoKSk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGUpfX0pO3ZhciBKYSxLYT17SFRNTDoiYmxvY2siLEJPRFk6ImJsb2NrIn07ZnVuY3Rpb24gTGEoYSxiKXt2YXIgYz1uKGIuY3JlYXRlRWxlbWVudChhKSkuYXBwZW5kVG8oYi5ib2R5KSxkPW4uY3NzKGNbMF0sImRpc3BsYXkiKTtyZXR1cm4gYy5kZXRhY2goKSxkfWZ1bmN0aW9uIE1hKGEpe3ZhciBiPWQsYz1LYVthXTtyZXR1cm4gY3x8KGM9TGEoYSxiKSwibm9uZSIhPT1jJiZjfHwoSmE9KEphfHxuKCI8aWZyYW1lIGZyYW1lYm9yZGVyPScwJyB3aWR0aD0nMCcgaGVpZ2h0PScwJy8+IikpLmFwcGVuZFRvKGIuZG9jdW1lbnRFbGVtZW50KSxiPShKYVswXS5jb250ZW50V2luZG93fHxKYVswXS5jb250ZW50RG9jdW1lbnQpLmRvY3VtZW50LGIud3JpdGUoKSxiLmNsb3NlKCksYz1MYShhLGIpLEphLmRldGFjaCgpKSxLYVthXT1jKSxjfXZhciBOYT0vXm1hcmdpbi8sT2E9bmV3IFJlZ0V4cCgiXigiK1QrIikoPyFweClbYS16JV0rJCIsImkiKSxQYT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZSxmLGc9e307Zm9yKGYgaW4gYilnW2ZdPWEuc3R5bGVbZl0sYS5zdHlsZVtmXT1iW2ZdO2U9Yy5hcHBseShhLGR8fFtdKTtmb3IoZiBpbiBiKWEuc3R5bGVbZl09Z1tmXTtyZXR1cm4gZX0sUWE9ZC5kb2N1bWVudEVsZW1lbnQ7IWZ1bmN0aW9uKCl7dmFyIGIsYyxlLGYsZyxoLGk9ZC5jcmVhdGVFbGVtZW50KCJkaXYiKSxqPWQuY3JlYXRlRWxlbWVudCgiZGl2Iik7aWYoai5zdHlsZSl7ai5zdHlsZS5jc3NUZXh0PSJmbG9hdDpsZWZ0O29wYWNpdHk6LjUiLGwub3BhY2l0eT0iMC41Ij09PWouc3R5bGUub3BhY2l0eSxsLmNzc0Zsb2F0PSEhai5zdHlsZS5jc3NGbG9hdCxqLnN0eWxlLmJhY2tncm91bmRDbGlwPSJjb250ZW50LWJveCIsai5jbG9uZU5vZGUoITApLnN0eWxlLmJhY2tncm91bmRDbGlwPSIiLGwuY2xlYXJDbG9uZVN0eWxlPSJjb250ZW50LWJveCI9PT1qLnN0eWxlLmJhY2tncm91bmRDbGlwLGk9ZC5jcmVhdGVFbGVtZW50KCJkaXYiKSxpLnN0eWxlLmNzc1RleHQ9ImJvcmRlcjowO3dpZHRoOjhweDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHg7cGFkZGluZzowO21hcmdpbi10b3A6MXB4O3Bvc2l0aW9uOmFic29sdXRlIixqLmlubmVySFRNTD0iIixpLmFwcGVuZENoaWxkKGopLGwuYm94U2l6aW5nPSIiPT09ai5zdHlsZS5ib3hTaXppbmd8fCIiPT09ai5zdHlsZS5Nb3pCb3hTaXppbmd8fCIiPT09ai5zdHlsZS5XZWJraXRCb3hTaXppbmcsbi5leHRlbmQobCx7cmVsaWFibGVIaWRkZW5PZmZzZXRzOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PWImJmsoKSxmfSxib3hTaXppbmdSZWxpYWJsZTpmdW5jdGlvbigpe3JldHVybiBudWxsPT1iJiZrKCksZX0scGl4ZWxNYXJnaW5SaWdodDpmdW5jdGlvbigpe3JldHVybiBudWxsPT1iJiZrKCksY30scGl4ZWxQb3NpdGlvbjpmdW5jdGlvbigpe3JldHVybiBudWxsPT1iJiZrKCksYn0scmVsaWFibGVNYXJnaW5SaWdodDpmdW5jdGlvbigpe3JldHVybiBudWxsPT1iJiZrKCksZ30scmVsaWFibGVNYXJnaW5MZWZ0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PWImJmsoKSxofX0pO2Z1bmN0aW9uIGsoKXt2YXIgayxsLG09ZC5kb2N1bWVudEVsZW1lbnQ7bS5hcHBlbmRDaGlsZChpKSxqLnN0eWxlLmNzc1RleHQ9Ii13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO21hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7dG9wOjElO3dpZHRoOjUwJSIsYj1lPWg9ITEsYz1nPSEwLGEuZ2V0Q29tcHV0ZWRTdHlsZSYmKGw9YS5nZXRDb21wdXRlZFN0eWxlKGopLGI9IjElIiE9PShsfHx7fSkudG9wLGg9IjJweCI9PT0obHx8e30pLm1hcmdpbkxlZnQsZT0iNHB4Ij09PShsfHx7d2lkdGg6IjRweCJ9KS53aWR0aCxqLnN0eWxlLm1hcmdpblJpZ2h0PSI1MCUiLGM9IjRweCI9PT0obHx8e21hcmdpblJpZ2h0OiI0cHgifSkubWFyZ2luUmlnaHQsaz1qLmFwcGVuZENoaWxkKGQuY3JlYXRlRWxlbWVudCgiZGl2IikpLGsuc3R5bGUuY3NzVGV4dD1qLnN0eWxlLmNzc1RleHQ9Ii13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDstbW96LWJveC1zaXppbmc6Y29udGVudC1ib3g7Ym94LXNpemluZzpjb250ZW50LWJveDtkaXNwbGF5OmJsb2NrO21hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MCIsay5zdHlsZS5tYXJnaW5SaWdodD1rLnN0eWxlLndpZHRoPSIwIixqLnN0eWxlLndpZHRoPSIxcHgiLGc9IXBhcnNlRmxvYXQoKGEuZ2V0Q29tcHV0ZWRTdHlsZShrKXx8e30pLm1hcmdpblJpZ2h0KSxqLnJlbW92ZUNoaWxkKGspKSxqLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGY9MD09PWouZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgsZiYmKGouc3R5bGUuZGlzcGxheT0iIixqLmlubmVySFRNTD0iPHRhYmxlPjx0cj48dGQ+PC90ZD48dGQ+dDwvdGQ+PC90cj48L3RhYmxlPiIsai5jaGlsZE5vZGVzWzBdLnN0eWxlLmJvcmRlckNvbGxhcHNlPSJzZXBhcmF0ZSIsaz1qLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0ZCIpLGtbMF0uc3R5bGUuY3NzVGV4dD0ibWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzowO2Rpc3BsYXk6bm9uZSIsZj0wPT09a1swXS5vZmZzZXRIZWlnaHQsZiYmKGtbMF0uc3R5bGUuZGlzcGxheT0iIixrWzFdLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGY9MD09PWtbMF0ub2Zmc2V0SGVpZ2h0KSksbS5yZW1vdmVDaGlsZChpKX19fSgpO3ZhciBSYSxTYSxUYT0vXih0b3B8cmlnaHR8Ym90dG9tfGxlZnQpJC87YS5nZXRDb21wdXRlZFN0eWxlPyhSYT1mdW5jdGlvbihiKXt2YXIgYz1iLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7cmV0dXJuIGMmJmMub3BlbmVyfHwoYz1hKSxjLmdldENvbXB1dGVkU3R5bGUoYil9LFNhPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoPWEuc3R5bGU7cmV0dXJuIGM9Y3x8UmEoYSksZz1jP2MuZ2V0UHJvcGVydHlWYWx1ZShiKXx8Y1tiXTp2b2lkIDAsIiIhPT1nJiZ2b2lkIDAhPT1nfHxuLmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKXx8KGc9bi5zdHlsZShhLGIpKSxjJiYhbC5waXhlbE1hcmdpblJpZ2h0KCkmJk9hLnRlc3QoZykmJk5hLnRlc3QoYikmJihkPWgud2lkdGgsZT1oLm1pbldpZHRoLGY9aC5tYXhXaWR0aCxoLm1pbldpZHRoPWgubWF4V2lkdGg9aC53aWR0aD1nLGc9Yy53aWR0aCxoLndpZHRoPWQsaC5taW5XaWR0aD1lLGgubWF4V2lkdGg9Ziksdm9pZCAwPT09Zz9nOmcrIiJ9KTpRYS5jdXJyZW50U3R5bGUmJihSYT1mdW5jdGlvbihhKXtyZXR1cm4gYS5jdXJyZW50U3R5bGV9LFNhPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoPWEuc3R5bGU7cmV0dXJuIGM9Y3x8UmEoYSksZz1jP2NbYl06dm9pZCAwLG51bGw9PWcmJmgmJmhbYl0mJihnPWhbYl0pLE9hLnRlc3QoZykmJiFUYS50ZXN0KGIpJiYoZD1oLmxlZnQsZT1hLnJ1bnRpbWVTdHlsZSxmPWUmJmUubGVmdCxmJiYoZS5sZWZ0PWEuY3VycmVudFN0eWxlLmxlZnQpLGgubGVmdD0iZm9udFNpemUiPT09Yj8iMWVtIjpnLGc9aC5waXhlbExlZnQrInB4IixoLmxlZnQ9ZCxmJiYoZS5sZWZ0PWYpKSx2b2lkIDA9PT1nP2c6ZysiInx8ImF1dG8ifSk7ZnVuY3Rpb24gVWEoYSxiKXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEoKT92b2lkIGRlbGV0ZSB0aGlzLmdldDoodGhpcy5nZXQ9YikuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19dmFyIFZhPS9hbHBoYVwoW14pXSpcKS9pLFdhPS9vcGFjaXR5XHMqPVxzKihbXildKikvaSxYYT0vXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sWWE9bmV3IFJlZ0V4cCgiXigiK1QrIikoLiopJCIsImkiKSxaYT17cG9zaXRpb246ImFic29sdXRlIix2aXNpYmlsaXR5OiJoaWRkZW4iLGRpc3BsYXk6ImJsb2NrIn0sJGE9e2xldHRlclNwYWNpbmc6IjAiLGZvbnRXZWlnaHQ6IjQwMCJ9LF9hPVsiV2Via2l0IiwiTyIsIk1veiIsIm1zIl0sYWI9ZC5jcmVhdGVFbGVtZW50KCJkaXYiKS5zdHlsZTtmdW5jdGlvbiBiYihhKXtpZihhIGluIGFiKXJldHVybiBhO3ZhciBiPWEuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSxjPV9hLmxlbmd0aDt3aGlsZShjLS0paWYoYT1fYVtjXStiLGEgaW4gYWIpcmV0dXJuIGF9ZnVuY3Rpb24gY2IoYSxiKXtmb3IodmFyIGMsZCxlLGY9W10sZz0wLGg9YS5sZW5ndGg7aD5nO2crKylkPWFbZ10sZC5zdHlsZSYmKGZbZ109bi5fZGF0YShkLCJvbGRkaXNwbGF5IiksYz1kLnN0eWxlLmRpc3BsYXksYj8oZltnXXx8Im5vbmUiIT09Y3x8KGQuc3R5bGUuZGlzcGxheT0iIiksIiI9PT1kLnN0eWxlLmRpc3BsYXkmJlcoZCkmJihmW2ddPW4uX2RhdGEoZCwib2xkZGlzcGxheSIsTWEoZC5ub2RlTmFtZSkpKSk6KGU9VyhkKSwoYyYmIm5vbmUiIT09Y3x8IWUpJiZuLl9kYXRhKGQsIm9sZGRpc3BsYXkiLGU/YzpuLmNzcyhkLCJkaXNwbGF5IikpKSk7Zm9yKGc9MDtoPmc7ZysrKWQ9YVtnXSxkLnN0eWxlJiYoYiYmIm5vbmUiIT09ZC5zdHlsZS5kaXNwbGF5JiYiIiE9PWQuc3R5bGUuZGlzcGxheXx8KGQuc3R5bGUuZGlzcGxheT1iP2ZbZ118fCIiOiJub25lIikpO3JldHVybiBhfWZ1bmN0aW9uIGRiKGEsYixjKXt2YXIgZD1ZYS5leGVjKGIpO3JldHVybiBkP01hdGgubWF4KDAsZFsxXS0oY3x8MCkpKyhkWzJdfHwicHgiKTpifWZ1bmN0aW9uIGViKGEsYixjLGQsZSl7Zm9yKHZhciBmPWM9PT0oZD8iYm9yZGVyIjoiY29udGVudCIpPzQ6IndpZHRoIj09PWI/MTowLGc9MDs0PmY7Zis9MikibWFyZ2luIj09PWMmJihnKz1uLmNzcyhhLGMrVltmXSwhMCxlKSksZD8oImNvbnRlbnQiPT09YyYmKGctPW4uY3NzKGEsInBhZGRpbmciK1ZbZl0sITAsZSkpLCJtYXJnaW4iIT09YyYmKGctPW4uY3NzKGEsImJvcmRlciIrVltmXSsiV2lkdGgiLCEwLGUpKSk6KGcrPW4uY3NzKGEsInBhZGRpbmciK1ZbZl0sITAsZSksInBhZGRpbmciIT09YyYmKGcrPW4uY3NzKGEsImJvcmRlciIrVltmXSsiV2lkdGgiLCEwLGUpKSk7cmV0dXJuIGd9ZnVuY3Rpb24gZmIoYSxiLGMpe3ZhciBkPSEwLGU9IndpZHRoIj09PWI/YS5vZmZzZXRXaWR0aDphLm9mZnNldEhlaWdodCxmPVJhKGEpLGc9bC5ib3hTaXppbmcmJiJib3JkZXItYm94Ij09PW4uY3NzKGEsImJveFNpemluZyIsITEsZik7aWYoMD49ZXx8bnVsbD09ZSl7aWYoZT1TYShhLGIsZiksKDA+ZXx8bnVsbD09ZSkmJihlPWEuc3R5bGVbYl0pLE9hLnRlc3QoZSkpcmV0dXJuIGU7ZD1nJiYobC5ib3hTaXppbmdSZWxpYWJsZSgpfHxlPT09YS5zdHlsZVtiXSksZT1wYXJzZUZsb2F0KGUpfHwwfXJldHVybiBlK2ViKGEsYixjfHwoZz8iYm9yZGVyIjoiY29udGVudCIpLGQsZikrInB4In1uLmV4dGVuZCh7Y3NzSG9va3M6e29wYWNpdHk6e2dldDpmdW5jdGlvbihhLGIpe2lmKGIpe3ZhciBjPVNhKGEsIm9wYWNpdHkiKTtyZXR1cm4iIj09PWM/IjEiOmN9fX19LGNzc051bWJlcjp7YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsY29sdW1uQ291bnQ6ITAsZmlsbE9wYWNpdHk6ITAsZmxleEdyb3c6ITAsZmxleFNocmluazohMCxmb250V2VpZ2h0OiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMH0sY3NzUHJvcHM6eyJmbG9hdCI6bC5jc3NGbG9hdD8iY3NzRmxvYXQiOiJzdHlsZUZsb2F0In0sc3R5bGU6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoYSYmMyE9PWEubm9kZVR5cGUmJjghPT1hLm5vZGVUeXBlJiZhLnN0eWxlKXt2YXIgZSxmLGcsaD1uLmNhbWVsQ2FzZShiKSxpPWEuc3R5bGU7aWYoYj1uLmNzc1Byb3BzW2hdfHwobi5jc3NQcm9wc1toXT1iYihoKXx8aCksZz1uLmNzc0hvb2tzW2JdfHxuLmNzc0hvb2tzW2hdLHZvaWQgMD09PWMpcmV0dXJuIGcmJiJnZXQiaW4gZyYmdm9pZCAwIT09KGU9Zy5nZXQoYSwhMSxkKSk/ZTppW2JdO2lmKGY9dHlwZW9mIGMsInN0cmluZyI9PT1mJiYoZT1VLmV4ZWMoYykpJiZlWzFdJiYoYz1YKGEsYixlKSxmPSJudW1iZXIiKSxudWxsIT1jJiZjPT09YyYmKCJudW1iZXIiPT09ZiYmKGMrPWUmJmVbM118fChuLmNzc051bWJlcltoXT8iIjoicHgiKSksbC5jbGVhckNsb25lU3R5bGV8fCIiIT09Y3x8MCE9PWIuaW5kZXhPZigiYmFja2dyb3VuZCIpfHwoaVtiXT0iaW5oZXJpdCIpLCEoZyYmInNldCJpbiBnJiZ2b2lkIDA9PT0oYz1nLnNldChhLGMsZCkpKSkpdHJ5e2lbYl09Y31jYXRjaChqKXt9fX0sY3NzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZyxoPW4uY2FtZWxDYXNlKGIpO3JldHVybiBiPW4uY3NzUHJvcHNbaF18fChuLmNzc1Byb3BzW2hdPWJiKGgpfHxoKSxnPW4uY3NzSG9va3NbYl18fG4uY3NzSG9va3NbaF0sZyYmImdldCJpbiBnJiYoZj1nLmdldChhLCEwLGMpKSx2b2lkIDA9PT1mJiYoZj1TYShhLGIsZCkpLCJub3JtYWwiPT09ZiYmYiBpbiAkYSYmKGY9JGFbYl0pLCIiPT09Y3x8Yz8oZT1wYXJzZUZsb2F0KGYpLGM9PT0hMHx8aXNGaW5pdGUoZSk/ZXx8MDpmKTpmfX0pLG4uZWFjaChbImhlaWdodCIsIndpZHRoIl0sZnVuY3Rpb24oYSxiKXtuLmNzc0hvb2tzW2JdPXtnZXQ6ZnVuY3Rpb24oYSxjLGQpe3JldHVybiBjP1hhLnRlc3Qobi5jc3MoYSwiZGlzcGxheSIpKSYmMD09PWEub2Zmc2V0V2lkdGg/UGEoYSxaYSxmdW5jdGlvbigpe3JldHVybiBmYihhLGIsZCl9KTpmYihhLGIsZCk6dm9pZCAwfSxzZXQ6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPWQmJlJhKGEpO3JldHVybiBkYihhLGMsZD9lYihhLGIsZCxsLmJveFNpemluZyYmImJvcmRlci1ib3giPT09bi5jc3MoYSwiYm94U2l6aW5nIiwhMSxlKSxlKTowKX19fSksbC5vcGFjaXR5fHwobi5jc3NIb29rcy5vcGFjaXR5PXtnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gV2EudGVzdCgoYiYmYS5jdXJyZW50U3R5bGU/YS5jdXJyZW50U3R5bGUuZmlsdGVyOmEuc3R5bGUuZmlsdGVyKXx8IiIpPy4wMSpwYXJzZUZsb2F0KFJlZ0V4cC4kMSkrIiI6Yj8iMSI6IiJ9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjPWEuc3R5bGUsZD1hLmN1cnJlbnRTdHlsZSxlPW4uaXNOdW1lcmljKGIpPyJhbHBoYShvcGFjaXR5PSIrMTAwKmIrIikiOiIiLGY9ZCYmZC5maWx0ZXJ8fGMuZmlsdGVyfHwiIjtjLnpvb209MSwoYj49MXx8IiI9PT1iKSYmIiI9PT1uLnRyaW0oZi5yZXBsYWNlKFZhLCIiKSkmJmMucmVtb3ZlQXR0cmlidXRlJiYoYy5yZW1vdmVBdHRyaWJ1dGUoImZpbHRlciIpLCIiPT09Ynx8ZCYmIWQuZmlsdGVyKXx8KGMuZmlsdGVyPVZhLnRlc3QoZik/Zi5yZXBsYWNlKFZhLGUpOmYrIiAiK2UpfX0pLG4uY3NzSG9va3MubWFyZ2luUmlnaHQ9VWEobC5yZWxpYWJsZU1hcmdpblJpZ2h0LGZ1bmN0aW9uKGEsYil7cmV0dXJuIGI/UGEoYSx7ZGlzcGxheToiaW5saW5lLWJsb2NrIn0sU2EsW2EsIm1hcmdpblJpZ2h0Il0pOnZvaWQgMH0pLG4uY3NzSG9va3MubWFyZ2luTGVmdD1VYShsLnJlbGlhYmxlTWFyZ2luTGVmdCxmdW5jdGlvbihhLGIpe3JldHVybiBiPyhwYXJzZUZsb2F0KFNhKGEsIm1hcmdpbkxlZnQiKSl8fChuLmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKT9hLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQtUGEoYSx7Cm1hcmdpbkxlZnQ6MH0sZnVuY3Rpb24oKXtyZXR1cm4gYS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0fSk6MCkpKyJweCI6dm9pZCAwfSksbi5lYWNoKHttYXJnaW46IiIscGFkZGluZzoiIixib3JkZXI6IldpZHRoIn0sZnVuY3Rpb24oYSxiKXtuLmNzc0hvb2tzW2ErYl09e2V4cGFuZDpmdW5jdGlvbihjKXtmb3IodmFyIGQ9MCxlPXt9LGY9InN0cmluZyI9PXR5cGVvZiBjP2Muc3BsaXQoIiAiKTpbY107ND5kO2QrKyllW2ErVltkXStiXT1mW2RdfHxmW2QtMl18fGZbMF07cmV0dXJuIGV9fSxOYS50ZXN0KGEpfHwobi5jc3NIb29rc1thK2JdLnNldD1kYil9KSxuLmZuLmV4dGVuZCh7Y3NzOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFkodGhpcyxmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmPXt9LGc9MDtpZihuLmlzQXJyYXkoYikpe2ZvcihkPVJhKGEpLGU9Yi5sZW5ndGg7ZT5nO2crKylmW2JbZ11dPW4uY3NzKGEsYltnXSwhMSxkKTtyZXR1cm4gZn1yZXR1cm4gdm9pZCAwIT09Yz9uLnN0eWxlKGEsYixjKTpuLmNzcyhhLGIpfSxhLGIsYXJndW1lbnRzLmxlbmd0aD4xKX0sc2hvdzpmdW5jdGlvbigpe3JldHVybiBjYih0aGlzLCEwKX0saGlkZTpmdW5jdGlvbigpe3JldHVybiBjYih0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKGEpe3JldHVybiJib29sZWFuIj09dHlwZW9mIGE/YT90aGlzLnNob3coKTp0aGlzLmhpZGUoKTp0aGlzLmVhY2goZnVuY3Rpb24oKXtXKHRoaXMpP24odGhpcykuc2hvdygpOm4odGhpcykuaGlkZSgpfSl9fSk7ZnVuY3Rpb24gZ2IoYSxiLGMsZCxlKXtyZXR1cm4gbmV3IGdiLnByb3RvdHlwZS5pbml0KGEsYixjLGQsZSl9bi5Ud2Vlbj1nYixnYi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmdiLGluaXQ6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3RoaXMuZWxlbT1hLHRoaXMucHJvcD1jLHRoaXMuZWFzaW5nPWV8fG4uZWFzaW5nLl9kZWZhdWx0LHRoaXMub3B0aW9ucz1iLHRoaXMuc3RhcnQ9dGhpcy5ub3c9dGhpcy5jdXIoKSx0aGlzLmVuZD1kLHRoaXMudW5pdD1mfHwobi5jc3NOdW1iZXJbY10/IiI6InB4Iil9LGN1cjpmdW5jdGlvbigpe3ZhciBhPWdiLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiBhJiZhLmdldD9hLmdldCh0aGlzKTpnYi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KHRoaXMpfSxydW46ZnVuY3Rpb24oYSl7dmFyIGIsYz1nYi5wcm9wSG9va3NbdGhpcy5wcm9wXTtyZXR1cm4gdGhpcy5vcHRpb25zLmR1cmF0aW9uP3RoaXMucG9zPWI9bi5lYXNpbmdbdGhpcy5lYXNpbmddKGEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKmEsMCwxLHRoaXMub3B0aW9ucy5kdXJhdGlvbik6dGhpcy5wb3M9Yj1hLHRoaXMubm93PSh0aGlzLmVuZC10aGlzLnN0YXJ0KSpiK3RoaXMuc3RhcnQsdGhpcy5vcHRpb25zLnN0ZXAmJnRoaXMub3B0aW9ucy5zdGVwLmNhbGwodGhpcy5lbGVtLHRoaXMubm93LHRoaXMpLGMmJmMuc2V0P2Muc2V0KHRoaXMpOmdiLnByb3BIb29rcy5fZGVmYXVsdC5zZXQodGhpcyksdGhpc319LGdiLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZT1nYi5wcm90b3R5cGUsZ2IucHJvcEhvb2tzPXtfZGVmYXVsdDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiO3JldHVybiAxIT09YS5lbGVtLm5vZGVUeXBlfHxudWxsIT1hLmVsZW1bYS5wcm9wXSYmbnVsbD09YS5lbGVtLnN0eWxlW2EucHJvcF0/YS5lbGVtW2EucHJvcF06KGI9bi5jc3MoYS5lbGVtLGEucHJvcCwiIiksYiYmImF1dG8iIT09Yj9iOjApfSxzZXQ6ZnVuY3Rpb24oYSl7bi5meC5zdGVwW2EucHJvcF0/bi5meC5zdGVwW2EucHJvcF0oYSk6MSE9PWEuZWxlbS5ub2RlVHlwZXx8bnVsbD09YS5lbGVtLnN0eWxlW24uY3NzUHJvcHNbYS5wcm9wXV0mJiFuLmNzc0hvb2tzW2EucHJvcF0/YS5lbGVtW2EucHJvcF09YS5ub3c6bi5zdHlsZShhLmVsZW0sYS5wcm9wLGEubm93K2EudW5pdCl9fX0sZ2IucHJvcEhvb2tzLnNjcm9sbFRvcD1nYi5wcm9wSG9va3Muc2Nyb2xsTGVmdD17c2V0OmZ1bmN0aW9uKGEpe2EuZWxlbS5ub2RlVHlwZSYmYS5lbGVtLnBhcmVudE5vZGUmJihhLmVsZW1bYS5wcm9wXT1hLm5vdyl9fSxuLmVhc2luZz17bGluZWFyOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxzd2luZzpmdW5jdGlvbihhKXtyZXR1cm4uNS1NYXRoLmNvcyhhKk1hdGguUEkpLzJ9LF9kZWZhdWx0OiJzd2luZyJ9LG4uZng9Z2IucHJvdG90eXBlLmluaXQsbi5meC5zdGVwPXt9O3ZhciBoYixpYixqYj0vXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sa2I9L3F1ZXVlSG9va3MkLztmdW5jdGlvbiBsYigpe3JldHVybiBhLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtoYj12b2lkIDB9KSxoYj1uLm5vdygpfWZ1bmN0aW9uIG1iKGEsYil7dmFyIGMsZD17aGVpZ2h0OmF9LGU9MDtmb3IoYj1iPzE6MDs0PmU7ZSs9Mi1iKWM9VltlXSxkWyJtYXJnaW4iK2NdPWRbInBhZGRpbmciK2NdPWE7cmV0dXJuIGImJihkLm9wYWNpdHk9ZC53aWR0aD1hKSxkfWZ1bmN0aW9uIG5iKGEsYixjKXtmb3IodmFyIGQsZT0ocWIudHdlZW5lcnNbYl18fFtdKS5jb25jYXQocWIudHdlZW5lcnNbIioiXSksZj0wLGc9ZS5sZW5ndGg7Zz5mO2YrKylpZihkPWVbZl0uY2FsbChjLGIsYSkpcmV0dXJuIGR9ZnVuY3Rpb24gb2IoYSxiLGMpe3ZhciBkLGUsZixnLGgsaSxqLGssbT10aGlzLG89e30scD1hLnN0eWxlLHE9YS5ub2RlVHlwZSYmVyhhKSxyPW4uX2RhdGEoYSwiZnhzaG93Iik7Yy5xdWV1ZXx8KGg9bi5fcXVldWVIb29rcyhhLCJmeCIpLG51bGw9PWgudW5xdWV1ZWQmJihoLnVucXVldWVkPTAsaT1oLmVtcHR5LmZpcmUsaC5lbXB0eS5maXJlPWZ1bmN0aW9uKCl7aC51bnF1ZXVlZHx8aSgpfSksaC51bnF1ZXVlZCsrLG0uYWx3YXlzKGZ1bmN0aW9uKCl7bS5hbHdheXMoZnVuY3Rpb24oKXtoLnVucXVldWVkLS0sbi5xdWV1ZShhLCJmeCIpLmxlbmd0aHx8aC5lbXB0eS5maXJlKCl9KX0pKSwxPT09YS5ub2RlVHlwZSYmKCJoZWlnaHQiaW4gYnx8IndpZHRoImluIGIpJiYoYy5vdmVyZmxvdz1bcC5vdmVyZmxvdyxwLm92ZXJmbG93WCxwLm92ZXJmbG93WV0saj1uLmNzcyhhLCJkaXNwbGF5Iiksaz0ibm9uZSI9PT1qP24uX2RhdGEoYSwib2xkZGlzcGxheSIpfHxNYShhLm5vZGVOYW1lKTpqLCJpbmxpbmUiPT09ayYmIm5vbmUiPT09bi5jc3MoYSwiZmxvYXQiKSYmKGwuaW5saW5lQmxvY2tOZWVkc0xheW91dCYmImlubGluZSIhPT1NYShhLm5vZGVOYW1lKT9wLnpvb209MTpwLmRpc3BsYXk9ImlubGluZS1ibG9jayIpKSxjLm92ZXJmbG93JiYocC5vdmVyZmxvdz0iaGlkZGVuIixsLnNocmlua1dyYXBCbG9ja3MoKXx8bS5hbHdheXMoZnVuY3Rpb24oKXtwLm92ZXJmbG93PWMub3ZlcmZsb3dbMF0scC5vdmVyZmxvd1g9Yy5vdmVyZmxvd1sxXSxwLm92ZXJmbG93WT1jLm92ZXJmbG93WzJdfSkpO2ZvcihkIGluIGIpaWYoZT1iW2RdLGpiLmV4ZWMoZSkpe2lmKGRlbGV0ZSBiW2RdLGY9Znx8InRvZ2dsZSI9PT1lLGU9PT0ocT8iaGlkZSI6InNob3ciKSl7aWYoInNob3ciIT09ZXx8IXJ8fHZvaWQgMD09PXJbZF0pY29udGludWU7cT0hMH1vW2RdPXImJnJbZF18fG4uc3R5bGUoYSxkKX1lbHNlIGo9dm9pZCAwO2lmKG4uaXNFbXB0eU9iamVjdChvKSkiaW5saW5lIj09PSgibm9uZSI9PT1qP01hKGEubm9kZU5hbWUpOmopJiYocC5kaXNwbGF5PWopO2Vsc2V7cj8iaGlkZGVuImluIHImJihxPXIuaGlkZGVuKTpyPW4uX2RhdGEoYSwiZnhzaG93Iix7fSksZiYmKHIuaGlkZGVuPSFxKSxxP24oYSkuc2hvdygpOm0uZG9uZShmdW5jdGlvbigpe24oYSkuaGlkZSgpfSksbS5kb25lKGZ1bmN0aW9uKCl7dmFyIGI7bi5fcmVtb3ZlRGF0YShhLCJmeHNob3ciKTtmb3IoYiBpbiBvKW4uc3R5bGUoYSxiLG9bYl0pfSk7Zm9yKGQgaW4gbylnPW5iKHE/cltkXTowLGQsbSksZCBpbiByfHwocltkXT1nLnN0YXJ0LHEmJihnLmVuZD1nLnN0YXJ0LGcuc3RhcnQ9IndpZHRoIj09PWR8fCJoZWlnaHQiPT09ZD8xOjApKX19ZnVuY3Rpb24gcGIoYSxiKXt2YXIgYyxkLGUsZixnO2ZvcihjIGluIGEpaWYoZD1uLmNhbWVsQ2FzZShjKSxlPWJbZF0sZj1hW2NdLG4uaXNBcnJheShmKSYmKGU9ZlsxXSxmPWFbY109ZlswXSksYyE9PWQmJihhW2RdPWYsZGVsZXRlIGFbY10pLGc9bi5jc3NIb29rc1tkXSxnJiYiZXhwYW5kImluIGcpe2Y9Zy5leHBhbmQoZiksZGVsZXRlIGFbZF07Zm9yKGMgaW4gZiljIGluIGF8fChhW2NdPWZbY10sYltjXT1lKX1lbHNlIGJbZF09ZX1mdW5jdGlvbiBxYihhLGIsYyl7dmFyIGQsZSxmPTAsZz1xYi5wcmVmaWx0ZXJzLmxlbmd0aCxoPW4uRGVmZXJyZWQoKS5hbHdheXMoZnVuY3Rpb24oKXtkZWxldGUgaS5lbGVtfSksaT1mdW5jdGlvbigpe2lmKGUpcmV0dXJuITE7Zm9yKHZhciBiPWhifHxsYigpLGM9TWF0aC5tYXgoMCxqLnN0YXJ0VGltZStqLmR1cmF0aW9uLWIpLGQ9Yy9qLmR1cmF0aW9ufHwwLGY9MS1kLGc9MCxpPWoudHdlZW5zLmxlbmd0aDtpPmc7ZysrKWoudHdlZW5zW2ddLnJ1bihmKTtyZXR1cm4gaC5ub3RpZnlXaXRoKGEsW2osZixjXSksMT5mJiZpP2M6KGgucmVzb2x2ZVdpdGgoYSxbal0pLCExKX0saj1oLnByb21pc2Uoe2VsZW06YSxwcm9wczpuLmV4dGVuZCh7fSxiKSxvcHRzOm4uZXh0ZW5kKCEwLHtzcGVjaWFsRWFzaW5nOnt9LGVhc2luZzpuLmVhc2luZy5fZGVmYXVsdH0sYyksb3JpZ2luYWxQcm9wZXJ0aWVzOmIsb3JpZ2luYWxPcHRpb25zOmMsc3RhcnRUaW1lOmhifHxsYigpLGR1cmF0aW9uOmMuZHVyYXRpb24sdHdlZW5zOltdLGNyZWF0ZVR3ZWVuOmZ1bmN0aW9uKGIsYyl7dmFyIGQ9bi5Ud2VlbihhLGoub3B0cyxiLGMsai5vcHRzLnNwZWNpYWxFYXNpbmdbYl18fGoub3B0cy5lYXNpbmcpO3JldHVybiBqLnR3ZWVucy5wdXNoKGQpLGR9LHN0b3A6ZnVuY3Rpb24oYil7dmFyIGM9MCxkPWI/ai50d2VlbnMubGVuZ3RoOjA7aWYoZSlyZXR1cm4gdGhpcztmb3IoZT0hMDtkPmM7YysrKWoudHdlZW5zW2NdLnJ1bigxKTtyZXR1cm4gYj8oaC5ub3RpZnlXaXRoKGEsW2osMSwwXSksaC5yZXNvbHZlV2l0aChhLFtqLGJdKSk6aC5yZWplY3RXaXRoKGEsW2osYl0pLHRoaXN9fSksaz1qLnByb3BzO2ZvcihwYihrLGoub3B0cy5zcGVjaWFsRWFzaW5nKTtnPmY7ZisrKWlmKGQ9cWIucHJlZmlsdGVyc1tmXS5jYWxsKGosYSxrLGoub3B0cykpcmV0dXJuIG4uaXNGdW5jdGlvbihkLnN0b3ApJiYobi5fcXVldWVIb29rcyhqLmVsZW0sai5vcHRzLnF1ZXVlKS5zdG9wPW4ucHJveHkoZC5zdG9wLGQpKSxkO3JldHVybiBuLm1hcChrLG5iLGopLG4uaXNGdW5jdGlvbihqLm9wdHMuc3RhcnQpJiZqLm9wdHMuc3RhcnQuY2FsbChhLGopLG4uZngudGltZXIobi5leHRlbmQoaSx7ZWxlbTphLGFuaW06aixxdWV1ZTpqLm9wdHMucXVldWV9KSksai5wcm9ncmVzcyhqLm9wdHMucHJvZ3Jlc3MpLmRvbmUoai5vcHRzLmRvbmUsai5vcHRzLmNvbXBsZXRlKS5mYWlsKGoub3B0cy5mYWlsKS5hbHdheXMoai5vcHRzLmFsd2F5cyl9bi5BbmltYXRpb249bi5leHRlbmQocWIse3R3ZWVuZXJzOnsiKiI6W2Z1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5jcmVhdGVUd2VlbihhLGIpO3JldHVybiBYKGMuZWxlbSxhLFUuZXhlYyhiKSxjKSxjfV19LHR3ZWVuZXI6ZnVuY3Rpb24oYSxiKXtuLmlzRnVuY3Rpb24oYSk/KGI9YSxhPVsiKiJdKTphPWEubWF0Y2goRyk7Zm9yKHZhciBjLGQ9MCxlPWEubGVuZ3RoO2U+ZDtkKyspYz1hW2RdLHFiLnR3ZWVuZXJzW2NdPXFiLnR3ZWVuZXJzW2NdfHxbXSxxYi50d2VlbmVyc1tjXS51bnNoaWZ0KGIpfSxwcmVmaWx0ZXJzOltvYl0scHJlZmlsdGVyOmZ1bmN0aW9uKGEsYil7Yj9xYi5wcmVmaWx0ZXJzLnVuc2hpZnQoYSk6cWIucHJlZmlsdGVycy5wdXNoKGEpfX0pLG4uc3BlZWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEmJiJvYmplY3QiPT10eXBlb2YgYT9uLmV4dGVuZCh7fSxhKTp7Y29tcGxldGU6Y3x8IWMmJmJ8fG4uaXNGdW5jdGlvbihhKSYmYSxkdXJhdGlvbjphLGVhc2luZzpjJiZifHxiJiYhbi5pc0Z1bmN0aW9uKGIpJiZifTtyZXR1cm4gZC5kdXJhdGlvbj1uLmZ4Lm9mZj8wOiJudW1iZXIiPT10eXBlb2YgZC5kdXJhdGlvbj9kLmR1cmF0aW9uOmQuZHVyYXRpb24gaW4gbi5meC5zcGVlZHM/bi5meC5zcGVlZHNbZC5kdXJhdGlvbl06bi5meC5zcGVlZHMuX2RlZmF1bHQsbnVsbCE9ZC5xdWV1ZSYmZC5xdWV1ZSE9PSEwfHwoZC5xdWV1ZT0iZngiKSxkLm9sZD1kLmNvbXBsZXRlLGQuY29tcGxldGU9ZnVuY3Rpb24oKXtuLmlzRnVuY3Rpb24oZC5vbGQpJiZkLm9sZC5jYWxsKHRoaXMpLGQucXVldWUmJm4uZGVxdWV1ZSh0aGlzLGQucXVldWUpfSxkfSxuLmZuLmV4dGVuZCh7ZmFkZVRvOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB0aGlzLmZpbHRlcihXKS5jc3MoIm9wYWNpdHkiLDApLnNob3coKS5lbmQoKS5hbmltYXRlKHtvcGFjaXR5OmJ9LGEsYyxkKX0sYW5pbWF0ZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1uLmlzRW1wdHlPYmplY3QoYSksZj1uLnNwZWVkKGIsYyxkKSxnPWZ1bmN0aW9uKCl7dmFyIGI9cWIodGhpcyxuLmV4dGVuZCh7fSxhKSxmKTsoZXx8bi5fZGF0YSh0aGlzLCJmaW5pc2giKSkmJmIuc3RvcCghMCl9O3JldHVybiBnLmZpbmlzaD1nLGV8fGYucXVldWU9PT0hMT90aGlzLmVhY2goZyk6dGhpcy5xdWV1ZShmLnF1ZXVlLGcpfSxzdG9wOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mdW5jdGlvbihhKXt2YXIgYj1hLnN0b3A7ZGVsZXRlIGEuc3RvcCxiKGMpfTtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIGEmJihjPWIsYj1hLGE9dm9pZCAwKSxiJiZhIT09ITEmJnRoaXMucXVldWUoYXx8ImZ4IixbXSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9ITAsZT1udWxsIT1hJiZhKyJxdWV1ZUhvb2tzIixmPW4udGltZXJzLGc9bi5fZGF0YSh0aGlzKTtpZihlKWdbZV0mJmdbZV0uc3RvcCYmZChnW2VdKTtlbHNlIGZvcihlIGluIGcpZ1tlXSYmZ1tlXS5zdG9wJiZrYi50ZXN0KGUpJiZkKGdbZV0pO2ZvcihlPWYubGVuZ3RoO2UtLTspZltlXS5lbGVtIT09dGhpc3x8bnVsbCE9YSYmZltlXS5xdWV1ZSE9PWF8fChmW2VdLmFuaW0uc3RvcChjKSxiPSExLGYuc3BsaWNlKGUsMSkpOyFiJiZjfHxuLmRlcXVldWUodGhpcyxhKX0pfSxmaW5pc2g6ZnVuY3Rpb24oYSl7cmV0dXJuIGEhPT0hMSYmKGE9YXx8ImZ4IiksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGIsYz1uLl9kYXRhKHRoaXMpLGQ9Y1thKyJxdWV1ZSJdLGU9Y1thKyJxdWV1ZUhvb2tzIl0sZj1uLnRpbWVycyxnPWQ/ZC5sZW5ndGg6MDtmb3IoYy5maW5pc2g9ITAsbi5xdWV1ZSh0aGlzLGEsW10pLGUmJmUuc3RvcCYmZS5zdG9wLmNhbGwodGhpcywhMCksYj1mLmxlbmd0aDtiLS07KWZbYl0uZWxlbT09PXRoaXMmJmZbYl0ucXVldWU9PT1hJiYoZltiXS5hbmltLnN0b3AoITApLGYuc3BsaWNlKGIsMSkpO2ZvcihiPTA7Zz5iO2IrKylkW2JdJiZkW2JdLmZpbmlzaCYmZFtiXS5maW5pc2guY2FsbCh0aGlzKTtkZWxldGUgYy5maW5pc2h9KX19KSxuLmVhY2goWyJ0b2dnbGUiLCJzaG93IiwiaGlkZSJdLGZ1bmN0aW9uKGEsYil7dmFyIGM9bi5mbltiXTtuLmZuW2JdPWZ1bmN0aW9uKGEsZCxlKXtyZXR1cm4gbnVsbD09YXx8ImJvb2xlYW4iPT10eXBlb2YgYT9jLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmFuaW1hdGUobWIoYiwhMCksYSxkLGUpfX0pLG4uZWFjaCh7c2xpZGVEb3duOm1iKCJzaG93Iiksc2xpZGVVcDptYigiaGlkZSIpLHNsaWRlVG9nZ2xlOm1iKCJ0b2dnbGUiKSxmYWRlSW46e29wYWNpdHk6InNob3cifSxmYWRlT3V0OntvcGFjaXR5OiJoaWRlIn0sZmFkZVRvZ2dsZTp7b3BhY2l0eToidG9nZ2xlIn19LGZ1bmN0aW9uKGEsYil7bi5mblthXT1mdW5jdGlvbihhLGMsZCl7cmV0dXJuIHRoaXMuYW5pbWF0ZShiLGEsYyxkKX19KSxuLnRpbWVycz1bXSxuLmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgYSxiPW4udGltZXJzLGM9MDtmb3IoaGI9bi5ub3coKTtjPGIubGVuZ3RoO2MrKylhPWJbY10sYSgpfHxiW2NdIT09YXx8Yi5zcGxpY2UoYy0tLDEpO2IubGVuZ3RofHxuLmZ4LnN0b3AoKSxoYj12b2lkIDB9LG4uZngudGltZXI9ZnVuY3Rpb24oYSl7bi50aW1lcnMucHVzaChhKSxhKCk/bi5meC5zdGFydCgpOm4udGltZXJzLnBvcCgpfSxuLmZ4LmludGVydmFsPTEzLG4uZnguc3RhcnQ9ZnVuY3Rpb24oKXtpYnx8KGliPWEuc2V0SW50ZXJ2YWwobi5meC50aWNrLG4uZnguaW50ZXJ2YWwpKX0sbi5meC5zdG9wPWZ1bmN0aW9uKCl7YS5jbGVhckludGVydmFsKGliKSxpYj1udWxsfSxuLmZ4LnNwZWVkcz17c2xvdzo2MDAsZmFzdDoyMDAsX2RlZmF1bHQ6NDAwfSxuLmZuLmRlbGF5PWZ1bmN0aW9uKGIsYyl7cmV0dXJuIGI9bi5meD9uLmZ4LnNwZWVkc1tiXXx8YjpiLGM9Y3x8ImZ4Iix0aGlzLnF1ZXVlKGMsZnVuY3Rpb24oYyxkKXt2YXIgZT1hLnNldFRpbWVvdXQoYyxiKTtkLnN0b3A9ZnVuY3Rpb24oKXthLmNsZWFyVGltZW91dChlKX19KX0sZnVuY3Rpb24oKXt2YXIgYSxiPWQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxjPWQuY3JlYXRlRWxlbWVudCgiZGl2IiksZT1kLmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpLGY9ZS5hcHBlbmRDaGlsZChkLmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpKTtjPWQuY3JlYXRlRWxlbWVudCgiZGl2IiksYy5zZXRBdHRyaWJ1dGUoImNsYXNzTmFtZSIsInQiKSxjLmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IixhPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXSxiLnNldEF0dHJpYnV0ZSgidHlwZSIsImNoZWNrYm94IiksYy5hcHBlbmRDaGlsZChiKSxhPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXSxhLnN0eWxlLmNzc1RleHQ9InRvcDoxcHgiLGwuZ2V0U2V0QXR0cmlidXRlPSJ0IiE9PWMuY2xhc3NOYW1lLGwuc3R5bGU9L3RvcC8udGVzdChhLmdldEF0dHJpYnV0ZSgic3R5bGUiKSksbC5ocmVmTm9ybWFsaXplZD0iL2EiPT09YS5nZXRBdHRyaWJ1dGUoImhyZWYiKSxsLmNoZWNrT249ISFiLnZhbHVlLGwub3B0U2VsZWN0ZWQ9Zi5zZWxlY3RlZCxsLmVuY3R5cGU9ISFkLmNyZWF0ZUVsZW1lbnQoImZvcm0iKS5lbmN0eXBlLGUuZGlzYWJsZWQ9ITAsbC5vcHREaXNhYmxlZD0hZi5kaXNhYmxlZCxiPWQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxiLnNldEF0dHJpYnV0ZSgidmFsdWUiLCIiKSxsLmlucHV0PSIiPT09Yi5nZXRBdHRyaWJ1dGUoInZhbHVlIiksYi52YWx1ZT0idCIsYi5zZXRBdHRyaWJ1dGUoInR5cGUiLCJyYWRpbyIpLGwucmFkaW9WYWx1ZT0idCI9PT1iLnZhbHVlfSgpO3ZhciByYj0vXHIvZyxzYj0vW1x4MjBcdFxyXG5cZl0rL2c7bi5mbi5leHRlbmQoe3ZhbDpmdW5jdGlvbihhKXt2YXIgYixjLGQsZT10aGlzWzBdO3tpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPW4uaXNGdW5jdGlvbihhKSx0aGlzLmVhY2goZnVuY3Rpb24oYyl7dmFyIGU7MT09PXRoaXMubm9kZVR5cGUmJihlPWQ/YS5jYWxsKHRoaXMsYyxuKHRoaXMpLnZhbCgpKTphLG51bGw9PWU/ZT0iIjoibnVtYmVyIj09dHlwZW9mIGU/ZSs9IiI6bi5pc0FycmF5KGUpJiYoZT1uLm1hcChlLGZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hPyIiOmErIiJ9KSksYj1uLnZhbEhvb2tzW3RoaXMudHlwZV18fG4udmFsSG9va3NbdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXSxiJiYic2V0ImluIGImJnZvaWQgMCE9PWIuc2V0KHRoaXMsZSwidmFsdWUiKXx8KHRoaXMudmFsdWU9ZSkpfSk7aWYoZSlyZXR1cm4gYj1uLnZhbEhvb2tzW2UudHlwZV18fG4udmFsSG9va3NbZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXSxiJiYiZ2V0ImluIGImJnZvaWQgMCE9PShjPWIuZ2V0KGUsInZhbHVlIikpP2M6KGM9ZS52YWx1ZSwic3RyaW5nIj09dHlwZW9mIGM/Yy5yZXBsYWNlKHJiLCIiKTpudWxsPT1jPyIiOmMpfX19KSxuLmV4dGVuZCh7dmFsSG9va3M6e29wdGlvbjp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPW4uZmluZC5hdHRyKGEsInZhbHVlIik7cmV0dXJuIG51bGwhPWI/YjpuLnRyaW0obi50ZXh0KGEpKS5yZXBsYWNlKHNiLCIgIil9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbihhKXtmb3IodmFyIGIsYyxkPWEub3B0aW9ucyxlPWEuc2VsZWN0ZWRJbmRleCxmPSJzZWxlY3Qtb25lIj09PWEudHlwZXx8MD5lLGc9Zj9udWxsOltdLGg9Zj9lKzE6ZC5sZW5ndGgsaT0wPmU/aDpmP2U6MDtoPmk7aSsrKWlmKGM9ZFtpXSwoYy5zZWxlY3RlZHx8aT09PWUpJiYobC5vcHREaXNhYmxlZD8hYy5kaXNhYmxlZDpudWxsPT09Yy5nZXRBdHRyaWJ1dGUoImRpc2FibGVkIikpJiYoIWMucGFyZW50Tm9kZS5kaXNhYmxlZHx8IW4ubm9kZU5hbWUoYy5wYXJlbnROb2RlLCJvcHRncm91cCIpKSl7aWYoYj1uKGMpLnZhbCgpLGYpcmV0dXJuIGI7Zy5wdXNoKGIpfXJldHVybiBnfSxzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU9YS5vcHRpb25zLGY9bi5tYWtlQXJyYXkoYiksZz1lLmxlbmd0aDt3aGlsZShnLS0paWYoZD1lW2ddLG4uaW5BcnJheShuLnZhbEhvb2tzLm9wdGlvbi5nZXQoZCksZik+LTEpdHJ5e2Quc2VsZWN0ZWQ9Yz0hMH1jYXRjaChoKXtkLnNjcm9sbEhlaWdodH1lbHNlIGQuc2VsZWN0ZWQ9ITE7cmV0dXJuIGN8fChhLnNlbGVjdGVkSW5kZXg9LTEpLGV9fX19KSxuLmVhY2goWyJyYWRpbyIsImNoZWNrYm94Il0sZnVuY3Rpb24oKXtuLnZhbEhvb2tzW3RoaXNdPXtzZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbi5pc0FycmF5KGIpP2EuY2hlY2tlZD1uLmluQXJyYXkobihhKS52YWwoKSxiKT4tMTp2b2lkIDB9fSxsLmNoZWNrT258fChuLnZhbEhvb2tzW3RoaXNdLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09PWEuZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpPyJvbiI6YS52YWx1ZX0pfSk7dmFyIHRiLHViLHZiPW4uZXhwci5hdHRySGFuZGxlLHdiPS9eKD86Y2hlY2tlZHxzZWxlY3RlZCkkL2kseGI9bC5nZXRTZXRBdHRyaWJ1dGUseWI9bC5pbnB1dDtuLmZuLmV4dGVuZCh7YXR0cjpmdW5jdGlvbihhLGIpe3JldHVybiBZKHRoaXMsbi5hdHRyLGEsYixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtuLnJlbW92ZUF0dHIodGhpcyxhKX0pfX0pLG4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9YS5ub2RlVHlwZTtpZigzIT09ZiYmOCE9PWYmJjIhPT1mKXJldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgYS5nZXRBdHRyaWJ1dGU/bi5wcm9wKGEsYixjKTooMT09PWYmJm4uaXNYTUxEb2MoYSl8fChiPWIudG9Mb3dlckNhc2UoKSxlPW4uYXR0ckhvb2tzW2JdfHwobi5leHByLm1hdGNoLmJvb2wudGVzdChiKT91Yjp0YikpLHZvaWQgMCE9PWM/bnVsbD09PWM/dm9pZCBuLnJlbW92ZUF0dHIoYSxiKTplJiYic2V0ImluIGUmJnZvaWQgMCE9PShkPWUuc2V0KGEsYyxiKSk/ZDooYS5zZXRBdHRyaWJ1dGUoYixjKyIiKSxjKTplJiYiZ2V0ImluIGUmJm51bGwhPT0oZD1lLmdldChhLGIpKT9kOihkPW4uZmluZC5hdHRyKGEsYiksbnVsbD09ZD92b2lkIDA6ZCkpfSxhdHRySG9va3M6e3R5cGU6e3NldDpmdW5jdGlvbihhLGIpe2lmKCFsLnJhZGlvVmFsdWUmJiJyYWRpbyI9PT1iJiZuLm5vZGVOYW1lKGEsImlucHV0Iikpe3ZhciBjPWEudmFsdWU7cmV0dXJuIGEuc2V0QXR0cmlidXRlKCJ0eXBlIixiKSxjJiYoYS52YWx1ZT1jKSxifX19fSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlPTAsZj1iJiZiLm1hdGNoKEcpO2lmKGYmJjE9PT1hLm5vZGVUeXBlKXdoaWxlKGM9ZltlKytdKWQ9bi5wcm9wRml4W2NdfHxjLG4uZXhwci5tYXRjaC5ib29sLnRlc3QoYyk/eWImJnhifHwhd2IudGVzdChjKT9hW2RdPSExOmFbbi5jYW1lbENhc2UoImRlZmF1bHQtIitjKV09YVtkXT0hMTpuLmF0dHIoYSxjLCIiKSxhLnJlbW92ZUF0dHJpYnV0ZSh4Yj9jOmQpfX0pLHViPXtzZXQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBiPT09ITE/bi5yZW1vdmVBdHRyKGEsYyk6eWImJnhifHwhd2IudGVzdChjKT9hLnNldEF0dHJpYnV0ZSgheGImJm4ucHJvcEZpeFtjXXx8YyxjKTphW24uY2FtZWxDYXNlKCJkZWZhdWx0LSIrYyldPWFbY109ITAsY319LG4uZWFjaChuLmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1x3Ky9nKSxmdW5jdGlvbihhLGIpe3ZhciBjPXZiW2JdfHxuLmZpbmQuYXR0cjt5YiYmeGJ8fCF3Yi50ZXN0KGIpP3ZiW2JdPWZ1bmN0aW9uKGEsYixkKXt2YXIgZSxmO3JldHVybiBkfHwoZj12YltiXSx2YltiXT1lLGU9bnVsbCE9YyhhLGIsZCk/Yi50b0xvd2VyQ2FzZSgpOm51bGwsdmJbYl09ZiksZX06dmJbYl09ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjP3ZvaWQgMDphW24uY2FtZWxDYXNlKCJkZWZhdWx0LSIrYildP2IudG9Mb3dlckNhc2UoKTpudWxsfX0pLHliJiZ4Ynx8KG4uYXR0ckhvb2tzLnZhbHVlPXtzZXQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBuLm5vZGVOYW1lKGEsImlucHV0Iik/dm9pZChhLmRlZmF1bHRWYWx1ZT1iKTp0YiYmdGIuc2V0KGEsYixjKX19KSx4Ynx8KHRiPXtzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEuZ2V0QXR0cmlidXRlTm9kZShjKTtyZXR1cm4gZHx8YS5zZXRBdHRyaWJ1dGVOb2RlKGQ9YS5vd25lckRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZShjKSksZC52YWx1ZT1iKz0iIiwidmFsdWUiPT09Y3x8Yj09PWEuZ2V0QXR0cmlidXRlKGMpP2I6dm9pZCAwfX0sdmIuaWQ9dmIubmFtZT12Yi5jb29yZHM9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO3JldHVybiBjP3ZvaWQgMDooZD1hLmdldEF0dHJpYnV0ZU5vZGUoYikpJiYiIiE9PWQudmFsdWU/ZC52YWx1ZTpudWxsfSxuLnZhbEhvb2tzLmJ1dHRvbj17Z2V0OmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5nZXRBdHRyaWJ1dGVOb2RlKGIpO3JldHVybiBjJiZjLnNwZWNpZmllZD9jLnZhbHVlOnZvaWQgMH0sc2V0OnRiLnNldH0sbi5hdHRySG9va3MuY29udGVudGVkaXRhYmxlPXtzZXQ6ZnVuY3Rpb24oYSxiLGMpe3RiLnNldChhLCIiPT09Yj8hMTpiLGMpfX0sbi5lYWNoKFsid2lkdGgiLCJoZWlnaHQiXSxmdW5jdGlvbihhLGIpe24uYXR0ckhvb2tzW2JdPXtzZXQ6ZnVuY3Rpb24oYSxjKXtyZXR1cm4iIj09PWM/KGEuc2V0QXR0cmlidXRlKGIsImF1dG8iKSxjKTp2b2lkIDB9fX0pKSxsLnN0eWxlfHwobi5hdHRySG9va3Muc3R5bGU9e2dldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5zdHlsZS5jc3NUZXh0fHx2b2lkIDB9LHNldDpmdW5jdGlvbihhLGIpe3JldHVybiBhLnN0eWxlLmNzc1RleHQ9YisiIn19KTt2YXIgemI9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkL2ksQWI9L14oPzphfGFyZWEpJC9pO24uZm4uZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFkodGhpcyxuLnByb3AsYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZVByb3A6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9bi5wcm9wRml4W2FdfHxhLHRoaXMuZWFjaChmdW5jdGlvbigpe3RyeXt0aGlzW2FdPXZvaWQgMCxkZWxldGUgdGhpc1thXX1jYXRjaChiKXt9fSl9fSksbi5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLm5vZGVUeXBlO2lmKDMhPT1mJiY4IT09ZiYmMiE9PWYpcmV0dXJuIDE9PT1mJiZuLmlzWE1MRG9jKGEpfHwoYj1uLnByb3BGaXhbYl18fGIsZT1uLnByb3BIb29rc1tiXSksdm9pZCAwIT09Yz9lJiYic2V0ImluIGUmJnZvaWQgMCE9PShkPWUuc2V0KGEsYyxiKSk/ZDphW2JdPWM6ZSYmImdldCJpbiBlJiZudWxsIT09KGQ9ZS5nZXQoYSxiKSk/ZDphW2JdfSxwcm9wSG9va3M6e3RhYkluZGV4OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9bi5maW5kLmF0dHIoYSwidGFiaW5kZXgiKTtyZXR1cm4gYj9wYXJzZUludChiLDEwKTp6Yi50ZXN0KGEubm9kZU5hbWUpfHxBYi50ZXN0KGEubm9kZU5hbWUpJiZhLmhyZWY/MDotMX19fSxwcm9wRml4OnsiZm9yIjoiaHRtbEZvciIsImNsYXNzIjoiY2xhc3NOYW1lIn19KSxsLmhyZWZOb3JtYWxpemVkfHxuLmVhY2goWyJocmVmIiwic3JjIl0sZnVuY3Rpb24oYSxiKXtuLnByb3BIb29rc1tiXT17Z2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLmdldEF0dHJpYnV0ZShiLDQpfX19KSxsLm9wdFNlbGVjdGVkfHwobi5wcm9wSG9va3Muc2VsZWN0ZWQ9e2dldDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJihiLnNlbGVjdGVkSW5kZXgsYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCksbnVsbH0sc2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtiJiYoYi5zZWxlY3RlZEluZGV4LGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpfX0pLG4uZWFjaChbInRhYkluZGV4IiwicmVhZE9ubHkiLCJtYXhMZW5ndGgiLCJjZWxsU3BhY2luZyIsImNlbGxQYWRkaW5nIiwicm93U3BhbiIsImNvbFNwYW4iLCJ1c2VNYXAiLCJmcmFtZUJvcmRlciIsImNvbnRlbnRFZGl0YWJsZSJdLGZ1bmN0aW9uKCl7bi5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pLGwuZW5jdHlwZXx8KG4ucHJvcEZpeC5lbmN0eXBlPSJlbmNvZGluZyIpO3ZhciBCYj0vW1x0XHJcblxmXS9nO2Z1bmN0aW9uIENiKGEpe3JldHVybiBuLmF0dHIoYSwiY2xhc3MiKXx8IiJ9bi5mbi5leHRlbmQoe2FkZENsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGk9MDtpZihuLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtuKHRoaXMpLmFkZENsYXNzKGEuY2FsbCh0aGlzLGIsQ2IodGhpcykpKX0pO2lmKCJzdHJpbmciPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEcpfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPUNiKGMpLGQ9MT09PWMubm9kZVR5cGUmJigiICIrZSsiICIpLnJlcGxhY2UoQmIsIiAiKSl7Zz0wO3doaWxlKGY9YltnKytdKWQuaW5kZXhPZigiICIrZisiICIpPDAmJihkKz1mKyIgIik7aD1uLnRyaW0oZCksZSE9PWgmJm4uYXR0cihjLCJjbGFzcyIsaCl9fXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpPTA7aWYobi5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7bih0aGlzKS5yZW1vdmVDbGFzcyhhLmNhbGwodGhpcyxiLENiKHRoaXMpKSl9KTtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5hdHRyKCJjbGFzcyIsIiIpO2lmKCJzdHJpbmciPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEcpfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPUNiKGMpLGQ9MT09PWMubm9kZVR5cGUmJigiICIrZSsiICIpLnJlcGxhY2UoQmIsIiAiKSl7Zz0wO3doaWxlKGY9YltnKytdKXdoaWxlKGQuaW5kZXhPZigiICIrZisiICIpPi0xKWQ9ZC5yZXBsYWNlKCIgIitmKyIgIiwiICIpO2g9bi50cmltKGQpLGUhPT1oJiZuLmF0dHIoYywiY2xhc3MiLGgpfX1yZXR1cm4gdGhpc30sdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYTtyZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiBiJiYic3RyaW5nIj09PWM/Yj90aGlzLmFkZENsYXNzKGEpOnRoaXMucmVtb3ZlQ2xhc3MoYSk6bi5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihjKXtuKHRoaXMpLnRvZ2dsZUNsYXNzKGEuY2FsbCh0aGlzLGMsQ2IodGhpcyksYiksYil9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYixkLGUsZjtpZigic3RyaW5nIj09PWMpe2Q9MCxlPW4odGhpcyksZj1hLm1hdGNoKEcpfHxbXTt3aGlsZShiPWZbZCsrXSllLmhhc0NsYXNzKGIpP2UucmVtb3ZlQ2xhc3MoYik6ZS5hZGRDbGFzcyhiKX1lbHNlIHZvaWQgMCE9PWEmJiJib29sZWFuIiE9PWN8fChiPUNiKHRoaXMpLGImJm4uX2RhdGEodGhpcywiX19jbGFzc05hbWVfXyIsYiksbi5hdHRyKHRoaXMsImNsYXNzIixifHxhPT09ITE/IiI6bi5fZGF0YSh0aGlzLCJfX2NsYXNzTmFtZV9fIil8fCIiKSl9KX0saGFzQ2xhc3M6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPTA7Yj0iICIrYSsiICI7d2hpbGUoYz10aGlzW2QrK10paWYoMT09PWMubm9kZVR5cGUmJigiICIrQ2IoYykrIiAiKS5yZXBsYWNlKEJiLCIgIikuaW5kZXhPZihiKT4tMSlyZXR1cm4hMDtyZXR1cm4hMX19KSxuLmVhY2goImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCBsb2FkIHJlc2l6ZSBzY3JvbGwgdW5sb2FkIGNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIGNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IgY29udGV4dG1lbnUiLnNwbGl0KCIgIiksZnVuY3Rpb24oYSxiKXtuLmZuW2JdPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKGIsbnVsbCxhLGMpOnRoaXMudHJpZ2dlcihiKX19KSxuLmZuLmV4dGVuZCh7aG92ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGEpLm1vdXNlbGVhdmUoYnx8YSl9fSk7dmFyIERiPWEubG9jYXRpb24sRWI9bi5ub3coKSxGYj0vXD8vLEdiPS8oLCl8KFxbfHspfCh9fF0pfCIoPzpbXiJcXFxyXG5dfFxcWyJcXFwvYmZucnRdfFxcdVtcZGEtZkEtRl17NH0pKiJccyo6P3x0cnVlfGZhbHNlfG51bGx8LT8oPyEwXGQpXGQrKD86XC5cZCt8KSg/OltlRV1bKy1dP1xkK3wpL2c7bi5wYXJzZUpTT049ZnVuY3Rpb24oYil7aWYoYS5KU09OJiZhLkpTT04ucGFyc2UpcmV0dXJuIGEuSlNPTi5wYXJzZShiKyIiKTt2YXIgYyxkPW51bGwsZT1uLnRyaW0oYisiIik7cmV0dXJuIGUmJiFuLnRyaW0oZS5yZXBsYWNlKEdiLGZ1bmN0aW9uKGEsYixlLGYpe3JldHVybiBjJiZiJiYoZD0wKSwwPT09ZD9hOihjPWV8fGIsZCs9IWYtIWUsIiIpfSkpP0Z1bmN0aW9uKCJyZXR1cm4gIitlKSgpOm4uZXJyb3IoIkludmFsaWQgSlNPTjogIitiKX0sbi5wYXJzZVhNTD1mdW5jdGlvbihiKXt2YXIgYyxkO2lmKCFifHwic3RyaW5nIiE9dHlwZW9mIGIpcmV0dXJuIG51bGw7dHJ5e2EuRE9NUGFyc2VyPyhkPW5ldyBhLkRPTVBhcnNlcixjPWQucGFyc2VGcm9tU3RyaW5nKGIsInRleHQveG1sIikpOihjPW5ldyBhLkFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKSxjLmFzeW5jPSJmYWxzZSIsYy5sb2FkWE1MKGIpKX1jYXRjaChlKXtjPXZvaWQgMH1yZXR1cm4gYyYmYy5kb2N1bWVudEVsZW1lbnQmJiFjLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJwYXJzZXJlcnJvciIpLmxlbmd0aHx8bi5lcnJvcigiSW52YWxpZCBYTUw6ICIrYiksY307dmFyIEhiPS8jLiokLyxJYj0vKFs/Jl0pXz1bXiZdKi8sSmI9L14oLio/KTpbIFx0XSooW15cclxuXSopXHI/JC9nbSxLYj0vXig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxMYj0vXig/OkdFVHxIRUFEKSQvLE1iPS9eXC9cLy8sTmI9L14oW1x3ListXSs6KSg/OlwvXC8oPzpbXlwvPyNdKkB8KShbXlwvPyM6XSopKD86OihcZCspfCl8KS8sT2I9e30sUGI9e30sUWI9IiovIi5jb25jYXQoIioiKSxSYj1EYi5ocmVmLFNiPU5iLmV4ZWMoUmIudG9Mb3dlckNhc2UoKSl8fFtdO2Z1bmN0aW9uIFRiKGEpe3JldHVybiBmdW5jdGlvbihiLGMpeyJzdHJpbmciIT10eXBlb2YgYiYmKGM9YixiPSIqIik7dmFyIGQsZT0wLGY9Yi50b0xvd2VyQ2FzZSgpLm1hdGNoKEcpfHxbXTtpZihuLmlzRnVuY3Rpb24oYykpd2hpbGUoZD1mW2UrK10pIisiPT09ZC5jaGFyQXQoMCk/KGQ9ZC5zbGljZSgxKXx8IioiLChhW2RdPWFbZF18fFtdKS51bnNoaWZ0KGMpKTooYVtkXT1hW2RdfHxbXSkucHVzaChjKX19ZnVuY3Rpb24gVWIoYSxiLGMsZCl7dmFyIGU9e30sZj1hPT09UGI7ZnVuY3Rpb24gZyhoKXt2YXIgaTtyZXR1cm4gZVtoXT0hMCxuLmVhY2goYVtoXXx8W10sZnVuY3Rpb24oYSxoKXt2YXIgaj1oKGIsYyxkKTtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIGp8fGZ8fGVbal0/Zj8hKGk9aik6dm9pZCAwOihiLmRhdGFUeXBlcy51bnNoaWZ0KGopLGcoaiksITEpfSksaX1yZXR1cm4gZyhiLmRhdGFUeXBlc1swXSl8fCFlWyIqIl0mJmcoIioiKX1mdW5jdGlvbiBWYihhLGIpe3ZhciBjLGQsZT1uLmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9uc3x8e307Zm9yKGQgaW4gYil2b2lkIDAhPT1iW2RdJiYoKGVbZF0/YTpjfHwoYz17fSkpW2RdPWJbZF0pO3JldHVybiBjJiZuLmV4dGVuZCghMCxhLGMpLGF9ZnVuY3Rpb24gV2IoYSxiLGMpe3ZhciBkLGUsZixnLGg9YS5jb250ZW50cyxpPWEuZGF0YVR5cGVzO3doaWxlKCIqIj09PWlbMF0paS5zaGlmdCgpLHZvaWQgMD09PWUmJihlPWEubWltZVR5cGV8fGIuZ2V0UmVzcG9uc2VIZWFkZXIoIkNvbnRlbnQtVHlwZSIpKTtpZihlKWZvcihnIGluIGgpaWYoaFtnXSYmaFtnXS50ZXN0KGUpKXtpLnVuc2hpZnQoZyk7YnJlYWt9aWYoaVswXWluIGMpZj1pWzBdO2Vsc2V7Zm9yKGcgaW4gYyl7aWYoIWlbMF18fGEuY29udmVydGVyc1tnKyIgIitpWzBdXSl7Zj1nO2JyZWFrfWR8fChkPWcpfWY9Znx8ZH1yZXR1cm4gZj8oZiE9PWlbMF0mJmkudW5zaGlmdChmKSxjW2ZdKTp2b2lkIDB9ZnVuY3Rpb24gWGIoYSxiLGMsZCl7dmFyIGUsZixnLGgsaSxqPXt9LGs9YS5kYXRhVHlwZXMuc2xpY2UoKTtpZihrWzFdKWZvcihnIGluIGEuY29udmVydGVycylqW2cudG9Mb3dlckNhc2UoKV09YS5jb252ZXJ0ZXJzW2ddO2Y9ay5zaGlmdCgpO3doaWxlKGYpaWYoYS5yZXNwb25zZUZpZWxkc1tmXSYmKGNbYS5yZXNwb25zZUZpZWxkc1tmXV09YiksIWkmJmQmJmEuZGF0YUZpbHRlciYmKGI9YS5kYXRhRmlsdGVyKGIsYS5kYXRhVHlwZSkpLGk9ZixmPWsuc2hpZnQoKSlpZigiKiI9PT1mKWY9aTtlbHNlIGlmKCIqIiE9PWkmJmkhPT1mKXtpZihnPWpbaSsiICIrZl18fGpbIiogIitmXSwhZylmb3IoZSBpbiBqKWlmKGg9ZS5zcGxpdCgiICIpLGhbMV09PT1mJiYoZz1qW2krIiAiK2hbMF1dfHxqWyIqICIraFswXV0pKXtnPT09ITA/Zz1qW2VdOmpbZV0hPT0hMCYmKGY9aFswXSxrLnVuc2hpZnQoaFsxXSkpO2JyZWFrfWlmKGchPT0hMClpZihnJiZhWyJ0aHJvd3MiXSliPWcoYik7ZWxzZSB0cnl7Yj1nKGIpfWNhdGNoKGwpe3JldHVybntzdGF0ZToicGFyc2VyZXJyb3IiLGVycm9yOmc/bDoiTm8gY29udmVyc2lvbiBmcm9tICIraSsiIHRvICIrZn19fXJldHVybntzdGF0ZToic3VjY2VzcyIsZGF0YTpifX1uLmV4dGVuZCh7YWN0aXZlOjAsbGFzdE1vZGlmaWVkOnt9LGV0YWc6e30sYWpheFNldHRpbmdzOnt1cmw6UmIsdHlwZToiR0VUIixpc0xvY2FsOktiLnRlc3QoU2JbMV0pLGdsb2JhbDohMCxwcm9jZXNzRGF0YTohMCxhc3luYzohMCxjb250ZW50VHlwZToiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IixhY2NlcHRzOnsiKiI6UWIsdGV4dDoidGV4dC9wbGFpbiIsaHRtbDoidGV4dC9odG1sIix4bWw6ImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWwiLGpzb246ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCJ9LGNvbnRlbnRzOnt4bWw6L1xieG1sXGIvLGh0bWw6L1xiaHRtbC8sanNvbjovXGJqc29uXGIvfSxyZXNwb25zZUZpZWxkczp7eG1sOiJyZXNwb25zZVhNTCIsdGV4dDoicmVzcG9uc2VUZXh0Iixqc29uOiJyZXNwb25zZUpTT04ifSxjb252ZXJ0ZXJzOnsiKiB0ZXh0IjpTdHJpbmcsInRleHQgaHRtbCI6ITAsInRleHQganNvbiI6bi5wYXJzZUpTT04sInRleHQgeG1sIjpuLnBhcnNlWE1MfSxmbGF0T3B0aW9uczp7dXJsOiEwLGNvbnRleHQ6ITB9fSxhamF4U2V0dXA6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj9WYihWYihhLG4uYWpheFNldHRpbmdzKSxiKTpWYihuLmFqYXhTZXR0aW5ncyxhKX0sYWpheFByZWZpbHRlcjpUYihPYiksYWpheFRyYW5zcG9ydDpUYihQYiksYWpheDpmdW5jdGlvbihiLGMpeyJvYmplY3QiPT10eXBlb2YgYiYmKGM9YixiPXZvaWQgMCksYz1jfHx7fTt2YXIgZCxlLGYsZyxoLGksaixrLGw9bi5hamF4U2V0dXAoe30sYyksbT1sLmNvbnRleHR8fGwsbz1sLmNvbnRleHQmJihtLm5vZGVUeXBlfHxtLmpxdWVyeSk/bihtKTpuLmV2ZW50LHA9bi5EZWZlcnJlZCgpLHE9bi5DYWxsYmFja3MoIm9uY2UgbWVtb3J5Iikscj1sLnN0YXR1c0NvZGV8fHt9LHM9e30sdD17fSx1PTAsdj0iY2FuY2VsZWQiLHc9e3JlYWR5U3RhdGU6MCxnZXRSZXNwb25zZUhlYWRlcjpmdW5jdGlvbihhKXt2YXIgYjtpZigyPT09dSl7aWYoIWspe2s9e307d2hpbGUoYj1KYi5leGVjKGcpKWtbYlsxXS50b0xvd2VyQ2FzZSgpXT1iWzJdfWI9a1thLnRvTG93ZXJDYXNlKCldfXJldHVybiBudWxsPT1iP251bGw6Yn0sZ2V0QWxsUmVzcG9uc2VIZWFkZXJzOmZ1bmN0aW9uKCl7cmV0dXJuIDI9PT11P2c6bnVsbH0sc2V0UmVxdWVzdEhlYWRlcjpmdW5jdGlvbihhLGIpe3ZhciBjPWEudG9Mb3dlckNhc2UoKTtyZXR1cm4gdXx8KGE9dFtjXT10W2NdfHxhLHNbYV09YiksdGhpc30sb3ZlcnJpZGVNaW1lVHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gdXx8KGwubWltZVR5cGU9YSksdGhpc30sc3RhdHVzQ29kZTpmdW5jdGlvbihhKXt2YXIgYjtpZihhKWlmKDI+dSlmb3IoYiBpbiBhKXJbYl09W3JbYl0sYVtiXV07ZWxzZSB3LmFsd2F5cyhhW3cuc3RhdHVzXSk7cmV0dXJuIHRoaXN9LGFib3J0OmZ1bmN0aW9uKGEpe3ZhciBiPWF8fHY7cmV0dXJuIGomJmouYWJvcnQoYikseSgwLGIpLHRoaXN9fTtpZihwLnByb21pc2UodykuY29tcGxldGU9cS5hZGQsdy5zdWNjZXNzPXcuZG9uZSx3LmVycm9yPXcuZmFpbCxsLnVybD0oKGJ8fGwudXJsfHxSYikrIiIpLnJlcGxhY2UoSGIsIiIpLnJlcGxhY2UoTWIsU2JbMV0rIi8vIiksbC50eXBlPWMubWV0aG9kfHxjLnR5cGV8fGwubWV0aG9kfHxsLnR5cGUsbC5kYXRhVHlwZXM9bi50cmltKGwuZGF0YVR5cGV8fCIqIikudG9Mb3dlckNhc2UoKS5tYXRjaChHKXx8WyIiXSxudWxsPT1sLmNyb3NzRG9tYWluJiYoZD1OYi5leGVjKGwudXJsLnRvTG93ZXJDYXNlKCkpLGwuY3Jvc3NEb21haW49ISghZHx8ZFsxXT09PVNiWzFdJiZkWzJdPT09U2JbMl0mJihkWzNdfHwoImh0dHA6Ij09PWRbMV0/IjgwIjoiNDQzIikpPT09KFNiWzNdfHwoImh0dHA6Ij09PVNiWzFdPyI4MCI6IjQ0MyIpKSkpLGwuZGF0YSYmbC5wcm9jZXNzRGF0YSYmInN0cmluZyIhPXR5cGVvZiBsLmRhdGEmJihsLmRhdGE9bi5wYXJhbShsLmRhdGEsbC50cmFkaXRpb25hbCkpLFViKE9iLGwsYyx3KSwyPT09dSlyZXR1cm4gdztpPW4uZXZlbnQmJmwuZ2xvYmFsLGkmJjA9PT1uLmFjdGl2ZSsrJiZuLmV2ZW50LnRyaWdnZXIoImFqYXhTdGFydCIpLGwudHlwZT1sLnR5cGUudG9VcHBlckNhc2UoKSxsLmhhc0NvbnRlbnQ9IUxiLnRlc3QobC50eXBlKSxmPWwudXJsLGwuaGFzQ29udGVudHx8KGwuZGF0YSYmKGY9bC51cmwrPShGYi50ZXN0KGYpPyImIjoiPyIpK2wuZGF0YSxkZWxldGUgbC5kYXRhKSxsLmNhY2hlPT09ITEmJihsLnVybD1JYi50ZXN0KGYpP2YucmVwbGFjZShJYiwiJDFfPSIrRWIrKyk6ZisoRmIudGVzdChmKT8iJiI6Ij8iKSsiXz0iK0ViKyspKSxsLmlmTW9kaWZpZWQmJihuLmxhc3RNb2RpZmllZFtmXSYmdy5zZXRSZXF1ZXN0SGVhZGVyKCJJZi1Nb2RpZmllZC1TaW5jZSIsbi5sYXN0TW9kaWZpZWRbZl0pLG4uZXRhZ1tmXSYmdy5zZXRSZXF1ZXN0SGVhZGVyKCJJZi1Ob25lLU1hdGNoIixuLmV0YWdbZl0pKSwobC5kYXRhJiZsLmhhc0NvbnRlbnQmJmwuY29udGVudFR5cGUhPT0hMXx8Yy5jb250ZW50VHlwZSkmJncuc2V0UmVxdWVzdEhlYWRlcigiQ29udGVudC1UeXBlIixsLmNvbnRlbnRUeXBlKSx3LnNldFJlcXVlc3RIZWFkZXIoIkFjY2VwdCIsbC5kYXRhVHlwZXNbMF0mJmwuYWNjZXB0c1tsLmRhdGFUeXBlc1swXV0/bC5hY2NlcHRzW2wuZGF0YVR5cGVzWzBdXSsoIioiIT09bC5kYXRhVHlwZXNbMF0/IiwgIitRYisiOyBxPTAuMDEiOiIiKTpsLmFjY2VwdHNbIioiXSk7Zm9yKGUgaW4gbC5oZWFkZXJzKXcuc2V0UmVxdWVzdEhlYWRlcihlLGwuaGVhZGVyc1tlXSk7aWYobC5iZWZvcmVTZW5kJiYobC5iZWZvcmVTZW5kLmNhbGwobSx3LGwpPT09ITF8fDI9PT11KSlyZXR1cm4gdy5hYm9ydCgpO3Y9ImFib3J0Ijtmb3IoZSBpbntzdWNjZXNzOjEsZXJyb3I6MSxjb21wbGV0ZToxfSl3W2VdKGxbZV0pO2lmKGo9VWIoUGIsbCxjLHcpKXtpZih3LnJlYWR5U3RhdGU9MSxpJiZvLnRyaWdnZXIoImFqYXhTZW5kIixbdyxsXSksMj09PXUpcmV0dXJuIHc7bC5hc3luYyYmbC50aW1lb3V0PjAmJihoPWEuc2V0VGltZW91dChmdW5jdGlvbigpe3cuYWJvcnQoInRpbWVvdXQiKX0sbC50aW1lb3V0KSk7dHJ5e3U9MSxqLnNlbmQocyx5KX1jYXRjaCh4KXtpZighKDI+dSkpdGhyb3cgeDt5KC0xLHgpfX1lbHNlIHkoLTEsIk5vIFRyYW5zcG9ydCIpO2Z1bmN0aW9uIHkoYixjLGQsZSl7dmFyIGsscyx0LHYseCx5PWM7MiE9PXUmJih1PTIsaCYmYS5jbGVhclRpbWVvdXQoaCksaj12b2lkIDAsZz1lfHwiIix3LnJlYWR5U3RhdGU9Yj4wPzQ6MCxrPWI+PTIwMCYmMzAwPmJ8fDMwND09PWIsZCYmKHY9V2IobCx3LGQpKSx2PVhiKGwsdix3LGspLGs/KGwuaWZNb2RpZmllZCYmKHg9dy5nZXRSZXNwb25zZUhlYWRlcigiTGFzdC1Nb2RpZmllZCIpLHgmJihuLmxhc3RNb2RpZmllZFtmXT14KSx4PXcuZ2V0UmVzcG9uc2VIZWFkZXIoImV0YWciKSx4JiYobi5ldGFnW2ZdPXgpKSwyMDQ9PT1ifHwiSEVBRCI9PT1sLnR5cGU/eT0ibm9jb250ZW50IjozMDQ9PT1iP3k9Im5vdG1vZGlmaWVkIjooeT12LnN0YXRlLHM9di5kYXRhLHQ9di5lcnJvcixrPSF0KSk6KHQ9eSwhYiYmeXx8KHk9ImVycm9yIiwwPmImJihiPTApKSksdy5zdGF0dXM9Yix3LnN0YXR1c1RleHQ9KGN8fHkpKyIiLGs/cC5yZXNvbHZlV2l0aChtLFtzLHksd10pOnAucmVqZWN0V2l0aChtLFt3LHksdF0pLHcuc3RhdHVzQ29kZShyKSxyPXZvaWQgMCxpJiZvLnRyaWdnZXIoaz8iYWpheFN1Y2Nlc3MiOiJhamF4RXJyb3IiLFt3LGwsaz9zOnRdKSxxLmZpcmVXaXRoKG0sW3cseV0pLGkmJihvLnRyaWdnZXIoImFqYXhDb21wbGV0ZSIsW3csbF0pLC0tbi5hY3RpdmV8fG4uZXZlbnQudHJpZ2dlcigiYWpheFN0b3AiKSkpfXJldHVybiB3fSxnZXRKU09OOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbi5nZXQoYSxiLGMsImpzb24iKX0sZ2V0U2NyaXB0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIG4uZ2V0KGEsdm9pZCAwLGIsInNjcmlwdCIpfX0pLG4uZWFjaChbImdldCIsInBvc3QiXSxmdW5jdGlvbihhLGIpe25bYl09ZnVuY3Rpb24oYSxjLGQsZSl7cmV0dXJuIG4uaXNGdW5jdGlvbihjKSYmKGU9ZXx8ZCxkPWMsYz12b2lkIDApLG4uYWpheChuLmV4dGVuZCh7dXJsOmEsdHlwZTpiLGRhdGFUeXBlOmUsZGF0YTpjLHN1Y2Nlc3M6ZH0sbi5pc1BsYWluT2JqZWN0KGEpJiZhKSl9fSksbi5fZXZhbFVybD1mdW5jdGlvbihhKXtyZXR1cm4gbi5hamF4KHt1cmw6YSx0eXBlOiJHRVQiLGRhdGFUeXBlOiJzY3JpcHQiLGNhY2hlOiEwLGFzeW5jOiExLGdsb2JhbDohMSwidGhyb3dzIjohMH0pfSxuLmZuLmV4dGVuZCh7d3JhcEFsbDpmdW5jdGlvbihhKXtpZihuLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtuKHRoaXMpLndyYXBBbGwoYS5jYWxsKHRoaXMsYikpfSk7aWYodGhpc1swXSl7dmFyIGI9bihhLHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCkuY2xvbmUoITApO3RoaXNbMF0ucGFyZW50Tm9kZSYmYi5pbnNlcnRCZWZvcmUodGhpc1swXSksYi5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzO3doaWxlKGEuZmlyc3RDaGlsZCYmMT09PWEuZmlyc3RDaGlsZC5ub2RlVHlwZSlhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX0pLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKGEpe3JldHVybiBuLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGIpe24odGhpcykud3JhcElubmVyKGEuY2FsbCh0aGlzLGIpKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPW4odGhpcyksYz1iLmNvbnRlbnRzKCk7Yy5sZW5ndGg/Yy53cmFwQWxsKGEpOmIuYXBwZW5kKGEpfSl9LHdyYXA6ZnVuY3Rpb24oYSl7dmFyIGI9bi5pc0Z1bmN0aW9uKGEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYyl7bih0aGlzKS53cmFwQWxsKGI/YS5jYWxsKHRoaXMsYyk6YSl9KX0sdW53cmFwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChmdW5jdGlvbigpe24ubm9kZU5hbWUodGhpcywiYm9keSIpfHxuKHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KS5lbmQoKX19KTtmdW5jdGlvbiBZYihhKXtyZXR1cm4gYS5zdHlsZSYmYS5zdHlsZS5kaXNwbGF5fHxuLmNzcyhhLCJkaXNwbGF5Iil9ZnVuY3Rpb24gWmIoYSl7aWYoIW4uY29udGFpbnMoYS5vd25lckRvY3VtZW50fHxkLGEpKXJldHVybiEwO3doaWxlKGEmJjE9PT1hLm5vZGVUeXBlKXtpZigibm9uZSI9PT1ZYihhKXx8ImhpZGRlbiI9PT1hLnR5cGUpcmV0dXJuITA7YT1hLnBhcmVudE5vZGV9cmV0dXJuITF9bi5leHByLmZpbHRlcnMuaGlkZGVuPWZ1bmN0aW9uKGEpe3JldHVybiBsLnJlbGlhYmxlSGlkZGVuT2Zmc2V0cygpP2Eub2Zmc2V0V2lkdGg8PTAmJmEub2Zmc2V0SGVpZ2h0PD0wJiYhYS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aDpaYihhKX0sbi5leHByLmZpbHRlcnMudmlzaWJsZT1mdW5jdGlvbihhKXtyZXR1cm4hbi5leHByLmZpbHRlcnMuaGlkZGVuKGEpfTt2YXIgJGI9LyUyMC9nLF9iPS9cW1xdJC8sYWM9L1xyP1xuL2csYmM9L14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLGNjPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtmdW5jdGlvbiBkYyhhLGIsYyxkKXt2YXIgZTtpZihuLmlzQXJyYXkoYikpbi5lYWNoKGIsZnVuY3Rpb24oYixlKXtjfHxfYi50ZXN0KGEpP2QoYSxlKTpkYyhhKyJbIisoIm9iamVjdCI9PXR5cGVvZiBlJiZudWxsIT1lP2I6IiIpKyJdIixlLGMsZCl9KTtlbHNlIGlmKGN8fCJvYmplY3QiIT09bi50eXBlKGIpKWQoYSxiKTtlbHNlIGZvcihlIGluIGIpZGMoYSsiWyIrZSsiXSIsYltlXSxjLGQpfW4ucGFyYW09ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPVtdLGU9ZnVuY3Rpb24oYSxiKXtiPW4uaXNGdW5jdGlvbihiKT9iKCk6bnVsbD09Yj8iIjpiLGRbZC5sZW5ndGhdPWVuY29kZVVSSUNvbXBvbmVudChhKSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KGIpfTtpZih2b2lkIDA9PT1iJiYoYj1uLmFqYXhTZXR0aW5ncyYmbi5hamF4U2V0dGluZ3MudHJhZGl0aW9uYWwpLG4uaXNBcnJheShhKXx8YS5qcXVlcnkmJiFuLmlzUGxhaW5PYmplY3QoYSkpbi5lYWNoKGEsZnVuY3Rpb24oKXtlKHRoaXMubmFtZSx0aGlzLnZhbHVlKX0pO2Vsc2UgZm9yKGMgaW4gYSlkYyhjLGFbY10sYixlKTtyZXR1cm4gZC5qb2luKCImIikucmVwbGFjZSgkYiwiKyIpfSxuLmZuLmV4dGVuZCh7c2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIG4ucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT1uLnByb3AodGhpcywiZWxlbWVudHMiKTtyZXR1cm4gYT9uLm1ha2VBcnJheShhKTp0aGlzfSkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIGE9dGhpcy50eXBlO3JldHVybiB0aGlzLm5hbWUmJiFuKHRoaXMpLmlzKCI6ZGlzYWJsZWQiKSYmY2MudGVzdCh0aGlzLm5vZGVOYW1lKSYmIWJjLnRlc3QoYSkmJih0aGlzLmNoZWNrZWR8fCFaLnRlc3QoYSkpfSkubWFwKGZ1bmN0aW9uKGEsYil7dmFyIGM9bih0aGlzKS52YWwoKTtyZXR1cm4gbnVsbD09Yz9udWxsOm4uaXNBcnJheShjKT9uLm1hcChjLGZ1bmN0aW9uKGEpe3JldHVybntuYW1lOmIubmFtZSx2YWx1ZTphLnJlcGxhY2UoYWMsIlxyXG4iKX19KTp7bmFtZTpiLm5hbWUsdmFsdWU6Yy5yZXBsYWNlKGFjLCJcclxuIil9fSkuZ2V0KCl9fSksbi5hamF4U2V0dGluZ3MueGhyPXZvaWQgMCE9PWEuQWN0aXZlWE9iamVjdD9mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzTG9jYWw/aWMoKTpkLmRvY3VtZW50TW9kZT44P2hjKCk6L14oZ2V0fHBvc3R8aGVhZHxwdXR8ZGVsZXRlfG9wdGlvbnMpJC9pLnRlc3QodGhpcy50eXBlKSYmaGMoKXx8aWMoKX06aGM7dmFyIGVjPTAsZmM9e30sZ2M9bi5hamF4U2V0dGluZ3MueGhyKCk7YS5hdHRhY2hFdmVudCYmYS5hdHRhY2hFdmVudCgib251bmxvYWQiLGZ1bmN0aW9uKCl7Zm9yKHZhciBhIGluIGZjKWZjW2FdKHZvaWQgMCwhMCl9KSxsLmNvcnM9ISFnYyYmIndpdGhDcmVkZW50aWFscyJpbiBnYyxnYz1sLmFqYXg9ISFnYyxnYyYmbi5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKGIpe2lmKCFiLmNyb3NzRG9tYWlufHxsLmNvcnMpe3ZhciBjO3JldHVybntzZW5kOmZ1bmN0aW9uKGQsZSl7dmFyIGYsZz1iLnhocigpLGg9KytlYztpZihnLm9wZW4oYi50eXBlLGIudXJsLGIuYXN5bmMsYi51c2VybmFtZSxiLnBhc3N3b3JkKSxiLnhockZpZWxkcylmb3IoZiBpbiBiLnhockZpZWxkcylnW2ZdPWIueGhyRmllbGRzW2ZdO2IubWltZVR5cGUmJmcub3ZlcnJpZGVNaW1lVHlwZSYmZy5vdmVycmlkZU1pbWVUeXBlKGIubWltZVR5cGUpLGIuY3Jvc3NEb21haW58fGRbIlgtUmVxdWVzdGVkLVdpdGgiXXx8KGRbIlgtUmVxdWVzdGVkLVdpdGgiXT0iWE1MSHR0cFJlcXVlc3QiKTtmb3IoZiBpbiBkKXZvaWQgMCE9PWRbZl0mJmcuc2V0UmVxdWVzdEhlYWRlcihmLGRbZl0rIiIpO2cuc2VuZChiLmhhc0NvbnRlbnQmJmIuZGF0YXx8bnVsbCksYz1mdW5jdGlvbihhLGQpe3ZhciBmLGksajtpZihjJiYoZHx8ND09PWcucmVhZHlTdGF0ZSkpaWYoZGVsZXRlIGZjW2hdLGM9dm9pZCAwLGcub25yZWFkeXN0YXRlY2hhbmdlPW4ubm9vcCxkKTQhPT1nLnJlYWR5U3RhdGUmJmcuYWJvcnQoKTtlbHNle2o9e30sZj1nLnN0YXR1cywic3RyaW5nIj09dHlwZW9mIGcucmVzcG9uc2VUZXh0JiYoai50ZXh0PWcucmVzcG9uc2VUZXh0KTt0cnl7aT1nLnN0YXR1c1RleHR9Y2F0Y2goayl7aT0iIn1mfHwhYi5pc0xvY2FsfHxiLmNyb3NzRG9tYWluPzEyMjM9PT1mJiYoZj0yMDQpOmY9ai50ZXh0PzIwMDo0MDR9aiYmZShmLGksaixnLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKX0sYi5hc3luYz80PT09Zy5yZWFkeVN0YXRlP2Euc2V0VGltZW91dChjKTpnLm9ucmVhZHlzdGF0ZWNoYW5nZT1mY1toXT1jOmMoKX0sYWJvcnQ6ZnVuY3Rpb24oKXtjJiZjKHZvaWQgMCwhMCl9fX19KTtmdW5jdGlvbiBoYygpe3RyeXtyZXR1cm4gbmV3IGEuWE1MSHR0cFJlcXVlc3R9Y2F0Y2goYil7fX1mdW5jdGlvbiBpYygpe3RyeXtyZXR1cm4gbmV3IGEuQWN0aXZlWE9iamVjdCgiTWljcm9zb2Z0LlhNTEhUVFAiKX1jYXRjaChiKXt9fW4uYWpheFNldHVwKHthY2NlcHRzOntzY3JpcHQ6InRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgYXBwbGljYXRpb24vZWNtYXNjcmlwdCwgYXBwbGljYXRpb24veC1lY21hc2NyaXB0In0sY29udGVudHM6e3NjcmlwdDovXGIoPzpqYXZhfGVjbWEpc2NyaXB0XGIvfSxjb252ZXJ0ZXJzOnsidGV4dCBzY3JpcHQiOmZ1bmN0aW9uKGEpe3JldHVybiBuLmdsb2JhbEV2YWwoYSksYX19fSksbi5hamF4UHJlZmlsdGVyKCJzY3JpcHQiLGZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEuY2FjaGUmJihhLmNhY2hlPSExKSxhLmNyb3NzRG9tYWluJiYoYS50eXBlPSJHRVQiLGEuZ2xvYmFsPSExKX0pLG4uYWpheFRyYW5zcG9ydCgic2NyaXB0IixmdW5jdGlvbihhKXtpZihhLmNyb3NzRG9tYWluKXt2YXIgYixjPWQuaGVhZHx8bigiaGVhZCIpWzBdfHxkLmRvY3VtZW50RWxlbWVudDtyZXR1cm57c2VuZDpmdW5jdGlvbihlLGYpe2I9ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKSxiLmFzeW5jPSEwLGEuc2NyaXB0Q2hhcnNldCYmKGIuY2hhcnNldD1hLnNjcmlwdENoYXJzZXQpLGIuc3JjPWEudXJsLGIub25sb2FkPWIub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKGEsYyl7KGN8fCFiLnJlYWR5U3RhdGV8fC9sb2FkZWR8Y29tcGxldGUvLnRlc3QoYi5yZWFkeVN0YXRlKSkmJihiLm9ubG9hZD1iLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLGI9bnVsbCxjfHxmKDIwMCwic3VjY2VzcyIpKX0sYy5pbnNlcnRCZWZvcmUoYixjLmZpcnN0Q2hpbGQpfSxhYm9ydDpmdW5jdGlvbigpe2ImJmIub25sb2FkKHZvaWQgMCwhMCl9fX19KTt2YXIgamM9W10sa2M9Lyg9KVw/KD89JnwkKXxcP1w/LztuLmFqYXhTZXR1cCh7anNvbnA6ImNhbGxiYWNrIixqc29ucENhbGxiYWNrOmZ1bmN0aW9uKCl7dmFyIGE9amMucG9wKCl8fG4uZXhwYW5kbysiXyIrRWIrKztyZXR1cm4gdGhpc1thXT0hMCxhfX0pLG4uYWpheFByZWZpbHRlcigianNvbiBqc29ucCIsZnVuY3Rpb24oYixjLGQpe3ZhciBlLGYsZyxoPWIuanNvbnAhPT0hMSYmKGtjLnRlc3QoYi51cmwpPyJ1cmwiOiJzdHJpbmciPT10eXBlb2YgYi5kYXRhJiYwPT09KGIuY29udGVudFR5cGV8fCIiKS5pbmRleE9mKCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKSYma2MudGVzdChiLmRhdGEpJiYiZGF0YSIpO3JldHVybiBofHwianNvbnAiPT09Yi5kYXRhVHlwZXNbMF0/KGU9Yi5qc29ucENhbGxiYWNrPW4uaXNGdW5jdGlvbihiLmpzb25wQ2FsbGJhY2spP2IuanNvbnBDYWxsYmFjaygpOmIuanNvbnBDYWxsYmFjayxoP2JbaF09YltoXS5yZXBsYWNlKGtjLCIkMSIrZSk6Yi5qc29ucCE9PSExJiYoYi51cmwrPShGYi50ZXN0KGIudXJsKT8iJiI6Ij8iKStiLmpzb25wKyI9IitlKSxiLmNvbnZlcnRlcnNbInNjcmlwdCBqc29uIl09ZnVuY3Rpb24oKXtyZXR1cm4gZ3x8bi5lcnJvcihlKyIgd2FzIG5vdCBjYWxsZWQiKSxnWzBdfSxiLmRhdGFUeXBlc1swXT0ianNvbiIsZj1hW2VdLGFbZV09ZnVuY3Rpb24oKXtnPWFyZ3VtZW50c30sZC5hbHdheXMoZnVuY3Rpb24oKXt2b2lkIDA9PT1mP24oYSkucmVtb3ZlUHJvcChlKTphW2VdPWYsYltlXSYmKGIuanNvbnBDYWxsYmFjaz1jLmpzb25wQ2FsbGJhY2ssamMucHVzaChlKSksZyYmbi5pc0Z1bmN0aW9uKGYpJiZmKGdbMF0pLGc9Zj12b2lkIDB9KSwic2NyaXB0Iik6dm9pZCAwfSksbi5wYXJzZUhUTUw9ZnVuY3Rpb24oYSxiLGMpe2lmKCFhfHwic3RyaW5nIiE9dHlwZW9mIGEpcmV0dXJuIG51bGw7ImJvb2xlYW4iPT10eXBlb2YgYiYmKGM9YixiPSExKSxiPWJ8fGQ7dmFyIGU9eC5leGVjKGEpLGY9IWMmJltdO3JldHVybiBlP1tiLmNyZWF0ZUVsZW1lbnQoZVsxXSldOihlPWphKFthXSxiLGYpLGYmJmYubGVuZ3RoJiZuKGYpLnJlbW92ZSgpLG4ubWVyZ2UoW10sZS5jaGlsZE5vZGVzKSl9O3ZhciBsYz1uLmZuLmxvYWQ7bi5mbi5sb2FkPWZ1bmN0aW9uKGEsYixjKXtpZigic3RyaW5nIiE9dHlwZW9mIGEmJmxjKXJldHVybiBsYy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIGQsZSxmLGc9dGhpcyxoPWEuaW5kZXhPZigiICIpO3JldHVybiBoPi0xJiYoZD1uLnRyaW0oYS5zbGljZShoLGEubGVuZ3RoKSksYT1hLnNsaWNlKDAsaCkpLG4uaXNGdW5jdGlvbihiKT8oYz1iLGI9dm9pZCAwKTpiJiYib2JqZWN0Ij09dHlwZW9mIGImJihlPSJQT1NUIiksZy5sZW5ndGg+MCYmbi5hamF4KHt1cmw6YSx0eXBlOmV8fCJHRVQiLGRhdGFUeXBlOiJodG1sIixkYXRhOmJ9KS5kb25lKGZ1bmN0aW9uKGEpe2Y9YXJndW1lbnRzLGcuaHRtbChkP24oIjxkaXY+IikuYXBwZW5kKG4ucGFyc2VIVE1MKGEpKS5maW5kKGQpOmEpfSkuYWx3YXlzKGMmJmZ1bmN0aW9uKGEsYil7Zy5lYWNoKGZ1bmN0aW9uKCl7Yy5hcHBseSh0aGlzLGZ8fFthLnJlc3BvbnNlVGV4dCxiLGFdKX0pfSksdGhpc30sbi5lYWNoKFsiYWpheFN0YXJ0IiwiYWpheFN0b3AiLCJhamF4Q29tcGxldGUiLCJhamF4RXJyb3IiLCJhamF4U3VjY2VzcyIsImFqYXhTZW5kIl0sZnVuY3Rpb24oYSxiKXtuLmZuW2JdPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm9uKGIsYSl9fSksbi5leHByLmZpbHRlcnMuYW5pbWF0ZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIG4uZ3JlcChuLnRpbWVycyxmdW5jdGlvbihiKXtyZXR1cm4gYT09PWIuZWxlbX0pLmxlbmd0aH07ZnVuY3Rpb24gbWMoYSl7cmV0dXJuIG4uaXNXaW5kb3coYSk/YTo5PT09YS5ub2RlVHlwZT9hLmRlZmF1bHRWaWV3fHxhLnBhcmVudFdpbmRvdzohMX1uLm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoLGksaixrPW4uY3NzKGEsInBvc2l0aW9uIiksbD1uKGEpLG09e307InN0YXRpYyI9PT1rJiYoYS5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiKSxoPWwub2Zmc2V0KCksZj1uLmNzcyhhLCJ0b3AiKSxpPW4uY3NzKGEsImxlZnQiKSxqPSgiYWJzb2x1dGUiPT09a3x8ImZpeGVkIj09PWspJiZuLmluQXJyYXkoImF1dG8iLFtmLGldKT4tMSxqPyhkPWwucG9zaXRpb24oKSxnPWQudG9wLGU9ZC5sZWZ0KTooZz1wYXJzZUZsb2F0KGYpfHwwLGU9cGFyc2VGbG9hdChpKXx8MCksbi5pc0Z1bmN0aW9uKGIpJiYoYj1iLmNhbGwoYSxjLG4uZXh0ZW5kKHt9LGgpKSksbnVsbCE9Yi50b3AmJihtLnRvcD1iLnRvcC1oLnRvcCtnKSxudWxsIT1iLmxlZnQmJihtLmxlZnQ9Yi5sZWZ0LWgubGVmdCtlKSwidXNpbmciaW4gYj9iLnVzaW5nLmNhbGwoYSxtKTpsLmNzcyhtKX19LG4uZm4uZXh0ZW5kKHtvZmZzZXQ6ZnVuY3Rpb24oYSl7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdm9pZCAwPT09YT90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihiKXtuLm9mZnNldC5zZXRPZmZzZXQodGhpcyxhLGIpfSk7dmFyIGIsYyxkPXt0b3A6MCxsZWZ0OjB9LGU9dGhpc1swXSxmPWUmJmUub3duZXJEb2N1bWVudDtpZihmKXJldHVybiBiPWYuZG9jdW1lbnRFbGVtZW50LG4uY29udGFpbnMoYixlKT8oInVuZGVmaW5lZCIhPXR5cGVvZiBlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCYmKGQ9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSksYz1tYyhmKSx7dG9wOmQudG9wKyhjLnBhZ2VZT2Zmc2V0fHxiLnNjcm9sbFRvcCktKGIuY2xpZW50VG9wfHwwKSxsZWZ0OmQubGVmdCsoYy5wYWdlWE9mZnNldHx8Yi5zY3JvbGxMZWZ0KS0oYi5jbGllbnRMZWZ0fHwwKX0pOmR9LHBvc2l0aW9uOmZ1bmN0aW9uKCl7aWYodGhpc1swXSl7dmFyIGEsYixjPXt0b3A6MCxsZWZ0OjB9LGQ9dGhpc1swXTtyZXR1cm4iZml4ZWQiPT09bi5jc3MoZCwicG9zaXRpb24iKT9iPWQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk6KGE9dGhpcy5vZmZzZXRQYXJlbnQoKSxiPXRoaXMub2Zmc2V0KCksbi5ub2RlTmFtZShhWzBdLCJodG1sIil8fChjPWEub2Zmc2V0KCkpLGMudG9wKz1uLmNzcyhhWzBdLCJib3JkZXJUb3BXaWR0aCIsITApLGMubGVmdCs9bi5jc3MoYVswXSwiYm9yZGVyTGVmdFdpZHRoIiwhMCkpLHt0b3A6Yi50b3AtYy50b3Atbi5jc3MoZCwibWFyZ2luVG9wIiwhMCksbGVmdDpiLmxlZnQtYy5sZWZ0LW4uY3NzKGQsIm1hcmdpbkxlZnQiLCEwKX19fSxvZmZzZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9mZnNldFBhcmVudDt3aGlsZShhJiYhbi5ub2RlTmFtZShhLCJodG1sIikmJiJzdGF0aWMiPT09bi5jc3MoYSwicG9zaXRpb24iKSlhPWEub2Zmc2V0UGFyZW50O3JldHVybiBhfHxRYX0pfX0pLG4uZWFjaCh7c2Nyb2xsTGVmdDoicGFnZVhPZmZzZXQiLHNjcm9sbFRvcDoicGFnZVlPZmZzZXQifSxmdW5jdGlvbihhLGIpe3ZhciBjPS9ZLy50ZXN0KGIpO24uZm5bYV09ZnVuY3Rpb24oZCl7cmV0dXJuIFkodGhpcyxmdW5jdGlvbihhLGQsZSl7dmFyIGY9bWMoYSk7cmV0dXJuIHZvaWQgMD09PWU/Zj9iIGluIGY/ZltiXTpmLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtkXTphW2RdOnZvaWQoZj9mLnNjcm9sbFRvKGM/bihmKS5zY3JvbGxMZWZ0KCk6ZSxjP2U6bihmKS5zY3JvbGxUb3AoKSk6YVtkXT1lKX0sYSxkLGFyZ3VtZW50cy5sZW5ndGgsbnVsbCl9fSksbi5lYWNoKFsidG9wIiwibGVmdCJdLGZ1bmN0aW9uKGEsYil7bi5jc3NIb29rc1tiXT1VYShsLnBpeGVsUG9zaXRpb24sZnVuY3Rpb24oYSxjKXtyZXR1cm4gYz8oYz1TYShhLGIpLE9hLnRlc3QoYyk/bihhKS5wb3NpdGlvbigpW2JdKyJweCI6Yyk6dm9pZCAwfSl9KSxuLmVhY2goe0hlaWdodDoiaGVpZ2h0IixXaWR0aDoid2lkdGgifSxmdW5jdGlvbihhLGIpe24uZWFjaCh7CnBhZGRpbmc6ImlubmVyIithLGNvbnRlbnQ6YiwiIjoib3V0ZXIiK2F9LGZ1bmN0aW9uKGMsZCl7bi5mbltkXT1mdW5jdGlvbihkLGUpe3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgmJihjfHwiYm9vbGVhbiIhPXR5cGVvZiBkKSxnPWN8fChkPT09ITB8fGU9PT0hMD8ibWFyZ2luIjoiYm9yZGVyIik7cmV0dXJuIFkodGhpcyxmdW5jdGlvbihiLGMsZCl7dmFyIGU7cmV0dXJuIG4uaXNXaW5kb3coYik/Yi5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbImNsaWVudCIrYV06OT09PWIubm9kZVR5cGU/KGU9Yi5kb2N1bWVudEVsZW1lbnQsTWF0aC5tYXgoYi5ib2R5WyJzY3JvbGwiK2FdLGVbInNjcm9sbCIrYV0sYi5ib2R5WyJvZmZzZXQiK2FdLGVbIm9mZnNldCIrYV0sZVsiY2xpZW50IithXSkpOnZvaWQgMD09PWQ/bi5jc3MoYixjLGcpOm4uc3R5bGUoYixjLGQsZyl9LGIsZj9kOnZvaWQgMCxmLG51bGwpfX0pfSksbi5mbi5leHRlbmQoe2JpbmQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aGlzLm9uKGEsbnVsbCxiLGMpfSx1bmJpbmQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vZmYoYSxudWxsLGIpfSxkZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihiLGEsYyxkKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMub2ZmKGEsIioqIik6dGhpcy5vZmYoYixhfHwiKioiLGMpfX0pLG4uZm4uc2l6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aH0sbi5mbi5hbmRTZWxmPW4uZm4uYWRkQmFjaywiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoImpxdWVyeSIsW10sZnVuY3Rpb24oKXtyZXR1cm4gbn0pO3ZhciBuYz1hLmpRdWVyeSxvYz1hLiQ7cmV0dXJuIG4ubm9Db25mbGljdD1mdW5jdGlvbihiKXtyZXR1cm4gYS4kPT09biYmKGEuJD1vYyksYiYmYS5qUXVlcnk9PT1uJiYoYS5qUXVlcnk9bmMpLG59LGJ8fChhLmpRdWVyeT1hLiQ9biksbn0pOwo="},{"meta":{"name":"sweetalert2.all.min.js","url":"https://lib.baomitu.com/limonte-sweetalert2/11.4.7/sweetalert2.all.min.js","ts":1676036817550,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"echarts.min.js","url":"https://lib.baomitu.com/echarts/4.6.0/echarts.min.js","ts":1676036817578,"mimetype":"text/javascript"},"source":"Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCgohZnVuY3Rpb24odCxlKXsib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlP2UoZXhwb3J0cyk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZSk6ZSh0LmVjaGFydHM9e30pfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT0yMzExLG49ZnVuY3Rpb24oKXtyZXR1cm4gZSsrfSx2PSJvYmplY3QiPT10eXBlb2Ygd3gmJiJmdW5jdGlvbiI9PXR5cGVvZiB3eC5nZXRTeXN0ZW1JbmZvU3luYz97YnJvd3Nlcjp7fSxvczp7fSxub2RlOiExLHd4YTohMCxjYW52YXNTdXBwb3J0ZWQ6ITAsc3ZnU3VwcG9ydGVkOiExLHRvdWNoRXZlbnRzU3VwcG9ydGVkOiEwLGRvbVN1cHBvcnRlZDohMX06InVuZGVmaW5lZCI9PXR5cGVvZiBkb2N1bWVudCYmInVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmP3ticm93c2VyOnt9LG9zOnt9LG5vZGU6ITEsd29ya2VyOiEwLGNhbnZhc1N1cHBvcnRlZDohMCxkb21TdXBwb3J0ZWQ6ITF9OiJ1bmRlZmluZWQiPT10eXBlb2YgbmF2aWdhdG9yP3ticm93c2VyOnt9LG9zOnt9LG5vZGU6ITAsd29ya2VyOiExLGNhbnZhc1N1cHBvcnRlZDohMCxzdmdTdXBwb3J0ZWQ6ITAsZG9tU3VwcG9ydGVkOiExfTpmdW5jdGlvbih0KXt2YXIgZT17fSxpPXQubWF0Y2goL0ZpcmVmb3hcLyhbXGQuXSspLyksbj10Lm1hdGNoKC9NU0lFXHMoW1xkLl0rKS8pfHx0Lm1hdGNoKC9UcmlkZW50XC8uKz9ydjooKFtcZC5dKykpLyksbz10Lm1hdGNoKC9FZGdlXC8oW1xkLl0rKS8pLGE9L21pY3JvbWVzc2VuZ2VyL2kudGVzdCh0KTtpJiYoZS5maXJlZm94PSEwLGUudmVyc2lvbj1pWzFdKTtuJiYoZS5pZT0hMCxlLnZlcnNpb249blsxXSk7byYmKGUuZWRnZT0hMCxlLnZlcnNpb249b1sxXSk7YSYmKGUud2VDaGF0PSEwKTtyZXR1cm57YnJvd3NlcjplLG9zOnt9LG5vZGU6ITEsY2FudmFzU3VwcG9ydGVkOiEhZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIikuZ2V0Q29udGV4dCxzdmdTdXBwb3J0ZWQ6InVuZGVmaW5lZCIhPXR5cGVvZiBTVkdSZWN0LHRvdWNoRXZlbnRzU3VwcG9ydGVkOiJvbnRvdWNoc3RhcnQiaW4gd2luZG93JiYhZS5pZSYmIWUuZWRnZSxwb2ludGVyRXZlbnRzU3VwcG9ydGVkOiJvbnBvaW50ZXJkb3duImluIHdpbmRvdyYmKGUuZWRnZXx8ZS5pZSYmMTE8PWUudmVyc2lvbiksZG9tU3VwcG9ydGVkOiJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnR9fShuYXZpZ2F0b3IudXNlckFnZW50KTt2YXIgcz17IltvYmplY3QgRnVuY3Rpb25dIjoxLCJbb2JqZWN0IFJlZ0V4cF0iOjEsIltvYmplY3QgRGF0ZV0iOjEsIltvYmplY3QgRXJyb3JdIjoxLCJbb2JqZWN0IENhbnZhc0dyYWRpZW50XSI6MSwiW29iamVjdCBDYW52YXNQYXR0ZXJuXSI6MSwiW29iamVjdCBJbWFnZV0iOjEsIltvYmplY3QgQ2FudmFzXSI6MX0sbD17IltvYmplY3QgSW50OEFycmF5XSI6MSwiW29iamVjdCBVaW50OEFycmF5XSI6MSwiW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0iOjEsIltvYmplY3QgSW50MTZBcnJheV0iOjEsIltvYmplY3QgVWludDE2QXJyYXldIjoxLCJbb2JqZWN0IEludDMyQXJyYXldIjoxLCJbb2JqZWN0IFVpbnQzMkFycmF5XSI6MSwiW29iamVjdCBGbG9hdDMyQXJyYXldIjoxLCJbb2JqZWN0IEZsb2F0NjRBcnJheV0iOjF9LHU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPUFycmF5LnByb3RvdHlwZSxyPWkuZm9yRWFjaCxoPWkuZmlsdGVyLG89aS5zbGljZSxjPWkubWFwLGQ9aS5yZWR1Y2UsYT17fTtmdW5jdGlvbiBmKHQsZSl7ImNyZWF0ZUNhbnZhcyI9PT10JiYoeT1udWxsKSxhW3RdPWV9ZnVuY3Rpb24gRCh0KXtpZihudWxsPT10fHwib2JqZWN0IiE9dHlwZW9mIHQpcmV0dXJuIHQ7dmFyIGU9dCxpPXUuY2FsbCh0KTtpZigiW29iamVjdCBBcnJheV0iPT09aSl7aWYoISQodCkpe2U9W107Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWVbbl09RCh0W25dKX19ZWxzZSBpZihsW2ldKXtpZighJCh0KSl7dmFyIGE9dC5jb25zdHJ1Y3RvcjtpZih0LmNvbnN0cnVjdG9yLmZyb20pZT1hLmZyb20odCk7ZWxzZXtlPW5ldyBhKHQubGVuZ3RoKTtmb3Iobj0wLG89dC5sZW5ndGg7bjxvO24rKyllW25dPUQodFtuXSl9fX1lbHNlIGlmKCFzW2ldJiYhJCh0KSYmIUcodCkpZm9yKHZhciByIGluIGU9e30sdCl0Lmhhc093blByb3BlcnR5KHIpJiYoZVtyXT1EKHRbcl0pKTtyZXR1cm4gZX1mdW5jdGlvbiBtKHQsZSxpKXtpZighUihlKXx8IVIodCkpcmV0dXJuIGk/RChlKTp0O2Zvcih2YXIgbiBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkobikpe3ZhciBvPXRbbl0sYT1lW25dOyFSKGEpfHwhUihvKXx8ayhhKXx8ayhvKXx8RyhhKXx8RyhvKXx8QihhKXx8QihvKXx8JChhKXx8JChvKT8haSYmbiBpbiB0fHwodFtuXT1EKGVbbl0pKTptKG8sYSxpKX1yZXR1cm4gdH1mdW5jdGlvbiBwKHQsZSl7Zm9yKHZhciBpPXRbMF0sbj0xLG89dC5sZW5ndGg7bjxvO24rKylpPW0oaSx0W25dLGUpO3JldHVybiBpfWZ1bmN0aW9uIEwodCxlKXtmb3IodmFyIGkgaW4gZSllLmhhc093blByb3BlcnR5KGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH1mdW5jdGlvbiBDKHQsZSxpKXtmb3IodmFyIG4gaW4gZSllLmhhc093blByb3BlcnR5KG4pJiYoaT9udWxsIT1lW25dOm51bGw9PXRbbl0pJiYodFtuXT1lW25dKTtyZXR1cm4gdH1mdW5jdGlvbiBnKCl7cmV0dXJuIGEuY3JlYXRlQ2FudmFzKCl9dmFyIHk7ZnVuY3Rpb24geCgpe3JldHVybiB5PXl8fGcoKS5nZXRDb250ZXh0KCIyZCIpfWZ1bmN0aW9uIF8odCxlKXtpZih0KXtpZih0LmluZGV4T2YpcmV0dXJuIHQuaW5kZXhPZihlKTtmb3IodmFyIGk9MCxuPXQubGVuZ3RoO2k8bjtpKyspaWYodFtpXT09PWUpcmV0dXJuIGl9cmV0dXJuLTF9ZnVuY3Rpb24gdyh0LGUpe3ZhciBpPXQucHJvdG90eXBlO2Z1bmN0aW9uIG4oKXt9Zm9yKHZhciBvIGluIG4ucHJvdG90eXBlPWUucHJvdG90eXBlLHQucHJvdG90eXBlPW5ldyBuLGkpaS5oYXNPd25Qcm9wZXJ0eShvKSYmKHQucHJvdG90eXBlW29dPWlbb10pOyh0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10KS5zdXBlckNsYXNzPWV9ZnVuY3Rpb24gYih0LGUsaSl7Qyh0PSJwcm90b3R5cGUiaW4gdD90LnByb3RvdHlwZTp0LGU9InByb3RvdHlwZSJpbiBlP2UucHJvdG90eXBlOmUsaSl9ZnVuY3Rpb24gUCh0KXtpZih0KXJldHVybiJzdHJpbmciIT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aH1mdW5jdGlvbiBFKHQsZSxpKXtpZih0JiZlKWlmKHQuZm9yRWFjaCYmdC5mb3JFYWNoPT09cil0LmZvckVhY2goZSxpKTtlbHNlIGlmKHQubGVuZ3RoPT09K3QubGVuZ3RoKWZvcih2YXIgbj0wLG89dC5sZW5ndGg7bjxvO24rKyllLmNhbGwoaSx0W25dLG4sdCk7ZWxzZSBmb3IodmFyIGEgaW4gdCl0Lmhhc093blByb3BlcnR5KGEpJiZlLmNhbGwoaSx0W2FdLGEsdCl9ZnVuY3Rpb24gTih0LGUsaSl7aWYodCYmZSl7aWYodC5tYXAmJnQubWFwPT09YylyZXR1cm4gdC5tYXAoZSxpKTtmb3IodmFyIG49W10sbz0wLGE9dC5sZW5ndGg7bzxhO28rKyluLnB1c2goZS5jYWxsKGksdFtvXSxvLHQpKTtyZXR1cm4gbn19ZnVuY3Rpb24gUyh0LGUsaSxuKXtpZih0JiZlKXtpZih0LnJlZHVjZSYmdC5yZWR1Y2U9PT1kKXJldHVybiB0LnJlZHVjZShlLGksbik7Zm9yKHZhciBvPTAsYT10Lmxlbmd0aDtvPGE7bysrKWk9ZS5jYWxsKG4saSx0W29dLG8sdCk7cmV0dXJuIGl9fWZ1bmN0aW9uIE0odCxlLGkpe2lmKHQmJmUpe2lmKHQuZmlsdGVyJiZ0LmZpbHRlcj09PWgpcmV0dXJuIHQuZmlsdGVyKGUsaSk7Zm9yKHZhciBuPVtdLG89MCxhPXQubGVuZ3RoO288YTtvKyspZS5jYWxsKGksdFtvXSxvLHQpJiZuLnB1c2godFtvXSk7cmV0dXJuIG59fWZ1bmN0aW9uIEkodCxlLGkpe2lmKHQmJmUpZm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWlmKGUuY2FsbChpLHRbbl0sbix0KSlyZXR1cm4gdFtuXX1mdW5jdGlvbiBBKHQsZSl7dmFyIGk9by5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGkuY29uY2F0KG8uY2FsbChhcmd1bWVudHMpKSl9fWZ1bmN0aW9uIFQodCl7dmFyIGU9by5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseSh0aGlzLGUuY29uY2F0KG8uY2FsbChhcmd1bWVudHMpKSl9fWZ1bmN0aW9uIGsodCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PXUuY2FsbCh0KX1mdW5jdGlvbiBPKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIHoodCl7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT11LmNhbGwodCl9ZnVuY3Rpb24gUih0KXt2YXIgZT10eXBlb2YgdDtyZXR1cm4iZnVuY3Rpb24iPT1lfHwhIXQmJiJvYmplY3QiPT1lfWZ1bmN0aW9uIEIodCl7cmV0dXJuISFzW3UuY2FsbCh0KV19ZnVuY3Rpb24gVih0KXtyZXR1cm4hIWxbdS5jYWxsKHQpXX1mdW5jdGlvbiBHKHQpe3JldHVybiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lm5vZGVUeXBlJiYib2JqZWN0Ij09dHlwZW9mIHQub3duZXJEb2N1bWVudH1mdW5jdGlvbiBGKHQpe3JldHVybiB0IT10fWZ1bmN0aW9uIFcodCl7Zm9yKHZhciBlPTAsaT1hcmd1bWVudHMubGVuZ3RoO2U8aTtlKyspaWYobnVsbCE9YXJndW1lbnRzW2VdKXJldHVybiBhcmd1bWVudHNbZV19ZnVuY3Rpb24gSCh0LGUpe3JldHVybiBudWxsIT10P3Q6ZX1mdW5jdGlvbiBaKHQsZSxpKXtyZXR1cm4gbnVsbCE9dD90Om51bGwhPWU/ZTppfWZ1bmN0aW9uIFUoKXtyZXR1cm4gRnVuY3Rpb24uY2FsbC5hcHBseShvLGFyZ3VtZW50cyl9ZnVuY3Rpb24gWCh0KXtpZigibnVtYmVyIj09dHlwZW9mIHQpcmV0dXJuW3QsdCx0LHRdO3ZhciBlPXQubGVuZ3RoO3JldHVybiAyPT09ZT9bdFswXSx0WzFdLHRbMF0sdFsxXV06Mz09PWU/W3RbMF0sdFsxXSx0WzJdLHRbMV1dOnR9ZnVuY3Rpb24gWSh0LGUpe2lmKCF0KXRocm93IG5ldyBFcnJvcihlKX1mdW5jdGlvbiBqKHQpe3JldHVybiBudWxsPT10P251bGw6ImZ1bmN0aW9uIj09dHlwZW9mIHQudHJpbT90LnRyaW0oKTp0LnJlcGxhY2UoL15bXHNcdUZFRkZceEEwXSt8W1xzXHVGRUZGXHhBMF0rJC9nLCIiKX1hLmNyZWF0ZUNhbnZhcz1mdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKX07dmFyIHE9Il9fZWNfcHJpbWl0aXZlX18iO2Z1bmN0aW9uIEsodCl7dFtxXT0hMH1mdW5jdGlvbiAkKHQpe3JldHVybiB0W3FdfWZ1bmN0aW9uIEoodCl7dmFyIGk9ayh0KTt0aGlzLmRhdGE9e307dmFyIG49dGhpcztmdW5jdGlvbiBlKHQsZSl7aT9uLnNldCh0LGUpOm4uc2V0KGUsdCl9dCBpbnN0YW5jZW9mIEo/dC5lYWNoKGUpOnQmJkUodCxlKX1mdW5jdGlvbiBRKHQpe3JldHVybiBuZXcgSih0KX1mdW5jdGlvbiB0dCh0LGUpe2Zvcih2YXIgaT1uZXcgdC5jb25zdHJ1Y3Rvcih0Lmxlbmd0aCtlLmxlbmd0aCksbj0wO248dC5sZW5ndGg7bisrKWlbbl09dFtuXTt2YXIgbz10Lmxlbmd0aDtmb3Iobj0wO248ZS5sZW5ndGg7bisrKWlbbitvXT1lW25dO3JldHVybiBpfWZ1bmN0aW9uIGV0KCl7fUoucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpKLGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kYXRhLmhhc093blByb3BlcnR5KHQpP3RoaXMuZGF0YVt0XTpudWxsfSxzZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5kYXRhW3RdPWV9LGVhY2g6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGkgaW4gdm9pZCAwIT09ZSYmKHQ9QSh0LGUpKSx0aGlzLmRhdGEpdGhpcy5kYXRhLmhhc093blByb3BlcnR5KGkpJiZ0KHRoaXMuZGF0YVtpXSxpKX0scmVtb3ZlS2V5OmZ1bmN0aW9uKHQpe2RlbGV0ZSB0aGlzLmRhdGFbdF19fTt2YXIgaXQ9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoeyRvdmVycmlkZTpmLGNsb25lOkQsbWVyZ2U6bSxtZXJnZUFsbDpwLGV4dGVuZDpMLGRlZmF1bHRzOkMsY3JlYXRlQ2FudmFzOmcsZ2V0Q29udGV4dDp4LGluZGV4T2Y6Xyxpbmhlcml0czp3LG1peGluOmIsaXNBcnJheUxpa2U6UCxlYWNoOkUsbWFwOk4scmVkdWNlOlMsZmlsdGVyOk0sZmluZDpJLGJpbmQ6QSxjdXJyeTpULGlzQXJyYXk6ayxpc0Z1bmN0aW9uOk8saXNTdHJpbmc6eixpc09iamVjdDpSLGlzQnVpbHRJbk9iamVjdDpCLGlzVHlwZWRBcnJheTpWLGlzRG9tOkcsZXFOYU46RixyZXRyaWV2ZTpXLHJldHJpZXZlMjpILHJldHJpZXZlMzpaLHNsaWNlOlUsbm9ybWFsaXplQ3NzQXJyYXk6WCxhc3NlcnQ6WSx0cmltOmosc2V0QXNQcmltaXRpdmU6Syxpc1ByaW1pdGl2ZTokLGNyZWF0ZUhhc2hNYXA6USxjb25jYXRBcnJheTp0dCxub29wOmV0fSksbnQ9InVuZGVmaW5lZCI9PXR5cGVvZiBGbG9hdDMyQXJyYXk/QXJyYXk6RmxvYXQzMkFycmF5O2Z1bmN0aW9uIG90KHQsZSl7dmFyIGk9bmV3IG50KDIpO3JldHVybiBudWxsPT10JiYodD0wKSxudWxsPT1lJiYoZT0wKSxpWzBdPXQsaVsxXT1lLGl9ZnVuY3Rpb24gYXQodCxlKXtyZXR1cm4gdFswXT1lWzBdLHRbMV09ZVsxXSx0fWZ1bmN0aW9uIHJ0KHQpe3ZhciBlPW5ldyBudCgyKTtyZXR1cm4gZVswXT10WzBdLGVbMV09dFsxXSxlfWZ1bmN0aW9uIHN0KHQsZSxpKXtyZXR1cm4gdFswXT1lLHRbMV09aSx0fWZ1bmN0aW9uIGx0KHQsZSxpKXtyZXR1cm4gdFswXT1lWzBdK2lbMF0sdFsxXT1lWzFdK2lbMV0sdH1mdW5jdGlvbiB1dCh0LGUsaSxuKXtyZXR1cm4gdFswXT1lWzBdK2lbMF0qbix0WzFdPWVbMV0raVsxXSpuLHR9ZnVuY3Rpb24gaHQodCxlLGkpe3JldHVybiB0WzBdPWVbMF0taVswXSx0WzFdPWVbMV0taVsxXSx0fWZ1bmN0aW9uIGN0KHQpe3JldHVybiBNYXRoLnNxcnQoZnQodCkpfXZhciBkdD1jdDtmdW5jdGlvbiBmdCh0KXtyZXR1cm4gdFswXSp0WzBdK3RbMV0qdFsxXX12YXIgcHQ9ZnQ7ZnVuY3Rpb24gZ3QodCxlLGkpe3JldHVybiB0WzBdPWVbMF0qaSx0WzFdPWVbMV0qaSx0fWZ1bmN0aW9uIG10KHQsZSl7dmFyIGk9Y3QoZSk7cmV0dXJuIDA9PT1pPyh0WzBdPTAsdFsxXT0wKToodFswXT1lWzBdL2ksdFsxXT1lWzFdL2kpLHR9ZnVuY3Rpb24gdnQodCxlKXtyZXR1cm4gTWF0aC5zcXJ0KCh0WzBdLWVbMF0pKih0WzBdLWVbMF0pKyh0WzFdLWVbMV0pKih0WzFdLWVbMV0pKX12YXIgeXQ9dnQ7ZnVuY3Rpb24geHQodCxlKXtyZXR1cm4odFswXS1lWzBdKSoodFswXS1lWzBdKSsodFsxXS1lWzFdKSoodFsxXS1lWzFdKX12YXIgX3Q9eHQ7ZnVuY3Rpb24gd3QodCxlLGksbil7cmV0dXJuIHRbMF09ZVswXStuKihpWzBdLWVbMF0pLHRbMV09ZVsxXStuKihpWzFdLWVbMV0pLHR9ZnVuY3Rpb24gYnQodCxlLGkpe3ZhciBuPWVbMF0sbz1lWzFdO3JldHVybiB0WzBdPWlbMF0qbitpWzJdKm8raVs0XSx0WzFdPWlbMV0qbitpWzNdKm8raVs1XSx0fWZ1bmN0aW9uIFN0KHQsZSxpKXtyZXR1cm4gdFswXT1NYXRoLm1pbihlWzBdLGlbMF0pLHRbMV09TWF0aC5taW4oZVsxXSxpWzFdKSx0fWZ1bmN0aW9uIE10KHQsZSxpKXtyZXR1cm4gdFswXT1NYXRoLm1heChlWzBdLGlbMF0pLHRbMV09TWF0aC5tYXgoZVsxXSxpWzFdKSx0fXZhciBJdD0oT2JqZWN0LmZyZWV6ZXx8T2JqZWN0KSh7Y3JlYXRlOm90LGNvcHk6YXQsY2xvbmU6cnQsc2V0OnN0LGFkZDpsdCxzY2FsZUFuZEFkZDp1dCxzdWI6aHQsbGVuOmN0LGxlbmd0aDpkdCxsZW5TcXVhcmU6ZnQsbGVuZ3RoU3F1YXJlOnB0LG11bDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRbMF09ZVswXSppWzBdLHRbMV09ZVsxXSppWzFdLHR9LGRpdjpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRbMF09ZVswXS9pWzBdLHRbMV09ZVsxXS9pWzFdLHR9LGRvdDpmdW5jdGlvbih0LGUpe3JldHVybiB0WzBdKmVbMF0rdFsxXSplWzFdfSxzY2FsZTpndCxub3JtYWxpemU6bXQsZGlzdGFuY2U6dnQsZGlzdDp5dCxkaXN0YW5jZVNxdWFyZTp4dCxkaXN0U3F1YXJlOl90LG5lZ2F0ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0WzBdPS1lWzBdLHRbMV09LWVbMV0sdH0sbGVycDp3dCxhcHBseVRyYW5zZm9ybTpidCxtaW46U3QsbWF4Ok10fSk7ZnVuY3Rpb24gVHQoKXt0aGlzLm9uKCJtb3VzZWRvd24iLHRoaXMuX2RyYWdTdGFydCx0aGlzKSx0aGlzLm9uKCJtb3VzZW1vdmUiLHRoaXMuX2RyYWcsdGhpcyksdGhpcy5vbigibW91c2V1cCIsdGhpcy5fZHJhZ0VuZCx0aGlzKX1mdW5jdGlvbiBBdCh0LGUpe3JldHVybnt0YXJnZXQ6dCx0b3BUYXJnZXQ6ZSYmZS50b3BUYXJnZXR9fVR0LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VHQsX2RyYWdTdGFydDpmdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldDtlJiZlLmRyYWdnYWJsZSYmKCh0aGlzLl9kcmFnZ2luZ1RhcmdldD1lKS5kcmFnZ2luZz0hMCx0aGlzLl94PXQub2Zmc2V0WCx0aGlzLl95PXQub2Zmc2V0WSx0aGlzLmRpc3BhdGNoVG9FbGVtZW50KEF0KGUsdCksImRyYWdzdGFydCIsdC5ldmVudCkpfSxfZHJhZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9kcmFnZ2luZ1RhcmdldDtpZihlKXt2YXIgaT10Lm9mZnNldFgsbj10Lm9mZnNldFksbz1pLXRoaXMuX3gsYT1uLXRoaXMuX3k7dGhpcy5feD1pLHRoaXMuX3k9bixlLmRyaWZ0KG8sYSx0KSx0aGlzLmRpc3BhdGNoVG9FbGVtZW50KEF0KGUsdCksImRyYWciLHQuZXZlbnQpO3ZhciByPXRoaXMuZmluZEhvdmVyKGksbixlKS50YXJnZXQscz10aGlzLl9kcm9wVGFyZ2V0O2UhPT0odGhpcy5fZHJvcFRhcmdldD1yKSYmKHMmJnIhPT1zJiZ0aGlzLmRpc3BhdGNoVG9FbGVtZW50KEF0KHMsdCksImRyYWdsZWF2ZSIsdC5ldmVudCksciYmciE9PXMmJnRoaXMuZGlzcGF0Y2hUb0VsZW1lbnQoQXQocix0KSwiZHJhZ2VudGVyIix0LmV2ZW50KSl9fSxfZHJhZ0VuZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9kcmFnZ2luZ1RhcmdldDtlJiYoZS5kcmFnZ2luZz0hMSksdGhpcy5kaXNwYXRjaFRvRWxlbWVudChBdChlLHQpLCJkcmFnZW5kIix0LmV2ZW50KSx0aGlzLl9kcm9wVGFyZ2V0JiZ0aGlzLmRpc3BhdGNoVG9FbGVtZW50KEF0KHRoaXMuX2Ryb3BUYXJnZXQsdCksImRyb3AiLHQuZXZlbnQpLHRoaXMuX2RyYWdnaW5nVGFyZ2V0PW51bGwsdGhpcy5fZHJvcFRhcmdldD1udWxsfX07dmFyIER0PUFycmF5LnByb3RvdHlwZS5zbGljZSxDdD1mdW5jdGlvbih0KXt0aGlzLl8kaGFuZGxlcnM9e30sdGhpcy5fJGV2ZW50UHJvY2Vzc29yPXR9O2Z1bmN0aW9uIEx0KHQsZSxpLG4sbyxhKXt2YXIgcj10Ll8kaGFuZGxlcnM7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGkmJihvPW4sbj1pLGk9bnVsbCksIW58fCFlKXJldHVybiB0O2k9ZnVuY3Rpb24odCxlKXt2YXIgaT10Ll8kZXZlbnRQcm9jZXNzb3I7cmV0dXJuIG51bGwhPWUmJmkmJmkubm9ybWFsaXplUXVlcnkmJihlPWkubm9ybWFsaXplUXVlcnkoZSkpLGV9KHQsaSkscltlXXx8KHJbZV09W10pO2Zvcih2YXIgcz0wO3M8cltlXS5sZW5ndGg7cysrKWlmKHJbZV1bc10uaD09PW4pcmV0dXJuIHQ7dmFyIGw9e2g6bixvbmU6YSxxdWVyeTppLGN0eDpvfHx0LGNhbGxBdExhc3Q6bi56ckV2ZW50ZnVsQ2FsbEF0TGFzdH0sdT1yW2VdLmxlbmd0aC0xLGg9cltlXVt1XTtyZXR1cm4gaCYmaC5jYWxsQXRMYXN0P3JbZV0uc3BsaWNlKHUsMCxsKTpyW2VdLnB1c2gobCksdH1DdC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkN0LG9uZTpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gTHQodGhpcyx0LGUsaSxuLCEwKX0sb246ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIEx0KHRoaXMsdCxlLGksbiwhMSl9LGlzU2lsZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuXyRoYW5kbGVycztyZXR1cm4hZVt0XXx8IWVbdF0ubGVuZ3RofSxvZmY6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl8kaGFuZGxlcnM7aWYoIXQpcmV0dXJuIHRoaXMuXyRoYW5kbGVycz17fSx0aGlzO2lmKGUpe2lmKGlbdF0pe2Zvcih2YXIgbj1bXSxvPTAsYT1pW3RdLmxlbmd0aDtvPGE7bysrKWlbdF1bb10uaCE9PWUmJm4ucHVzaChpW3RdW29dKTtpW3RdPW59aVt0XSYmMD09PWlbdF0ubGVuZ3RoJiZkZWxldGUgaVt0XX1lbHNlIGRlbGV0ZSBpW3RdO3JldHVybiB0aGlzfSx0cmlnZ2VyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuXyRoYW5kbGVyc1t0XSxpPXRoaXMuXyRldmVudFByb2Nlc3NvcjtpZihlKXt2YXIgbj1hcmd1bWVudHMsbz1uLmxlbmd0aDszPG8mJihuPUR0LmNhbGwobiwxKSk7Zm9yKHZhciBhPWUubGVuZ3RoLHI9MDtyPGE7KXt2YXIgcz1lW3JdO2lmKGkmJmkuZmlsdGVyJiZudWxsIT1zLnF1ZXJ5JiYhaS5maWx0ZXIodCxzLnF1ZXJ5KSlyKys7ZWxzZXtzd2l0Y2gobyl7Y2FzZSAxOnMuaC5jYWxsKHMuY3R4KTticmVhaztjYXNlIDI6cy5oLmNhbGwocy5jdHgsblsxXSk7YnJlYWs7Y2FzZSAzOnMuaC5jYWxsKHMuY3R4LG5bMV0sblsyXSk7YnJlYWs7ZGVmYXVsdDpzLmguYXBwbHkocy5jdHgsbil9cy5vbmU/KGUuc3BsaWNlKHIsMSksYS0tKTpyKyt9fX1yZXR1cm4gaSYmaS5hZnRlclRyaWdnZXImJmkuYWZ0ZXJUcmlnZ2VyKHQpLHRoaXN9LHRyaWdnZXJXaXRoQ29udGV4dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl8kaGFuZGxlcnNbdF0saT10aGlzLl8kZXZlbnRQcm9jZXNzb3I7aWYoZSl7dmFyIG49YXJndW1lbnRzLG89bi5sZW5ndGg7NDxvJiYobj1EdC5jYWxsKG4sMSxuLmxlbmd0aC0xKSk7Zm9yKHZhciBhPW5bbi5sZW5ndGgtMV0scj1lLmxlbmd0aCxzPTA7czxyOyl7dmFyIGw9ZVtzXTtpZihpJiZpLmZpbHRlciYmbnVsbCE9bC5xdWVyeSYmIWkuZmlsdGVyKHQsbC5xdWVyeSkpcysrO2Vsc2V7c3dpdGNoKG8pe2Nhc2UgMTpsLmguY2FsbChhKTticmVhaztjYXNlIDI6bC5oLmNhbGwoYSxuWzFdKTticmVhaztjYXNlIDM6bC5oLmNhbGwoYSxuWzFdLG5bMl0pO2JyZWFrO2RlZmF1bHQ6bC5oLmFwcGx5KGEsbil9bC5vbmU/KGUuc3BsaWNlKHMsMSksci0tKTpzKyt9fX1yZXR1cm4gaSYmaS5hZnRlclRyaWdnZXImJmkuYWZ0ZXJUcmlnZ2VyKHQpLHRoaXN9fTt2YXIga3Q9TWF0aC5sb2coMik7ZnVuY3Rpb24gUHQodCxlLGksbixvLGEpe3ZhciByPW4rIi0iK28scz10Lmxlbmd0aDtpZihhLmhhc093blByb3BlcnR5KHIpKXJldHVybiBhW3JdO2lmKDE9PT1lKXt2YXIgbD1NYXRoLnJvdW5kKE1hdGgubG9nKCgxPDxzKS0xJn5vKS9rdCk7cmV0dXJuIHRbaV1bbF19Zm9yKHZhciB1PW58MTw8aSxoPWkrMTtuJjE8PGg7KWgrKztmb3IodmFyIGM9MCxkPTAsZj0wO2Q8cztkKyspe3ZhciBwPTE8PGQ7cCZvfHwoYys9KGYlMj8tMToxKSp0W2ldW2RdKlB0KHQsZS0xLGgsdSxvfHAsYSksZisrKX1yZXR1cm4gYVtyXT1jfXZhciBOdD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmISF3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcixPdD0vXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sRXQ9Il9fX3pyRVZFTlRTQVZFRCIsenQ9W107ZnVuY3Rpb24gUnQodCxlLGksbil7cmV0dXJuIGk9aXx8e30sbnx8IXYuY2FudmFzU3VwcG9ydGVkP0J0KHQsZSxpKTp2LmJyb3dzZXIuZmlyZWZveCYmbnVsbCE9ZS5sYXllclgmJmUubGF5ZXJYIT09ZS5vZmZzZXRYPyhpLnpyWD1lLmxheWVyWCxpLnpyWT1lLmxheWVyWSk6bnVsbCE9ZS5vZmZzZXRYPyhpLnpyWD1lLm9mZnNldFgsaS56clk9ZS5vZmZzZXRZKTpCdCh0LGUsaSksaX1mdW5jdGlvbiBCdCh0LGUsaSl7aWYodC5nZXRCb3VuZGluZ0NsaWVudFJlY3QmJnYuZG9tU3VwcG9ydGVkKXt2YXIgbj1lLmNsaWVudFgsbz1lLmNsaWVudFk7aWYoIkNBTlZBUyI9PT10Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpe3ZhciBhPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuIGkuenJYPW4tYS5sZWZ0LHZvaWQoaS56clk9by1hLnRvcCl9dmFyIHI9dFtFdF18fCh0W0V0XT17fSkscz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1lLnRyYW5zZm9ybWVyLG49ZS5zcmNDb29yZHMsbz0hMCxhPVtdLHI9W10scz0wO3M8NDtzKyspe3ZhciBsPXRbc10uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdT0yKnMsaD1sLmxlZnQsYz1sLnRvcDthLnB1c2goaCxjKSxvJj1uJiZoPT09blt1XSYmYz09PW5bMSt1XSxyLnB1c2godFtzXS5vZmZzZXRMZWZ0LHRbc10ub2Zmc2V0VG9wKX1yZXR1cm4gbz9pOihlLnNyY0Nvb3Jkcz1hLGUudHJhbnNmb3JtZXI9ZnVuY3Rpb24odCxlKXt2YXIgaT1bW3RbMF0sdFsxXSwxLDAsMCwwLC1lWzBdKnRbMF0sLWVbMF0qdFsxXV0sWzAsMCwwLHRbMF0sdFsxXSwxLC1lWzFdKnRbMF0sLWVbMV0qdFsxXV0sW3RbMl0sdFszXSwxLDAsMCwwLC1lWzJdKnRbMl0sLWVbMl0qdFszXV0sWzAsMCwwLHRbMl0sdFszXSwxLC1lWzNdKnRbMl0sLWVbM10qdFszXV0sW3RbNF0sdFs1XSwxLDAsMCwwLC1lWzRdKnRbNF0sLWVbNF0qdFs1XV0sWzAsMCwwLHRbNF0sdFs1XSwxLC1lWzVdKnRbNF0sLWVbNV0qdFs1XV0sW3RbNl0sdFs3XSwxLDAsMCwwLC1lWzZdKnRbNl0sLWVbNl0qdFs3XV0sWzAsMCwwLHRbNl0sdFs3XSwxLC1lWzddKnRbNl0sLWVbN10qdFs3XV1dLG49e30sbz1QdChpLDgsMCwwLDAsbik7aWYoMCE9PW8pe2Zvcih2YXIgYT1bXSxyPTA7cjw4O3IrKylmb3IodmFyIHM9MDtzPDg7cysrKW51bGw9PWFbc10mJihhW3NdPTApLGFbc10rPSgocitzKSUyPy0xOjEpKlB0KGksNywwPT09cj8xOjAsMTw8ciwxPDxzLG4pL28qZVtyXTtyZXR1cm4gZnVuY3Rpb24odCxlLGkpe3ZhciBuPWUqYVs2XStpKmFbN10rMTt0WzBdPShlKmFbMF0raSphWzFdK2FbMl0pL24sdFsxXT0oZSphWzNdK2kqYVs0XSthWzVdKS9ufX19KGEscikpfShmdW5jdGlvbih0LGUpe3ZhciBpPWUubWFya2VycztpZihpKXJldHVybiBpO2k9ZS5tYXJrZXJzPVtdO2Zvcih2YXIgbj1bImxlZnQiLCJyaWdodCJdLG89WyJ0b3AiLCJib3R0b20iXSxhPTA7YTw0O2ErKyl7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iikscz1yLnN0eWxlLGw9YSUyLHU9KGE+PjEpJTI7cy5jc3NUZXh0PVsicG9zaXRpb246YWJzb2x1dGUiLCJ2aXNpYmlsaXR5OiBoaWRkZW4iLCJwYWRkaW5nOiAwIiwibWFyZ2luOiAwIiwiYm9yZGVyLXdpZHRoOiAwIiwid2lkdGg6MCIsImhlaWdodDowIixuW2xdKyI6MCIsb1t1XSsiOjAiLG5bMS1sXSsiOmF1dG8iLG9bMS11XSsiOmF1dG8iLCIiXS5qb2luKCIhaW1wb3J0YW50OyIpLHQuYXBwZW5kQ2hpbGQociksaS5wdXNoKHIpfXJldHVybiBpfSh0LHIpLHIpO2lmKHMpcmV0dXJuIHMoenQsbixvKSxpLnpyWD16dFswXSx2b2lkKGkuenJZPXp0WzFdKX1pLnpyWD1pLnpyWT0wfWZ1bmN0aW9uIFZ0KHQpe3JldHVybiB0fHx3aW5kb3cuZXZlbnR9ZnVuY3Rpb24gR3QodCxlLGkpe2lmKG51bGwhPShlPVZ0KGUpKS56clgpcmV0dXJuIGU7dmFyIG49ZS50eXBlO2lmKG4mJjA8PW4uaW5kZXhPZigidG91Y2giKSl7dmFyIG89InRvdWNoZW5kIiE9PW4/ZS50YXJnZXRUb3VjaGVzWzBdOmUuY2hhbmdlZFRvdWNoZXNbMF07byYmUnQodCxvLGUsaSl9ZWxzZSBSdCh0LGUsZSxpKSxlLnpyRGVsdGE9ZS53aGVlbERlbHRhP2Uud2hlZWxEZWx0YS8xMjA6LShlLmRldGFpbHx8MCkvMzt2YXIgYT1lLmJ1dHRvbjtyZXR1cm4gbnVsbD09ZS53aGljaCYmdm9pZCAwIT09YSYmT3QudGVzdChlLnR5cGUpJiYoZS53aGljaD0xJmE/MToyJmE/Mzo0JmE/MjowKSxlfWZ1bmN0aW9uIEZ0KHQsZSxpLG4pe050P3QuYWRkRXZlbnRMaXN0ZW5lcihlLGksbik6dC5hdHRhY2hFdmVudCgib24iK2UsaSl9dmFyIFd0PU50P2Z1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLHQuY2FuY2VsQnViYmxlPSEwfTpmdW5jdGlvbih0KXt0LnJldHVyblZhbHVlPSExLHQuY2FuY2VsQnViYmxlPSEwfTtmdW5jdGlvbiBIdCh0KXtyZXR1cm4gMj09PXQud2hpY2h8fDM9PT10LndoaWNofWZ1bmN0aW9uIFp0KCl7dGhpcy5fdHJhY2s9W119ZnVuY3Rpb24gVXQodCl7dmFyIGU9dFsxXVswXS10WzBdWzBdLGk9dFsxXVsxXS10WzBdWzFdO3JldHVybiBNYXRoLnNxcnQoZSplK2kqaSl9WnQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpadCxyZWNvZ25pemU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLl9kb1RyYWNrKHQsZSxpKSx0aGlzLl9yZWNvZ25pemUodCl9LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RyYWNrLmxlbmd0aD0wLHRoaXN9LF9kb1RyYWNrOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LnRvdWNoZXM7aWYobil7Zm9yKHZhciBvPXtwb2ludHM6W10sdG91Y2hlczpbXSx0YXJnZXQ6ZSxldmVudDp0fSxhPTAscj1uLmxlbmd0aDthPHI7YSsrKXt2YXIgcz1uW2FdLGw9UnQoaSxzLHt9KTtvLnBvaW50cy5wdXNoKFtsLnpyWCxsLnpyWV0pLG8udG91Y2hlcy5wdXNoKHMpfXRoaXMuX3RyYWNrLnB1c2gobyl9fSxfcmVjb2duaXplOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiBYdClpZihYdC5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIGk9WHRbZV0odGhpcy5fdHJhY2ssdCk7aWYoaSlyZXR1cm4gaX19fTt2YXIgWHQ9e3BpbmNoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5sZW5ndGg7aWYoaSl7dmFyIG49KHRbaS0xXXx8e30pLnBvaW50cyxvPSh0W2ktMl18fHt9KS5wb2ludHN8fG47aWYobyYmMTxvLmxlbmd0aCYmbiYmMTxuLmxlbmd0aCl7dmFyIGE9VXQobikvVXQobyk7aXNGaW5pdGUoYSl8fChhPTEpLGUucGluY2hTY2FsZT1hO3ZhciByPWZ1bmN0aW9uKHQpe3JldHVyblsodFswXVswXSt0WzFdWzBdKS8yLCh0WzBdWzFdK3RbMV1bMV0pLzJdfShuKTtyZXR1cm4gZS5waW5jaFg9clswXSxlLnBpbmNoWT1yWzFdLHt0eXBlOiJwaW5jaCIsdGFyZ2V0OnRbMF0udGFyZ2V0LGV2ZW50OmV9fX19fSxZdD0ic2lsZW50IjtmdW5jdGlvbiBqdCgpe1d0KHRoaXMuZXZlbnQpfWZ1bmN0aW9uIHF0KCl7fXF0LnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBLdCh0LGUsaSxuKXtDdC5jYWxsKHRoaXMpLHRoaXMuc3RvcmFnZT10LHRoaXMucGFpbnRlcj1lLHRoaXMucGFpbnRlclJvb3Q9bixpPWl8fG5ldyBxdCx0aGlzLnByb3h5PW51bGwsdGhpcy5faG92ZXJlZD17fSx0aGlzLl9sYXN0VG91Y2hNb21lbnQsdGhpcy5fbGFzdFgsdGhpcy5fbGFzdFksdGhpcy5fZ2VzdHVyZU1ncixUdC5jYWxsKHRoaXMpLHRoaXMuc2V0SGFuZGxlclByb3h5KGkpfXZhciAkdD1bImNsaWNrIiwiZGJsY2xpY2siLCJtb3VzZXdoZWVsIiwibW91c2VvdXQiLCJtb3VzZXVwIiwibW91c2Vkb3duIiwibW91c2Vtb3ZlIiwiY29udGV4dG1lbnUiXTtmdW5jdGlvbiBKdCh0LGUsaSl7aWYodFt0LnJlY3RIb3Zlcj8icmVjdENvbnRhaW4iOiJjb250YWluIl0oZSxpKSl7Zm9yKHZhciBuLG89dDtvOyl7aWYoby5jbGlwUGF0aCYmIW8uY2xpcFBhdGguY29udGFpbihlLGkpKXJldHVybiExO28uc2lsZW50JiYobj0hMCksbz1vLnBhcmVudH1yZXR1cm4hbnx8WXR9cmV0dXJuITF9ZnVuY3Rpb24gUXQodCxlLGkpe3ZhciBuPXQucGFpbnRlcjtyZXR1cm4gZTwwfHxlPm4uZ2V0V2lkdGgoKXx8aTwwfHxpPm4uZ2V0SGVpZ2h0KCl9S3QucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpLdCxzZXRIYW5kbGVyUHJveHk6ZnVuY3Rpb24oZSl7dGhpcy5wcm94eSYmdGhpcy5wcm94eS5kaXNwb3NlKCksZSYmKEUoJHQsZnVuY3Rpb24odCl7ZS5vbiYmZS5vbih0LHRoaXNbdF0sdGhpcyl9LHRoaXMpLGUuaGFuZGxlcj10aGlzKSx0aGlzLnByb3h5PWV9LG1vdXNlbW92ZTpmdW5jdGlvbih0KXt2YXIgZT10LnpyWCxpPXQuenJZLG49UXQodGhpcyxlLGkpLG89dGhpcy5faG92ZXJlZCxhPW8udGFyZ2V0O2EmJiFhLl9fenImJihhPShvPXRoaXMuZmluZEhvdmVyKG8ueCxvLnkpKS50YXJnZXQpO3ZhciByPXRoaXMuX2hvdmVyZWQ9bj97eDplLHk6aX06dGhpcy5maW5kSG92ZXIoZSxpKSxzPXIudGFyZ2V0LGw9dGhpcy5wcm94eTtsLnNldEN1cnNvciYmbC5zZXRDdXJzb3Iocz9zLmN1cnNvcjoiZGVmYXVsdCIpLGEmJnMhPT1hJiZ0aGlzLmRpc3BhdGNoVG9FbGVtZW50KG8sIm1vdXNlb3V0Iix0KSx0aGlzLmRpc3BhdGNoVG9FbGVtZW50KHIsIm1vdXNlbW92ZSIsdCkscyYmcyE9PWEmJnRoaXMuZGlzcGF0Y2hUb0VsZW1lbnQociwibW91c2VvdmVyIix0KX0sbW91c2VvdXQ6ZnVuY3Rpb24odCl7dmFyIGU9dC56ckV2ZW50Q29udHJvbCxpPXQuenJJc1RvTG9jYWxET007Im9ubHlfZ2xvYmFsb3V0IiE9PWUmJnRoaXMuZGlzcGF0Y2hUb0VsZW1lbnQodGhpcy5faG92ZXJlZCwibW91c2VvdXQiLHQpLCJub19nbG9iYWxvdXQiIT09ZSYmKGl8fHRoaXMudHJpZ2dlcigiZ2xvYmFsb3V0Iix7dHlwZToiZ2xvYmFsb3V0IixldmVudDp0fSkpfSxyZXNpemU6ZnVuY3Rpb24odCl7dGhpcy5faG92ZXJlZD17fX0sZGlzcGF0Y2g6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzW3RdO2kmJmkuY2FsbCh0aGlzLGUpfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5wcm94eS5kaXNwb3NlKCksdGhpcy5zdG9yYWdlPXRoaXMucHJveHk9dGhpcy5wYWludGVyPW51bGx9LHNldEN1cnNvclN0eWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucHJveHk7ZS5zZXRDdXJzb3ImJmUuc2V0Q3Vyc29yKHQpfSxkaXNwYXRjaFRvRWxlbWVudDpmdW5jdGlvbih0LGUsaSl7dmFyIG49KHQ9dHx8e30pLnRhcmdldDtpZighbnx8IW4uc2lsZW50KXtmb3IodmFyIG89Im9uIitlLGE9ZnVuY3Rpb24odCxlLGkpe3JldHVybnt0eXBlOnQsZXZlbnQ6aSx0YXJnZXQ6ZS50YXJnZXQsdG9wVGFyZ2V0OmUudG9wVGFyZ2V0LGNhbmNlbEJ1YmJsZTohMSxvZmZzZXRYOmkuenJYLG9mZnNldFk6aS56clksZ2VzdHVyZUV2ZW50OmkuZ2VzdHVyZUV2ZW50LHBpbmNoWDppLnBpbmNoWCxwaW5jaFk6aS5waW5jaFkscGluY2hTY2FsZTppLnBpbmNoU2NhbGUsd2hlZWxEZWx0YTppLnpyRGVsdGEsenJCeVRvdWNoOmkuenJCeVRvdWNoLHdoaWNoOmkud2hpY2gsc3RvcDpqdH19KGUsdCxpKTtuJiYobltvXSYmKGEuY2FuY2VsQnViYmxlPW5bb10uY2FsbChuLGEpKSxuLnRyaWdnZXIoZSxhKSxuPW4ucGFyZW50LCFhLmNhbmNlbEJ1YmJsZSk7KTthLmNhbmNlbEJ1YmJsZXx8KHRoaXMudHJpZ2dlcihlLGEpLHRoaXMucGFpbnRlciYmdGhpcy5wYWludGVyLmVhY2hPdGhlckxheWVyKGZ1bmN0aW9uKHQpeyJmdW5jdGlvbiI9PXR5cGVvZiB0W29dJiZ0W29dLmNhbGwodCxhKSx0LnRyaWdnZXImJnQudHJpZ2dlcihlLGEpfSkpfX0sZmluZEhvdmVyOmZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49dGhpcy5zdG9yYWdlLmdldERpc3BsYXlMaXN0KCksbz17eDp0LHk6ZX0sYT1uLmxlbmd0aC0xOzA8PWE7YS0tKXt2YXIgcjtpZihuW2FdIT09aSYmIW5bYV0uaWdub3JlJiYocj1KdChuW2FdLHQsZSkpJiYoby50b3BUYXJnZXR8fChvLnRvcFRhcmdldD1uW2FdKSxyIT09WXQpKXtvLnRhcmdldD1uW2FdO2JyZWFrfX1yZXR1cm4gb30scHJvY2Vzc0dlc3R1cmU6ZnVuY3Rpb24odCxlKXt0aGlzLl9nZXN0dXJlTWdyfHwodGhpcy5fZ2VzdHVyZU1ncj1uZXcgWnQpO3ZhciBpPXRoaXMuX2dlc3R1cmVNZ3I7InN0YXJ0Ij09PWUmJmkuY2xlYXIoKTt2YXIgbj1pLnJlY29nbml6ZSh0LHRoaXMuZmluZEhvdmVyKHQuenJYLHQuenJZLG51bGwpLnRhcmdldCx0aGlzLnByb3h5LmRvbSk7aWYoImVuZCI9PT1lJiZpLmNsZWFyKCksbil7dmFyIG89bi50eXBlO3QuZ2VzdHVyZUV2ZW50PW8sdGhpcy5kaXNwYXRjaFRvRWxlbWVudCh7dGFyZ2V0Om4udGFyZ2V0fSxvLG4uZXZlbnQpfX19LEUoWyJjbGljayIsIm1vdXNlZG93biIsIm1vdXNldXAiLCJtb3VzZXdoZWVsIiwiZGJsY2xpY2siLCJjb250ZXh0bWVudSJdLGZ1bmN0aW9uKHIpe0t0LnByb3RvdHlwZVtyXT1mdW5jdGlvbih0KXt2YXIgZSxpLG49dC56clgsbz10LnpyWSxhPVF0KHRoaXMsbixvKTtpZigibW91c2V1cCI9PT1yJiZhfHwoaT0oZT10aGlzLmZpbmRIb3ZlcihuLG8pKS50YXJnZXQpLCJtb3VzZWRvd24iPT09cil0aGlzLl9kb3duRWw9aSx0aGlzLl9kb3duUG9pbnQ9W3QuenJYLHQuenJZXSx0aGlzLl91cEVsPWk7ZWxzZSBpZigibW91c2V1cCI9PT1yKXRoaXMuX3VwRWw9aTtlbHNlIGlmKCJjbGljayI9PT1yKXtpZih0aGlzLl9kb3duRWwhPT10aGlzLl91cEVsfHwhdGhpcy5fZG93blBvaW50fHw0PHl0KHRoaXMuX2Rvd25Qb2ludCxbdC56clgsdC56clldKSlyZXR1cm47dGhpcy5fZG93blBvaW50PW51bGx9dGhpcy5kaXNwYXRjaFRvRWxlbWVudChlLHIsdCl9fSksYihLdCxDdCksYihLdCxUdCk7dmFyIHRlPSJ1bmRlZmluZWQiPT10eXBlb2YgRmxvYXQzMkFycmF5P0FycmF5OkZsb2F0MzJBcnJheTtmdW5jdGlvbiBlZSgpe3ZhciB0PW5ldyB0ZSg2KTtyZXR1cm4gaWUodCksdH1mdW5jdGlvbiBpZSh0KXtyZXR1cm4gdFswXT0xLHRbMV09MCx0WzJdPTAsdFszXT0xLHRbNF09MCx0WzVdPTAsdH1mdW5jdGlvbiBuZSh0LGUpe3JldHVybiB0WzBdPWVbMF0sdFsxXT1lWzFdLHRbMl09ZVsyXSx0WzNdPWVbM10sdFs0XT1lWzRdLHRbNV09ZVs1XSx0fWZ1bmN0aW9uIG9lKHQsZSxpKXt2YXIgbj1lWzBdKmlbMF0rZVsyXSppWzFdLG89ZVsxXSppWzBdK2VbM10qaVsxXSxhPWVbMF0qaVsyXStlWzJdKmlbM10scj1lWzFdKmlbMl0rZVszXSppWzNdLHM9ZVswXSppWzRdK2VbMl0qaVs1XStlWzRdLGw9ZVsxXSppWzRdK2VbM10qaVs1XStlWzVdO3JldHVybiB0WzBdPW4sdFsxXT1vLHRbMl09YSx0WzNdPXIsdFs0XT1zLHRbNV09bCx0fWZ1bmN0aW9uIGFlKHQsZSxpKXtyZXR1cm4gdFswXT1lWzBdLHRbMV09ZVsxXSx0WzJdPWVbMl0sdFszXT1lWzNdLHRbNF09ZVs0XStpWzBdLHRbNV09ZVs1XStpWzFdLHR9ZnVuY3Rpb24gcmUodCxlLGkpe3ZhciBuPWVbMF0sbz1lWzJdLGE9ZVs0XSxyPWVbMV0scz1lWzNdLGw9ZVs1XSx1PU1hdGguc2luKGkpLGg9TWF0aC5jb3MoaSk7cmV0dXJuIHRbMF09bipoK3IqdSx0WzFdPS1uKnUrcipoLHRbMl09bypoK3MqdSx0WzNdPS1vKnUraCpzLHRbNF09aCphK3UqbCx0WzVdPWgqbC11KmEsdH1mdW5jdGlvbiBzZSh0LGUsaSl7dmFyIG49aVswXSxvPWlbMV07cmV0dXJuIHRbMF09ZVswXSpuLHRbMV09ZVsxXSpvLHRbMl09ZVsyXSpuLHRbM109ZVszXSpvLHRbNF09ZVs0XSpuLHRbNV09ZVs1XSpvLHR9ZnVuY3Rpb24gbGUodCxlKXt2YXIgaT1lWzBdLG49ZVsyXSxvPWVbNF0sYT1lWzFdLHI9ZVszXSxzPWVbNV0sbD1pKnItYSpuO3JldHVybiBsPyhsPTEvbCx0WzBdPXIqbCx0WzFdPS1hKmwsdFsyXT0tbipsLHRbM109aSpsLHRbNF09KG4qcy1yKm8pKmwsdFs1XT0oYSpvLWkqcykqbCx0KTpudWxsfWZ1bmN0aW9uIHVlKHQpe3ZhciBlPWVlKCk7cmV0dXJuIG5lKGUsdCksZX12YXIgaGU9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoe2NyZWF0ZTplZSxpZGVudGl0eTppZSxjb3B5Om5lLG11bDpvZSx0cmFuc2xhdGU6YWUscm90YXRlOnJlLHNjYWxlOnNlLGludmVydDpsZSxjbG9uZTp1ZX0pLGNlPWllO2Z1bmN0aW9uIGRlKHQpe3JldHVybiA1ZS01PHR8fHQ8LTVlLTV9dmFyIGZlPWZ1bmN0aW9uKHQpeyh0PXR8fHt9KS5wb3NpdGlvbnx8KHRoaXMucG9zaXRpb249WzAsMF0pLG51bGw9PXQucm90YXRpb24mJih0aGlzLnJvdGF0aW9uPTApLHQuc2NhbGV8fCh0aGlzLnNjYWxlPVsxLDFdKSx0aGlzLm9yaWdpbj10aGlzLm9yaWdpbnx8bnVsbH0scGU9ZmUucHJvdG90eXBlO3BlLnRyYW5zZm9ybT1udWxsLHBlLm5lZWRMb2NhbFRyYW5zZm9ybT1mdW5jdGlvbigpe3JldHVybiBkZSh0aGlzLnJvdGF0aW9uKXx8ZGUodGhpcy5wb3NpdGlvblswXSl8fGRlKHRoaXMucG9zaXRpb25bMV0pfHxkZSh0aGlzLnNjYWxlWzBdLTEpfHxkZSh0aGlzLnNjYWxlWzFdLTEpfTt2YXIgZ2U9W107cGUudXBkYXRlVHJhbnNmb3JtPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wYXJlbnQsZT10JiZ0LnRyYW5zZm9ybSxpPXRoaXMubmVlZExvY2FsVHJhbnNmb3JtKCksbj10aGlzLnRyYW5zZm9ybTtpZihpfHxlKXtuPW58fGVlKCksaT90aGlzLmdldExvY2FsVHJhbnNmb3JtKG4pOmNlKG4pLGUmJihpP29lKG4sdC50cmFuc2Zvcm0sbik6bmUobix0LnRyYW5zZm9ybSkpLHRoaXMudHJhbnNmb3JtPW47dmFyIG89dGhpcy5nbG9iYWxTY2FsZVJhdGlvO2lmKG51bGwhPW8mJjEhPT1vKXt0aGlzLmdldEdsb2JhbFNjYWxlKGdlKTt2YXIgYT1nZVswXTwwPy0xOjEscj1nZVsxXTwwPy0xOjEscz0oKGdlWzBdLWEpKm8rYSkvZ2VbMF18fDAsbD0oKGdlWzFdLXIpKm8rcikvZ2VbMV18fDA7blswXSo9cyxuWzFdKj1zLG5bMl0qPWwsblszXSo9bH10aGlzLmludlRyYW5zZm9ybT10aGlzLmludlRyYW5zZm9ybXx8ZWUoKSxsZSh0aGlzLmludlRyYW5zZm9ybSxuKX1lbHNlIG4mJmNlKG4pfSxwZS5nZXRMb2NhbFRyYW5zZm9ybT1mdW5jdGlvbih0KXtyZXR1cm4gZmUuZ2V0TG9jYWxUcmFuc2Zvcm0odGhpcyx0KX0scGUuc2V0VHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMudHJhbnNmb3JtLGk9dC5kcHJ8fDE7ZT90LnNldFRyYW5zZm9ybShpKmVbMF0saSplWzFdLGkqZVsyXSxpKmVbM10saSplWzRdLGkqZVs1XSk6dC5zZXRUcmFuc2Zvcm0oaSwwLDAsaSwwLDApfSxwZS5yZXN0b3JlVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZHByfHwxO3Quc2V0VHJhbnNmb3JtKGUsMCwwLGUsMCwwKX07dmFyIG1lPVtdLHZlPWVlKCk7cGUuc2V0TG9jYWxUcmFuc2Zvcm09ZnVuY3Rpb24odCl7aWYodCl7dmFyIGU9dFswXSp0WzBdK3RbMV0qdFsxXSxpPXRbMl0qdFsyXSt0WzNdKnRbM10sbj10aGlzLnBvc2l0aW9uLG89dGhpcy5zY2FsZTtkZShlLTEpJiYoZT1NYXRoLnNxcnQoZSkpLGRlKGktMSkmJihpPU1hdGguc3FydChpKSksdFswXTwwJiYoZT0tZSksdFszXTwwJiYoaT0taSksblswXT10WzRdLG5bMV09dFs1XSxvWzBdPWUsb1sxXT1pLHRoaXMucm90YXRpb249TWF0aC5hdGFuMigtdFsxXS9pLHRbMF0vZSl9fSxwZS5kZWNvbXBvc2VUcmFuc2Zvcm09ZnVuY3Rpb24oKXtpZih0aGlzLnRyYW5zZm9ybSl7dmFyIHQ9dGhpcy5wYXJlbnQsZT10aGlzLnRyYW5zZm9ybTt0JiZ0LnRyYW5zZm9ybSYmKG9lKG1lLHQuaW52VHJhbnNmb3JtLGUpLGU9bWUpO3ZhciBpPXRoaXMub3JpZ2luO2kmJihpWzBdfHxpWzFdKSYmKHZlWzRdPWlbMF0sdmVbNV09aVsxXSxvZShtZSxlLHZlKSxtZVs0XS09aVswXSxtZVs1XS09aVsxXSxlPW1lKSx0aGlzLnNldExvY2FsVHJhbnNmb3JtKGUpfX0scGUuZ2V0R2xvYmFsU2NhbGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy50cmFuc2Zvcm07cmV0dXJuIHQ9dHx8W10sZT8odFswXT1NYXRoLnNxcnQoZVswXSplWzBdK2VbMV0qZVsxXSksdFsxXT1NYXRoLnNxcnQoZVsyXSplWzJdK2VbM10qZVszXSksZVswXTwwJiYodFswXT0tdFswXSksZVszXTwwJiYodFsxXT0tdFsxXSkpOih0WzBdPTEsdFsxXT0xKSx0fSxwZS50cmFuc2Zvcm1Db29yZFRvTG9jYWw9ZnVuY3Rpb24odCxlKXt2YXIgaT1bdCxlXSxuPXRoaXMuaW52VHJhbnNmb3JtO3JldHVybiBuJiZidChpLGksbiksaX0scGUudHJhbnNmb3JtQ29vcmRUb0dsb2JhbD1mdW5jdGlvbih0LGUpe3ZhciBpPVt0LGVdLG49dGhpcy50cmFuc2Zvcm07cmV0dXJuIG4mJmJ0KGksaSxuKSxpfSxmZS5nZXRMb2NhbFRyYW5zZm9ybT1mdW5jdGlvbih0LGUpe2NlKGU9ZXx8W10pO3ZhciBpPXQub3JpZ2luLG49dC5zY2FsZXx8WzEsMV0sbz10LnJvdGF0aW9ufHwwLGE9dC5wb3NpdGlvbnx8WzAsMF07cmV0dXJuIGkmJihlWzRdLT1pWzBdLGVbNV0tPWlbMV0pLHNlKGUsZSxuKSxvJiZyZShlLGUsbyksaSYmKGVbNF0rPWlbMF0sZVs1XSs9aVsxXSksZVs0XSs9YVswXSxlWzVdKz1hWzFdLGV9O3ZhciB5ZT17bGluZWFyOmZ1bmN0aW9uKHQpe3JldHVybiB0fSxxdWFkcmF0aWNJbjpmdW5jdGlvbih0KXtyZXR1cm4gdCp0fSxxdWFkcmF0aWNPdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQqKDItdCl9LHF1YWRyYXRpY0luT3V0OmZ1bmN0aW9uKHQpe3JldHVybih0Kj0yKTwxPy41KnQqdDotLjUqKC0tdCoodC0yKS0xKX0sY3ViaWNJbjpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KnR9LGN1YmljT3V0OmZ1bmN0aW9uKHQpe3JldHVybi0tdCp0KnQrMX0sY3ViaWNJbk91dDpmdW5jdGlvbih0KXtyZXR1cm4odCo9Mik8MT8uNSp0KnQqdDouNSooKHQtPTIpKnQqdCsyKX0scXVhcnRpY0luOmZ1bmN0aW9uKHQpe3JldHVybiB0KnQqdCp0fSxxdWFydGljT3V0OmZ1bmN0aW9uKHQpe3JldHVybiAxLSAtLXQqdCp0KnR9LHF1YXJ0aWNJbk91dDpmdW5jdGlvbih0KXtyZXR1cm4odCo9Mik8MT8uNSp0KnQqdCp0Oi0uNSooKHQtPTIpKnQqdCp0LTIpfSxxdWludGljSW46ZnVuY3Rpb24odCl7cmV0dXJuIHQqdCp0KnQqdH0scXVpbnRpY091dDpmdW5jdGlvbih0KXtyZXR1cm4tLXQqdCp0KnQqdCsxfSxxdWludGljSW5PdXQ6ZnVuY3Rpb24odCl7cmV0dXJuKHQqPTIpPDE/LjUqdCp0KnQqdCp0Oi41KigodC09MikqdCp0KnQqdCsyKX0sc2ludXNvaWRhbEluOmZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGguY29zKHQqTWF0aC5QSS8yKX0sc2ludXNvaWRhbE91dDpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5zaW4odCpNYXRoLlBJLzIpfSxzaW51c29pZGFsSW5PdXQ6ZnVuY3Rpb24odCl7cmV0dXJuLjUqKDEtTWF0aC5jb3MoTWF0aC5QSSp0KSl9LGV4cG9uZW50aWFsSW46ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10PzA6TWF0aC5wb3coMTAyNCx0LTEpfSxleHBvbmVudGlhbE91dDpmdW5jdGlvbih0KXtyZXR1cm4gMT09PXQ/MToxLU1hdGgucG93KDIsLTEwKnQpfSxleHBvbmVudGlhbEluT3V0OmZ1bmN0aW9uKHQpe3JldHVybiAwPT09dD8wOjE9PT10PzE6KHQqPTIpPDE/LjUqTWF0aC5wb3coMTAyNCx0LTEpOi41KigyLU1hdGgucG93KDIsLTEwKih0LTEpKSl9LGNpcmN1bGFySW46ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5zcXJ0KDEtdCp0KX0sY2lyY3VsYXJPdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguc3FydCgxLSAtLXQqdCl9LGNpcmN1bGFySW5PdXQ6ZnVuY3Rpb24odCl7cmV0dXJuKHQqPTIpPDE/LS41KihNYXRoLnNxcnQoMS10KnQpLTEpOi41KihNYXRoLnNxcnQoMS0odC09MikqdCkrMSl9LGVsYXN0aWNJbjpmdW5jdGlvbih0KXt2YXIgZSxpPS4xO3JldHVybiAwPT09dD8wOjE9PT10PzE6KGU9IWl8fGk8MT8oaT0xLC4xKTouNCpNYXRoLmFzaW4oMS9pKS8oMipNYXRoLlBJKSwtaSpNYXRoLnBvdygyLDEwKih0LT0xKSkqTWF0aC5zaW4oKHQtZSkqKDIqTWF0aC5QSSkvLjQpKX0sZWxhc3RpY091dDpmdW5jdGlvbih0KXt2YXIgZSxpPS4xO3JldHVybiAwPT09dD8wOjE9PT10PzE6KGU9IWl8fGk8MT8oaT0xLC4xKTouNCpNYXRoLmFzaW4oMS9pKS8oMipNYXRoLlBJKSxpKk1hdGgucG93KDIsLTEwKnQpKk1hdGguc2luKCh0LWUpKigyKk1hdGguUEkpLy40KSsxKX0sZWxhc3RpY0luT3V0OmZ1bmN0aW9uKHQpe3ZhciBlLGk9LjE7cmV0dXJuIDA9PT10PzA6MT09PXQ/MTooZT0haXx8aTwxPyhpPTEsLjEpOi40Kk1hdGguYXNpbigxL2kpLygyKk1hdGguUEkpLCh0Kj0yKTwxP2kqTWF0aC5wb3coMiwxMCoodC09MSkpKk1hdGguc2luKCh0LWUpKigyKk1hdGguUEkpLy40KSotLjU6aSpNYXRoLnBvdygyLC0xMCoodC09MSkpKk1hdGguc2luKCh0LWUpKigyKk1hdGguUEkpLy40KSouNSsxKX0sYmFja0luOmZ1bmN0aW9uKHQpe3JldHVybiB0KnQqKDIuNzAxNTgqdC0xLjcwMTU4KX0sYmFja091dDpmdW5jdGlvbih0KXtyZXR1cm4tLXQqdCooMi43MDE1OCp0KzEuNzAxNTgpKzF9LGJhY2tJbk91dDpmdW5jdGlvbih0KXt2YXIgZT0yLjU5NDkwOTU7cmV0dXJuKHQqPTIpPDE/dCp0KigoMStlKSp0LWUpKi41Oi41KigodC09MikqdCooKDErZSkqdCtlKSsyKX0sYm91bmNlSW46ZnVuY3Rpb24odCl7cmV0dXJuIDEteWUuYm91bmNlT3V0KDEtdCl9LGJvdW5jZU91dDpmdW5jdGlvbih0KXtyZXR1cm4gdDwxLzIuNzU/Ny41NjI1KnQqdDp0PDIvMi43NT83LjU2MjUqKHQtPTEuNS8yLjc1KSp0Ky43NTp0PDIuNS8yLjc1PzcuNTYyNSoodC09Mi4yNS8yLjc1KSp0Ky45Mzc1OjcuNTYyNSoodC09Mi42MjUvMi43NSkqdCsuOTg0Mzc1fSxib3VuY2VJbk91dDpmdW5jdGlvbih0KXtyZXR1cm4gdDwuNT8uNSp5ZS5ib3VuY2VJbigyKnQpOi41KnllLmJvdW5jZU91dCgyKnQtMSkrLjV9fTtmdW5jdGlvbiB4ZSh0KXt0aGlzLl90YXJnZXQ9dC50YXJnZXQsdGhpcy5fbGlmZT10LmxpZmV8fDFlMyx0aGlzLl9kZWxheT10LmRlbGF5fHwwLHRoaXMuX2luaXRpYWxpemVkPSExLHRoaXMubG9vcD1udWxsIT10Lmxvb3AmJnQubG9vcCx0aGlzLmdhcD10LmdhcHx8MCx0aGlzLmVhc2luZz10LmVhc2luZ3x8IkxpbmVhciIsdGhpcy5vbmZyYW1lPXQub25mcmFtZSx0aGlzLm9uZGVzdHJveT10Lm9uZGVzdHJveSx0aGlzLm9ucmVzdGFydD10Lm9ucmVzdGFydCx0aGlzLl9wYXVzZWRUaW1lPTAsdGhpcy5fcGF1c2VkPSExfXhlLnByb3RvdHlwZT17Y29uc3RydWN0b3I6eGUsc3RlcDpmdW5jdGlvbih0LGUpe2lmKHRoaXMuX2luaXRpYWxpemVkfHwodGhpcy5fc3RhcnRUaW1lPXQrdGhpcy5fZGVsYXksdGhpcy5faW5pdGlhbGl6ZWQ9ITApLHRoaXMuX3BhdXNlZCl0aGlzLl9wYXVzZWRUaW1lKz1lO2Vsc2V7dmFyIGk9KHQtdGhpcy5fc3RhcnRUaW1lLXRoaXMuX3BhdXNlZFRpbWUpL3RoaXMuX2xpZmU7aWYoIShpPDApKXtpPU1hdGgubWluKGksMSk7dmFyIG49dGhpcy5lYXNpbmcsbz0ic3RyaW5nIj09dHlwZW9mIG4/eWVbbl06bixhPSJmdW5jdGlvbiI9PXR5cGVvZiBvP28oaSk6aTtyZXR1cm4gdGhpcy5maXJlKCJmcmFtZSIsYSksMT09PWk/dGhpcy5sb29wPyh0aGlzLnJlc3RhcnQodCksInJlc3RhcnQiKToodGhpcy5fbmVlZHNSZW1vdmU9ITAsImRlc3Ryb3kiKTpudWxsfX19LHJlc3RhcnQ6ZnVuY3Rpb24odCl7dmFyIGU9KHQtdGhpcy5fc3RhcnRUaW1lLXRoaXMuX3BhdXNlZFRpbWUpJXRoaXMuX2xpZmU7dGhpcy5fc3RhcnRUaW1lPXQtZSt0aGlzLmdhcCx0aGlzLl9wYXVzZWRUaW1lPTAsdGhpcy5fbmVlZHNSZW1vdmU9ITF9LGZpcmU6ZnVuY3Rpb24odCxlKXt0aGlzW3Q9Im9uIit0XSYmdGhpc1t0XSh0aGlzLl90YXJnZXQsZSl9LHBhdXNlOmZ1bmN0aW9uKCl7dGhpcy5fcGF1c2VkPSEwfSxyZXN1bWU6ZnVuY3Rpb24oKXt0aGlzLl9wYXVzZWQ9ITF9fTtmdW5jdGlvbiBfZSgpe3RoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsLHRoaXMuX2xlbj0wfXZhciB3ZT1fZS5wcm90b3R5cGU7d2UuaW5zZXJ0PWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBTZSh0KTtyZXR1cm4gdGhpcy5pbnNlcnRFbnRyeShlKSxlfSx3ZS5pbnNlcnRFbnRyeT1mdW5jdGlvbih0KXt0aGlzLmhlYWQ/KCh0aGlzLnRhaWwubmV4dD10KS5wcmV2PXRoaXMudGFpbCx0Lm5leHQ9bnVsbCx0aGlzLnRhaWw9dCk6dGhpcy5oZWFkPXRoaXMudGFpbD10LHRoaXMuX2xlbisrfSx3ZS5yZW1vdmU9ZnVuY3Rpb24odCl7dmFyIGU9dC5wcmV2LGk9dC5uZXh0O2U/ZS5uZXh0PWk6dGhpcy5oZWFkPWksaT9pLnByZXY9ZTp0aGlzLnRhaWw9ZSx0Lm5leHQ9dC5wcmV2PW51bGwsdGhpcy5fbGVuLS19LHdlLmxlbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9sZW59LHdlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsLHRoaXMuX2xlbj0wfTtmdW5jdGlvbiBiZSh0KXt0aGlzLl9saXN0PW5ldyBfZSx0aGlzLl9tYXA9e30sdGhpcy5fbWF4U2l6ZT10fHwxMCx0aGlzLl9sYXN0UmVtb3ZlZEVudHJ5PW51bGx9dmFyIFNlPWZ1bmN0aW9uKHQpe3RoaXMudmFsdWU9dCx0aGlzLm5leHQsdGhpcy5wcmV2fSxNZT1iZS5wcm90b3R5cGU7TWUucHV0PWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fbGlzdCxuPXRoaXMuX21hcCxvPW51bGw7aWYobnVsbD09blt0XSl7dmFyIGE9aS5sZW4oKSxyPXRoaXMuX2xhc3RSZW1vdmVkRW50cnk7aWYoYT49dGhpcy5fbWF4U2l6ZSYmMDxhKXt2YXIgcz1pLmhlYWQ7aS5yZW1vdmUocyksZGVsZXRlIG5bcy5rZXldLG89cy52YWx1ZSx0aGlzLl9sYXN0UmVtb3ZlZEVudHJ5PXN9cj9yLnZhbHVlPWU6cj1uZXcgU2UoZSksci5rZXk9dCxpLmluc2VydEVudHJ5KHIpLG5bdF09cn1yZXR1cm4gb30sTWUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX21hcFt0XSxpPXRoaXMuX2xpc3Q7aWYobnVsbCE9ZSlyZXR1cm4gZSE9PWkudGFpbCYmKGkucmVtb3ZlKGUpLGkuaW5zZXJ0RW50cnkoZSkpLGUudmFsdWV9LE1lLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fbGlzdC5jbGVhcigpLHRoaXMuX21hcD17fX07dmFyIEllPXt0cmFuc3BhcmVudDpbMCwwLDAsMF0sYWxpY2VibHVlOlsyNDAsMjQ4LDI1NSwxXSxhbnRpcXVld2hpdGU6WzI1MCwyMzUsMjE1LDFdLGFxdWE6WzAsMjU1LDI1NSwxXSxhcXVhbWFyaW5lOlsxMjcsMjU1LDIxMiwxXSxhenVyZTpbMjQwLDI1NSwyNTUsMV0sYmVpZ2U6WzI0NSwyNDUsMjIwLDFdLGJpc3F1ZTpbMjU1LDIyOCwxOTYsMV0sYmxhY2s6WzAsMCwwLDFdLGJsYW5jaGVkYWxtb25kOlsyNTUsMjM1LDIwNSwxXSxibHVlOlswLDAsMjU1LDFdLGJsdWV2aW9sZXQ6WzEzOCw0MywyMjYsMV0sYnJvd246WzE2NSw0Miw0MiwxXSxidXJseXdvb2Q6WzIyMiwxODQsMTM1LDFdLGNhZGV0Ymx1ZTpbOTUsMTU4LDE2MCwxXSxjaGFydHJldXNlOlsxMjcsMjU1LDAsMV0sY2hvY29sYXRlOlsyMTAsMTA1LDMwLDFdLGNvcmFsOlsyNTUsMTI3LDgwLDFdLGNvcm5mbG93ZXJibHVlOlsxMDAsMTQ5LDIzNywxXSxjb3Juc2lsazpbMjU1LDI0OCwyMjAsMV0sY3JpbXNvbjpbMjIwLDIwLDYwLDFdLGN5YW46WzAsMjU1LDI1NSwxXSxkYXJrYmx1ZTpbMCwwLDEzOSwxXSxkYXJrY3lhbjpbMCwxMzksMTM5LDFdLGRhcmtnb2xkZW5yb2Q6WzE4NCwxMzQsMTEsMV0sZGFya2dyYXk6WzE2OSwxNjksMTY5LDFdLGRhcmtncmVlbjpbMCwxMDAsMCwxXSxkYXJrZ3JleTpbMTY5LDE2OSwxNjksMV0sZGFya2toYWtpOlsxODksMTgzLDEwNywxXSxkYXJrbWFnZW50YTpbMTM5LDAsMTM5LDFdLGRhcmtvbGl2ZWdyZWVuOls4NSwxMDcsNDcsMV0sZGFya29yYW5nZTpbMjU1LDE0MCwwLDFdLGRhcmtvcmNoaWQ6WzE1Myw1MCwyMDQsMV0sZGFya3JlZDpbMTM5LDAsMCwxXSxkYXJrc2FsbW9uOlsyMzMsMTUwLDEyMiwxXSxkYXJrc2VhZ3JlZW46WzE0MywxODgsMTQzLDFdLGRhcmtzbGF0ZWJsdWU6WzcyLDYxLDEzOSwxXSxkYXJrc2xhdGVncmF5Ols0Nyw3OSw3OSwxXSxkYXJrc2xhdGVncmV5Ols0Nyw3OSw3OSwxXSxkYXJrdHVycXVvaXNlOlswLDIwNiwyMDksMV0sZGFya3Zpb2xldDpbMTQ4LDAsMjExLDFdLGRlZXBwaW5rOlsyNTUsMjAsMTQ3LDFdLGRlZXBza3libHVlOlswLDE5MSwyNTUsMV0sZGltZ3JheTpbMTA1LDEwNSwxMDUsMV0sZGltZ3JleTpbMTA1LDEwNSwxMDUsMV0sZG9kZ2VyYmx1ZTpbMzAsMTQ0LDI1NSwxXSxmaXJlYnJpY2s6WzE3OCwzNCwzNCwxXSxmbG9yYWx3aGl0ZTpbMjU1LDI1MCwyNDAsMV0sZm9yZXN0Z3JlZW46WzM0LDEzOSwzNCwxXSxmdWNoc2lhOlsyNTUsMCwyNTUsMV0sZ2FpbnNib3JvOlsyMjAsMjIwLDIyMCwxXSxnaG9zdHdoaXRlOlsyNDgsMjQ4LDI1NSwxXSxnb2xkOlsyNTUsMjE1LDAsMV0sZ29sZGVucm9kOlsyMTgsMTY1LDMyLDFdLGdyYXk6WzEyOCwxMjgsMTI4LDFdLGdyZWVuOlswLDEyOCwwLDFdLGdyZWVueWVsbG93OlsxNzMsMjU1LDQ3LDFdLGdyZXk6WzEyOCwxMjgsMTI4LDFdLGhvbmV5ZGV3OlsyNDAsMjU1LDI0MCwxXSxob3RwaW5rOlsyNTUsMTA1LDE4MCwxXSxpbmRpYW5yZWQ6WzIwNSw5Miw5MiwxXSxpbmRpZ286Wzc1LDAsMTMwLDFdLGl2b3J5OlsyNTUsMjU1LDI0MCwxXSxraGFraTpbMjQwLDIzMCwxNDAsMV0sbGF2ZW5kZXI6WzIzMCwyMzAsMjUwLDFdLGxhdmVuZGVyYmx1c2g6WzI1NSwyNDAsMjQ1LDFdLGxhd25ncmVlbjpbMTI0LDI1MiwwLDFdLGxlbW9uY2hpZmZvbjpbMjU1LDI1MCwyMDUsMV0sbGlnaHRibHVlOlsxNzMsMjE2LDIzMCwxXSxsaWdodGNvcmFsOlsyNDAsMTI4LDEyOCwxXSxsaWdodGN5YW46WzIyNCwyNTUsMjU1LDFdLGxpZ2h0Z29sZGVucm9keWVsbG93OlsyNTAsMjUwLDIxMCwxXSxsaWdodGdyYXk6WzIxMSwyMTEsMjExLDFdLGxpZ2h0Z3JlZW46WzE0NCwyMzgsMTQ0LDFdLGxpZ2h0Z3JleTpbMjExLDIxMSwyMTEsMV0sbGlnaHRwaW5rOlsyNTUsMTgyLDE5MywxXSxsaWdodHNhbG1vbjpbMjU1LDE2MCwxMjIsMV0sbGlnaHRzZWFncmVlbjpbMzIsMTc4LDE3MCwxXSxsaWdodHNreWJsdWU6WzEzNSwyMDYsMjUwLDFdLGxpZ2h0c2xhdGVncmF5OlsxMTksMTM2LDE1MywxXSxsaWdodHNsYXRlZ3JleTpbMTE5LDEzNiwxNTMsMV0sbGlnaHRzdGVlbGJsdWU6WzE3NiwxOTYsMjIyLDFdLGxpZ2h0eWVsbG93OlsyNTUsMjU1LDIyNCwxXSxsaW1lOlswLDI1NSwwLDFdLGxpbWVncmVlbjpbNTAsMjA1LDUwLDFdLGxpbmVuOlsyNTAsMjQwLDIzMCwxXSxtYWdlbnRhOlsyNTUsMCwyNTUsMV0sbWFyb29uOlsxMjgsMCwwLDFdLG1lZGl1bWFxdWFtYXJpbmU6WzEwMiwyMDUsMTcwLDFdLG1lZGl1bWJsdWU6WzAsMCwyMDUsMV0sbWVkaXVtb3JjaGlkOlsxODYsODUsMjExLDFdLG1lZGl1bXB1cnBsZTpbMTQ3LDExMiwyMTksMV0sbWVkaXVtc2VhZ3JlZW46WzYwLDE3OSwxMTMsMV0sbWVkaXVtc2xhdGVibHVlOlsxMjMsMTA0LDIzOCwxXSxtZWRpdW1zcHJpbmdncmVlbjpbMCwyNTAsMTU0LDFdLG1lZGl1bXR1cnF1b2lzZTpbNzIsMjA5LDIwNCwxXSxtZWRpdW12aW9sZXRyZWQ6WzE5OSwyMSwxMzMsMV0sbWlkbmlnaHRibHVlOlsyNSwyNSwxMTIsMV0sbWludGNyZWFtOlsyNDUsMjU1LDI1MCwxXSxtaXN0eXJvc2U6WzI1NSwyMjgsMjI1LDFdLG1vY2Nhc2luOlsyNTUsMjI4LDE4MSwxXSxuYXZham93aGl0ZTpbMjU1LDIyMiwxNzMsMV0sbmF2eTpbMCwwLDEyOCwxXSxvbGRsYWNlOlsyNTMsMjQ1LDIzMCwxXSxvbGl2ZTpbMTI4LDEyOCwwLDFdLG9saXZlZHJhYjpbMTA3LDE0MiwzNSwxXSxvcmFuZ2U6WzI1NSwxNjUsMCwxXSxvcmFuZ2VyZWQ6WzI1NSw2OSwwLDFdLG9yY2hpZDpbMjE4LDExMiwyMTQsMV0scGFsZWdvbGRlbnJvZDpbMjM4LDIzMiwxNzAsMV0scGFsZWdyZWVuOlsxNTIsMjUxLDE1MiwxXSxwYWxldHVycXVvaXNlOlsxNzUsMjM4LDIzOCwxXSxwYWxldmlvbGV0cmVkOlsyMTksMTEyLDE0NywxXSxwYXBheWF3aGlwOlsyNTUsMjM5LDIxMywxXSxwZWFjaHB1ZmY6WzI1NSwyMTgsMTg1LDFdLHBlcnU6WzIwNSwxMzMsNjMsMV0scGluazpbMjU1LDE5MiwyMDMsMV0scGx1bTpbMjIxLDE2MCwyMjEsMV0scG93ZGVyYmx1ZTpbMTc2LDIyNCwyMzAsMV0scHVycGxlOlsxMjgsMCwxMjgsMV0scmVkOlsyNTUsMCwwLDFdLHJvc3licm93bjpbMTg4LDE0MywxNDMsMV0scm95YWxibHVlOls2NSwxMDUsMjI1LDFdLHNhZGRsZWJyb3duOlsxMzksNjksMTksMV0sc2FsbW9uOlsyNTAsMTI4LDExNCwxXSxzYW5keWJyb3duOlsyNDQsMTY0LDk2LDFdLHNlYWdyZWVuOls0NiwxMzksODcsMV0sc2Vhc2hlbGw6WzI1NSwyNDUsMjM4LDFdLHNpZW5uYTpbMTYwLDgyLDQ1LDFdLHNpbHZlcjpbMTkyLDE5MiwxOTIsMV0sc2t5Ymx1ZTpbMTM1LDIwNiwyMzUsMV0sc2xhdGVibHVlOlsxMDYsOTAsMjA1LDFdLHNsYXRlZ3JheTpbMTEyLDEyOCwxNDQsMV0sc2xhdGVncmV5OlsxMTIsMTI4LDE0NCwxXSxzbm93OlsyNTUsMjUwLDI1MCwxXSxzcHJpbmdncmVlbjpbMCwyNTUsMTI3LDFdLHN0ZWVsYmx1ZTpbNzAsMTMwLDE4MCwxXSx0YW46WzIxMCwxODAsMTQwLDFdLHRlYWw6WzAsMTI4LDEyOCwxXSx0aGlzdGxlOlsyMTYsMTkxLDIxNiwxXSx0b21hdG86WzI1NSw5OSw3MSwxXSx0dXJxdW9pc2U6WzY0LDIyNCwyMDgsMV0sdmlvbGV0OlsyMzgsMTMwLDIzOCwxXSx3aGVhdDpbMjQ1LDIyMiwxNzksMV0sd2hpdGU6WzI1NSwyNTUsMjU1LDFdLHdoaXRlc21va2U6WzI0NSwyNDUsMjQ1LDFdLHllbGxvdzpbMjU1LDI1NSwwLDFdLHllbGxvd2dyZWVuOlsxNTQsMjA1LDUwLDFdfTtmdW5jdGlvbiBUZSh0KXtyZXR1cm4odD1NYXRoLnJvdW5kKHQpKTwwPzA6MjU1PHQ/MjU1OnR9ZnVuY3Rpb24gQWUodCl7cmV0dXJuIHQ8MD8wOjE8dD8xOnR9ZnVuY3Rpb24gRGUodCl7cmV0dXJuIHQubGVuZ3RoJiYiJSI9PT10LmNoYXJBdCh0Lmxlbmd0aC0xKT9UZShwYXJzZUZsb2F0KHQpLzEwMCoyNTUpOlRlKHBhcnNlSW50KHQsMTApKX1mdW5jdGlvbiBDZSh0KXtyZXR1cm4gdC5sZW5ndGgmJiIlIj09PXQuY2hhckF0KHQubGVuZ3RoLTEpP0FlKHBhcnNlRmxvYXQodCkvMTAwKTpBZShwYXJzZUZsb2F0KHQpKX1mdW5jdGlvbiBMZSh0LGUsaSl7cmV0dXJuIGk8MD9pKz0xOjE8aSYmKGktPTEpLDYqaTwxP3QrKGUtdCkqaSo2OjIqaTwxP2U6MyppPDI/dCsoZS10KSooMi8zLWkpKjY6dH1mdW5jdGlvbiBrZSh0LGUsaSl7cmV0dXJuIHQrKGUtdCkqaX1mdW5jdGlvbiBQZSh0LGUsaSxuLG8pe3JldHVybiB0WzBdPWUsdFsxXT1pLHRbMl09bix0WzNdPW8sdH1mdW5jdGlvbiBOZSh0LGUpe3JldHVybiB0WzBdPWVbMF0sdFsxXT1lWzFdLHRbMl09ZVsyXSx0WzNdPWVbM10sdH12YXIgT2U9bmV3IGJlKDIwKSxFZT1udWxsO2Z1bmN0aW9uIHplKHQsZSl7RWUmJk5lKEVlLGUpLEVlPU9lLnB1dCh0LEVlfHxlLnNsaWNlKCkpfWZ1bmN0aW9uIFJlKHQsZSl7aWYodCl7ZT1lfHxbXTt2YXIgaT1PZS5nZXQodCk7aWYoaSlyZXR1cm4gTmUoZSxpKTt2YXIgbixvPSh0Kz0iIikucmVwbGFjZSgvIC9nLCIiKS50b0xvd2VyQ2FzZSgpO2lmKG8gaW4gSWUpcmV0dXJuIE5lKGUsSWVbb10pLHplKHQsZSksZTtpZigiIyI9PT1vLmNoYXJBdCgwKSlyZXR1cm4gND09PW8ubGVuZ3RoPzA8PShuPXBhcnNlSW50KG8uc3Vic3RyKDEpLDE2KSkmJm48PTQwOTU/KFBlKGUsKDM4NDAmbik+PjR8KDM4NDAmbik+PjgsMjQwJm58KDI0MCZuKT4+NCwxNSZufCgxNSZuKTw8NCwxKSx6ZSh0LGUpLGUpOnZvaWQgUGUoZSwwLDAsMCwxKTo3PT09by5sZW5ndGg/MDw9KG49cGFyc2VJbnQoby5zdWJzdHIoMSksMTYpKSYmbjw9MTY3NzcyMTU/KFBlKGUsKDE2NzExNjgwJm4pPj4xNiwoNjUyODAmbik+PjgsMjU1Jm4sMSksemUodCxlKSxlKTp2b2lkIFBlKGUsMCwwLDAsMSk6dm9pZCAwO3ZhciBhPW8uaW5kZXhPZigiKCIpLHI9by5pbmRleE9mKCIpIik7aWYoLTEhPT1hJiZyKzE9PT1vLmxlbmd0aCl7dmFyIHM9by5zdWJzdHIoMCxhKSxsPW8uc3Vic3RyKGErMSxyLShhKzEpKS5zcGxpdCgiLCIpLHU9MTtzd2l0Y2gocyl7Y2FzZSJyZ2JhIjppZig0IT09bC5sZW5ndGgpcmV0dXJuIHZvaWQgUGUoZSwwLDAsMCwxKTt1PUNlKGwucG9wKCkpO2Nhc2UicmdiIjpyZXR1cm4gMyE9PWwubGVuZ3RoP3ZvaWQgUGUoZSwwLDAsMCwxKTooUGUoZSxEZShsWzBdKSxEZShsWzFdKSxEZShsWzJdKSx1KSx6ZSh0LGUpLGUpO2Nhc2UiaHNsYSI6cmV0dXJuIDQhPT1sLmxlbmd0aD92b2lkIFBlKGUsMCwwLDAsMSk6KGxbM109Q2UobFszXSksQmUobCxlKSx6ZSh0LGUpLGUpO2Nhc2UiaHNsIjpyZXR1cm4gMyE9PWwubGVuZ3RoP3ZvaWQgUGUoZSwwLDAsMCwxKTooQmUobCxlKSx6ZSh0LGUpLGUpO2RlZmF1bHQ6cmV0dXJufX1QZShlLDAsMCwwLDEpfX1mdW5jdGlvbiBCZSh0LGUpe3ZhciBpPShwYXJzZUZsb2F0KHRbMF0pJTM2MCszNjApJTM2MC8zNjAsbj1DZSh0WzFdKSxvPUNlKHRbMl0pLGE9bzw9LjU/byoobisxKTpvK24tbypuLHI9MipvLWE7cmV0dXJuIFBlKGU9ZXx8W10sVGUoMjU1KkxlKHIsYSxpKzEvMykpLFRlKDI1NSpMZShyLGEsaSkpLFRlKDI1NSpMZShyLGEsaS0xLzMpKSwxKSw0PT09dC5sZW5ndGgmJihlWzNdPXRbM10pLGV9ZnVuY3Rpb24gVmUodCxlKXt2YXIgaT1SZSh0KTtpZihpKXtmb3IodmFyIG49MDtuPDM7bisrKWlbbl09ZTwwP2lbbl0qKDEtZSl8MDooMjU1LWlbbl0pKmUraVtuXXwwLDI1NTxpW25dP2lbbl09MjU1OnRbbl08MCYmKGlbbl09MCk7cmV0dXJuIFllKGksND09PWkubGVuZ3RoPyJyZ2JhIjoicmdiIil9fWZ1bmN0aW9uIEdlKHQpe3ZhciBlPVJlKHQpO2lmKGUpcmV0dXJuKCgxPDwyNCkrKGVbMF08PDE2KSsoZVsxXTw8OCkrICtlWzJdKS50b1N0cmluZygxNikuc2xpY2UoMSl9ZnVuY3Rpb24gRmUodCxlLGkpe2lmKGUmJmUubGVuZ3RoJiYwPD10JiZ0PD0xKXtpPWl8fFtdO3ZhciBuPXQqKGUubGVuZ3RoLTEpLG89TWF0aC5mbG9vcihuKSxhPU1hdGguY2VpbChuKSxyPWVbb10scz1lW2FdLGw9bi1vO3JldHVybiBpWzBdPVRlKGtlKHJbMF0sc1swXSxsKSksaVsxXT1UZShrZShyWzFdLHNbMV0sbCkpLGlbMl09VGUoa2UoclsyXSxzWzJdLGwpKSxpWzNdPUFlKGtlKHJbM10sc1szXSxsKSksaX19dmFyIFdlPUZlO2Z1bmN0aW9uIEhlKHQsZSxpKXtpZihlJiZlLmxlbmd0aCYmMDw9dCYmdDw9MSl7dmFyIG49dCooZS5sZW5ndGgtMSksbz1NYXRoLmZsb29yKG4pLGE9TWF0aC5jZWlsKG4pLHI9UmUoZVtvXSkscz1SZShlW2FdKSxsPW4tbyx1PVllKFtUZShrZShyWzBdLHNbMF0sbCkpLFRlKGtlKHJbMV0sc1sxXSxsKSksVGUoa2UoclsyXSxzWzJdLGwpKSxBZShrZShyWzNdLHNbM10sbCkpXSwicmdiYSIpO3JldHVybiBpP3tjb2xvcjp1LGxlZnRJbmRleDpvLHJpZ2h0SW5kZXg6YSx2YWx1ZTpufTp1fX12YXIgWmU9SGU7ZnVuY3Rpb24gVWUodCxlLGksbil7aWYodD1SZSh0KSlyZXR1cm4gdD1mdW5jdGlvbih0KXtpZih0KXt2YXIgZSxpLG49dFswXS8yNTUsbz10WzFdLzI1NSxhPXRbMl0vMjU1LHI9TWF0aC5taW4obixvLGEpLHM9TWF0aC5tYXgobixvLGEpLGw9cy1yLHU9KHMrcikvMjtpZigwPT1sKWk9ZT0wO2Vsc2V7aT11PC41P2wvKHMrcik6bC8oMi1zLXIpO3ZhciBoPSgocy1uKS82K2wvMikvbCxjPSgocy1vKS82K2wvMikvbCxkPSgocy1hKS82K2wvMikvbDtuPT09cz9lPWQtYzpvPT09cz9lPTEvMytoLWQ6YT09PXMmJihlPTIvMytjLWgpLGU8MCYmKGUrPTEpLDE8ZSYmKGUtPTEpfXZhciBmPVszNjAqZSxpLHVdO3JldHVybiBudWxsIT10WzNdJiZmLnB1c2godFszXSksZn19KHQpLG51bGwhPWUmJih0WzBdPWZ1bmN0aW9uKHQpe3JldHVybih0PU1hdGgucm91bmQodCkpPDA/MDozNjA8dD8zNjA6dH0oZSkpLG51bGwhPWkmJih0WzFdPUNlKGkpKSxudWxsIT1uJiYodFsyXT1DZShuKSksWWUoQmUodCksInJnYmEiKX1mdW5jdGlvbiBYZSh0LGUpe2lmKCh0PVJlKHQpKSYmbnVsbCE9ZSlyZXR1cm4gdFszXT1BZShlKSxZZSh0LCJyZ2JhIil9ZnVuY3Rpb24gWWUodCxlKXtpZih0JiZ0Lmxlbmd0aCl7dmFyIGk9dFswXSsiLCIrdFsxXSsiLCIrdFsyXTtyZXR1cm4icmdiYSIhPT1lJiYiaHN2YSIhPT1lJiYiaHNsYSIhPT1lfHwoaSs9IiwiK3RbM10pLGUrIigiK2krIikifX12YXIgamU9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoe3BhcnNlOlJlLGxpZnQ6VmUsdG9IZXg6R2UsZmFzdExlcnA6RmUsZmFzdE1hcFRvQ29sb3I6V2UsbGVycDpIZSxtYXBUb0NvbG9yOlplLG1vZGlmeUhTTDpVZSxtb2RpZnlBbHBoYTpYZSxzdHJpbmdpZnk6WWV9KSxxZT1BcnJheS5wcm90b3R5cGUuc2xpY2U7ZnVuY3Rpb24gS2UodCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiAkZSh0LGUsaSl7dFtlXT1pfWZ1bmN0aW9uIEplKHQsZSxpKXtyZXR1cm4oZS10KSppK3R9ZnVuY3Rpb24gUWUodCxlLGkpe3JldHVybi41PGk/ZTp0fWZ1bmN0aW9uIHRpKHQsZSxpLG4sbyl7dmFyIGE9dC5sZW5ndGg7aWYoMT09PW8pZm9yKHZhciByPTA7cjxhO3IrKyluW3JdPUplKHRbcl0sZVtyXSxpKTtlbHNle3ZhciBzPWEmJnRbMF0ubGVuZ3RoO2ZvcihyPTA7cjxhO3IrKylmb3IodmFyIGw9MDtsPHM7bCsrKW5bcl1bbF09SmUodFtyXVtsXSxlW3JdW2xdLGkpfX1mdW5jdGlvbiBlaSh0LGUsaSl7dmFyIG49dC5sZW5ndGgsbz1lLmxlbmd0aDtpZihuIT09bylpZihvPG4pdC5sZW5ndGg9bztlbHNlIGZvcih2YXIgYT1uO2E8bzthKyspdC5wdXNoKDE9PT1pP2VbYV06cWUuY2FsbChlW2FdKSk7dmFyIHI9dFswXSYmdFswXS5sZW5ndGg7Zm9yKGE9MDthPHQubGVuZ3RoO2ErKylpZigxPT09aSlpc05hTih0W2FdKSYmKHRbYV09ZVthXSk7ZWxzZSBmb3IodmFyIHM9MDtzPHI7cysrKWlzTmFOKHRbYV1bc10pJiYodFthXVtzXT1lW2FdW3NdKX1mdW5jdGlvbiBpaSh0LGUsaSl7aWYodD09PWUpcmV0dXJuITA7dmFyIG49dC5sZW5ndGg7aWYobiE9PWUubGVuZ3RoKXJldHVybiExO2lmKDE9PT1pKXtmb3IodmFyIG89MDtvPG47bysrKWlmKHRbb10hPT1lW29dKXJldHVybiExfWVsc2V7dmFyIGE9dFswXS5sZW5ndGg7Zm9yKG89MDtvPG47bysrKWZvcih2YXIgcj0wO3I8YTtyKyspaWYodFtvXVtyXSE9PWVbb11bcl0pcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gbmkodCxlLGksbixvLGEscixzLGwpe3ZhciB1PXQubGVuZ3RoO2lmKDE9PT1sKWZvcih2YXIgaD0wO2g8dTtoKyspc1toXT1vaSh0W2hdLGVbaF0saVtoXSxuW2hdLG8sYSxyKTtlbHNle3ZhciBjPXRbMF0ubGVuZ3RoO2ZvcihoPTA7aDx1O2grKylmb3IodmFyIGQ9MDtkPGM7ZCsrKXNbaF1bZF09b2kodFtoXVtkXSxlW2hdW2RdLGlbaF1bZF0sbltoXVtkXSxvLGEscil9fWZ1bmN0aW9uIG9pKHQsZSxpLG4sbyxhLHIpe3ZhciBzPS41KihpLXQpLGw9LjUqKG4tZSk7cmV0dXJuKDIqKGUtaSkrcytsKSpyKygtMyooZS1pKS0yKnMtbCkqYStzKm8rZX1mdW5jdGlvbiBhaSh0KXtpZihQKHQpKXt2YXIgZT10Lmxlbmd0aDtpZihQKHRbMF0pKXtmb3IodmFyIGk9W10sbj0wO248ZTtuKyspaS5wdXNoKHFlLmNhbGwodFtuXSkpO3JldHVybiBpfXJldHVybiBxZS5jYWxsKHQpfXJldHVybiB0fWZ1bmN0aW9uIHJpKHQpe3JldHVybiB0WzBdPU1hdGguZmxvb3IodFswXSksdFsxXT1NYXRoLmZsb29yKHRbMV0pLHRbMl09TWF0aC5mbG9vcih0WzJdKSwicmdiYSgiK3Quam9pbigiLCIpKyIpIn1mdW5jdGlvbiBzaSh0LGUsaSxuLGEsbyl7dmFyIHI9dC5fZ2V0dGVyLHM9dC5fc2V0dGVyLGw9InNwbGluZSI9PT1lLHU9bi5sZW5ndGg7aWYodSl7dmFyIGgsYz1QKG5bMF0udmFsdWUpLGQ9ITEsZj0hMSxwPWM/ZnVuY3Rpb24odCl7dmFyIGU9dFt0Lmxlbmd0aC0xXS52YWx1ZTtyZXR1cm4gUChlJiZlWzBdKT8yOjF9KG4pOjA7bi5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQudGltZS1lLnRpbWV9KSxoPW5bdS0xXS50aW1lO2Zvcih2YXIgZz1bXSxtPVtdLHY9blswXS52YWx1ZSx5PSEwLHg9MDt4PHU7eCsrKXtnLnB1c2goblt4XS50aW1lL2gpO3ZhciBfPW5beF0udmFsdWU7aWYoYyYmaWkoXyx2LHApfHwhYyYmXz09PXZ8fCh5PSExKSwic3RyaW5nIj09dHlwZW9mKHY9Xykpe3ZhciB3PVJlKF8pO3c/KF89dyxkPSEwKTpmPSEwfW0ucHVzaChfKX1pZihvfHwheSl7dmFyIGI9bVt1LTFdO2Zvcih4PTA7eDx1LTE7eCsrKWM/ZWkobVt4XSxiLHApOiFpc05hTihtW3hdKXx8aXNOYU4oYil8fGZ8fGR8fChtW3hdPWIpO2MmJmVpKHIodC5fdGFyZ2V0LGEpLGIscCk7dmFyIFMsTSxJLFQsQSxEPTAsQz0wO2lmKGQpdmFyIEw9WzAsMCwwLDBdO3ZhciBrPW5ldyB4ZSh7dGFyZ2V0OnQuX3RhcmdldCxsaWZlOmgsbG9vcDp0Ll9sb29wLGRlbGF5OnQuX2RlbGF5LG9uZnJhbWU6ZnVuY3Rpb24odCxlKXt2YXIgaTtpZihlPDApaT0wO2Vsc2UgaWYoZTxDKXtmb3IoaT1NYXRoLm1pbihEKzEsdS0xKTswPD1pJiYhKGdbaV08PWUpO2ktLSk7aT1NYXRoLm1pbihpLHUtMil9ZWxzZXtmb3IoaT1EO2k8dSYmIShnW2ldPmUpO2krKyk7aT1NYXRoLm1pbihpLTEsdS0yKX1DPWU7dmFyIG49Z1soRD1pKSsxXS1nW2ldO2lmKDAhPW4paWYoUz0oZS1nW2ldKS9uLGwpaWYoST1tW2ldLE09bVswPT09aT9pOmktMV0sVD1tW3UtMjxpP3UtMTppKzFdLEE9bVt1LTM8aT91LTE6aSsyXSxjKW5pKE0sSSxULEEsUyxTKlMsUypTKlMscih0LGEpLHApO2Vsc2V7aWYoZClvPW5pKE0sSSxULEEsUyxTKlMsUypTKlMsTCwxKSxvPXJpKEwpO2Vsc2V7aWYoZilyZXR1cm4gUWUoSSxULFMpO289b2koTSxJLFQsQSxTLFMqUyxTKlMqUyl9cyh0LGEsbyl9ZWxzZSBpZihjKXRpKG1baV0sbVtpKzFdLFMscih0LGEpLHApO2Vsc2V7dmFyIG87aWYoZCl0aShtW2ldLG1baSsxXSxTLEwsMSksbz1yaShMKTtlbHNle2lmKGYpcmV0dXJuIFFlKG1baV0sbVtpKzFdLFMpO289SmUobVtpXSxtW2krMV0sUyl9cyh0LGEsbyl9fSxvbmRlc3Ryb3k6aX0pO3JldHVybiBlJiYic3BsaW5lIiE9PWUmJihrLmVhc2luZz1lKSxrfX19ZnVuY3Rpb24gbGkodCxlLGksbil7dGhpcy5fdHJhY2tzPXt9LHRoaXMuX3RhcmdldD10LHRoaXMuX2xvb3A9ZXx8ITEsdGhpcy5fZ2V0dGVyPWl8fEtlLHRoaXMuX3NldHRlcj1ufHwkZSx0aGlzLl9jbGlwQ291bnQ9MCx0aGlzLl9kZWxheT0wLHRoaXMuX2RvbmVMaXN0PVtdLHRoaXMuX29uZnJhbWVMaXN0PVtdLHRoaXMuX2NsaXBMaXN0PVtdfWxpLnByb3RvdHlwZT17d2hlbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX3RyYWNrcztmb3IodmFyIG4gaW4gZSlpZihlLmhhc093blByb3BlcnR5KG4pKXtpZighaVtuXSl7aVtuXT1bXTt2YXIgbz10aGlzLl9nZXR0ZXIodGhpcy5fdGFyZ2V0LG4pO2lmKG51bGw9PW8pY29udGludWU7MCE9PXQmJmlbbl0ucHVzaCh7dGltZTowLHZhbHVlOmFpKG8pfSl9aVtuXS5wdXNoKHt0aW1lOnQsdmFsdWU6ZVtuXX0pfXJldHVybiB0aGlzfSxkdXJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX29uZnJhbWVMaXN0LnB1c2godCksdGhpc30scGF1c2U6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PHRoaXMuX2NsaXBMaXN0Lmxlbmd0aDt0KyspdGhpcy5fY2xpcExpc3RbdF0ucGF1c2UoKTt0aGlzLl9wYXVzZWQ9ITB9LHJlc3VtZTpmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8dGhpcy5fY2xpcExpc3QubGVuZ3RoO3QrKyl0aGlzLl9jbGlwTGlzdFt0XS5yZXN1bWUoKTt0aGlzLl9wYXVzZWQ9ITF9LGlzUGF1c2VkOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLl9wYXVzZWR9LF9kb25lQ2FsbGJhY2s6ZnVuY3Rpb24oKXt0aGlzLl90cmFja3M9e30sdGhpcy5fY2xpcExpc3QubGVuZ3RoPTA7Zm9yKHZhciB0PXRoaXMuX2RvbmVMaXN0LGU9dC5sZW5ndGgsaT0wO2k8ZTtpKyspdFtpXS5jYWxsKHRoaXMpfSxzdGFydDpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkoKXstLWF8fG8uX2RvbmVDYWxsYmFjaygpfXZhciBuLG89dGhpcyxhPTA7Zm9yKHZhciByIGluIHRoaXMuX3RyYWNrcylpZih0aGlzLl90cmFja3MuaGFzT3duUHJvcGVydHkocikpe3ZhciBzPXNpKHRoaXMsdCxpLHRoaXMuX3RyYWNrc1tyXSxyLGUpO3MmJih0aGlzLl9jbGlwTGlzdC5wdXNoKHMpLGErKyx0aGlzLmFuaW1hdGlvbiYmdGhpcy5hbmltYXRpb24uYWRkQ2xpcChzKSxuPXMpfWlmKG4pe3ZhciBsPW4ub25mcmFtZTtuLm9uZnJhbWU9ZnVuY3Rpb24odCxlKXtsKHQsZSk7Zm9yKHZhciBpPTA7aTxvLl9vbmZyYW1lTGlzdC5sZW5ndGg7aSsrKW8uX29uZnJhbWVMaXN0W2ldKHQsZSl9fXJldHVybiBhfHx0aGlzLl9kb25lQ2FsbGJhY2soKSx0aGlzfSxzdG9wOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9jbGlwTGlzdCxpPXRoaXMuYW5pbWF0aW9uLG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTt0JiZvLm9uZnJhbWUodGhpcy5fdGFyZ2V0LDEpLGkmJmkucmVtb3ZlQ2xpcChvKX1lLmxlbmd0aD0wfSxkZWxheTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZGVsYXk9dCx0aGlzfSxkb25lOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0aGlzLl9kb25lTGlzdC5wdXNoKHQpLHRoaXN9LGdldENsaXBzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NsaXBMaXN0fX07dmFyIHVpPTE7InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJih1aT1NYXRoLm1heCh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb3x8MSwxKSk7dmFyIGhpPXVpLGNpPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBkaSgpe3RoaXMuYW5pbWF0b3JzPVtdfXZhciBmaT1jaTtmdW5jdGlvbiBwaSh0LGUsaSxuLG8sYSxyLHMpe3oobik/KGE9byxvPW4sbj0wKTpPKG8pPyhhPW8sbz0ibGluZWFyIixuPTApOk8obik/KGE9bixuPTApOmk9TyhpKT8oYT1pLDUwMCk6aXx8NTAwLHQuc3RvcEFuaW1hdGlvbigpLGZ1bmN0aW9uIHQoZSxpLG4sbyxhLHIscyl7dmFyIGw9e307dmFyIHU9MDtmb3IodmFyIGggaW4gbylvLmhhc093blByb3BlcnR5KGgpJiYobnVsbCE9bltoXT9SKG9baF0pJiYhUChvW2hdKT90KGUsaT9pKyIuIitoOmgsbltoXSxvW2hdLGEscixzKToocz8obFtoXT1uW2hdLGdpKGUsaSxoLG9baF0pKTpsW2hdPW9baF0sdSsrKTpudWxsPT1vW2hdfHxzfHxnaShlLGksaCxvW2hdKSk7MDx1JiZlLmFuaW1hdGUoaSwhMSkud2hlbihudWxsPT1hPzUwMDphLGwpLmRlbGF5KHJ8fDApfSh0LCIiLHQsZSxpLG4scyk7dmFyIGw9dC5hbmltYXRvcnMuc2xpY2UoKSx1PWwubGVuZ3RoO2Z1bmN0aW9uIGgoKXstLXV8fGEmJmEoKX11fHxhJiZhKCk7Zm9yKHZhciBjPTA7YzxsLmxlbmd0aDtjKyspbFtjXS5kb25lKGgpLnN0YXJ0KG8scil9ZnVuY3Rpb24gZ2kodCxlLGksbil7aWYoZSl7dmFyIG89e307b1tlXT17fSxvW2VdW2ldPW4sdC5hdHRyKG8pfWVsc2UgdC5hdHRyKGksbil9ZGkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpkaSxhbmltYXRlOmZ1bmN0aW9uKHQsZSl7dmFyIGksbj0hMSxvPXRoaXMsYT10aGlzLl9fenI7aWYodCl7dmFyIHI9dC5zcGxpdCgiLiIpLHM9bztuPSJzaGFwZSI9PT1yWzBdO2Zvcih2YXIgbD0wLHU9ci5sZW5ndGg7bDx1O2wrKylzPXMmJnNbcltsXV07cyYmKGk9cyl9ZWxzZSBpPW87aWYoaSl7dmFyIGg9by5hbmltYXRvcnMsYz1uZXcgbGkoaSxlKTtyZXR1cm4gYy5kdXJpbmcoZnVuY3Rpb24odCl7by5kaXJ0eShuKX0pLmRvbmUoZnVuY3Rpb24oKXtoLnNwbGljZShfKGgsYyksMSl9KSxoLnB1c2goYyksYSYmYS5hbmltYXRpb24uYWRkQW5pbWF0b3IoYyksY31maSgnUHJvcGVydHkgIicrdCsnIiBpcyBub3QgZXhpc3RlZCBpbiBlbGVtZW50ICcrby5pZCl9LHN0b3BBbmltYXRpb246ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuYW5pbWF0b3JzLGk9ZS5sZW5ndGgsbj0wO248aTtuKyspZVtuXS5zdG9wKHQpO3JldHVybiBlLmxlbmd0aD0wLHRoaXN9LGFuaW1hdGVUbzpmdW5jdGlvbih0LGUsaSxuLG8sYSl7cGkodGhpcyx0LGUsaSxuLG8sYSl9LGFuaW1hdGVGcm9tOmZ1bmN0aW9uKHQsZSxpLG4sbyxhKXtwaSh0aGlzLHQsZSxpLG4sbyxhLCEwKX19O3ZhciBtaT1mdW5jdGlvbih0KXtmZS5jYWxsKHRoaXMsdCksQ3QuY2FsbCh0aGlzLHQpLGRpLmNhbGwodGhpcyx0KSx0aGlzLmlkPXQuaWR8fG4oKX07bWkucHJvdG90eXBlPXt0eXBlOiJlbGVtZW50IixuYW1lOiIiLF9fenI6bnVsbCxpZ25vcmU6ITEsY2xpcFBhdGg6bnVsbCxpc0dyb3VwOiExLGRyaWZ0OmZ1bmN0aW9uKHQsZSl7c3dpdGNoKHRoaXMuZHJhZ2dhYmxlKXtjYXNlImhvcml6b250YWwiOmU9MDticmVhaztjYXNlInZlcnRpY2FsIjp0PTB9dmFyIGk9dGhpcy50cmFuc2Zvcm07KGk9aXx8KHRoaXMudHJhbnNmb3JtPVsxLDAsMCwxLDAsMF0pKVs0XSs9dCxpWzVdKz1lLHRoaXMuZGVjb21wb3NlVHJhbnNmb3JtKCksdGhpcy5kaXJ0eSghMSl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbigpe30sYWZ0ZXJVcGRhdGU6ZnVuY3Rpb24oKXt9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMudXBkYXRlVHJhbnNmb3JtKCl9LHRyYXZlcnNlOmZ1bmN0aW9uKHQsZSl7fSxhdHRyS1Y6ZnVuY3Rpb24odCxlKXtpZigicG9zaXRpb24iPT09dHx8InNjYWxlIj09PXR8fCJvcmlnaW4iPT09dCl7aWYoZSl7dmFyIGk9dGhpc1t0XTsoaT1pfHwodGhpc1t0XT1bXSkpWzBdPWVbMF0saVsxXT1lWzFdfX1lbHNlIHRoaXNbdF09ZX0saGlkZTpmdW5jdGlvbigpe3RoaXMuaWdub3JlPSEwLHRoaXMuX196ciYmdGhpcy5fX3pyLnJlZnJlc2goKX0sc2hvdzpmdW5jdGlvbigpe3RoaXMuaWdub3JlPSExLHRoaXMuX196ciYmdGhpcy5fX3pyLnJlZnJlc2goKX0sYXR0cjpmdW5jdGlvbih0LGUpe2lmKCJzdHJpbmciPT10eXBlb2YgdCl0aGlzLmF0dHJLVih0LGUpO2Vsc2UgaWYoUih0KSlmb3IodmFyIGkgaW4gdCl0Lmhhc093blByb3BlcnR5KGkpJiZ0aGlzLmF0dHJLVihpLHRbaV0pO3JldHVybiB0aGlzLmRpcnR5KCExKSx0aGlzfSxzZXRDbGlwUGF0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fenI7ZSYmdC5hZGRTZWxmVG9acihlKSx0aGlzLmNsaXBQYXRoJiZ0aGlzLmNsaXBQYXRoIT09dCYmdGhpcy5yZW1vdmVDbGlwUGF0aCgpLCh0aGlzLmNsaXBQYXRoPXQpLl9fenI9ZSwodC5fX2NsaXBUYXJnZXQ9dGhpcykuZGlydHkoITEpfSxyZW1vdmVDbGlwUGF0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2xpcFBhdGg7dCYmKHQuX196ciYmdC5yZW1vdmVTZWxmRnJvbVpyKHQuX196ciksdC5fX3pyPW51bGwsdC5fX2NsaXBUYXJnZXQ9bnVsbCx0aGlzLmNsaXBQYXRoPW51bGwsdGhpcy5kaXJ0eSghMSkpfSxhZGRTZWxmVG9acjpmdW5jdGlvbih0KXt0aGlzLl9fenI9dDt2YXIgZT10aGlzLmFuaW1hdG9ycztpZihlKWZvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXQuYW5pbWF0aW9uLmFkZEFuaW1hdG9yKGVbaV0pO3RoaXMuY2xpcFBhdGgmJnRoaXMuY2xpcFBhdGguYWRkU2VsZlRvWnIodCl9LHJlbW92ZVNlbGZGcm9tWnI6ZnVuY3Rpb24odCl7dGhpcy5fX3pyPW51bGw7dmFyIGU9dGhpcy5hbmltYXRvcnM7aWYoZSlmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl0LmFuaW1hdGlvbi5yZW1vdmVBbmltYXRvcihlW2ldKTt0aGlzLmNsaXBQYXRoJiZ0aGlzLmNsaXBQYXRoLnJlbW92ZVNlbGZGcm9tWnIodCl9fSxiKG1pLGRpKSxiKG1pLGZlKSxiKG1pLEN0KTt2YXIgdmkseWkseGksX2ksd2k9YnQsYmk9TWF0aC5taW4sU2k9TWF0aC5tYXg7ZnVuY3Rpb24gTWkodCxlLGksbil7aTwwJiYodCs9aSxpPS1pKSxuPDAmJihlKz1uLG49LW4pLHRoaXMueD10LHRoaXMueT1lLHRoaXMud2lkdGg9aSx0aGlzLmhlaWdodD1ufU1pLnByb3RvdHlwZT17Y29uc3RydWN0b3I6TWksdW5pb246ZnVuY3Rpb24odCl7dmFyIGU9YmkodC54LHRoaXMueCksaT1iaSh0LnksdGhpcy55KTt0aGlzLndpZHRoPVNpKHQueCt0LndpZHRoLHRoaXMueCt0aGlzLndpZHRoKS1lLHRoaXMuaGVpZ2h0PVNpKHQueSt0LmhlaWdodCx0aGlzLnkrdGhpcy5oZWlnaHQpLWksdGhpcy54PWUsdGhpcy55PWl9LGFwcGx5VHJhbnNmb3JtOih2aT1bXSx5aT1bXSx4aT1bXSxfaT1bXSxmdW5jdGlvbih0KXtpZih0KXt2aVswXT14aVswXT10aGlzLngsdmlbMV09X2lbMV09dGhpcy55LHlpWzBdPV9pWzBdPXRoaXMueCt0aGlzLndpZHRoLHlpWzFdPXhpWzFdPXRoaXMueSt0aGlzLmhlaWdodCx3aSh2aSx2aSx0KSx3aSh5aSx5aSx0KSx3aSh4aSx4aSx0KSx3aShfaSxfaSx0KSx0aGlzLng9YmkodmlbMF0seWlbMF0seGlbMF0sX2lbMF0pLHRoaXMueT1iaSh2aVsxXSx5aVsxXSx4aVsxXSxfaVsxXSk7dmFyIGU9U2kodmlbMF0seWlbMF0seGlbMF0sX2lbMF0pLGk9U2kodmlbMV0seWlbMV0seGlbMV0sX2lbMV0pO3RoaXMud2lkdGg9ZS10aGlzLngsdGhpcy5oZWlnaHQ9aS10aGlzLnl9fSksY2FsY3VsYXRlVHJhbnNmb3JtOmZ1bmN0aW9uKHQpe3ZhciBlPXQud2lkdGgvdGhpcy53aWR0aCxpPXQuaGVpZ2h0L3RoaXMuaGVpZ2h0LG49ZWUoKTtyZXR1cm4gYWUobixuLFstdGhpcy54LC10aGlzLnldKSxzZShuLG4sW2UsaV0pLGFlKG4sbixbdC54LHQueV0pLG59LGludGVyc2VjdDpmdW5jdGlvbih0KXtpZighdClyZXR1cm4hMTt0IGluc3RhbmNlb2YgTWl8fCh0PU1pLmNyZWF0ZSh0KSk7dmFyIGU9dGhpcyxpPWUueCxuPWUueCtlLndpZHRoLG89ZS55LGE9ZS55K2UuaGVpZ2h0LHI9dC54LHM9dC54K3Qud2lkdGgsbD10LnksdT10LnkrdC5oZWlnaHQ7cmV0dXJuIShuPHJ8fHM8aXx8YTxsfHx1PG8pfSxjb250YWluOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcztyZXR1cm4gdD49aS54JiZ0PD1pLngraS53aWR0aCYmZT49aS55JiZlPD1pLnkraS5oZWlnaHR9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBNaSh0aGlzLngsdGhpcy55LHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpfSxjb3B5OmZ1bmN0aW9uKHQpe3RoaXMueD10LngsdGhpcy55PXQueSx0aGlzLndpZHRoPXQud2lkdGgsdGhpcy5oZWlnaHQ9dC5oZWlnaHR9LHBsYWluOmZ1bmN0aW9uKCl7cmV0dXJue3g6dGhpcy54LHk6dGhpcy55LHdpZHRoOnRoaXMud2lkdGgsaGVpZ2h0OnRoaXMuaGVpZ2h0fX19LE1pLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IE1pKHQueCx0LnksdC53aWR0aCx0LmhlaWdodCl9O3ZhciBJaT1mdW5jdGlvbih0KXtmb3IodmFyIGUgaW4gdD10fHx7fSxtaS5jYWxsKHRoaXMsdCksdCl0Lmhhc093blByb3BlcnR5KGUpJiYodGhpc1tlXT10W2VdKTt0aGlzLl9jaGlsZHJlbj1bXSx0aGlzLl9fc3RvcmFnZT1udWxsLHRoaXMuX19kaXJ0eT0hMH07SWkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpJaSxpc0dyb3VwOiEwLHR5cGU6Imdyb3VwIixzaWxlbnQ6ITEsY2hpbGRyZW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW4uc2xpY2UoKX0sY2hpbGRBdDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY2hpbGRyZW5bdF19LGNoaWxkT2ZOYW1lOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9jaGlsZHJlbixpPTA7aTxlLmxlbmd0aDtpKyspaWYoZVtpXS5uYW1lPT09dClyZXR1cm4gZVtpXX0sY2hpbGRDb3VudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbi5sZW5ndGh9LGFkZDpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdCE9PXRoaXMmJnQucGFyZW50IT09dGhpcyYmKHRoaXMuX2NoaWxkcmVuLnB1c2godCksdGhpcy5fZG9BZGQodCkpLHRoaXN9LGFkZEJlZm9yZTpmdW5jdGlvbih0LGUpe2lmKHQmJnQhPT10aGlzJiZ0LnBhcmVudCE9PXRoaXMmJmUmJmUucGFyZW50PT09dGhpcyl7dmFyIGk9dGhpcy5fY2hpbGRyZW4sbj1pLmluZGV4T2YoZSk7MDw9biYmKGkuc3BsaWNlKG4sMCx0KSx0aGlzLl9kb0FkZCh0KSl9cmV0dXJuIHRoaXN9LF9kb0FkZDpmdW5jdGlvbih0KXt0LnBhcmVudCYmdC5wYXJlbnQucmVtb3ZlKHQpO3ZhciBlPSh0LnBhcmVudD10aGlzKS5fX3N0b3JhZ2UsaT10aGlzLl9fenI7ZSYmZSE9PXQuX19zdG9yYWdlJiYoZS5hZGRUb1N0b3JhZ2UodCksdCBpbnN0YW5jZW9mIElpJiZ0LmFkZENoaWxkcmVuVG9TdG9yYWdlKGUpKSxpJiZpLnJlZnJlc2goKX0scmVtb3ZlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX196cixpPXRoaXMuX19zdG9yYWdlLG49dGhpcy5fY2hpbGRyZW4sbz1fKG4sdCk7cmV0dXJuIG88MHx8KG4uc3BsaWNlKG8sMSksdC5wYXJlbnQ9bnVsbCxpJiYoaS5kZWxGcm9tU3RvcmFnZSh0KSx0IGluc3RhbmNlb2YgSWkmJnQuZGVsQ2hpbGRyZW5Gcm9tU3RvcmFnZShpKSksZSYmZS5yZWZyZXNoKCkpLHRoaXN9LHJlbW92ZUFsbDpmdW5jdGlvbigpe3ZhciB0LGUsaT10aGlzLl9jaGlsZHJlbixuPXRoaXMuX19zdG9yYWdlO2ZvcihlPTA7ZTxpLmxlbmd0aDtlKyspdD1pW2VdLG4mJihuLmRlbEZyb21TdG9yYWdlKHQpLHQgaW5zdGFuY2VvZiBJaSYmdC5kZWxDaGlsZHJlbkZyb21TdG9yYWdlKG4pKSx0LnBhcmVudD1udWxsO3JldHVybiBpLmxlbmd0aD0wLHRoaXN9LGVhY2hDaGlsZDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLl9jaGlsZHJlbixuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPWlbbl07dC5jYWxsKGUsbyxuKX1yZXR1cm4gdGhpc30sdHJhdmVyc2U6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9MDtpPHRoaXMuX2NoaWxkcmVuLmxlbmd0aDtpKyspe3ZhciBuPXRoaXMuX2NoaWxkcmVuW2ldO3QuY2FsbChlLG4pLCJncm91cCI9PT1uLnR5cGUmJm4udHJhdmVyc2UodCxlKX1yZXR1cm4gdGhpc30sYWRkQ2hpbGRyZW5Ub1N0b3JhZ2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7ZSsrKXt2YXIgaT10aGlzLl9jaGlsZHJlbltlXTt0LmFkZFRvU3RvcmFnZShpKSxpIGluc3RhbmNlb2YgSWkmJmkuYWRkQ2hpbGRyZW5Ub1N0b3JhZ2UodCl9fSxkZWxDaGlsZHJlbkZyb21TdG9yYWdlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2UrKyl7dmFyIGk9dGhpcy5fY2hpbGRyZW5bZV07dC5kZWxGcm9tU3RvcmFnZShpKSxpIGluc3RhbmNlb2YgSWkmJmkuZGVsQ2hpbGRyZW5Gcm9tU3RvcmFnZSh0KX19LGRpcnR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19kaXJ0eT0hMCx0aGlzLl9fenImJnRoaXMuX196ci5yZWZyZXNoKCksdGhpc30sZ2V0Qm91bmRpbmdSZWN0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1udWxsLGk9bmV3IE1pKDAsMCwwLDApLG49dHx8dGhpcy5fY2hpbGRyZW4sbz1bXSxhPTA7YTxuLmxlbmd0aDthKyspe3ZhciByPW5bYV07aWYoIXIuaWdub3JlJiYhci5pbnZpc2libGUpe3ZhciBzPXIuZ2V0Qm91bmRpbmdSZWN0KCksbD1yLmdldExvY2FsVHJhbnNmb3JtKG8pO2w/KGkuY29weShzKSxpLmFwcGx5VHJhbnNmb3JtKGwpLChlPWV8fGkuY2xvbmUoKSkudW5pb24oaSkpOihlPWV8fHMuY2xvbmUoKSkudW5pb24ocyl9fXJldHVybiBlfHxpfX0sdyhJaSxtaSk7dmFyIFRpPTMyLEFpPTc7ZnVuY3Rpb24gRGkodCxlLGksbil7dmFyIG89ZSsxO2lmKG89PT1pKXJldHVybiAxO2lmKG4odFtvKytdLHRbZV0pPDApe2Zvcig7bzxpJiZuKHRbb10sdFtvLTFdKTwwOylvKys7IWZ1bmN0aW9uKHQsZSxpKXtpLS07Zm9yKDtlPGk7KXt2YXIgbj10W2VdO3RbZSsrXT10W2ldLHRbaS0tXT1ufX0odCxlLG8pfWVsc2UgZm9yKDtvPGkmJjA8PW4odFtvXSx0W28tMV0pOylvKys7cmV0dXJuIG8tZX1mdW5jdGlvbiBDaSh0LGUsaSxuLG8pe2ZvcihuPT09ZSYmbisrO248aTtuKyspe2Zvcih2YXIgYSxyPXRbbl0scz1lLGw9bjtzPGw7KW8ocix0W2E9cytsPj4+MV0pPDA/bD1hOnM9MSthO3ZhciB1PW4tcztzd2l0Y2godSl7Y2FzZSAzOnRbcyszXT10W3MrMl07Y2FzZSAyOnRbcysyXT10W3MrMV07Y2FzZSAxOnRbcysxXT10W3NdO2JyZWFrO2RlZmF1bHQ6Zm9yKDswPHU7KXRbcyt1XT10W3MrdS0xXSx1LS19dFtzXT1yfX1mdW5jdGlvbiBMaSh0LGUsaSxuLG8sYSl7dmFyIHI9MCxzPTAsbD0xO2lmKDA8YSh0LGVbaStvXSkpe2ZvcihzPW4tbztsPHMmJjA8YSh0LGVbaStvK2xdKTspKGw9MSsoKHI9bCk8PDEpKTw9MCYmKGw9cyk7czxsJiYobD1zKSxyKz1vLGwrPW99ZWxzZXtmb3Iocz1vKzE7bDxzJiZhKHQsZVtpK28tbF0pPD0wOykobD0xKygocj1sKTw8MSkpPD0wJiYobD1zKTtzPGwmJihsPXMpO3ZhciB1PXI7cj1vLWwsbD1vLXV9Zm9yKHIrKztyPGw7KXt2YXIgaD1yKyhsLXI+Pj4xKTswPGEodCxlW2kraF0pP3I9aCsxOmw9aH1yZXR1cm4gbH1mdW5jdGlvbiBraSh0LGUsaSxuLG8sYSl7dmFyIHI9MCxzPTAsbD0xO2lmKGEodCxlW2krb10pPDApe2ZvcihzPW8rMTtsPHMmJmEodCxlW2krby1sXSk8MDspKGw9MSsoKHI9bCk8PDEpKTw9MCYmKGw9cyk7czxsJiYobD1zKTt2YXIgdT1yO3I9by1sLGw9by11fWVsc2V7Zm9yKHM9bi1vO2w8cyYmMDw9YSh0LGVbaStvK2xdKTspKGw9MSsoKHI9bCk8PDEpKTw9MCYmKGw9cyk7czxsJiYobD1zKSxyKz1vLGwrPW99Zm9yKHIrKztyPGw7KXt2YXIgaD1yKyhsLXI+Pj4xKTthKHQsZVtpK2hdKTwwP2w9aDpyPWgrMX1yZXR1cm4gbH1mdW5jdGlvbiBQaShwLGcpe3ZhciByLHMsbT1BaSxsPTAsdj1bXTtmdW5jdGlvbiBlKHQpe3ZhciBlPXJbdF0saT1zW3RdLG49clt0KzFdLG89c1t0KzFdO3NbdF09aStvLHQ9PT1sLTMmJihyW3QrMV09clt0KzJdLHNbdCsxXT1zW3QrMl0pLGwtLTt2YXIgYT1raShwW25dLHAsZSxpLDAsZyk7ZSs9YSwwIT09KGktPWEpJiYwIT09KG89TGkocFtlK2ktMV0scCxuLG8sby0xLGcpKSYmKGk8PW8/ZnVuY3Rpb24odCxlLGksbil7dmFyIG89MDtmb3Iobz0wO288ZTtvKyspdltvXT1wW3Qrb107dmFyIGE9MCxyPWkscz10O2lmKHBbcysrXT1wW3IrK10sMD09LS1uKXtmb3Iobz0wO288ZTtvKyspcFtzK29dPXZbYStvXTtyZXR1cm59aWYoMT09PWUpe2ZvcihvPTA7bzxuO28rKylwW3Mrb109cFtyK29dO3JldHVybiBwW3Mrbl09dlthXX12YXIgbCx1LGgsYz1tO2Zvcig7Oyl7dT1sPTAsaD0hMTtkb3tpZihnKHBbcl0sdlthXSk8MCl7aWYocFtzKytdPXBbcisrXSx1KyssKGw9MCk9PS0tbil7aD0hMDticmVha319ZWxzZSBpZihwW3MrK109dlthKytdLGwrKyx1PTAsMT09LS1lKXtoPSEwO2JyZWFrfX13aGlsZSgobHx1KTxjKTtpZihoKWJyZWFrO2Rve2lmKDAhPT0obD1raShwW3JdLHYsYSxlLDAsZykpKXtmb3Iobz0wO288bDtvKyspcFtzK29dPXZbYStvXTtpZihzKz1sLGErPWwsKGUtPWwpPD0xKXtoPSEwO2JyZWFrfX1pZihwW3MrK109cFtyKytdLDA9PS0tbil7aD0hMDticmVha31pZigwIT09KHU9TGkodlthXSxwLHIsbiwwLGcpKSl7Zm9yKG89MDtvPHU7bysrKXBbcytvXT1wW3Irb107aWYocys9dSxyKz11LDA9PT0obi09dSkpe2g9ITA7YnJlYWt9fWlmKHBbcysrXT12W2ErK10sMT09LS1lKXtoPSEwO2JyZWFrfWMtLX13aGlsZShBaTw9bHx8QWk8PXUpO2lmKGgpYnJlYWs7YzwwJiYoYz0wKSxjKz0yfWlmKChtPWMpPDEmJihtPTEpLDE9PT1lKXtmb3Iobz0wO288bjtvKyspcFtzK29dPXBbcitvXTtwW3Mrbl09dlthXX1lbHNle2lmKDA9PT1lKXRocm93IG5ldyBFcnJvcjtmb3Iobz0wO288ZTtvKyspcFtzK29dPXZbYStvXX19KGUsaSxuLG8pOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPTA7Zm9yKG89MDtvPG47bysrKXZbb109cFtpK29dO3ZhciBhPXQrZS0xLHI9bi0xLHM9aStuLTEsbD0wLHU9MDtpZihwW3MtLV09cFthLS1dLDA9PS0tZSl7Zm9yKGw9cy0obi0xKSxvPTA7bzxuO28rKylwW2wrb109dltvXTtyZXR1cm59aWYoMT09PW4pe2Zvcih1PShzLT1lKSsxLGw9KGEtPWUpKzEsbz1lLTE7MDw9bztvLS0pcFt1K29dPXBbbCtvXTtyZXR1cm4gcFtzXT12W3JdfXZhciBoPW07Zm9yKDs7KXt2YXIgYz0wLGQ9MCxmPSExO2Rve2lmKGcodltyXSxwW2FdKTwwKXtpZihwW3MtLV09cFthLS1dLGMrKywoZD0wKT09LS1lKXtmPSEwO2JyZWFrfX1lbHNlIGlmKHBbcy0tXT12W3ItLV0sZCsrLGM9MCwxPT0tLW4pe2Y9ITA7YnJlYWt9fXdoaWxlKChjfGQpPGgpO2lmKGYpYnJlYWs7ZG97aWYoMCE9PShjPWUta2kodltyXSxwLHQsZSxlLTEsZykpKXtmb3IoZS09Yyx1PShzLT1jKSsxLGw9KGEtPWMpKzEsbz1jLTE7MDw9bztvLS0pcFt1K29dPXBbbCtvXTtpZigwPT09ZSl7Zj0hMDticmVha319aWYocFtzLS1dPXZbci0tXSwxPT0tLW4pe2Y9ITA7YnJlYWt9aWYoMCE9PShkPW4tTGkocFthXSx2LDAsbixuLTEsZykpKXtmb3Iobi09ZCx1PShzLT1kKSsxLGw9KHItPWQpKzEsbz0wO288ZDtvKyspcFt1K29dPXZbbCtvXTtpZihuPD0xKXtmPSEwO2JyZWFrfX1pZihwW3MtLV09cFthLS1dLDA9PS0tZSl7Zj0hMDticmVha31oLS19d2hpbGUoQWk8PWN8fEFpPD1kKTtpZihmKWJyZWFrO2g8MCYmKGg9MCksaCs9Mn0obT1oKTwxJiYobT0xKTtpZigxPT09bil7Zm9yKHU9KHMtPWUpKzEsbD0oYS09ZSkrMSxvPWUtMTswPD1vO28tLSlwW3Urb109cFtsK29dO3Bbc109dltyXX1lbHNle2lmKDA9PT1uKXRocm93IG5ldyBFcnJvcjtmb3IobD1zLShuLTEpLG89MDtvPG47bysrKXBbbCtvXT12W29dfX0oZSxpLG4sbykpfXI9W10scz1bXSx0aGlzLm1lcmdlUnVucz1mdW5jdGlvbigpe2Zvcig7MTxsOyl7dmFyIHQ9bC0yO2lmKDE8PXQmJnNbdC0xXTw9c1t0XStzW3QrMV18fDI8PXQmJnNbdC0yXTw9c1t0XStzW3QtMV0pc1t0LTFdPHNbdCsxXSYmdC0tO2Vsc2UgaWYoc1t0XT5zW3QrMV0pYnJlYWs7ZSh0KX19LHRoaXMuZm9yY2VNZXJnZVJ1bnM9ZnVuY3Rpb24oKXtmb3IoOzE8bDspe3ZhciB0PWwtMjswPHQmJnNbdC0xXTxzW3QrMV0mJnQtLSxlKHQpfX0sdGhpcy5wdXNoUnVuPWZ1bmN0aW9uKHQsZSl7cltsXT10LHNbbF09ZSxsKz0xfX1mdW5jdGlvbiBOaSh0LGUsaSxuKXtpPWl8fDA7dmFyIG89KG49bnx8dC5sZW5ndGgpLWk7aWYoIShvPDIpKXt2YXIgYT0wO2lmKG88VGkpQ2kodCxpLG4saSsoYT1EaSh0LGksbixlKSksZSk7ZWxzZXt2YXIgcj1uZXcgUGkodCxlKSxzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO1RpPD10OyllfD0xJnQsdD4+PTE7cmV0dXJuIHQrZX0obyk7ZG97aWYoKGE9RGkodCxpLG4sZSkpPHMpe3ZhciBsPW87czxsJiYobD1zKSxDaSh0LGksaStsLGkrYSxlKSxhPWx9ci5wdXNoUnVuKGksYSksci5tZXJnZVJ1bnMoKSxvLT1hLGkrPWF9d2hpbGUoMCE9PW8pO3IuZm9yY2VNZXJnZVJ1bnMoKX19fWZ1bmN0aW9uIE9pKHQsZSl7cmV0dXJuIHQuemxldmVsPT09ZS56bGV2ZWw/dC56PT09ZS56P3QuejItZS56Mjp0LnotZS56OnQuemxldmVsLWUuemxldmVsfWZ1bmN0aW9uIEVpKCl7dGhpcy5fcm9vdHM9W10sdGhpcy5fZGlzcGxheUxpc3Q9W10sdGhpcy5fZGlzcGxheUxpc3RMZW49MH1FaS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkVpLHRyYXZlcnNlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPTA7aTx0aGlzLl9yb290cy5sZW5ndGg7aSsrKXRoaXMuX3Jvb3RzW2ldLnRyYXZlcnNlKHQsZSl9LGdldERpc3BsYXlMaXN0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9ZXx8ITEsdCYmdGhpcy51cGRhdGVEaXNwbGF5TGlzdChlKSx0aGlzLl9kaXNwbGF5TGlzdH0sdXBkYXRlRGlzcGxheUxpc3Q6ZnVuY3Rpb24odCl7dGhpcy5fZGlzcGxheUxpc3RMZW49MDtmb3IodmFyIGU9dGhpcy5fcm9vdHMsaT10aGlzLl9kaXNwbGF5TGlzdCxuPTAsbz1lLmxlbmd0aDtuPG87bisrKXRoaXMuX3VwZGF0ZUFuZEFkZERpc3BsYXlhYmxlKGVbbl0sbnVsbCx0KTtpLmxlbmd0aD10aGlzLl9kaXNwbGF5TGlzdExlbix2LmNhbnZhc1N1cHBvcnRlZCYmTmkoaSxPaSl9LF91cGRhdGVBbmRBZGREaXNwbGF5YWJsZTpmdW5jdGlvbih0LGUsaSl7aWYoIXQuaWdub3JlfHxpKXt0LmJlZm9yZVVwZGF0ZSgpLHQuX19kaXJ0eSYmdC51cGRhdGUoKSx0LmFmdGVyVXBkYXRlKCk7dmFyIG49dC5jbGlwUGF0aDtpZihuKXtlPWU/ZS5zbGljZSgpOltdO2Zvcih2YXIgbz1uLGE9dDtvOylvLnBhcmVudD1hLG8udXBkYXRlVHJhbnNmb3JtKCksZS5wdXNoKG8pLG89KGE9bykuY2xpcFBhdGh9aWYodC5pc0dyb3VwKXtmb3IodmFyIHI9dC5fY2hpbGRyZW4scz0wO3M8ci5sZW5ndGg7cysrKXt2YXIgbD1yW3NdO3QuX19kaXJ0eSYmKGwuX19kaXJ0eT0hMCksdGhpcy5fdXBkYXRlQW5kQWRkRGlzcGxheWFibGUobCxlLGkpfXQuX19kaXJ0eT0hMX1lbHNlIHQuX19jbGlwUGF0aHM9ZSx0aGlzLl9kaXNwbGF5TGlzdFt0aGlzLl9kaXNwbGF5TGlzdExlbisrXT10fX0sYWRkUm9vdDpmdW5jdGlvbih0KXt0Ll9fc3RvcmFnZSE9PXRoaXMmJih0IGluc3RhbmNlb2YgSWkmJnQuYWRkQ2hpbGRyZW5Ub1N0b3JhZ2UodGhpcyksdGhpcy5hZGRUb1N0b3JhZ2UodCksdGhpcy5fcm9vdHMucHVzaCh0KSl9LGRlbFJvb3Q6ZnVuY3Rpb24odCl7aWYobnVsbD09dCl7Zm9yKHZhciBlPTA7ZTx0aGlzLl9yb290cy5sZW5ndGg7ZSsrKXt2YXIgaT10aGlzLl9yb290c1tlXTtpIGluc3RhbmNlb2YgSWkmJmkuZGVsQ2hpbGRyZW5Gcm9tU3RvcmFnZSh0aGlzKX1yZXR1cm4gdGhpcy5fcm9vdHM9W10sdGhpcy5fZGlzcGxheUxpc3Q9W10sdm9pZCh0aGlzLl9kaXNwbGF5TGlzdExlbj0wKX1pZih0IGluc3RhbmNlb2YgQXJyYXkpe2U9MDtmb3IodmFyIG49dC5sZW5ndGg7ZTxuO2UrKyl0aGlzLmRlbFJvb3QodFtlXSl9ZWxzZXt2YXIgbz1fKHRoaXMuX3Jvb3RzLHQpOzA8PW8mJih0aGlzLmRlbEZyb21TdG9yYWdlKHQpLHRoaXMuX3Jvb3RzLnNwbGljZShvLDEpLHQgaW5zdGFuY2VvZiBJaSYmdC5kZWxDaGlsZHJlbkZyb21TdG9yYWdlKHRoaXMpKX19LGFkZFRvU3RvcmFnZTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmKHQuX19zdG9yYWdlPXRoaXMsdC5kaXJ0eSghMSkpLHRoaXN9LGRlbEZyb21TdG9yYWdlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiYodC5fX3N0b3JhZ2U9bnVsbCksdGhpc30sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuX3JlbmRlckxpc3Q9dGhpcy5fcm9vdHM9bnVsbH0sZGlzcGxheWFibGVTb3J0RnVuYzpPaX07dmFyIHppPXtzaGFkb3dCbHVyOjEsc2hhZG93T2Zmc2V0WDoxLHNoYWRvd09mZnNldFk6MSx0ZXh0U2hhZG93Qmx1cjoxLHRleHRTaGFkb3dPZmZzZXRYOjEsdGV4dFNoYWRvd09mZnNldFk6MSx0ZXh0Qm94U2hhZG93Qmx1cjoxLHRleHRCb3hTaGFkb3dPZmZzZXRYOjEsdGV4dEJveFNoYWRvd09mZnNldFk6MX0sUmk9ZnVuY3Rpb24odCxlLGkpe3JldHVybiB6aS5oYXNPd25Qcm9wZXJ0eShlKT9pKnQuZHByOml9LEJpPXtOT05FOjAsU1RZTEVfQklORDoxLFBMQUlOX1RFWFQ6Mn0sVmk9OSxHaT1bWyJzaGFkb3dCbHVyIiwwXSxbInNoYWRvd09mZnNldFgiLDBdLFsic2hhZG93T2Zmc2V0WSIsMF0sWyJzaGFkb3dDb2xvciIsIiMwMDAiXSxbImxpbmVDYXAiLCJidXR0Il0sWyJsaW5lSm9pbiIsIm1pdGVyIl0sWyJtaXRlckxpbWl0IiwxMF1dLEZpPWZ1bmN0aW9uKHQpe3RoaXMuZXh0ZW5kRnJvbSh0LCExKX07ZnVuY3Rpb24gV2kodCxlLGkpe3ZhciBuPW51bGw9PWUueD8wOmUueCxvPW51bGw9PWUueDI/MTplLngyLGE9bnVsbD09ZS55PzA6ZS55LHI9bnVsbD09ZS55Mj8wOmUueTI7cmV0dXJuIGUuZ2xvYmFsfHwobj1uKmkud2lkdGgraS54LG89byppLndpZHRoK2kueCxhPWEqaS5oZWlnaHQraS55LHI9cippLmhlaWdodCtpLnkpLG49aXNOYU4obik/MDpuLG89aXNOYU4obyk/MTpvLGE9aXNOYU4oYSk/MDphLHI9aXNOYU4ocik/MDpyLHQuY3JlYXRlTGluZWFyR3JhZGllbnQobixhLG8scil9ZnVuY3Rpb24gSGkodCxlLGkpe3ZhciBuPWkud2lkdGgsbz1pLmhlaWdodCxhPU1hdGgubWluKG4sbykscj1udWxsPT1lLng/LjU6ZS54LHM9bnVsbD09ZS55Py41OmUueSxsPW51bGw9PWUucj8uNTplLnI7cmV0dXJuIGUuZ2xvYmFsfHwocj1yKm4raS54LHM9cypvK2kueSxsKj1hKSx0LmNyZWF0ZVJhZGlhbEdyYWRpZW50KHIscywwLHIscyxsKX1GaS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkZpLGZpbGw6IiMwMDAiLHN0cm9rZTpudWxsLG9wYWNpdHk6MSxmaWxsT3BhY2l0eTpudWxsLHN0cm9rZU9wYWNpdHk6bnVsbCxsaW5lRGFzaDpudWxsLGxpbmVEYXNoT2Zmc2V0OjAsc2hhZG93Qmx1cjowLHNoYWRvd09mZnNldFg6MCxzaGFkb3dPZmZzZXRZOjAsbGluZVdpZHRoOjEsc3Ryb2tlTm9TY2FsZTohMSx0ZXh0Om51bGwsZm9udDpudWxsLHRleHRGb250Om51bGwsZm9udFN0eWxlOm51bGwsZm9udFdlaWdodDpudWxsLGZvbnRTaXplOm51bGwsZm9udEZhbWlseTpudWxsLHRleHRUYWc6bnVsbCx0ZXh0RmlsbDoiIzAwMCIsdGV4dFN0cm9rZTpudWxsLHRleHRXaWR0aDpudWxsLHRleHRIZWlnaHQ6bnVsbCx0ZXh0U3Ryb2tlV2lkdGg6MCx0ZXh0TGluZUhlaWdodDpudWxsLHRleHRQb3NpdGlvbjoiaW5zaWRlIix0ZXh0UmVjdDpudWxsLHRleHRPZmZzZXQ6bnVsbCx0ZXh0QWxpZ246bnVsbCx0ZXh0VmVydGljYWxBbGlnbjpudWxsLHRleHREaXN0YW5jZTo1LHRleHRTaGFkb3dDb2xvcjoidHJhbnNwYXJlbnQiLHRleHRTaGFkb3dCbHVyOjAsdGV4dFNoYWRvd09mZnNldFg6MCx0ZXh0U2hhZG93T2Zmc2V0WTowLHRleHRCb3hTaGFkb3dDb2xvcjoidHJhbnNwYXJlbnQiLHRleHRCb3hTaGFkb3dCbHVyOjAsdGV4dEJveFNoYWRvd09mZnNldFg6MCx0ZXh0Qm94U2hhZG93T2Zmc2V0WTowLHRyYW5zZm9ybVRleHQ6ITEsdGV4dFJvdGF0aW9uOjAsdGV4dE9yaWdpbjpudWxsLHRleHRCYWNrZ3JvdW5kQ29sb3I6bnVsbCx0ZXh0Qm9yZGVyQ29sb3I6bnVsbCx0ZXh0Qm9yZGVyV2lkdGg6MCx0ZXh0Qm9yZGVyUmFkaXVzOjAsdGV4dFBhZGRpbmc6bnVsbCxyaWNoOm51bGwsdHJ1bmNhdGU6bnVsbCxibGVuZDpudWxsLGJpbmQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMsbz1pJiZpLnN0eWxlLGE9IW98fHQuX19hdHRyQ2FjaGVkQnkhPT1CaS5TVFlMRV9CSU5EO3QuX19hdHRyQ2FjaGVkQnk9QmkuU1RZTEVfQklORDtmb3IodmFyIHI9MDtyPEdpLmxlbmd0aDtyKyspe3ZhciBzPUdpW3JdLGw9c1swXTshYSYmbltsXT09PW9bbF18fCh0W2xdPVJpKHQsbCxuW2xdfHxzWzFdKSl9aWYoIWEmJm4uZmlsbD09PW8uZmlsbHx8KHQuZmlsbFN0eWxlPW4uZmlsbCksIWEmJm4uc3Ryb2tlPT09by5zdHJva2V8fCh0LnN0cm9rZVN0eWxlPW4uc3Ryb2tlKSwhYSYmbi5vcGFjaXR5PT09by5vcGFjaXR5fHwodC5nbG9iYWxBbHBoYT1udWxsPT1uLm9wYWNpdHk/MTpuLm9wYWNpdHkpLCFhJiZuLmJsZW5kPT09by5ibGVuZHx8KHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPW4uYmxlbmR8fCJzb3VyY2Utb3ZlciIpLHRoaXMuaGFzU3Ryb2tlKCkpe3ZhciB1PW4ubGluZVdpZHRoO3QubGluZVdpZHRoPXUvKHRoaXMuc3Ryb2tlTm9TY2FsZSYmZSYmZS5nZXRMaW5lU2NhbGU/ZS5nZXRMaW5lU2NhbGUoKToxKX19LGhhc0ZpbGw6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmZpbGw7cmV0dXJuIG51bGwhPXQmJiJub25lIiE9PXR9LGhhc1N0cm9rZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3Ryb2tlO3JldHVybiBudWxsIT10JiYibm9uZSIhPT10JiYwPHRoaXMubGluZVdpZHRofSxleHRlbmRGcm9tOmZ1bmN0aW9uKHQsZSl7aWYodClmb3IodmFyIGkgaW4gdCkhdC5oYXNPd25Qcm9wZXJ0eShpKXx8ITAhPT1lJiYoITE9PT1lP3RoaXMuaGFzT3duUHJvcGVydHkoaSk6bnVsbD09dFtpXSl8fCh0aGlzW2ldPXRbaV0pfSxzZXQ6ZnVuY3Rpb24odCxlKXsic3RyaW5nIj09dHlwZW9mIHQ/dGhpc1t0XT1lOnRoaXMuZXh0ZW5kRnJvbSh0LCEwKX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1uZXcgdGhpcy5jb25zdHJ1Y3RvcjtyZXR1cm4gdC5leHRlbmRGcm9tKHRoaXMsITApLHR9LGdldEdyYWRpZW50OmZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49KCJyYWRpYWwiPT09ZS50eXBlP0hpOldpKSh0LGUsaSksbz1lLmNvbG9yU3RvcHMsYT0wO2E8by5sZW5ndGg7YSsrKW4uYWRkQ29sb3JTdG9wKG9bYV0ub2Zmc2V0LG9bYV0uY29sb3IpO3JldHVybiBufX07Zm9yKHZhciBaaT1GaS5wcm90b3R5cGUsVWk9MDtVaTxHaS5sZW5ndGg7VWkrKyl7dmFyIFhpPUdpW1VpXTtYaVswXWluIFppfHwoWmlbWGlbMF1dPVhpWzFdKX1GaS5nZXRHcmFkaWVudD1aaS5nZXRHcmFkaWVudDtmdW5jdGlvbiBZaSh0LGUpe3RoaXMuaW1hZ2U9dCx0aGlzLnJlcGVhdD1lLHRoaXMudHlwZT0icGF0dGVybiJ9ZnVuY3Rpb24gamkoKXtyZXR1cm4hMX1mdW5jdGlvbiBxaSh0LGUsaSl7dmFyIG49ZygpLG89ZS5nZXRXaWR0aCgpLGE9ZS5nZXRIZWlnaHQoKSxyPW4uc3R5bGU7cmV0dXJuIHImJihyLnBvc2l0aW9uPSJhYnNvbHV0ZSIsci5sZWZ0PTAsci50b3A9MCxyLndpZHRoPW8rInB4IixyLmhlaWdodD1hKyJweCIsbi5zZXRBdHRyaWJ1dGUoImRhdGEtenItZG9tLWlkIix0KSksbi53aWR0aD1vKmksbi5oZWlnaHQ9YSppLG59ZnVuY3Rpb24gS2kodCxlLGkpe3ZhciBuO2k9aXx8aGksInN0cmluZyI9PXR5cGVvZiB0P249cWkodCxlLGkpOlIodCkmJih0PShuPXQpLmlkKSx0aGlzLmlkPXQ7dmFyIG89KHRoaXMuZG9tPW4pLnN0eWxlO28mJihuLm9uc2VsZWN0c3RhcnQ9amksb1siLXdlYmtpdC11c2VyLXNlbGVjdCJdPSJub25lIixvWyJ1c2VyLXNlbGVjdCJdPSJub25lIixvWyItd2Via2l0LXRvdWNoLWNhbGxvdXQiXT0ibm9uZSIsb1siLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIl09InJnYmEoMCwwLDAsMCkiLG8ucGFkZGluZz0wLG8ubWFyZ2luPTAsb1siYm9yZGVyLXdpZHRoIl09MCksdGhpcy5kb21CYWNrPW51bGwsdGhpcy5jdHhCYWNrPW51bGwsdGhpcy5wYWludGVyPWUsdGhpcy5jb25maWc9bnVsbCx0aGlzLmNsZWFyQ29sb3I9MCx0aGlzLm1vdGlvbkJsdXI9ITEsdGhpcy5sYXN0RnJhbWVBbHBoYT0uNyx0aGlzLmRwcj1pfUtpLnByb3RvdHlwZT17Y29uc3RydWN0b3I6S2ksX19kaXJ0eTohMCxfX3VzZWQ6IShZaS5wcm90b3R5cGUuZ2V0Q2FudmFzUGF0dGVybj1mdW5jdGlvbih0KXtyZXR1cm4gdC5jcmVhdGVQYXR0ZXJuKHRoaXMuaW1hZ2UsdGhpcy5yZXBlYXR8fCJyZXBlYXQiKX0pLF9fZHJhd0luZGV4OjAsX19zdGFydEluZGV4OjAsX19lbmRJbmRleDowLGluY3JlbWVudGFsOiExLGdldEVsZW1lbnRDb3VudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9fZW5kSW5kZXgtdGhpcy5fX3N0YXJ0SW5kZXh9LGluaXRDb250ZXh0OmZ1bmN0aW9uKCl7dGhpcy5jdHg9dGhpcy5kb20uZ2V0Q29udGV4dCgiMmQiKSx0aGlzLmN0eC5kcHI9dGhpcy5kcHJ9LGNyZWF0ZUJhY2tCdWZmZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRwcjt0aGlzLmRvbUJhY2s9cWkoImJhY2stIit0aGlzLmlkLHRoaXMucGFpbnRlcix0KSx0aGlzLmN0eEJhY2s9dGhpcy5kb21CYWNrLmdldENvbnRleHQoIjJkIiksMSE9PXQmJnRoaXMuY3R4QmFjay5zY2FsZSh0LHQpfSxyZXNpemU6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmRwcixuPXRoaXMuZG9tLG89bi5zdHlsZSxhPXRoaXMuZG9tQmFjaztvJiYoby53aWR0aD10KyJweCIsby5oZWlnaHQ9ZSsicHgiKSxuLndpZHRoPXQqaSxuLmhlaWdodD1lKmksYSYmKGEud2lkdGg9dCppLGEuaGVpZ2h0PWUqaSwxIT09aSYmdGhpcy5jdHhCYWNrLnNjYWxlKGksaSkpfSxjbGVhcjpmdW5jdGlvbih0LGUpe3ZhciBpLG49dGhpcy5kb20sbz10aGlzLmN0eCxhPW4ud2lkdGgscj1uLmhlaWdodCxzPShlPWV8fHRoaXMuY2xlYXJDb2xvcix0aGlzLm1vdGlvbkJsdXImJiF0KSxsPXRoaXMubGFzdEZyYW1lQWxwaGEsdT10aGlzLmRwcjtzJiYodGhpcy5kb21CYWNrfHx0aGlzLmNyZWF0ZUJhY2tCdWZmZXIoKSx0aGlzLmN0eEJhY2suZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPSJjb3B5Iix0aGlzLmN0eEJhY2suZHJhd0ltYWdlKG4sMCwwLGEvdSxyL3UpKSxvLmNsZWFyUmVjdCgwLDAsYSxyKSxlJiYidHJhbnNwYXJlbnQiIT09ZSYmKGUuY29sb3JTdG9wcz8oaT1lLl9fY2FudmFzR3JhZGllbnR8fEZpLmdldEdyYWRpZW50KG8sZSx7eDowLHk6MCx3aWR0aDphLGhlaWdodDpyfSksZS5fX2NhbnZhc0dyYWRpZW50PWkpOmUuaW1hZ2UmJihpPVlpLnByb3RvdHlwZS5nZXRDYW52YXNQYXR0ZXJuLmNhbGwoZSxvKSksby5zYXZlKCksby5maWxsU3R5bGU9aXx8ZSxvLmZpbGxSZWN0KDAsMCxhLHIpLG8ucmVzdG9yZSgpKTtpZihzKXt2YXIgaD10aGlzLmRvbUJhY2s7by5zYXZlKCksby5nbG9iYWxBbHBoYT1sLG8uZHJhd0ltYWdlKGgsMCwwLGEsciksby5yZXN0b3JlKCl9fX07dmFyICRpPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiYod2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdyl8fHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSYmd2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lLmJpbmQod2luZG93KXx8d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSl8fGZ1bmN0aW9uKHQpe3NldFRpbWVvdXQodCwxNil9LEppPW5ldyBiZSg1MCk7ZnVuY3Rpb24gUWkodCl7aWYoInN0cmluZyIhPXR5cGVvZiB0KXJldHVybiB0O3ZhciBlPUppLmdldCh0KTtyZXR1cm4gZSYmZS5pbWFnZX1mdW5jdGlvbiB0bih0LGUsaSxuLG8pe2lmKHQpe2lmKCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm4gdDtpZihlJiZlLl9fenJJbWFnZVNyYz09PXR8fCFpKXJldHVybiBlO3ZhciBhPUppLmdldCh0KSxyPXtob3N0RWw6aSxjYjpuLGNiUGF5bG9hZDpvfTtyZXR1cm4gYT9ubihlPWEuaW1hZ2UpfHxhLnBlbmRpbmcucHVzaChyKTooKGU9bmV3IEltYWdlKS5vbmxvYWQ9ZS5vbmVycm9yPWVuLEppLnB1dCh0LGUuX19jYWNoZWRJbWdPYmo9e2ltYWdlOmUscGVuZGluZzpbcl19KSxlLnNyYz1lLl9fenJJbWFnZVNyYz10KSxlfXJldHVybiBlfWZ1bmN0aW9uIGVuKCl7dmFyIHQ9dGhpcy5fX2NhY2hlZEltZ09iajt0aGlzLm9ubG9hZD10aGlzLm9uZXJyb3I9dGhpcy5fX2NhY2hlZEltZ09iaj1udWxsO2Zvcih2YXIgZT0wO2U8dC5wZW5kaW5nLmxlbmd0aDtlKyspe3ZhciBpPXQucGVuZGluZ1tlXSxuPWkuY2I7biYmbih0aGlzLGkuY2JQYXlsb2FkKSxpLmhvc3RFbC5kaXJ0eSgpfXQucGVuZGluZy5sZW5ndGg9MH1mdW5jdGlvbiBubih0KXtyZXR1cm4gdCYmdC53aWR0aCYmdC5oZWlnaHR9dmFyIG9uPXt9LGFuPTAscm49NWUzLHNuPS9ceyhbYS16QS1aMC05X10rKVx8KFtefV0qKVx9L2csbG49IjEycHggc2Fucy1zZXJpZiIsdW49e307ZnVuY3Rpb24gaG4odCxlKXt2YXIgaT10KyI6IisoZT1lfHxsbik7aWYob25baV0pcmV0dXJuIG9uW2ldO2Zvcih2YXIgbixvLGE9KHQrIiIpLnNwbGl0KCJcbiIpLHI9MCxzPTAsbD1hLmxlbmd0aDtzPGw7cysrKXI9TWF0aC5tYXgoKG49YVtzXSxvPWUsdW4ubWVhc3VyZVRleHQobixvKSkud2lkdGgscik7cmV0dXJuIHJuPGFuJiYoYW49MCxvbj17fSksYW4rKyxvbltpXT1yfWZ1bmN0aW9uIGNuKHQsZSxpLG4sbyxhLHIscyl7cmV0dXJuIHI/ZnVuY3Rpb24odCxlLGksbixvLGEscixzKXt2YXIgbD13bih0LHtyaWNoOnIsdHJ1bmNhdGU6cyxmb250OmUsdGV4dEFsaWduOmksdGV4dFBhZGRpbmc6byx0ZXh0TGluZUhlaWdodDphfSksdT1sLm91dGVyV2lkdGgsaD1sLm91dGVySGVpZ2h0LGM9ZG4oMCx1LGkpLGQ9Zm4oMCxoLG4pO3JldHVybiBuZXcgTWkoYyxkLHUsaCl9KHQsZSxpLG4sbyxhLHIscyk6ZnVuY3Rpb24odCxlLGksbixvLGEscil7dmFyIHM9X24odCxlLG8sYSxyKSxsPWhuKHQsZSk7byYmKGwrPW9bMV0rb1szXSk7dmFyIHU9cy5vdXRlckhlaWdodCxoPWRuKDAsbCxpKSxjPWZuKDAsdSxuKSxkPW5ldyBNaShoLGMsbCx1KTtyZXR1cm4gZC5saW5lSGVpZ2h0PXMubGluZUhlaWdodCxkfSh0LGUsaSxuLG8sYSxzKX1mdW5jdGlvbiBkbih0LGUsaSl7cmV0dXJuInJpZ2h0Ij09PWk/dC09ZToiY2VudGVyIj09PWkmJih0LT1lLzIpLHR9ZnVuY3Rpb24gZm4odCxlLGkpe3JldHVybiJtaWRkbGUiPT09aT90LT1lLzI6ImJvdHRvbSI9PT1pJiYodC09ZSksdH1mdW5jdGlvbiBwbih0LGUsaSl7dmFyIG49ZS50ZXh0UG9zaXRpb24sbz1lLnRleHREaXN0YW5jZSxhPWkueCxyPWkueTtvPW98fDA7dmFyIHM9aS5oZWlnaHQsbD1pLndpZHRoLHU9cy8yLGg9ImxlZnQiLGM9InRvcCI7c3dpdGNoKG4pe2Nhc2UibGVmdCI6YS09byxyKz11LGg9InJpZ2h0IixjPSJtaWRkbGUiO2JyZWFrO2Nhc2UicmlnaHQiOmErPW8rbCxyKz11LGM9Im1pZGRsZSI7YnJlYWs7Y2FzZSJ0b3AiOmErPWwvMixyLT1vLGg9ImNlbnRlciIsYz0iYm90dG9tIjticmVhaztjYXNlImJvdHRvbSI6YSs9bC8yLHIrPXMrbyxoPSJjZW50ZXIiO2JyZWFrO2Nhc2UiaW5zaWRlIjphKz1sLzIscis9dSxoPSJjZW50ZXIiLGM9Im1pZGRsZSI7YnJlYWs7Y2FzZSJpbnNpZGVMZWZ0IjphKz1vLHIrPXUsYz0ibWlkZGxlIjticmVhaztjYXNlImluc2lkZVJpZ2h0IjphKz1sLW8scis9dSxoPSJyaWdodCIsYz0ibWlkZGxlIjticmVhaztjYXNlImluc2lkZVRvcCI6YSs9bC8yLHIrPW8saD0iY2VudGVyIjticmVhaztjYXNlImluc2lkZUJvdHRvbSI6YSs9bC8yLHIrPXMtbyxoPSJjZW50ZXIiLGM9ImJvdHRvbSI7YnJlYWs7Y2FzZSJpbnNpZGVUb3BMZWZ0IjphKz1vLHIrPW87YnJlYWs7Y2FzZSJpbnNpZGVUb3BSaWdodCI6YSs9bC1vLHIrPW8saD0icmlnaHQiO2JyZWFrO2Nhc2UiaW5zaWRlQm90dG9tTGVmdCI6YSs9byxyKz1zLW8sYz0iYm90dG9tIjticmVhaztjYXNlImluc2lkZUJvdHRvbVJpZ2h0IjphKz1sLW8scis9cy1vLGg9InJpZ2h0IixjPSJib3R0b20ifXJldHVybih0PXR8fHt9KS54PWEsdC55PXIsdC50ZXh0QWxpZ249aCx0LnRleHRWZXJ0aWNhbEFsaWduPWMsdH1mdW5jdGlvbiBnbih0LGUsaSxuLG8pe2lmKCFlKXJldHVybiIiO3ZhciBhPSh0KyIiKS5zcGxpdCgiXG4iKTtvPW1uKGUsaSxuLG8pO2Zvcih2YXIgcj0wLHM9YS5sZW5ndGg7cjxzO3IrKylhW3JdPXZuKGFbcl0sbyk7cmV0dXJuIGEuam9pbigiXG4iKX1mdW5jdGlvbiBtbih0LGUsaSxuKXsobj1MKHt9LG4pKS5mb250PWU7aT1IKGksIi4uLiIpO24ubWF4SXRlcmF0aW9ucz1IKG4ubWF4SXRlcmF0aW9ucywyKTt2YXIgbz1uLm1pbkNoYXI9SChuLm1pbkNoYXIsMCk7bi5jbkNoYXJXaWR0aD1obigi5Zu9IixlKTt2YXIgYT1uLmFzY0NoYXJXaWR0aD1obigiYSIsZSk7bi5wbGFjZWhvbGRlcj1IKG4ucGxhY2Vob2xkZXIsIiIpO2Zvcih2YXIgcj10PU1hdGgubWF4KDAsdC0xKSxzPTA7czxvJiZhPD1yO3MrKylyLT1hO3ZhciBsPWhuKGksZSk7cmV0dXJuIHI8bCYmKGk9IiIsbD0wKSxyPXQtbCxuLmVsbGlwc2lzPWksbi5lbGxpcHNpc1dpZHRoPWwsbi5jb250ZW50V2lkdGg9cixuLmNvbnRhaW5lcldpZHRoPXQsbn1mdW5jdGlvbiB2bih0LGUpe3ZhciBpPWUuY29udGFpbmVyV2lkdGgsbj1lLmZvbnQsbz1lLmNvbnRlbnRXaWR0aDtpZighaSlyZXR1cm4iIjt2YXIgYT1obih0LG4pO2lmKGE8PWkpcmV0dXJuIHQ7Zm9yKHZhciByPTA7O3IrKyl7aWYoYTw9b3x8cj49ZS5tYXhJdGVyYXRpb25zKXt0Kz1lLmVsbGlwc2lzO2JyZWFrfXZhciBzPTA9PT1yP3luKHQsbyxlLmFzY0NoYXJXaWR0aCxlLmNuQ2hhcldpZHRoKTowPGE/TWF0aC5mbG9vcih0Lmxlbmd0aCpvL2EpOjA7YT1obih0PXQuc3Vic3RyKDAscyksbil9cmV0dXJuIiI9PT10JiYodD1lLnBsYWNlaG9sZGVyKSx0fWZ1bmN0aW9uIHluKHQsZSxpLG4pe2Zvcih2YXIgbz0wLGE9MCxyPXQubGVuZ3RoO2E8ciYmbzxlO2ErKyl7dmFyIHM9dC5jaGFyQ29kZUF0KGEpO28rPTA8PXMmJnM8PTEyNz9pOm59cmV0dXJuIGF9ZnVuY3Rpb24geG4odCl7cmV0dXJuIGhuKCLlm70iLHQpfWZ1bmN0aW9uIF9uKHQsZSxpLG4sbyl7bnVsbCE9dCYmKHQrPSIiKTt2YXIgYT1IKG4seG4oZSkpLHI9dD90LnNwbGl0KCJcbiIpOltdLHM9ci5sZW5ndGgqYSxsPXMsdT0hMDtpZihpJiYobCs9aVswXStpWzJdKSx0JiZvKXt1PSExO3ZhciBoPW8ub3V0ZXJIZWlnaHQsYz1vLm91dGVyV2lkdGg7aWYobnVsbCE9aCYmaDxsKXQ9IiIscj1bXTtlbHNlIGlmKG51bGwhPWMpZm9yKHZhciBkPW1uKGMtKGk/aVsxXStpWzNdOjApLGUsby5lbGxpcHNpcyx7bWluQ2hhcjpvLm1pbkNoYXIscGxhY2Vob2xkZXI6by5wbGFjZWhvbGRlcn0pLGY9MCxwPXIubGVuZ3RoO2Y8cDtmKyspcltmXT12bihyW2ZdLGQpfXJldHVybntsaW5lczpyLGhlaWdodDpzLG91dGVySGVpZ2h0OmwsbGluZUhlaWdodDphLGNhbkNhY2hlQnlUZXh0U3RyaW5nOnV9fWZ1bmN0aW9uIHduKHQsZSl7dmFyIGk9e2xpbmVzOltdLHdpZHRoOjAsaGVpZ2h0OjB9O2lmKG51bGwhPXQmJih0Kz0iIiksIXQpcmV0dXJuIGk7Zm9yKHZhciBuLG89c24ubGFzdEluZGV4PTA7bnVsbCE9KG49c24uZXhlYyh0KSk7KXt2YXIgYT1uLmluZGV4O288YSYmYm4oaSx0LnN1YnN0cmluZyhvLGEpKSxibihpLG5bMl0sblsxXSksbz1zbi5sYXN0SW5kZXh9bzx0Lmxlbmd0aCYmYm4oaSx0LnN1YnN0cmluZyhvLHQubGVuZ3RoKSk7dmFyIHI9aS5saW5lcyxzPTAsbD0wLHU9W10saD1lLnRleHRQYWRkaW5nLGM9ZS50cnVuY2F0ZSxkPWMmJmMub3V0ZXJXaWR0aCxmPWMmJmMub3V0ZXJIZWlnaHQ7aCYmKG51bGwhPWQmJihkLT1oWzFdK2hbM10pLG51bGwhPWYmJihmLT1oWzBdK2hbMl0pKTtmb3IodmFyIHA9MDtwPHIubGVuZ3RoO3ArKyl7Zm9yKHZhciBnPXJbcF0sbT0wLHY9MCx5PTA7eTxnLnRva2Vucy5sZW5ndGg7eSsrKXt2YXIgeD0oQz1nLnRva2Vuc1t5XSkuc3R5bGVOYW1lJiZlLnJpY2hbQy5zdHlsZU5hbWVdfHx7fSxfPUMudGV4dFBhZGRpbmc9eC50ZXh0UGFkZGluZyx3PUMuZm9udD14LmZvbnR8fGUuZm9udCxiPUMudGV4dEhlaWdodD1IKHgudGV4dEhlaWdodCx4bih3KSk7aWYoXyYmKGIrPV9bMF0rX1syXSksQy5oZWlnaHQ9YixDLmxpbmVIZWlnaHQ9Wih4LnRleHRMaW5lSGVpZ2h0LGUudGV4dExpbmVIZWlnaHQsYiksQy50ZXh0QWxpZ249eCYmeC50ZXh0QWxpZ258fGUudGV4dEFsaWduLEMudGV4dFZlcnRpY2FsQWxpZ249eCYmeC50ZXh0VmVydGljYWxBbGlnbnx8Im1pZGRsZSIsbnVsbCE9ZiYmcytDLmxpbmVIZWlnaHQ+ZilyZXR1cm57bGluZXM6W10sd2lkdGg6MCxoZWlnaHQ6MH07Qy50ZXh0V2lkdGg9aG4oQy50ZXh0LHcpO3ZhciBTPXgudGV4dFdpZHRoLE09bnVsbD09U3x8ImF1dG8iPT09UztpZigic3RyaW5nIj09dHlwZW9mIFMmJiIlIj09PVMuY2hhckF0KFMubGVuZ3RoLTEpKUMucGVyY2VudFdpZHRoPVMsdS5wdXNoKEMpLFM9MDtlbHNle2lmKE0pe1M9Qy50ZXh0V2lkdGg7dmFyIEk9eC50ZXh0QmFja2dyb3VuZENvbG9yLFQ9SSYmSS5pbWFnZTtUJiZubihUPVFpKFQpKSYmKFM9TWF0aC5tYXgoUyxULndpZHRoKmIvVC5oZWlnaHQpKX12YXIgQT1fP19bMV0rX1szXTowO1MrPUE7dmFyIEQ9bnVsbCE9ZD9kLXY6bnVsbDtudWxsIT1EJiZEPFMmJighTXx8RDxBPyhDLnRleHQ9IiIsQy50ZXh0V2lkdGg9Uz0wKTooQy50ZXh0PWduKEMudGV4dCxELUEsdyxjLmVsbGlwc2lzLHttaW5DaGFyOmMubWluQ2hhcn0pLEMudGV4dFdpZHRoPWhuKEMudGV4dCx3KSxTPUMudGV4dFdpZHRoK0EpKX12Kz1DLndpZHRoPVMseCYmKG09TWF0aC5tYXgobSxDLmxpbmVIZWlnaHQpKX1nLndpZHRoPXYscys9Zy5saW5lSGVpZ2h0PW0sbD1NYXRoLm1heChsLHYpfWkub3V0ZXJXaWR0aD1pLndpZHRoPUgoZS50ZXh0V2lkdGgsbCksaS5vdXRlckhlaWdodD1pLmhlaWdodD1IKGUudGV4dEhlaWdodCxzKSxoJiYoaS5vdXRlcldpZHRoKz1oWzFdK2hbM10saS5vdXRlckhlaWdodCs9aFswXStoWzJdKTtmb3IocD0wO3A8dS5sZW5ndGg7cCsrKXt2YXIgQyxMPShDPXVbcF0pLnBlcmNlbnRXaWR0aDtDLndpZHRoPXBhcnNlSW50KEwsMTApLzEwMCpsfXJldHVybiBpfWZ1bmN0aW9uIGJuKHQsZSxpKXtmb3IodmFyIG49IiI9PT1lLG89ZS5zcGxpdCgiXG4iKSxhPXQubGluZXMscj0wO3I8by5sZW5ndGg7cisrKXt2YXIgcz1vW3JdLGw9e3N0eWxlTmFtZTppLHRleHQ6cyxpc0xpbmVIb2xkZXI6IXMmJiFufTtpZihyKWEucHVzaCh7dG9rZW5zOltsXX0pO2Vsc2V7dmFyIHU9KGFbYS5sZW5ndGgtMV18fChhWzBdPXt0b2tlbnM6W119KSkudG9rZW5zLGg9dS5sZW5ndGg7MT09PWgmJnVbMF0uaXNMaW5lSG9sZGVyP3VbMF09bDohcyYmaCYmIW58fHUucHVzaChsKX19fWZ1bmN0aW9uIFNuKHQpe3ZhciBlPSh0LmZvbnRTaXplfHx0LmZvbnRGYW1pbHkpJiZbdC5mb250U3R5bGUsdC5mb250V2VpZ2h0LCh0LmZvbnRTaXplfHwxMikrInB4Iix0LmZvbnRGYW1pbHl8fCJzYW5zLXNlcmlmIl0uam9pbigiICIpO3JldHVybiBlJiZqKGUpfHx0LnRleHRGb250fHx0LmZvbnR9ZnVuY3Rpb24gTW4odCxlKXt2YXIgaSxuLG8sYSxyLHM9ZS54LGw9ZS55LHU9ZS53aWR0aCxoPWUuaGVpZ2h0LGM9ZS5yO3U8MCYmKHMrPXUsdT0tdSksaDwwJiYobCs9aCxoPS1oKSwibnVtYmVyIj09dHlwZW9mIGM/aT1uPW89YT1jOmMgaW5zdGFuY2VvZiBBcnJheT8xPT09Yy5sZW5ndGg/aT1uPW89YT1jWzBdOjI9PT1jLmxlbmd0aD8oaT1vPWNbMF0sbj1hPWNbMV0pOjM9PT1jLmxlbmd0aD8oaT1jWzBdLG49YT1jWzFdLG89Y1syXSk6KGk9Y1swXSxuPWNbMV0sbz1jWzJdLGE9Y1szXSk6aT1uPW89YT0wLHU8aStuJiYoaSo9dS8ocj1pK24pLG4qPXUvciksdTxvK2EmJihvKj11LyhyPW8rYSksYSo9dS9yKSxoPG4rbyYmKG4qPWgvKHI9bitvKSxvKj1oL3IpLGg8aSthJiYoaSo9aC8ocj1pK2EpLGEqPWgvciksdC5tb3ZlVG8ocytpLGwpLHQubGluZVRvKHMrdS1uLGwpLDAhPT1uJiZ0LmFyYyhzK3UtbixsK24sbiwtTWF0aC5QSS8yLDApLHQubGluZVRvKHMrdSxsK2gtbyksMCE9PW8mJnQuYXJjKHMrdS1vLGwraC1vLG8sMCxNYXRoLlBJLzIpLHQubGluZVRvKHMrYSxsK2gpLDAhPT1hJiZ0LmFyYyhzK2EsbCtoLWEsYSxNYXRoLlBJLzIsTWF0aC5QSSksdC5saW5lVG8ocyxsK2kpLDAhPT1pJiZ0LmFyYyhzK2ksbCtpLGksTWF0aC5QSSwxLjUqTWF0aC5QSSl9dW4ubWVhc3VyZVRleHQ9ZnVuY3Rpb24odCxlKXt2YXIgaT14KCk7cmV0dXJuIGkuZm9udD1lfHxsbixpLm1lYXN1cmVUZXh0KHQpfTt2YXIgSW49bG4sVG49e2xlZnQ6MSxyaWdodDoxLGNlbnRlcjoxfSxBbj17dG9wOjEsYm90dG9tOjEsbWlkZGxlOjF9LERuPVtbInRleHRTaGFkb3dCbHVyIiwic2hhZG93Qmx1ciIsMF0sWyJ0ZXh0U2hhZG93T2Zmc2V0WCIsInNoYWRvd09mZnNldFgiLDBdLFsidGV4dFNoYWRvd09mZnNldFkiLCJzaGFkb3dPZmZzZXRZIiwwXSxbInRleHRTaGFkb3dDb2xvciIsInNoYWRvd0NvbG9yIiwidHJhbnNwYXJlbnQiXV0sQ249e30sTG49e307ZnVuY3Rpb24ga24odCl7cmV0dXJuIFBuKHQpLEUodC5yaWNoLFBuKSx0fWZ1bmN0aW9uIFBuKHQpe2lmKHQpe3QuZm9udD1Tbih0KTt2YXIgZT10LnRleHRBbGlnbjsibWlkZGxlIj09PWUmJihlPSJjZW50ZXIiKSx0LnRleHRBbGlnbj1udWxsPT1lfHxUbltlXT9lOiJsZWZ0Ijt2YXIgaT10LnRleHRWZXJ0aWNhbEFsaWdufHx0LnRleHRCYXNlbGluZTsiY2VudGVyIj09PWkmJihpPSJtaWRkbGUiKSx0LnRleHRWZXJ0aWNhbEFsaWduPW51bGw9PWl8fEFuW2ldP2k6InRvcCIsdC50ZXh0UGFkZGluZyYmKHQudGV4dFBhZGRpbmc9WCh0LnRleHRQYWRkaW5nKSl9fWZ1bmN0aW9uIE5uKHQsZSxpLG4sbyxhKXtuLnJpY2g/ZnVuY3Rpb24odCxlLGksbixvLGEpe2EhPT1WaSYmKGUuX19hdHRyQ2FjaGVkQnk9QmkuTk9ORSk7dmFyIHI9dC5fX3RleHRDb3RlbnRCbG9jaztyJiYhdC5fX2RpcnR5VGV4dHx8KHI9dC5fX3RleHRDb3RlbnRCbG9jaz13bihpLG4pKTshZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1pLndpZHRoLHI9aS5vdXRlcldpZHRoLHM9aS5vdXRlckhlaWdodCxsPW4udGV4dFBhZGRpbmcsdT1WbihMbix0LG4sbyksaD11LmJhc2VYLGM9dS5iYXNlWSxkPXUudGV4dEFsaWduLGY9dS50ZXh0VmVydGljYWxBbGlnbjtPbihlLG4sbyxoLGMpO3ZhciBwPWRuKGgscixkKSxnPWZuKGMscyxmKSxtPXAsdj1nO2wmJihtKz1sWzNdLHYrPWxbMF0pO3ZhciB5PW0rYTt6bihuKSYmUm4odCxlLG4scCxnLHIscyk7Zm9yKHZhciB4PTA7eDxpLmxpbmVzLmxlbmd0aDt4Kyspe2Zvcih2YXIgXyx3PWkubGluZXNbeF0sYj13LnRva2VucyxTPWIubGVuZ3RoLE09dy5saW5lSGVpZ2h0LEk9dy53aWR0aCxUPTAsQT1tLEQ9eSxDPVMtMTtUPFMmJighKF89YltUXSkudGV4dEFsaWdufHwibGVmdCI9PT1fLnRleHRBbGlnbik7KUVuKHQsZSxfLG4sTSx2LEEsImxlZnQiKSxJLT1fLndpZHRoLEErPV8ud2lkdGgsVCsrO2Zvcig7MDw9QyYmInJpZ2h0Ij09PShfPWJbQ10pLnRleHRBbGlnbjspRW4odCxlLF8sbixNLHYsRCwicmlnaHQiKSxJLT1fLndpZHRoLEQtPV8ud2lkdGgsQy0tO2ZvcihBKz0oYS0oQS1tKS0oeS1EKS1JKS8yO1Q8PUM7KV89YltUXSxFbih0LGUsXyxuLE0sdixBK18ud2lkdGgvMiwiY2VudGVyIiksQSs9Xy53aWR0aCxUKys7dis9TX19KHQsZSxyLG4sbyl9KHQsZSxpLG4sbyxhKTpmdW5jdGlvbih0LGUsaSxuLG8sYSl7dmFyIHIscz16bihuKSxsPSExLHU9ZS5fX2F0dHJDYWNoZWRCeT09PUJpLlBMQUlOX1RFWFQ7YSE9PVZpPyhhJiYocj1hLnN0eWxlLGw9IXMmJnUmJnIpLGUuX19hdHRyQ2FjaGVkQnk9cz9CaS5OT05FOkJpLlBMQUlOX1RFWFQpOnUmJihlLl9fYXR0ckNhY2hlZEJ5PUJpLk5PTkUpO3ZhciBoPW4uZm9udHx8SW47bCYmaD09PShyLmZvbnR8fEluKXx8KGUuZm9udD1oKTt2YXIgYz10Ll9fY29tcHV0ZWRGb250O3QuX19zdHlsZUZvbnQhPT1oJiYodC5fX3N0eWxlRm9udD1oLGM9dC5fX2NvbXB1dGVkRm9udD1lLmZvbnQpO3ZhciBkPW4udGV4dFBhZGRpbmcsZj1uLnRleHRMaW5lSGVpZ2h0LHA9dC5fX3RleHRDb3RlbnRCbG9jaztwJiYhdC5fX2RpcnR5VGV4dHx8KHA9dC5fX3RleHRDb3RlbnRCbG9jaz1fbihpLGMsZCxmLG4udHJ1bmNhdGUpKTt2YXIgZz1wLm91dGVySGVpZ2h0LG09cC5saW5lcyx2PXAubGluZUhlaWdodCx5PVZuKExuLHQsbixvKSx4PXkuYmFzZVgsXz15LmJhc2VZLHc9eS50ZXh0QWxpZ258fCJsZWZ0IixiPXkudGV4dFZlcnRpY2FsQWxpZ247T24oZSxuLG8seCxfKTt2YXIgUz1mbihfLGcsYiksTT14LEk9UztpZihzfHxkKXt2YXIgVD1obihpLGMpO2QmJihUKz1kWzFdK2RbM10pO3ZhciBBPWRuKHgsVCx3KTtzJiZSbih0LGUsbixBLFMsVCxnKSxkJiYoTT1abih4LHcsZCksSSs9ZFswXSl9ZS50ZXh0QWxpZ249dyxlLnRleHRCYXNlbGluZT0ibWlkZGxlIixlLmdsb2JhbEFscGhhPW4ub3BhY2l0eXx8MTtmb3IodmFyIEQ9MDtEPERuLmxlbmd0aDtEKyspe3ZhciBDPURuW0RdLEw9Q1swXSxrPUNbMV0sUD1uW0xdO2wmJlA9PT1yW0xdfHwoZVtrXT1SaShlLGssUHx8Q1syXSkpfUkrPXYvMjt2YXIgTj1uLnRleHRTdHJva2VXaWR0aCxPPWw/ci50ZXh0U3Ryb2tlV2lkdGg6bnVsbCxFPSFsfHxOIT09Tyx6PSFsfHxFfHxuLnRleHRTdHJva2UhPT1yLnRleHRTdHJva2UsUj1GbihuLnRleHRTdHJva2UsTiksQj1XbihuLnRleHRGaWxsKTtSJiYoRSYmKGUubGluZVdpZHRoPU4pLHomJihlLnN0cm9rZVN0eWxlPVIpKTtCJiYobCYmbi50ZXh0RmlsbD09PXIudGV4dEZpbGx8fChlLmZpbGxTdHlsZT1CKSk7aWYoMT09PW0ubGVuZ3RoKVImJmUuc3Ryb2tlVGV4dChtWzBdLE0sSSksQiYmZS5maWxsVGV4dChtWzBdLE0sSSk7ZWxzZSBmb3IoRD0wO0Q8bS5sZW5ndGg7RCsrKVImJmUuc3Ryb2tlVGV4dChtW0RdLE0sSSksQiYmZS5maWxsVGV4dChtW0RdLE0sSSksSSs9dn0odCxlLGksbixvLGEpfWZ1bmN0aW9uIE9uKHQsZSxpLG4sbyl7aWYoaSYmZS50ZXh0Um90YXRpb24pe3ZhciBhPWUudGV4dE9yaWdpbjsiY2VudGVyIj09PWE/KG49aS53aWR0aC8yK2kueCxvPWkuaGVpZ2h0LzIraS55KTphJiYobj1hWzBdK2kueCxvPWFbMV0raS55KSx0LnRyYW5zbGF0ZShuLG8pLHQucm90YXRlKC1lLnRleHRSb3RhdGlvbiksdC50cmFuc2xhdGUoLW4sLW8pfX1mdW5jdGlvbiBFbih0LGUsaSxuLG8sYSxyLHMpe3ZhciBsPW4ucmljaFtpLnN0eWxlTmFtZV18fHt9O2wudGV4dD1pLnRleHQ7dmFyIHU9aS50ZXh0VmVydGljYWxBbGlnbixoPWErby8yOyJ0b3AiPT09dT9oPWEraS5oZWlnaHQvMjoiYm90dG9tIj09PXUmJihoPWErby1pLmhlaWdodC8yKSwhaS5pc0xpbmVIb2xkZXImJnpuKGwpJiZSbih0LGUsbCwicmlnaHQiPT09cz9yLWkud2lkdGg6ImNlbnRlciI9PT1zP3ItaS53aWR0aC8yOnIsaC1pLmhlaWdodC8yLGkud2lkdGgsaS5oZWlnaHQpO3ZhciBjPWkudGV4dFBhZGRpbmc7YyYmKHI9Wm4ocixzLGMpLGgtPWkuaGVpZ2h0LzItY1syXS1pLnRleHRIZWlnaHQvMiksR24oZSwic2hhZG93Qmx1ciIsWihsLnRleHRTaGFkb3dCbHVyLG4udGV4dFNoYWRvd0JsdXIsMCkpLEduKGUsInNoYWRvd0NvbG9yIixsLnRleHRTaGFkb3dDb2xvcnx8bi50ZXh0U2hhZG93Q29sb3J8fCJ0cmFuc3BhcmVudCIpLEduKGUsInNoYWRvd09mZnNldFgiLFoobC50ZXh0U2hhZG93T2Zmc2V0WCxuLnRleHRTaGFkb3dPZmZzZXRYLDApKSxHbihlLCJzaGFkb3dPZmZzZXRZIixaKGwudGV4dFNoYWRvd09mZnNldFksbi50ZXh0U2hhZG93T2Zmc2V0WSwwKSksR24oZSwidGV4dEFsaWduIixzKSxHbihlLCJ0ZXh0QmFzZWxpbmUiLCJtaWRkbGUiKSxHbihlLCJmb250IixpLmZvbnR8fEluKTt2YXIgZD1GbihsLnRleHRTdHJva2V8fG4udGV4dFN0cm9rZSxwKSxmPVduKGwudGV4dEZpbGx8fG4udGV4dEZpbGwpLHA9SChsLnRleHRTdHJva2VXaWR0aCxuLnRleHRTdHJva2VXaWR0aCk7ZCYmKEduKGUsImxpbmVXaWR0aCIscCksR24oZSwic3Ryb2tlU3R5bGUiLGQpLGUuc3Ryb2tlVGV4dChpLnRleHQscixoKSksZiYmKEduKGUsImZpbGxTdHlsZSIsZiksZS5maWxsVGV4dChpLnRleHQscixoKSl9ZnVuY3Rpb24gem4odCl7cmV0dXJuISEodC50ZXh0QmFja2dyb3VuZENvbG9yfHx0LnRleHRCb3JkZXJXaWR0aCYmdC50ZXh0Qm9yZGVyQ29sb3IpfWZ1bmN0aW9uIFJuKHQsZSxpLG4sbyxhLHIpe3ZhciBzPWkudGV4dEJhY2tncm91bmRDb2xvcixsPWkudGV4dEJvcmRlcldpZHRoLHU9aS50ZXh0Qm9yZGVyQ29sb3IsaD16KHMpO2lmKEduKGUsInNoYWRvd0JsdXIiLGkudGV4dEJveFNoYWRvd0JsdXJ8fDApLEduKGUsInNoYWRvd0NvbG9yIixpLnRleHRCb3hTaGFkb3dDb2xvcnx8InRyYW5zcGFyZW50IiksR24oZSwic2hhZG93T2Zmc2V0WCIsaS50ZXh0Qm94U2hhZG93T2Zmc2V0WHx8MCksR24oZSwic2hhZG93T2Zmc2V0WSIsaS50ZXh0Qm94U2hhZG93T2Zmc2V0WXx8MCksaHx8bCYmdSl7ZS5iZWdpblBhdGgoKTt2YXIgYz1pLnRleHRCb3JkZXJSYWRpdXM7Yz9NbihlLHt4Om4seTpvLHdpZHRoOmEsaGVpZ2h0OnIscjpjfSk6ZS5yZWN0KG4sbyxhLHIpLGUuY2xvc2VQYXRoKCl9aWYoaClpZihHbihlLCJmaWxsU3R5bGUiLHMpLG51bGwhPWkuZmlsbE9wYWNpdHkpe3ZhciBkPWUuZ2xvYmFsQWxwaGE7ZS5nbG9iYWxBbHBoYT1pLmZpbGxPcGFjaXR5Kmkub3BhY2l0eSxlLmZpbGwoKSxlLmdsb2JhbEFscGhhPWR9ZWxzZSBlLmZpbGwoKTtlbHNlIGlmKFIocykpe3ZhciBmPXMuaW1hZ2U7KGY9dG4oZixudWxsLHQsQm4scykpJiZubihmKSYmZS5kcmF3SW1hZ2UoZixuLG8sYSxyKX1pZihsJiZ1KWlmKEduKGUsImxpbmVXaWR0aCIsbCksR24oZSwic3Ryb2tlU3R5bGUiLHUpLG51bGwhPWkuc3Ryb2tlT3BhY2l0eSl7ZD1lLmdsb2JhbEFscGhhO2UuZ2xvYmFsQWxwaGE9aS5zdHJva2VPcGFjaXR5Kmkub3BhY2l0eSxlLnN0cm9rZSgpLGUuZ2xvYmFsQWxwaGE9ZH1lbHNlIGUuc3Ryb2tlKCl9ZnVuY3Rpb24gQm4odCxlKXtlLmltYWdlPXR9ZnVuY3Rpb24gVm4odCxlLGksbil7dmFyIG89aS54fHwwLGE9aS55fHwwLHI9aS50ZXh0QWxpZ24scz1pLnRleHRWZXJ0aWNhbEFsaWduO2lmKG4pe3ZhciBsPWkudGV4dFBvc2l0aW9uO2lmKGwgaW5zdGFuY2VvZiBBcnJheSlvPW4ueCtIbihsWzBdLG4ud2lkdGgpLGE9bi55K0huKGxbMV0sbi5oZWlnaHQpO2Vsc2V7dmFyIHU9ZSYmZS5jYWxjdWxhdGVUZXh0UG9zaXRpb24/ZS5jYWxjdWxhdGVUZXh0UG9zaXRpb24oQ24saSxuKTpwbihDbixpLG4pO289dS54LGE9dS55LHI9cnx8dS50ZXh0QWxpZ24scz1zfHx1LnRleHRWZXJ0aWNhbEFsaWdufXZhciBoPWkudGV4dE9mZnNldDtoJiYobys9aFswXSxhKz1oWzFdKX1yZXR1cm4odD10fHx7fSkuYmFzZVg9byx0LmJhc2VZPWEsdC50ZXh0QWxpZ249cix0LnRleHRWZXJ0aWNhbEFsaWduPXMsdH1mdW5jdGlvbiBHbih0LGUsaSl7cmV0dXJuIHRbZV09UmkodCxlLGkpLHRbZV19ZnVuY3Rpb24gRm4odCxlKXtyZXR1cm4gbnVsbD09dHx8ZTw9MHx8InRyYW5zcGFyZW50Ij09PXR8fCJub25lIj09PXQ/bnVsbDp0LmltYWdlfHx0LmNvbG9yU3RvcHM/IiMwMDAiOnR9ZnVuY3Rpb24gV24odCl7cmV0dXJuIG51bGw9PXR8fCJub25lIj09PXQ/bnVsbDp0LmltYWdlfHx0LmNvbG9yU3RvcHM/IiMwMDAiOnR9ZnVuY3Rpb24gSG4odCxlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIHQ/MDw9dC5sYXN0SW5kZXhPZigiJSIpP3BhcnNlRmxvYXQodCkvMTAwKmU6cGFyc2VGbG9hdCh0KTp0fWZ1bmN0aW9uIFpuKHQsZSxpKXtyZXR1cm4icmlnaHQiPT09ZT90LWlbMV06ImNlbnRlciI9PT1lP3QraVszXS8yLWlbMV0vMjp0K2lbM119ZnVuY3Rpb24gVW4odCxlKXtyZXR1cm4gbnVsbCE9dCYmKHR8fGUudGV4dEJhY2tncm91bmRDb2xvcnx8ZS50ZXh0Qm9yZGVyV2lkdGgmJmUudGV4dEJvcmRlckNvbG9yfHxlLnRleHRQYWRkaW5nKX1mdW5jdGlvbiBYbigpe312YXIgWW49bmV3IE1pO2Z1bmN0aW9uIGpuKHQpe2Zvcih2YXIgZSBpbiB0PXR8fHt9LG1pLmNhbGwodGhpcyx0KSx0KXQuaGFzT3duUHJvcGVydHkoZSkmJiJzdHlsZSIhPT1lJiYodGhpc1tlXT10W2VdKTt0aGlzLnN0eWxlPW5ldyBGaSh0LnN0eWxlLHRoaXMpLHRoaXMuX3JlY3Q9bnVsbCx0aGlzLl9fY2xpcFBhdGhzPW51bGx9ZnVuY3Rpb24gcW4odCl7am4uY2FsbCh0aGlzLHQpfWpuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6am4sdHlwZToiZGlzcGxheWFibGUiLF9fZGlydHk6ITAsaW52aXNpYmxlOiEoWG4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpYbixkcmF3UmVjdFRleHQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLnN0eWxlO2U9aS50ZXh0UmVjdHx8ZSx0aGlzLl9fZGlydHkmJmtuKGkpO3ZhciBuPWkudGV4dDtpZihudWxsIT1uJiYobis9IiIpLFVuKG4saSkpe3Quc2F2ZSgpO3ZhciBvPXRoaXMudHJhbnNmb3JtO2kudHJhbnNmb3JtVGV4dD90aGlzLnNldFRyYW5zZm9ybSh0KTpvJiYoWW4uY29weShlKSxZbi5hcHBseVRyYW5zZm9ybShvKSxlPVluKSxObih0aGlzLHQsbixpLGUsVmkpLHQucmVzdG9yZSgpfX19KSx6OjAsejI6MCx6bGV2ZWw6MCxkcmFnZ2FibGU6ITEsZHJhZ2dpbmc6ITEsc2lsZW50OiExLGN1bGxpbmc6ITEsY3Vyc29yOiJwb2ludGVyIixyZWN0SG92ZXI6ITEscHJvZ3Jlc3NpdmU6ITEsaW5jcmVtZW50YWw6ITEsZ2xvYmFsU2NhbGVSYXRpbzoxLGJlZm9yZUJydXNoOmZ1bmN0aW9uKHQpe30sYWZ0ZXJCcnVzaDpmdW5jdGlvbih0KXt9LGJydXNoOmZ1bmN0aW9uKHQsZSl7fSxnZXRCb3VuZGluZ1JlY3Q6ZnVuY3Rpb24oKXt9LGNvbnRhaW46ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5yZWN0Q29udGFpbih0LGUpfSx0cmF2ZXJzZTpmdW5jdGlvbih0LGUpe3QuY2FsbChlLHRoaXMpfSxyZWN0Q29udGFpbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMudHJhbnNmb3JtQ29vcmRUb0xvY2FsKHQsZSk7cmV0dXJuIHRoaXMuZ2V0Qm91bmRpbmdSZWN0KCkuY29udGFpbihpWzBdLGlbMV0pfSxkaXJ0eTpmdW5jdGlvbigpe3RoaXMuX19kaXJ0eT10aGlzLl9fZGlydHlUZXh0PSEwLHRoaXMuX3JlY3Q9bnVsbCx0aGlzLl9fenImJnRoaXMuX196ci5yZWZyZXNoKCl9LGFuaW1hdGVTdHlsZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hbmltYXRlKCJzdHlsZSIsdCl9LGF0dHJLVjpmdW5jdGlvbih0LGUpeyJzdHlsZSIhPT10P21pLnByb3RvdHlwZS5hdHRyS1YuY2FsbCh0aGlzLHQsZSk6dGhpcy5zdHlsZS5zZXQoZSl9LHNldFN0eWxlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuc3R5bGUuc2V0KHQsZSksdGhpcy5kaXJ0eSghMSksdGhpc30sdXNlU3R5bGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3R5bGU9bmV3IEZpKHQsdGhpcyksdGhpcy5kaXJ0eSghMSksdGhpc30sY2FsY3VsYXRlVGV4dFBvc2l0aW9uOm51bGx9LHcoam4sbWkpLGIoam4sWG4pLHFuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6cW4sdHlwZToiaW1hZ2UiLGJydXNoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5zdHlsZSxuPWkuaW1hZ2U7aS5iaW5kKHQsdGhpcyxlKTt2YXIgbz10aGlzLl9pbWFnZT10bihuLHRoaXMuX2ltYWdlLHRoaXMsdGhpcy5vbmxvYWQpO2lmKG8mJm5uKG8pKXt2YXIgYT1pLnh8fDAscj1pLnl8fDAscz1pLndpZHRoLGw9aS5oZWlnaHQsdT1vLndpZHRoL28uaGVpZ2h0O2lmKG51bGw9PXMmJm51bGwhPWw/cz1sKnU6bnVsbD09bCYmbnVsbCE9cz9sPXMvdTpudWxsPT1zJiZudWxsPT1sJiYocz1vLndpZHRoLGw9by5oZWlnaHQpLHRoaXMuc2V0VHJhbnNmb3JtKHQpLGkuc1dpZHRoJiZpLnNIZWlnaHQpe3ZhciBoPWkuc3h8fDAsYz1pLnN5fHwwO3QuZHJhd0ltYWdlKG8saCxjLGkuc1dpZHRoLGkuc0hlaWdodCxhLHIscyxsKX1lbHNlIGlmKGkuc3gmJmkuc3kpe3ZhciBkPXMtKGg9aS5zeCksZj1sLShjPWkuc3kpO3QuZHJhd0ltYWdlKG8saCxjLGQsZixhLHIscyxsKX1lbHNlIHQuZHJhd0ltYWdlKG8sYSxyLHMsbCk7bnVsbCE9aS50ZXh0JiYodGhpcy5yZXN0b3JlVHJhbnNmb3JtKHQpLHRoaXMuZHJhd1JlY3RUZXh0KHQsdGhpcy5nZXRCb3VuZGluZ1JlY3QoKSkpfX0sZ2V0Qm91bmRpbmdSZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zdHlsZTtyZXR1cm4gdGhpcy5fcmVjdHx8KHRoaXMuX3JlY3Q9bmV3IE1pKHQueHx8MCx0Lnl8fDAsdC53aWR0aHx8MCx0LmhlaWdodHx8MCkpLHRoaXMuX3JlY3R9fSx3KHFuLGpuKTt2YXIgS249MzE0MTU5O2Z1bmN0aW9uICRuKHQpe3JldHVybiBwYXJzZUludCh0LDEwKX12YXIgSm49bmV3IE1pKDAsMCwwLDApLFFuPW5ldyBNaSgwLDAsMCwwKTtmdW5jdGlvbiB0byh0LGUsaSl7dGhpcy50eXBlPSJjYW52YXMiO3ZhciBuPSF0Lm5vZGVOYW1lfHwiQ0FOVkFTIj09PXQubm9kZU5hbWUudG9VcHBlckNhc2UoKTt0aGlzLl9vcHRzPWk9TCh7fSxpfHx7fSksdGhpcy5kcHI9aS5kZXZpY2VQaXhlbFJhdGlvfHxoaSx0aGlzLl9zaW5nbGVDYW52YXM9bjt2YXIgbz0odGhpcy5yb290PXQpLnN0eWxlO28mJihvWyItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3IiXT0idHJhbnNwYXJlbnQiLG9bIi13ZWJraXQtdXNlci1zZWxlY3QiXT1vWyJ1c2VyLXNlbGVjdCJdPW9bIi13ZWJraXQtdG91Y2gtY2FsbG91dCJdPSJub25lIix0LmlubmVySFRNTD0iIiksdGhpcy5zdG9yYWdlPWU7dmFyIGE9dGhpcy5femxldmVsTGlzdD1bXSxyPXRoaXMuX2xheWVycz17fTtpZih0aGlzLl9sYXllckNvbmZpZz17fSx0aGlzLl9uZWVkc01hbnVhbGx5Q29tcG9zaXRpbmc9ITEsbil7dmFyIHM9dC53aWR0aCxsPXQuaGVpZ2h0O251bGwhPWkud2lkdGgmJihzPWkud2lkdGgpLG51bGwhPWkuaGVpZ2h0JiYobD1pLmhlaWdodCksdGhpcy5kcHI9aS5kZXZpY2VQaXhlbFJhdGlvfHwxLHQud2lkdGg9cyp0aGlzLmRwcix0LmhlaWdodD1sKnRoaXMuZHByLHRoaXMuX3dpZHRoPXMsdGhpcy5faGVpZ2h0PWw7dmFyIHU9bmV3IEtpKHQsdGhpcyx0aGlzLmRwcik7dS5fX2J1aWx0aW5fXz0hMCx1LmluaXRDb250ZXh0KCksKHJbS25dPXUpLnpsZXZlbD1LbixhLnB1c2goS24pLHRoaXMuX2RvbVJvb3Q9dH1lbHNle3RoaXMuX3dpZHRoPXRoaXMuX2dldFNpemUoMCksdGhpcy5faGVpZ2h0PXRoaXMuX2dldFNpemUoMSk7dmFyIGg9dGhpcy5fZG9tUm9vdD1mdW5jdGlvbih0LGUpe3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3JldHVybiBpLnN0eWxlLmNzc1RleHQ9WyJwb3NpdGlvbjpyZWxhdGl2ZSIsIndpZHRoOiIrdCsicHgiLCJoZWlnaHQ6IitlKyJweCIsInBhZGRpbmc6MCIsIm1hcmdpbjowIiwiYm9yZGVyLXdpZHRoOjAiXS5qb2luKCI7IikrIjsiLGl9KHRoaXMuX3dpZHRoLHRoaXMuX2hlaWdodCk7dC5hcHBlbmRDaGlsZChoKX10aGlzLl9ob3ZlcmxheWVyPW51bGwsdGhpcy5faG92ZXJFbGVtZW50cz1bXX10by5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnRvLGdldFR5cGU6ZnVuY3Rpb24oKXtyZXR1cm4iY2FudmFzIn0saXNTaW5nbGVDYW52YXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2luZ2xlQ2FudmFzfSxnZXRWaWV3cG9ydFJvb3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZG9tUm9vdH0sZ2V0Vmlld3BvcnRSb290T2Zmc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRWaWV3cG9ydFJvb3QoKTtpZih0KXJldHVybntvZmZzZXRMZWZ0OnQub2Zmc2V0TGVmdHx8MCxvZmZzZXRUb3A6dC5vZmZzZXRUb3B8fDB9fSxyZWZyZXNoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc3RvcmFnZS5nZXREaXNwbGF5TGlzdCghMCksaT10aGlzLl96bGV2ZWxMaXN0O3RoaXMuX3JlZHJhd0lkPU1hdGgucmFuZG9tKCksdGhpcy5fcGFpbnRMaXN0KGUsdCx0aGlzLl9yZWRyYXdJZCk7Zm9yKHZhciBuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPWlbbl0sYT10aGlzLl9sYXllcnNbb107aWYoIWEuX19idWlsdGluX18mJmEucmVmcmVzaCl7dmFyIHI9MD09PW4/dGhpcy5fYmFja2dyb3VuZENvbG9yOm51bGw7YS5yZWZyZXNoKHIpfX1yZXR1cm4gdGhpcy5yZWZyZXNoSG92ZXIoKSx0aGlzfSxhZGRIb3ZlcjpmdW5jdGlvbih0LGUpe2lmKCF0Ll9faG92ZXJNaXIpe3ZhciBpPW5ldyB0LmNvbnN0cnVjdG9yKHtzdHlsZTp0LnN0eWxlLHNoYXBlOnQuc2hhcGUsejp0LnosejI6dC56MixzaWxlbnQ6dC5zaWxlbnR9KTtyZXR1cm4oaS5fX2Zyb209dCkuX19ob3Zlck1pcj1pLGUmJmkuc2V0U3R5bGUoZSksdGhpcy5faG92ZXJFbGVtZW50cy5wdXNoKGkpLGl9fSxyZW1vdmVIb3ZlcjpmdW5jdGlvbih0KXt2YXIgZT10Ll9faG92ZXJNaXIsaT10aGlzLl9ob3ZlckVsZW1lbnRzLG49XyhpLGUpOzA8PW4mJmkuc3BsaWNlKG4sMSksdC5fX2hvdmVyTWlyPW51bGx9LGNsZWFySG92ZXI6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX2hvdmVyRWxlbWVudHMsaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgbj1lW2ldLl9fZnJvbTtuJiYobi5fX2hvdmVyTWlyPW51bGwpfWUubGVuZ3RoPTB9LHJlZnJlc2hIb3ZlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2hvdmVyRWxlbWVudHMsZT10Lmxlbmd0aCxpPXRoaXMuX2hvdmVybGF5ZXI7aWYoaSYmaS5jbGVhcigpLGUpe05pKHQsdGhpcy5zdG9yYWdlLmRpc3BsYXlhYmxlU29ydEZ1bmMpO3ZhciBuPXt9OyhpPWl8fCh0aGlzLl9ob3ZlcmxheWVyPXRoaXMuZ2V0TGF5ZXIoMWU1KSkpLmN0eC5zYXZlKCk7Zm9yKHZhciBvPTA7bzxlOyl7dmFyIGE9dFtvXSxyPWEuX19mcm9tO3ImJnIuX196cj8obysrLHIuaW52aXNpYmxlfHwoYS50cmFuc2Zvcm09ci50cmFuc2Zvcm0sYS5pbnZUcmFuc2Zvcm09ci5pbnZUcmFuc2Zvcm0sYS5fX2NsaXBQYXRocz1yLl9fY2xpcFBhdGhzLHRoaXMuX2RvUGFpbnRFbChhLGksITAsbikpKToodC5zcGxpY2UobywxKSxyLl9faG92ZXJNaXI9bnVsbCxlLS0pfWkuY3R4LnJlc3RvcmUoKX19LGdldEhvdmVyTGF5ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYXllcigxZTUpfSxfcGFpbnRMaXN0OmZ1bmN0aW9uKHQsZSxpKXtpZih0aGlzLl9yZWRyYXdJZD09PWkpe2U9ZXx8ITEsdGhpcy5fdXBkYXRlTGF5ZXJTdGF0dXModCk7dmFyIG49dGhpcy5fZG9QYWludExpc3QodCxlKTtpZih0aGlzLl9uZWVkc01hbnVhbGx5Q29tcG9zaXRpbmcmJnRoaXMuX2NvbXBvc2l0ZU1hbnVhbGx5KCksIW4pe3ZhciBvPXRoaXM7JGkoZnVuY3Rpb24oKXtvLl9wYWludExpc3QodCxlLGkpfSl9fX0sX2NvbXBvc2l0ZU1hbnVhbGx5OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5nZXRMYXllcihLbikuY3R4LGk9dGhpcy5fZG9tUm9vdC53aWR0aCxuPXRoaXMuX2RvbVJvb3QuaGVpZ2h0O2UuY2xlYXJSZWN0KDAsMCxpLG4pLHRoaXMuZWFjaEJ1aWx0aW5MYXllcihmdW5jdGlvbih0KXt0LnZpcnR1YWwmJmUuZHJhd0ltYWdlKHQuZG9tLDAsMCxpLG4pfSl9LF9kb1BhaW50TGlzdDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1bXSxuPTA7bjx0aGlzLl96bGV2ZWxMaXN0Lmxlbmd0aDtuKyspe3ZhciBvPXRoaXMuX3psZXZlbExpc3Rbbl07KHM9dGhpcy5fbGF5ZXJzW29dKS5fX2J1aWx0aW5fXyYmcyE9PXRoaXMuX2hvdmVybGF5ZXImJihzLl9fZGlydHl8fGUpJiZpLnB1c2gocyl9Zm9yKHZhciBhPSEwLHI9MDtyPGkubGVuZ3RoO3IrKyl7dmFyIHMsbD0ocz1pW3JdKS5jdHgsdT17fTtsLnNhdmUoKTt2YXIgaD1lP3MuX19zdGFydEluZGV4OnMuX19kcmF3SW5kZXgsYz0hZSYmcy5pbmNyZW1lbnRhbCYmRGF0ZS5ub3csZD1jJiZEYXRlLm5vdygpLGY9cy56bGV2ZWw9PT10aGlzLl96bGV2ZWxMaXN0WzBdP3RoaXMuX2JhY2tncm91bmRDb2xvcjpudWxsO2lmKHMuX19zdGFydEluZGV4PT09cy5fX2VuZEluZGV4KXMuY2xlYXIoITEsZik7ZWxzZSBpZihoPT09cy5fX3N0YXJ0SW5kZXgpe3ZhciBwPXRbaF07cC5pbmNyZW1lbnRhbCYmcC5ub3RDbGVhciYmIWV8fHMuY2xlYXIoITEsZil9LTE9PT1oJiYoY29uc29sZS5lcnJvcigiRm9yIHNvbWUgdW5rbm93biByZWFzb24uIGRyYXdJbmRleCBpcyAtMSIpLGg9cy5fX3N0YXJ0SW5kZXgpO2Zvcih2YXIgZz1oO2c8cy5fX2VuZEluZGV4O2crKyl7dmFyIG09dFtnXTtpZih0aGlzLl9kb1BhaW50RWwobSxzLGUsdSksbS5fX2RpcnR5PW0uX19kaXJ0eVRleHQ9ITEsYylpZigxNTxEYXRlLm5vdygpLWQpYnJlYWt9cy5fX2RyYXdJbmRleD1nLHMuX19kcmF3SW5kZXg8cy5fX2VuZEluZGV4JiYoYT0hMSksdS5wcmV2RWxDbGlwUGF0aHMmJmwucmVzdG9yZSgpLGwucmVzdG9yZSgpfXJldHVybiB2Lnd4YSYmRSh0aGlzLl9sYXllcnMsZnVuY3Rpb24odCl7dCYmdC5jdHgmJnQuY3R4LmRyYXcmJnQuY3R4LmRyYXcoKX0pLGF9LF9kb1BhaW50RWw6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89ZS5jdHgsYT10LnRyYW5zZm9ybTtpZigoZS5fX2RpcnR5fHxpKSYmIXQuaW52aXNpYmxlJiYwIT09dC5zdHlsZS5vcGFjaXR5JiYoIWF8fGFbMF18fGFbM10pJiYoIXQuY3VsbGluZ3x8IWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gSm4uY29weSh0LmdldEJvdW5kaW5nUmVjdCgpKSx0LnRyYW5zZm9ybSYmSm4uYXBwbHlUcmFuc2Zvcm0odC50cmFuc2Zvcm0pLFFuLndpZHRoPWUsUW4uaGVpZ2h0PWksIUpuLmludGVyc2VjdChRbil9KHQsdGhpcy5fd2lkdGgsdGhpcy5faGVpZ2h0KSkpe3ZhciByPXQuX19jbGlwUGF0aHMscz1uLnByZXZFbENsaXBQYXRocztzJiYhZnVuY3Rpb24odCxlKXtpZih0PT09ZSlyZXR1cm4hMTtpZighdHx8IWV8fHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITA7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspaWYodFtpXSE9PWVbaV0pcmV0dXJuITA7cmV0dXJuITF9KHIscyl8fChzJiYoby5yZXN0b3JlKCksbi5wcmV2RWxDbGlwUGF0aHM9bnVsbCxuLnByZXZFbD1udWxsKSxyJiYoby5zYXZlKCksZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIG49dFtpXTtuLnNldFRyYW5zZm9ybShlKSxlLmJlZ2luUGF0aCgpLG4uYnVpbGRQYXRoKGUsbi5zaGFwZSksZS5jbGlwKCksbi5yZXN0b3JlVHJhbnNmb3JtKGUpfX0ocixvKSxuLnByZXZFbENsaXBQYXRocz1yKSksdC5iZWZvcmVCcnVzaCYmdC5iZWZvcmVCcnVzaChvKSx0LmJydXNoKG8sbi5wcmV2RWx8fG51bGwpLChuLnByZXZFbD10KS5hZnRlckJydXNoJiZ0LmFmdGVyQnJ1c2gobyl9fSxnZXRMYXllcjpmdW5jdGlvbih0LGUpe3RoaXMuX3NpbmdsZUNhbnZhcyYmIXRoaXMuX25lZWRzTWFudWFsbHlDb21wb3NpdGluZyYmKHQ9S24pO3ZhciBpPXRoaXMuX2xheWVyc1t0XTtyZXR1cm4gaXx8KChpPW5ldyBLaSgienJfIit0LHRoaXMsdGhpcy5kcHIpKS56bGV2ZWw9dCxpLl9fYnVpbHRpbl9fPSEwLHRoaXMuX2xheWVyQ29uZmlnW3RdJiZtKGksdGhpcy5fbGF5ZXJDb25maWdbdF0sITApLGUmJihpLnZpcnR1YWw9ZSksdGhpcy5pbnNlcnRMYXllcih0LGkpLGkuaW5pdENvbnRleHQoKSksaX0saW5zZXJ0TGF5ZXI6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9sYXllcnMsbj10aGlzLl96bGV2ZWxMaXN0LG89bi5sZW5ndGgsYT1udWxsLHI9LTEscz10aGlzLl9kb21Sb290O2lmKGlbdF0pZmkoIlpMZXZlbCAiK3QrIiBoYXMgYmVlbiB1c2VkIGFscmVhZHkiKTtlbHNlIGlmKGZ1bmN0aW9uKHQpe3JldHVybiEhdCYmKCEhdC5fX2J1aWx0aW5fX3x8ImZ1bmN0aW9uIj09dHlwZW9mIHQucmVzaXplJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5yZWZyZXNoKX0oZSkpe2lmKDA8byYmdD5uWzBdKXtmb3Iocj0wO3I8by0xJiYhKG5bcl08dCYmbltyKzFdPnQpO3IrKyk7YT1pW25bcl1dfWlmKG4uc3BsaWNlKHIrMSwwLHQpLCEoaVt0XT1lKS52aXJ0dWFsKWlmKGEpe3ZhciBsPWEuZG9tO2wubmV4dFNpYmxpbmc/cy5pbnNlcnRCZWZvcmUoZS5kb20sbC5uZXh0U2libGluZyk6cy5hcHBlbmRDaGlsZChlLmRvbSl9ZWxzZSBzLmZpcnN0Q2hpbGQ/cy5pbnNlcnRCZWZvcmUoZS5kb20scy5maXJzdENoaWxkKTpzLmFwcGVuZENoaWxkKGUuZG9tKX1lbHNlIGZpKCJMYXllciBvZiB6bGV2ZWwgIit0KyIgaXMgbm90IHZhbGlkIil9LGVhY2hMYXllcjpmdW5jdGlvbih0LGUpe3ZhciBpLG4sbz10aGlzLl96bGV2ZWxMaXN0O2ZvcihuPTA7bjxvLmxlbmd0aDtuKyspaT1vW25dLHQuY2FsbChlLHRoaXMuX2xheWVyc1tpXSxpKX0sZWFjaEJ1aWx0aW5MYXllcjpmdW5jdGlvbih0LGUpe3ZhciBpLG4sbyxhPXRoaXMuX3psZXZlbExpc3Q7Zm9yKG89MDtvPGEubGVuZ3RoO28rKyluPWFbb10sKGk9dGhpcy5fbGF5ZXJzW25dKS5fX2J1aWx0aW5fXyYmdC5jYWxsKGUsaSxuKX0sZWFjaE90aGVyTGF5ZXI6ZnVuY3Rpb24odCxlKXt2YXIgaSxuLG8sYT10aGlzLl96bGV2ZWxMaXN0O2ZvcihvPTA7bzxhLmxlbmd0aDtvKyspbj1hW29dLChpPXRoaXMuX2xheWVyc1tuXSkuX19idWlsdGluX198fHQuY2FsbChlLGksbil9LGdldExheWVyczpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sYXllcnN9LF91cGRhdGVMYXllclN0YXR1czpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe24mJihuLl9fZW5kSW5kZXghPT10JiYobi5fX2RpcnR5PSEwKSxuLl9fZW5kSW5kZXg9dCl9aWYodGhpcy5lYWNoQnVpbHRpbkxheWVyKGZ1bmN0aW9uKHQsZSl7dC5fX2RpcnR5PXQuX191c2VkPSExfSksdGhpcy5fc2luZ2xlQ2FudmFzKWZvcih2YXIgaT0xO2k8dC5sZW5ndGg7aSsrKXtpZigoYT10W2ldKS56bGV2ZWwhPT10W2ktMV0uemxldmVsfHxhLmluY3JlbWVudGFsKXt0aGlzLl9uZWVkc01hbnVhbGx5Q29tcG9zaXRpbmc9ITA7YnJlYWt9fXZhciBuPW51bGwsbz0wO2ZvcihpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciBhLHIscz0oYT10W2ldKS56bGV2ZWw7YS5pbmNyZW1lbnRhbD8oKHI9dGhpcy5nZXRMYXllcihzKy4wMDEsdGhpcy5fbmVlZHNNYW51YWxseUNvbXBvc2l0aW5nKSkuaW5jcmVtZW50YWw9ITAsbz0xKTpyPXRoaXMuZ2V0TGF5ZXIocysoMDxvPy4wMTowKSx0aGlzLl9uZWVkc01hbnVhbGx5Q29tcG9zaXRpbmcpLHIuX19idWlsdGluX198fGZpKCJaTGV2ZWwgIitzKyIgaGFzIGJlZW4gdXNlZCBieSB1bmtvd24gbGF5ZXIgIityLmlkKSxyIT09biYmKHIuX191c2VkPSEwLHIuX19zdGFydEluZGV4IT09aSYmKHIuX19kaXJ0eT0hMCksci5fX3N0YXJ0SW5kZXg9aSxyLmluY3JlbWVudGFsP3IuX19kcmF3SW5kZXg9LTE6ci5fX2RyYXdJbmRleD1pLGUoaSksbj1yKSxhLl9fZGlydHkmJihyLl9fZGlydHk9ITAsci5pbmNyZW1lbnRhbCYmci5fX2RyYXdJbmRleDwwJiYoci5fX2RyYXdJbmRleD1pKSl9ZShpKSx0aGlzLmVhY2hCdWlsdGluTGF5ZXIoZnVuY3Rpb24odCxlKXshdC5fX3VzZWQmJjA8dC5nZXRFbGVtZW50Q291bnQoKSYmKHQuX19kaXJ0eT0hMCx0Ll9fc3RhcnRJbmRleD10Ll9fZW5kSW5kZXg9dC5fX2RyYXdJbmRleD0wKSx0Ll9fZGlydHkmJnQuX19kcmF3SW5kZXg8MCYmKHQuX19kcmF3SW5kZXg9dC5fX3N0YXJ0SW5kZXgpfSl9LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaEJ1aWx0aW5MYXllcih0aGlzLl9jbGVhckxheWVyKSx0aGlzfSxfY2xlYXJMYXllcjpmdW5jdGlvbih0KXt0LmNsZWFyKCl9LHNldEJhY2tncm91bmRDb2xvcjpmdW5jdGlvbih0KXt0aGlzLl9iYWNrZ3JvdW5kQ29sb3I9dH0sY29uZmlnTGF5ZXI6ZnVuY3Rpb24odCxlKXtpZihlKXt2YXIgaT10aGlzLl9sYXllckNvbmZpZztpW3RdP20oaVt0XSxlLCEwKTppW3RdPWU7Zm9yKHZhciBuPTA7bjx0aGlzLl96bGV2ZWxMaXN0Lmxlbmd0aDtuKyspe3ZhciBvPXRoaXMuX3psZXZlbExpc3Rbbl07aWYobz09PXR8fG89PT10Ky4wMSltKHRoaXMuX2xheWVyc1tvXSxpW3RdLCEwKX19fSxkZWxMYXllcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9sYXllcnMsaT10aGlzLl96bGV2ZWxMaXN0LG49ZVt0XTtuJiYobi5kb20ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuLmRvbSksZGVsZXRlIGVbdF0saS5zcGxpY2UoXyhpLHQpLDEpKX0scmVzaXplOmZ1bmN0aW9uKGUsaSl7aWYodGhpcy5fZG9tUm9vdC5zdHlsZSl7dmFyIHQ9dGhpcy5fZG9tUm9vdDt0LnN0eWxlLmRpc3BsYXk9Im5vbmUiO3ZhciBuPXRoaXMuX29wdHM7aWYobnVsbCE9ZSYmKG4ud2lkdGg9ZSksbnVsbCE9aSYmKG4uaGVpZ2h0PWkpLGU9dGhpcy5fZ2V0U2l6ZSgwKSxpPXRoaXMuX2dldFNpemUoMSksdC5zdHlsZS5kaXNwbGF5PSIiLHRoaXMuX3dpZHRoIT09ZXx8aSE9PXRoaXMuX2hlaWdodCl7Zm9yKHZhciBvIGluIHQuc3R5bGUud2lkdGg9ZSsicHgiLHQuc3R5bGUuaGVpZ2h0PWkrInB4Iix0aGlzLl9sYXllcnMpdGhpcy5fbGF5ZXJzLmhhc093blByb3BlcnR5KG8pJiZ0aGlzLl9sYXllcnNbb10ucmVzaXplKGUsaSk7RSh0aGlzLl9wcm9ncmVzc2l2ZUxheWVycyxmdW5jdGlvbih0KXt0LnJlc2l6ZShlLGkpfSksdGhpcy5yZWZyZXNoKCEwKX10aGlzLl93aWR0aD1lLHRoaXMuX2hlaWdodD1pfWVsc2V7aWYobnVsbD09ZXx8bnVsbD09aSlyZXR1cm47dGhpcy5fd2lkdGg9ZSx0aGlzLl9oZWlnaHQ9aSx0aGlzLmdldExheWVyKEtuKS5yZXNpemUoZSxpKX1yZXR1cm4gdGhpc30sY2xlYXJMYXllcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9sYXllcnNbdF07ZSYmZS5jbGVhcigpfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5yb290LmlubmVySFRNTD0iIix0aGlzLnJvb3Q9dGhpcy5zdG9yYWdlPXRoaXMuX2RvbVJvb3Q9dGhpcy5fbGF5ZXJzPW51bGx9LGdldFJlbmRlcmVkQ2FudmFzOmZ1bmN0aW9uKHQpe2lmKHQ9dHx8e30sdGhpcy5fc2luZ2xlQ2FudmFzJiYhdGhpcy5fY29tcG9zaXRlTWFudWFsbHkpcmV0dXJuIHRoaXMuX2xheWVyc1tLbl0uZG9tO3ZhciBlPW5ldyBLaSgiaW1hZ2UiLHRoaXMsdC5waXhlbFJhdGlvfHx0aGlzLmRwcik7aWYoZS5pbml0Q29udGV4dCgpLGUuY2xlYXIoITEsdC5iYWNrZ3JvdW5kQ29sb3J8fHRoaXMuX2JhY2tncm91bmRDb2xvciksdC5waXhlbFJhdGlvPD10aGlzLmRwcil7dGhpcy5yZWZyZXNoKCk7dmFyIGk9ZS5kb20ud2lkdGgsbj1lLmRvbS5oZWlnaHQsbz1lLmN0eDt0aGlzLmVhY2hMYXllcihmdW5jdGlvbih0KXt0Ll9fYnVpbHRpbl9fP28uZHJhd0ltYWdlKHQuZG9tLDAsMCxpLG4pOnQucmVuZGVyVG9DYW52YXMmJihlLmN0eC5zYXZlKCksdC5yZW5kZXJUb0NhbnZhcyhlLmN0eCksZS5jdHgucmVzdG9yZSgpKX0pfWVsc2UgZm9yKHZhciBhPXt9LHI9dGhpcy5zdG9yYWdlLmdldERpc3BsYXlMaXN0KCEwKSxzPTA7czxyLmxlbmd0aDtzKyspe3ZhciBsPXJbc107dGhpcy5fZG9QYWludEVsKGwsZSwhMCxhKX1yZXR1cm4gZS5kb219LGdldFdpZHRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dpZHRofSxnZXRIZWlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVpZ2h0fSxfZ2V0U2l6ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9vcHRzLGk9WyJ3aWR0aCIsImhlaWdodCJdW3RdLG49WyJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCJdW3RdLG89WyJwYWRkaW5nTGVmdCIsInBhZGRpbmdUb3AiXVt0XSxhPVsicGFkZGluZ1JpZ2h0IiwicGFkZGluZ0JvdHRvbSJdW3RdO2lmKG51bGwhPWVbaV0mJiJhdXRvIiE9PWVbaV0pcmV0dXJuIHBhcnNlRmxvYXQoZVtpXSk7dmFyIHI9dGhpcy5yb290LHM9ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShyKTtyZXR1cm4ocltuXXx8JG4oc1tpXSl8fCRuKHIuc3R5bGVbaV0pKS0oJG4oc1tvXSl8fDApLSgkbihzW2FdKXx8MCl8MH0scGF0aFRvSW1hZ2U6ZnVuY3Rpb24odCxlKXtlPWV8fHRoaXMuZHByO3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLG49aS5nZXRDb250ZXh0KCIyZCIpLG89dC5nZXRCb3VuZGluZ1JlY3QoKSxhPXQuc3R5bGUscj1hLnNoYWRvd0JsdXIqZSxzPWEuc2hhZG93T2Zmc2V0WCplLGw9YS5zaGFkb3dPZmZzZXRZKmUsdT1hLmhhc1N0cm9rZSgpP2EubGluZVdpZHRoOjAsaD1NYXRoLm1heCh1LzIsci1zKSxjPU1hdGgubWF4KHUvMixzK3IpLGQ9TWF0aC5tYXgodS8yLHItbCksZj1NYXRoLm1heCh1LzIsbCtyKSxwPW8ud2lkdGgraCtjLGc9by5oZWlnaHQrZCtmO2kud2lkdGg9cCplLGkuaGVpZ2h0PWcqZSxuLnNjYWxlKGUsZSksbi5jbGVhclJlY3QoMCwwLHAsZyksbi5kcHI9ZTt2YXIgbT17cG9zaXRpb246dC5wb3NpdGlvbixyb3RhdGlvbjp0LnJvdGF0aW9uLHNjYWxlOnQuc2NhbGV9O3QucG9zaXRpb249W2gtby54LGQtby55XSx0LnJvdGF0aW9uPTAsdC5zY2FsZT1bMSwxXSx0LnVwZGF0ZVRyYW5zZm9ybSgpLHQmJnQuYnJ1c2gobik7dmFyIHY9bmV3IHFuKHtzdHlsZTp7eDowLHk6MCxpbWFnZTppfX0pO3JldHVybiBudWxsIT1tLnBvc2l0aW9uJiYodi5wb3NpdGlvbj10LnBvc2l0aW9uPW0ucG9zaXRpb24pLG51bGwhPW0ucm90YXRpb24mJih2LnJvdGF0aW9uPXQucm90YXRpb249bS5yb3RhdGlvbiksbnVsbCE9bS5zY2FsZSYmKHYuc2NhbGU9dC5zY2FsZT1tLnNjYWxlKSx2fX07ZnVuY3Rpb24gZW8odCl7dD10fHx7fSx0aGlzLnN0YWdlPXQuc3RhZ2V8fHt9LHRoaXMub25mcmFtZT10Lm9uZnJhbWV8fGZ1bmN0aW9uKCl7fSx0aGlzLl9jbGlwcz1bXSx0aGlzLl9ydW5uaW5nPSExLHRoaXMuX3RpbWUsdGhpcy5fcGF1c2VkVGltZSx0aGlzLl9wYXVzZVN0YXJ0LHRoaXMuX3BhdXNlZD0hMSxDdC5jYWxsKHRoaXMpfWVvLnByb3RvdHlwZT17Y29uc3RydWN0b3I6ZW8sYWRkQ2xpcDpmdW5jdGlvbih0KXt0aGlzLl9jbGlwcy5wdXNoKHQpfSxhZGRBbmltYXRvcjpmdW5jdGlvbih0KXt0LmFuaW1hdGlvbj10aGlzO2Zvcih2YXIgZT10LmdldENsaXBzKCksaT0wO2k8ZS5sZW5ndGg7aSsrKXRoaXMuYWRkQ2xpcChlW2ldKX0scmVtb3ZlQ2xpcDpmdW5jdGlvbih0KXt2YXIgZT1fKHRoaXMuX2NsaXBzLHQpOzA8PWUmJnRoaXMuX2NsaXBzLnNwbGljZShlLDEpfSxyZW1vdmVBbmltYXRvcjpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5nZXRDbGlwcygpLGk9MDtpPGUubGVuZ3RoO2krKyl0aGlzLnJlbW92ZUNsaXAoZVtpXSk7dC5hbmltYXRpb249bnVsbH0sX3VwZGF0ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD0obmV3IERhdGUpLmdldFRpbWUoKS10aGlzLl9wYXVzZWRUaW1lLGU9dC10aGlzLl90aW1lLGk9dGhpcy5fY2xpcHMsbj1pLmxlbmd0aCxvPVtdLGE9W10scj0wO3I8bjtyKyspe3ZhciBzPWlbcl0sbD1zLnN0ZXAodCxlKTtsJiYoby5wdXNoKGwpLGEucHVzaChzKSl9Zm9yKHI9MDtyPG47KWlbcl0uX25lZWRzUmVtb3ZlPyhpW3JdPWlbbi0xXSxpLnBvcCgpLG4tLSk6cisrO249by5sZW5ndGg7Zm9yKHI9MDtyPG47cisrKWFbcl0uZmlyZShvW3JdKTt0aGlzLl90aW1lPXQsdGhpcy5vbmZyYW1lKGUpLHRoaXMudHJpZ2dlcigiZnJhbWUiLGUpLHRoaXMuc3RhZ2UudXBkYXRlJiZ0aGlzLnN0YWdlLnVwZGF0ZSgpfSxfc3RhcnRMb29wOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLl9ydW5uaW5nPSEwLCRpKGZ1bmN0aW9uIHQoKXtlLl9ydW5uaW5nJiYoJGkodCksZS5fcGF1c2VkfHxlLl91cGRhdGUoKSl9KX0sc3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl90aW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHRoaXMuX3BhdXNlZFRpbWU9MCx0aGlzLl9zdGFydExvb3AoKX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuX3J1bm5pbmc9ITF9LHBhdXNlOmZ1bmN0aW9uKCl7dGhpcy5fcGF1c2VkfHwodGhpcy5fcGF1c2VTdGFydD0obmV3IERhdGUpLmdldFRpbWUoKSx0aGlzLl9wYXVzZWQ9ITApfSxyZXN1bWU6ZnVuY3Rpb24oKXt0aGlzLl9wYXVzZWQmJih0aGlzLl9wYXVzZWRUaW1lKz0obmV3IERhdGUpLmdldFRpbWUoKS10aGlzLl9wYXVzZVN0YXJ0LHRoaXMuX3BhdXNlZD0hMSl9LGNsZWFyOmZ1bmN0aW9uKCl7dGhpcy5fY2xpcHM9W119LGlzRmluaXNoZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5fY2xpcHMubGVuZ3RofSxhbmltYXRlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IGxpKHQsKGU9ZXx8e30pLmxvb3AsZS5nZXR0ZXIsZS5zZXR0ZXIpO3JldHVybiB0aGlzLmFkZEFuaW1hdG9yKGkpLGl9fSxiKGVvLEN0KTt2YXIgaW8sbm8sb289di5kb21TdXBwb3J0ZWQsYW89KG5vPXtwb2ludGVyZG93bjoxLHBvaW50ZXJ1cDoxLHBvaW50ZXJtb3ZlOjEscG9pbnRlcm91dDoxfSx7bW91c2U6aW89WyJjbGljayIsImRibGNsaWNrIiwibW91c2V3aGVlbCIsIm1vdXNlb3V0IiwibW91c2V1cCIsIm1vdXNlZG93biIsIm1vdXNlbW92ZSIsImNvbnRleHRtZW51Il0sdG91Y2g6WyJ0b3VjaHN0YXJ0IiwidG91Y2hlbmQiLCJ0b3VjaG1vdmUiXSxwb2ludGVyOk4oaW8sZnVuY3Rpb24odCl7dmFyIGU9dC5yZXBsYWNlKCJtb3VzZSIsInBvaW50ZXIiKTtyZXR1cm4gbm8uaGFzT3duUHJvcGVydHkoZSk/ZTp0fSl9KSxybz17bW91c2U6WyJtb3VzZW1vdmUiLCJtb3VzZXVwIl0scG9pbnRlcjpbInBvaW50ZXJtb3ZlIiwicG9pbnRlcnVwIl19O2Z1bmN0aW9uIHNvKHQpe3JldHVybiJtb3VzZXdoZWVsIj09PXQmJnYuYnJvd3Nlci5maXJlZm94PyJET01Nb3VzZVNjcm9sbCI6dH1mdW5jdGlvbiBsbyh0KXt2YXIgZT10LnBvaW50ZXJUeXBlO3JldHVybiJwZW4iPT09ZXx8InRvdWNoIj09PWV9ZnVuY3Rpb24gdW8odCl7dCYmKHQuenJCeVRvdWNoPSEwKX1mdW5jdGlvbiBobyh0LGUpe2Zvcih2YXIgaT0hMTsoZT1lJiZlLnBhcmVudE5vZGUpJiY5IT09ZS5ub2RlVHlwZSYmIShpPWU9PT10LnBhaW50ZXJSb290KTspO3JldHVybiBpfWZ1bmN0aW9uIGNvKHQsZSl7dGhpcy50eXBlPWUudHlwZSx0aGlzLnRhcmdldD10aGlzLmN1cnJlbnRUYXJnZXQ9dC5kb20sdGhpcy5wb2ludGVyVHlwZT1lLnBvaW50ZXJUeXBlLHRoaXMuY2xpZW50WD1lLmNsaWVudFgsdGhpcy5jbGllbnRZPWUuY2xpZW50WX12YXIgZm89Y28ucHJvdG90eXBlO2ZvLnN0b3BQcm9wYWdhdGlvbj1mby5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb249Zm8ucHJldmVudERlZmF1bHQ9ZXQ7dmFyIHBvPXttb3VzZWRvd246ZnVuY3Rpb24odCl7dD1HdCh0aGlzLmRvbSx0KSx0aGlzLl9tYXlQb2ludGVyQ2FwdHVyZT1bdC56clgsdC56clldLHRoaXMudHJpZ2dlcigibW91c2Vkb3duIix0KX0sbW91c2Vtb3ZlOmZ1bmN0aW9uKHQpe3Q9R3QodGhpcy5kb20sdCk7dmFyIGU9dGhpcy5fbWF5UG9pbnRlckNhcHR1cmU7IWV8fHQuenJYPT09ZVswXSYmdC56clk9PT1lWzFdfHxfbyh0aGlzLCEwKSx0aGlzLnRyaWdnZXIoIm1vdXNlbW92ZSIsdCl9LG1vdXNldXA6ZnVuY3Rpb24odCl7dD1HdCh0aGlzLmRvbSx0KSxfbyh0aGlzLCExKSx0aGlzLnRyaWdnZXIoIm1vdXNldXAiLHQpfSxtb3VzZW91dDpmdW5jdGlvbih0KXt0PUd0KHRoaXMuZG9tLHQpLHRoaXMuX3BvaW50ZXJDYXB0dXJpbmcmJih0LnpyRXZlbnRDb250cm9sPSJub19nbG9iYWxvdXQiKTt2YXIgZT10LnRvRWxlbWVudHx8dC5yZWxhdGVkVGFyZ2V0O3QuenJJc1RvTG9jYWxET009aG8odGhpcyxlKSx0aGlzLnRyaWdnZXIoIm1vdXNlb3V0Iix0KX0sdG91Y2hzdGFydDpmdW5jdGlvbih0KXt1byh0PUd0KHRoaXMuZG9tLHQpKSx0aGlzLl9sYXN0VG91Y2hNb21lbnQ9bmV3IERhdGUsdGhpcy5oYW5kbGVyLnByb2Nlc3NHZXN0dXJlKHQsInN0YXJ0IikscG8ubW91c2Vtb3ZlLmNhbGwodGhpcyx0KSxwby5tb3VzZWRvd24uY2FsbCh0aGlzLHQpfSx0b3VjaG1vdmU6ZnVuY3Rpb24odCl7dW8odD1HdCh0aGlzLmRvbSx0KSksdGhpcy5oYW5kbGVyLnByb2Nlc3NHZXN0dXJlKHQsImNoYW5nZSIpLHBvLm1vdXNlbW92ZS5jYWxsKHRoaXMsdCl9LHRvdWNoZW5kOmZ1bmN0aW9uKHQpe3VvKHQ9R3QodGhpcy5kb20sdCkpLHRoaXMuaGFuZGxlci5wcm9jZXNzR2VzdHVyZSh0LCJlbmQiKSxwby5tb3VzZXVwLmNhbGwodGhpcyx0KSwrbmV3IERhdGUtdGhpcy5fbGFzdFRvdWNoTW9tZW50PDMwMCYmcG8uY2xpY2suY2FsbCh0aGlzLHQpfSxwb2ludGVyZG93bjpmdW5jdGlvbih0KXtwby5tb3VzZWRvd24uY2FsbCh0aGlzLHQpfSxwb2ludGVybW92ZTpmdW5jdGlvbih0KXtsbyh0KXx8cG8ubW91c2Vtb3ZlLmNhbGwodGhpcyx0KX0scG9pbnRlcnVwOmZ1bmN0aW9uKHQpe3BvLm1vdXNldXAuY2FsbCh0aGlzLHQpfSxwb2ludGVyb3V0OmZ1bmN0aW9uKHQpe2xvKHQpfHxwby5tb3VzZW91dC5jYWxsKHRoaXMsdCl9fTtFKFsiY2xpY2siLCJtb3VzZXdoZWVsIiwiZGJsY2xpY2siLCJjb250ZXh0bWVudSJdLGZ1bmN0aW9uKGUpe3BvW2VdPWZ1bmN0aW9uKHQpe3Q9R3QodGhpcy5kb20sdCksdGhpcy50cmlnZ2VyKGUsdCl9fSk7dmFyIGdvPXtwb2ludGVybW92ZTpmdW5jdGlvbih0KXtsbyh0KXx8Z28ubW91c2Vtb3ZlLmNhbGwodGhpcyx0KX0scG9pbnRlcnVwOmZ1bmN0aW9uKHQpe2dvLm1vdXNldXAuY2FsbCh0aGlzLHQpfSxtb3VzZW1vdmU6ZnVuY3Rpb24odCl7dGhpcy50cmlnZ2VyKCJtb3VzZW1vdmUiLHQpfSxtb3VzZXVwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3BvaW50ZXJDYXB0dXJpbmc7X28odGhpcywhMSksdGhpcy50cmlnZ2VyKCJtb3VzZXVwIix0KSxlJiYodC56ckV2ZW50Q29udHJvbD0ib25seV9nbG9iYWxvdXQiLHRoaXMudHJpZ2dlcigibW91c2VvdXQiLHQpKX19O2Z1bmN0aW9uIG1vKGksbil7dmFyIG89bi5kb21IYW5kbGVyczt2LnBvaW50ZXJFdmVudHNTdXBwb3J0ZWQ/RShhby5wb2ludGVyLGZ1bmN0aW9uKGUpe3lvKG4sZSxmdW5jdGlvbih0KXtvW2VdLmNhbGwoaSx0KX0pfSk6KHYudG91Y2hFdmVudHNTdXBwb3J0ZWQmJkUoYW8udG91Y2gsZnVuY3Rpb24oZSl7eW8obixlLGZ1bmN0aW9uKHQpe29bZV0uY2FsbChpLHQpLGZ1bmN0aW9uKHQpe3QudG91Y2hpbmc9ITAsbnVsbCE9dC50b3VjaFRpbWVyJiYoY2xlYXJUaW1lb3V0KHQudG91Y2hUaW1lciksdC50b3VjaFRpbWVyPW51bGwpLHQudG91Y2hUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC50b3VjaGluZz0hMSx0LnRvdWNoVGltZXI9bnVsbH0sNzAwKX0obil9KX0pLEUoYW8ubW91c2UsZnVuY3Rpb24oZSl7eW8obixlLGZ1bmN0aW9uKHQpe3Q9VnQodCksbi50b3VjaGluZ3x8b1tlXS5jYWxsKGksdCl9KX0pKX1mdW5jdGlvbiB2byhpLG4pe2Z1bmN0aW9uIHQoZSl7eW8obixlLGZ1bmN0aW9uKHQpe3Q9VnQodCksaG8oaSx0LnRhcmdldCl8fCh0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEd0KHQuZG9tLG5ldyBjbyh0LGUpLCEwKX0oaSx0KSxuLmRvbUhhbmRsZXJzW2VdLmNhbGwoaSx0KSl9LHtjYXB0dXJlOiEwfSl9di5wb2ludGVyRXZlbnRzU3VwcG9ydGVkP0Uocm8ucG9pbnRlcix0KTp2LnRvdWNoRXZlbnRzU3VwcG9ydGVkfHxFKHJvLm1vdXNlLHQpfWZ1bmN0aW9uIHlvKHQsZSxpLG4pe3QubW91bnRlZFtlXT1pLHQubGlzdGVuZXJPcHRzW2VdPW4sRnQodC5kb21UYXJnZXQsc28oZSksaSxuKX1mdW5jdGlvbiB4byh0KXt2YXIgZSxpLG4sbyxhPXQubW91bnRlZDtmb3IodmFyIHIgaW4gYSlhLmhhc093blByb3BlcnR5KHIpJiYoZT10LmRvbVRhcmdldCxpPXNvKHIpLG49YVtyXSxvPXQubGlzdGVuZXJPcHRzW3JdLE50P2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLG4sbyk6ZS5kZXRhY2hFdmVudCgib24iK2ksbikpO3QubW91bnRlZD17fX1mdW5jdGlvbiBfbyh0LGUpe2lmKHQuX21heVBvaW50ZXJDYXB0dXJlPW51bGwsb28mJnQuX3BvaW50ZXJDYXB0dXJpbmdeZSl7dC5fcG9pbnRlckNhcHR1cmluZz1lO3ZhciBpPXQuX2dsb2JhbEhhbmRsZXJTY29wZTtlP3ZvKHQsaSk6eG8oaSl9fWZ1bmN0aW9uIHdvKHQsZSl7dGhpcy5kb21UYXJnZXQ9dCx0aGlzLmRvbUhhbmRsZXJzPWUsdGhpcy5tb3VudGVkPXt9LHRoaXMubGlzdGVuZXJPcHRzPXt9LHRoaXMudG91Y2hUaW1lcj1udWxsLHRoaXMudG91Y2hpbmc9ITF9ZnVuY3Rpb24gYm8odCxlKXtDdC5jYWxsKHRoaXMpLHRoaXMuZG9tPXQsdGhpcy5wYWludGVyUm9vdD1lLHRoaXMuX2xvY2FsSGFuZGxlclNjb3BlPW5ldyB3byh0LHBvKSxvbyYmKHRoaXMuX2dsb2JhbEhhbmRsZXJTY29wZT1uZXcgd28oZG9jdW1lbnQsZ28pKSx0aGlzLl9wb2ludGVyQ2FwdHVyaW5nPSExLHRoaXMuX21heVBvaW50ZXJDYXB0dXJlPW51bGwsbW8odGhpcyx0aGlzLl9sb2NhbEhhbmRsZXJTY29wZSl9dmFyIFNvPWJvLnByb3RvdHlwZTtTby5kaXNwb3NlPWZ1bmN0aW9uKCl7eG8odGhpcy5fbG9jYWxIYW5kbGVyU2NvcGUpLG9vJiZ4byh0aGlzLl9nbG9iYWxIYW5kbGVyU2NvcGUpfSxTby5zZXRDdXJzb3I9ZnVuY3Rpb24odCl7dGhpcy5kb20uc3R5bGUmJih0aGlzLmRvbS5zdHlsZS5jdXJzb3I9dHx8ImRlZmF1bHQiKX0sYihibyxDdCk7dmFyIE1vPSF2LmNhbnZhc1N1cHBvcnRlZCxJbz17Y2FudmFzOnRvfSxUbz17fTtmdW5jdGlvbiBBbyh0LGUpe3ZhciBpPW5ldyBDbyhuKCksdCxlKTtyZXR1cm4gVG9baS5pZF09aX1mdW5jdGlvbiBEbyh0LGUpe0lvW3RdPWV9dmFyIENvPWZ1bmN0aW9uKHQsZSxpKXtpPWl8fHt9LHRoaXMuZG9tPWUsdGhpcy5pZD10O3ZhciBuPXRoaXMsbz1uZXcgRWksYT1pLnJlbmRlcmVyO2lmKE1vKXtpZighSW8udm1sKXRocm93IG5ldyBFcnJvcigiWW91IG5lZWQgdG8gcmVxdWlyZSAnenJlbmRlci92bWwvdm1sJyB0byBzdXBwb3J0IElFOCIpO2E9InZtbCJ9ZWxzZSBhJiZJb1thXXx8KGE9ImNhbnZhcyIpO3ZhciByPW5ldyBJb1thXShlLG8saSx0KTt0aGlzLnN0b3JhZ2U9byx0aGlzLnBhaW50ZXI9cjt2YXIgcz12Lm5vZGV8fHYud29ya2VyP251bGw6bmV3IGJvKHIuZ2V0Vmlld3BvcnRSb290KCksci5yb290KTt0aGlzLmhhbmRsZXI9bmV3IEt0KG8scixzLHIucm9vdCksdGhpcy5hbmltYXRpb249bmV3IGVvKHtzdGFnZTp7dXBkYXRlOkEodGhpcy5mbHVzaCx0aGlzKX19KSx0aGlzLmFuaW1hdGlvbi5zdGFydCgpLHRoaXMuX25lZWRzUmVmcmVzaDt2YXIgbD1vLmRlbEZyb21TdG9yYWdlLHU9by5hZGRUb1N0b3JhZ2U7by5kZWxGcm9tU3RvcmFnZT1mdW5jdGlvbih0KXtsLmNhbGwobyx0KSx0JiZ0LnJlbW92ZVNlbGZGcm9tWnIobil9LG8uYWRkVG9TdG9yYWdlPWZ1bmN0aW9uKHQpe3UuY2FsbChvLHQpLHQuYWRkU2VsZlRvWnIobil9fTtDby5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkNvLGdldElkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaWR9LGFkZDpmdW5jdGlvbih0KXt0aGlzLnN0b3JhZ2UuYWRkUm9vdCh0KSx0aGlzLl9uZWVkc1JlZnJlc2g9ITB9LHJlbW92ZTpmdW5jdGlvbih0KXt0aGlzLnN0b3JhZ2UuZGVsUm9vdCh0KSx0aGlzLl9uZWVkc1JlZnJlc2g9ITB9LGNvbmZpZ0xheWVyOmZ1bmN0aW9uKHQsZSl7dGhpcy5wYWludGVyLmNvbmZpZ0xheWVyJiZ0aGlzLnBhaW50ZXIuY29uZmlnTGF5ZXIodCxlKSx0aGlzLl9uZWVkc1JlZnJlc2g9ITB9LHNldEJhY2tncm91bmRDb2xvcjpmdW5jdGlvbih0KXt0aGlzLnBhaW50ZXIuc2V0QmFja2dyb3VuZENvbG9yJiZ0aGlzLnBhaW50ZXIuc2V0QmFja2dyb3VuZENvbG9yKHQpLHRoaXMuX25lZWRzUmVmcmVzaD0hMH0scmVmcmVzaEltbWVkaWF0ZWx5OmZ1bmN0aW9uKCl7dGhpcy5fbmVlZHNSZWZyZXNoPXRoaXMuX25lZWRzUmVmcmVzaEhvdmVyPSExLHRoaXMucGFpbnRlci5yZWZyZXNoKCksdGhpcy5fbmVlZHNSZWZyZXNoPXRoaXMuX25lZWRzUmVmcmVzaEhvdmVyPSExfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dGhpcy5fbmVlZHNSZWZyZXNoPSEwfSxmbHVzaDpmdW5jdGlvbigpe3ZhciB0O3RoaXMuX25lZWRzUmVmcmVzaCYmKHQ9ITAsdGhpcy5yZWZyZXNoSW1tZWRpYXRlbHkoKSksdGhpcy5fbmVlZHNSZWZyZXNoSG92ZXImJih0PSEwLHRoaXMucmVmcmVzaEhvdmVySW1tZWRpYXRlbHkoKSksdCYmdGhpcy50cmlnZ2VyKCJyZW5kZXJlZCIpfSxhZGRIb3ZlcjpmdW5jdGlvbih0LGUpe2lmKHRoaXMucGFpbnRlci5hZGRIb3Zlcil7dmFyIGk9dGhpcy5wYWludGVyLmFkZEhvdmVyKHQsZSk7cmV0dXJuIHRoaXMucmVmcmVzaEhvdmVyKCksaX19LHJlbW92ZUhvdmVyOmZ1bmN0aW9uKHQpe3RoaXMucGFpbnRlci5yZW1vdmVIb3ZlciYmKHRoaXMucGFpbnRlci5yZW1vdmVIb3Zlcih0KSx0aGlzLnJlZnJlc2hIb3ZlcigpKX0sY2xlYXJIb3ZlcjpmdW5jdGlvbigpe3RoaXMucGFpbnRlci5jbGVhckhvdmVyJiYodGhpcy5wYWludGVyLmNsZWFySG92ZXIoKSx0aGlzLnJlZnJlc2hIb3ZlcigpKX0scmVmcmVzaEhvdmVyOmZ1bmN0aW9uKCl7dGhpcy5fbmVlZHNSZWZyZXNoSG92ZXI9ITB9LHJlZnJlc2hIb3ZlckltbWVkaWF0ZWx5OmZ1bmN0aW9uKCl7dGhpcy5fbmVlZHNSZWZyZXNoSG92ZXI9ITEsdGhpcy5wYWludGVyLnJlZnJlc2hIb3ZlciYmdGhpcy5wYWludGVyLnJlZnJlc2hIb3ZlcigpfSxyZXNpemU6ZnVuY3Rpb24odCl7dD10fHx7fSx0aGlzLnBhaW50ZXIucmVzaXplKHQud2lkdGgsdC5oZWlnaHQpLHRoaXMuaGFuZGxlci5yZXNpemUoKX0sY2xlYXJBbmltYXRpb246ZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGlvbi5jbGVhcigpfSxnZXRXaWR0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhaW50ZXIuZ2V0V2lkdGgoKX0sZ2V0SGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFpbnRlci5nZXRIZWlnaHQoKX0scGF0aFRvSW1hZ2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wYWludGVyLnBhdGhUb0ltYWdlKHQsZSl9LHNldEN1cnNvclN0eWxlOmZ1bmN0aW9uKHQpe3RoaXMuaGFuZGxlci5zZXRDdXJzb3JTdHlsZSh0KX0sZmluZEhvdmVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuaGFuZGxlci5maW5kSG92ZXIodCxlKX0sb246ZnVuY3Rpb24odCxlLGkpe3RoaXMuaGFuZGxlci5vbih0LGUsaSl9LG9mZjpmdW5jdGlvbih0LGUpe3RoaXMuaGFuZGxlci5vZmYodCxlKX0sdHJpZ2dlcjpmdW5jdGlvbih0LGUpe3RoaXMuaGFuZGxlci50cmlnZ2VyKHQsZSl9LGNsZWFyOmZ1bmN0aW9uKCl7dGhpcy5zdG9yYWdlLmRlbFJvb3QoKSx0aGlzLnBhaW50ZXIuY2xlYXIoKX0sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuYW5pbWF0aW9uLnN0b3AoKSx0aGlzLmNsZWFyKCksdGhpcy5zdG9yYWdlLmRpc3Bvc2UoKSx0aGlzLnBhaW50ZXIuZGlzcG9zZSgpLHRoaXMuaGFuZGxlci5kaXNwb3NlKCksdGhpcy5hbmltYXRpb249dGhpcy5zdG9yYWdlPXRoaXMucGFpbnRlcj10aGlzLmhhbmRsZXI9bnVsbCxmdW5jdGlvbih0KXtkZWxldGUgVG9bdF19KHRoaXMuaWQpfX07dmFyIExvPShPYmplY3QuZnJlZXplfHxPYmplY3QpKHt2ZXJzaW9uOiI0LjIuMCIsaW5pdDpBbyxkaXNwb3NlOmZ1bmN0aW9uKHQpe2lmKHQpdC5kaXNwb3NlKCk7ZWxzZXtmb3IodmFyIGUgaW4gVG8pVG8uaGFzT3duUHJvcGVydHkoZSkmJlRvW2VdLmRpc3Bvc2UoKTtUbz17fX1yZXR1cm4gdGhpc30sZ2V0SW5zdGFuY2U6ZnVuY3Rpb24odCl7cmV0dXJuIFRvW3RdfSxyZWdpc3RlclBhaW50ZXI6RG99KSxrbz1FLFBvPVIsTm89ayxPbz0ic2VyaWVzXDAiO2Z1bmN0aW9uIEVvKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQXJyYXk/dDpudWxsPT10P1tdOlt0XX1mdW5jdGlvbiB6byh0LGUsaSl7aWYodCl7dFtlXT10W2VdfHx7fSx0LmVtcGhhc2lzPXQuZW1waGFzaXN8fHt9LHQuZW1waGFzaXNbZV09dC5lbXBoYXNpc1tlXXx8e307Zm9yKHZhciBuPTAsbz1pLmxlbmd0aDtuPG87bisrKXt2YXIgYT1pW25dOyF0LmVtcGhhc2lzW2VdLmhhc093blByb3BlcnR5KGEpJiZ0W2VdLmhhc093blByb3BlcnR5KGEpJiYodC5lbXBoYXNpc1tlXVthXT10W2VdW2FdKX19fXZhciBSbz1bImZvbnRTdHlsZSIsImZvbnRXZWlnaHQiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJyaWNoIiwidGFnIiwiY29sb3IiLCJ0ZXh0Qm9yZGVyQ29sb3IiLCJ0ZXh0Qm9yZGVyV2lkdGgiLCJ3aWR0aCIsImhlaWdodCIsImxpbmVIZWlnaHQiLCJhbGlnbiIsInZlcnRpY2FsQWxpZ24iLCJiYXNlbGluZSIsInNoYWRvd0NvbG9yIiwic2hhZG93Qmx1ciIsInNoYWRvd09mZnNldFgiLCJzaGFkb3dPZmZzZXRZIiwidGV4dFNoYWRvd0NvbG9yIiwidGV4dFNoYWRvd0JsdXIiLCJ0ZXh0U2hhZG93T2Zmc2V0WCIsInRleHRTaGFkb3dPZmZzZXRZIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCIsImJvcmRlclJhZGl1cyIsInBhZGRpbmciXTtmdW5jdGlvbiBCbyh0KXtyZXR1cm4hUG8odCl8fE5vKHQpfHx0IGluc3RhbmNlb2YgRGF0ZT90OnQudmFsdWV9ZnVuY3Rpb24gVm8odCxvKXtvPShvfHxbXSkuc2xpY2UoKTt2YXIgYT1OKHR8fFtdLGZ1bmN0aW9uKHQsZSl7cmV0dXJue2V4aXN0OnR9fSk7cmV0dXJuIGtvKG8sZnVuY3Rpb24odCxlKXtpZihQbyh0KSl7Zm9yKHZhciBpPTA7aTxhLmxlbmd0aDtpKyspaWYoIWFbaV0ub3B0aW9uJiZudWxsIT10LmlkJiZhW2ldLmV4aXN0LmlkPT09dC5pZCsiIilyZXR1cm4gYVtpXS5vcHRpb249dCx2b2lkKG9bZV09bnVsbCk7Zm9yKGk9MDtpPGEubGVuZ3RoO2krKyl7dmFyIG49YVtpXS5leGlzdDtpZighKGFbaV0ub3B0aW9ufHxudWxsIT1uLmlkJiZudWxsIT10LmlkfHxudWxsPT10Lm5hbWV8fFdvKHQpfHxXbyhuKXx8bi5uYW1lIT09dC5uYW1lKyIiKSlyZXR1cm4gYVtpXS5vcHRpb249dCx2b2lkKG9bZV09bnVsbCl9fX0pLGtvKG8sZnVuY3Rpb24odCxlKXtpZihQbyh0KSl7Zm9yKHZhciBpPTA7aTxhLmxlbmd0aDtpKyspe3ZhciBuPWFbaV0uZXhpc3Q7aWYoIWFbaV0ub3B0aW9uJiYhV28obikmJm51bGw9PXQuaWQpe2FbaV0ub3B0aW9uPXQ7YnJlYWt9fWk+PWEubGVuZ3RoJiZhLnB1c2goe29wdGlvbjp0fSl9fSksYX1mdW5jdGlvbiBHbyh0KXt2YXIgcj1RKCk7a28odCxmdW5jdGlvbih0LGUpe3ZhciBpPXQuZXhpc3Q7aSYmci5zZXQoaS5pZCx0KX0pLGtvKHQsZnVuY3Rpb24odCxlKXt2YXIgaT10Lm9wdGlvbjtZKCFpfHxudWxsPT1pLmlkfHwhci5nZXQoaS5pZCl8fHIuZ2V0KGkuaWQpPT09dCwiaWQgZHVwbGljYXRlczogIisoaSYmaS5pZCkpLGkmJm51bGwhPWkuaWQmJnIuc2V0KGkuaWQsdCksdC5rZXlJbmZvfHwodC5rZXlJbmZvPXt9KX0pLGtvKHQsZnVuY3Rpb24odCxlKXt2YXIgaT10LmV4aXN0LG49dC5vcHRpb24sbz10LmtleUluZm87aWYoUG8obikpe2lmKG8ubmFtZT1udWxsIT1uLm5hbWU/bi5uYW1lKyIiOmk/aS5uYW1lOk9vK2UsaSlvLmlkPWkuaWQ7ZWxzZSBpZihudWxsIT1uLmlkKW8uaWQ9bi5pZCsiIjtlbHNlIGZvcih2YXIgYT0wO28uaWQ9IlwwIitvLm5hbWUrIlwwIithKyssci5nZXQoby5pZCk7KTtyLnNldChvLmlkLHQpfX0pfWZ1bmN0aW9uIEZvKHQpe3ZhciBlPXQubmFtZTtyZXR1cm4hKCFlfHwhZS5pbmRleE9mKE9vKSl9ZnVuY3Rpb24gV28odCl7cmV0dXJuIFBvKHQpJiZ0LmlkJiYwPT09KHQuaWQrIiIpLmluZGV4T2YoIlwwX2VjX1wwIil9ZnVuY3Rpb24gSG8oZSx0KXtyZXR1cm4gbnVsbCE9dC5kYXRhSW5kZXhJbnNpZGU/dC5kYXRhSW5kZXhJbnNpZGU6bnVsbCE9dC5kYXRhSW5kZXg/ayh0LmRhdGFJbmRleCk/Tih0LmRhdGFJbmRleCxmdW5jdGlvbih0KXtyZXR1cm4gZS5pbmRleE9mUmF3SW5kZXgodCl9KTplLmluZGV4T2ZSYXdJbmRleCh0LmRhdGFJbmRleCk6bnVsbCE9dC5uYW1lP2sodC5uYW1lKT9OKHQubmFtZSxmdW5jdGlvbih0KXtyZXR1cm4gZS5pbmRleE9mTmFtZSh0KX0pOmUuaW5kZXhPZk5hbWUodC5uYW1lKTp2b2lkIDB9ZnVuY3Rpb24gWm8oKXt2YXIgZT0iX19cMGVjX2lubmVyXyIrVW8rKysiXyIrTWF0aC5yYW5kb20oKS50b0ZpeGVkKDUpO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdFtlXXx8KHRbZV09e30pfX12YXIgVW89MDtmdW5jdGlvbiBYbyhzLGwsdSl7aWYoeihsKSl7dmFyIHQ9e307dFtsKyJJbmRleCJdPTAsbD10fXZhciBlPXUmJnUuZGVmYXVsdE1haW5UeXBlOyFlfHxZbyhsLGUrIkluZGV4Iil8fFlvKGwsZSsiSWQiKXx8WW8obCxlKyJOYW1lIil8fChsW2UrIkluZGV4Il09MCk7dmFyIGg9e307cmV0dXJuIGtvKGwsZnVuY3Rpb24odCxlKXt0PWxbZV07aWYoImRhdGFJbmRleCIhPT1lJiYiZGF0YUluZGV4SW5zaWRlIiE9PWUpe3ZhciBpPWUubWF0Y2goL14oXHcrKShJbmRleHxJZHxOYW1lKSQvKXx8W10sbj1pWzFdLG89KGlbMl18fCIiKS50b0xvd2VyQ2FzZSgpO2lmKCEoIW58fCFvfHxudWxsPT10fHwiaW5kZXgiPT09byYmIm5vbmUiPT09dHx8dSYmdS5pbmNsdWRlTWFpblR5cGVzJiZfKHUuaW5jbHVkZU1haW5UeXBlcyxuKTwwKSl7dmFyIGE9e21haW5UeXBlOm59OyJpbmRleCI9PT1vJiYiYWxsIj09PXR8fChhW29dPXQpO3ZhciByPXMucXVlcnlDb21wb25lbnRzKGEpO2hbbisiTW9kZWxzIl09cixoW24rIk1vZGVsIl09clswXX19ZWxzZSBoW2VdPXR9KSxofWZ1bmN0aW9uIFlvKHQsZSl7cmV0dXJuIHQmJnQuaGFzT3duUHJvcGVydHkoZSl9ZnVuY3Rpb24gam8odCxlLGkpe3Quc2V0QXR0cmlidXRlP3Quc2V0QXR0cmlidXRlKGUsaSk6dFtlXT1pfWZ1bmN0aW9uIHFvKHQpe3JldHVybiJhdXRvIj09PXQ/di5kb21TdXBwb3J0ZWQ/Imh0bWwiOiJyaWNoVGV4dCI6dHx8Imh0bWwifWZ1bmN0aW9uIEtvKHQsaSl7dmFyIG49USgpLG89W107cmV0dXJuIEUodCxmdW5jdGlvbih0KXt2YXIgZT1pKHQpOyhuLmdldChlKXx8KG8ucHVzaChlKSxuLnNldChlLFtdKSkpLnB1c2godCl9KSx7a2V5czpvLGJ1Y2tldHM6bn19dmFyICRvPSIuIixKbz0iX19fRUNfX0NPTVBPTkVOVF9fQ09OVEFJTkVSX19fIjtmdW5jdGlvbiBRbyh0KXt2YXIgZT17bWFpbjoiIixzdWI6IiJ9O3JldHVybiB0JiYodD10LnNwbGl0KCRvKSxlLm1haW49dFswXXx8IiIsZS5zdWI9dFsxXXx8IiIpLGV9ZnVuY3Rpb24gdGEodCl7KHQuJGNvbnN0cnVjdG9yPXQpLmV4dGVuZD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC4kY29uc3RydWN0b3I/dC4kY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpOmkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBpPXRoaXM7cmV0dXJuIEwoZS5wcm90b3R5cGUsdCksZS5leHRlbmQ9dGhpcy5leHRlbmQsZS5zdXBlckNhbGw9bmEsZS5zdXBlckFwcGx5PW9hLHcoZSx0aGlzKSxlLnN1cGVyQ2xhc3M9aSxlfX12YXIgZWE9MDtmdW5jdGlvbiBpYSh0KXt2YXIgZT1bIl9fXDBpc19jbHoiLGVhKyssTWF0aC5yYW5kb20oKS50b0ZpeGVkKDMpXS5qb2luKCJfIik7dC5wcm90b3R5cGVbZV09ITAsdC5pc0luc3RhbmNlPWZ1bmN0aW9uKHQpe3JldHVybiEoIXR8fCF0W2VdKX19ZnVuY3Rpb24gbmEodCxlKXt2YXIgaT1VKGFyZ3VtZW50cywyKTtyZXR1cm4gdGhpcy5zdXBlckNsYXNzLnByb3RvdHlwZVtlXS5hcHBseSh0LGkpfWZ1bmN0aW9uIG9hKHQsZSxpKXtyZXR1cm4gdGhpcy5zdXBlckNsYXNzLnByb3RvdHlwZVtlXS5hcHBseSh0LGkpfWZ1bmN0aW9uIGFhKGksdCl7dD10fHx7fTt2YXIgbz17fTtpZihpLnJlZ2lzdGVyQ2xhc3M9ZnVuY3Rpb24odCxlKXtpZihlKWlmKGZ1bmN0aW9uKHQpe1koL15bYS16QS1aMC05X10rKFsuXVthLXpBLVowLTlfXSspPyQvLnRlc3QodCksJ2NvbXBvbmVudFR5cGUgIicrdCsnIiBpbGxlZ2FsJyl9KGUpLChlPVFvKGUpKS5zdWIpe2lmKGUuc3ViIT09Sm8peyhmdW5jdGlvbih0KXt2YXIgZT1vW3QubWFpbl07ZSYmZVtKb118fCgoZT1vW3QubWFpbl09e30pW0pvXT0hMCk7cmV0dXJuIGV9KShlKVtlLnN1Yl09dH19ZWxzZSBvW2UubWFpbl09dDtyZXR1cm4gdH0saS5nZXRDbGFzcz1mdW5jdGlvbih0LGUsaSl7dmFyIG49b1t0XTtpZihuJiZuW0pvXSYmKG49ZT9uW2VdOm51bGwpLGkmJiFuKXRocm93IG5ldyBFcnJvcihlPyJDb21wb25lbnQgIit0KyIuIisoZXx8IiIpKyIgbm90IGV4aXN0cy4gTG9hZCBpdCBmaXJzdC4iOnQrIi50eXBlIHNob3VsZCBiZSBzcGVjaWZpZWQuIik7cmV0dXJuIG59LGkuZ2V0Q2xhc3Nlc0J5TWFpblR5cGU9ZnVuY3Rpb24odCl7dD1Rbyh0KTt2YXIgaT1bXSxlPW9bdC5tYWluXTtyZXR1cm4gZSYmZVtKb10/RShlLGZ1bmN0aW9uKHQsZSl7ZSE9PUpvJiZpLnB1c2godCl9KTppLnB1c2goZSksaX0saS5oYXNDbGFzcz1mdW5jdGlvbih0KXtyZXR1cm4gdD1Rbyh0KSwhIW9bdC5tYWluXX0saS5nZXRBbGxDbGFzc01haW5UeXBlcz1mdW5jdGlvbigpe3ZhciBpPVtdO3JldHVybiBFKG8sZnVuY3Rpb24odCxlKXtpLnB1c2goZSl9KSxpfSxpLmhhc1N1YlR5cGVzPWZ1bmN0aW9uKHQpe3Q9UW8odCk7dmFyIGU9b1t0Lm1haW5dO3JldHVybiBlJiZlW0pvXX0saS5wYXJzZUNsYXNzVHlwZT1Rbyx0LnJlZ2lzdGVyV2hlbkV4dGVuZCl7dmFyIG49aS5leHRlbmQ7biYmKGkuZXh0ZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPW4uY2FsbCh0aGlzLHQpO3JldHVybiBpLnJlZ2lzdGVyQ2xhc3MoZSx0LnR5cGUpfSl9cmV0dXJuIGl9ZnVuY3Rpb24gcmEocyl7Zm9yKHZhciB0PTA7dDxzLmxlbmd0aDt0Kyspc1t0XVsxXXx8KHNbdF1bMV09c1t0XVswXSk7cmV0dXJuIGZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49e30sbz0wO288cy5sZW5ndGg7bysrKXt2YXIgYT1zW29dWzFdO2lmKCEoZSYmMDw9XyhlLGEpfHxpJiZfKGksYSk8MCkpe3ZhciByPXQuZ2V0U2hhbGxvdyhhKTtudWxsIT1yJiYobltzW29dWzBdXT1yKX19cmV0dXJuIG59fXZhciBzYT1yYShbWyJsaW5lV2lkdGgiLCJ3aWR0aCJdLFsic3Ryb2tlIiwiY29sb3IiXSxbIm9wYWNpdHkiXSxbInNoYWRvd0JsdXIiXSxbInNoYWRvd09mZnNldFgiXSxbInNoYWRvd09mZnNldFkiXSxbInNoYWRvd0NvbG9yIl1dKSxsYT17Z2V0TGluZVN0eWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXNhKHRoaXMsdCk7cmV0dXJuIGUubGluZURhc2g9dGhpcy5nZXRMaW5lRGFzaChlLmxpbmVXaWR0aCksZX0sZ2V0TGluZURhc2g6ZnVuY3Rpb24odCl7bnVsbD09dCYmKHQ9MSk7dmFyIGU9dGhpcy5nZXQoInR5cGUiKSxpPU1hdGgubWF4KHQsMiksbj00KnQ7cmV0dXJuInNvbGlkIiE9PWUmJm51bGwhPWUmJigiZGFzaGVkIj09PWU/W24sbl06W2ksaV0pfX0sdWE9cmEoW1siZmlsbCIsImNvbG9yIl0sWyJzaGFkb3dCbHVyIl0sWyJzaGFkb3dPZmZzZXRYIl0sWyJzaGFkb3dPZmZzZXRZIl0sWyJvcGFjaXR5Il0sWyJzaGFkb3dDb2xvciJdXSksaGE9e2dldEFyZWFTdHlsZTpmdW5jdGlvbih0LGUpe3JldHVybiB1YSh0aGlzLHQsZSl9fSxjYT1NYXRoLnBvdyxkYT1NYXRoLnNxcnQsZmE9MWUtOCxwYT0xZS00LGdhPWRhKDMpLG1hPTEvMyx2YT1vdCgpLHlhPW90KCkseGE9b3QoKTtmdW5jdGlvbiBfYSh0KXtyZXR1cm4tZmE8dCYmdDxmYX1mdW5jdGlvbiB3YSh0KXtyZXR1cm4gZmE8dHx8dDwtZmF9ZnVuY3Rpb24gYmEodCxlLGksbixvKXt2YXIgYT0xLW87cmV0dXJuIGEqYSooYSp0KzMqbyplKStvKm8qKG8qbiszKmEqaSl9ZnVuY3Rpb24gU2EodCxlLGksbixvKXt2YXIgYT0xLW87cmV0dXJuIDMqKCgoZS10KSphKzIqKGktZSkqbykqYSsobi1pKSpvKm8pfWZ1bmN0aW9uIE1hKHQsZSxpLG4sbyl7dmFyIGE9NippLTEyKmUrNip0LHI9OSplKzMqbi0zKnQtOSppLHM9MyplLTMqdCxsPTA7aWYoX2Eocikpe2lmKHdhKGEpKTA8PShoPS1zL2EpJiZoPD0xJiYob1tsKytdPWgpfWVsc2V7dmFyIHU9YSphLTQqcipzO2lmKF9hKHUpKW9bMF09LWEvKDIqcik7ZWxzZSBpZigwPHUpe3ZhciBoLGM9ZGEodSksZD0oLWEtYykvKDIqcik7MDw9KGg9KC1hK2MpLygyKnIpKSYmaDw9MSYmKG9bbCsrXT1oKSwwPD1kJiZkPD0xJiYob1tsKytdPWQpfX1yZXR1cm4gbH1mdW5jdGlvbiBJYSh0LGUsaSxuLG8sYSl7dmFyIHI9KGUtdCkqbyt0LHM9KGktZSkqbytlLGw9KG4taSkqbytpLHU9KHMtcikqbytyLGg9KGwtcykqbytzLGM9KGgtdSkqbyt1O2FbMF09dCxhWzFdPXIsYVsyXT11LGFbM109YyxhWzRdPWMsYVs1XT1oLGFbNl09bCxhWzddPW59ZnVuY3Rpb24gVGEodCxlLGksbil7dmFyIG89MS1uO3JldHVybiBvKihvKnQrMipuKmUpK24qbippfWZ1bmN0aW9uIEFhKHQsZSxpLG4pe3JldHVybiAyKigoMS1uKSooZS10KStuKihpLWUpKX1mdW5jdGlvbiBEYSh0LGUsaSl7dmFyIG49dCtpLTIqZTtyZXR1cm4gMD09bj8uNToodC1lKS9ufWZ1bmN0aW9uIENhKHQsZSxpLG4sbyl7dmFyIGE9KGUtdCkqbit0LHI9KGktZSkqbitlLHM9KHItYSkqbithO29bMF09dCxvWzFdPWEsb1syXT1zLG9bM109cyxvWzRdPXIsb1s1XT1pfXZhciBMYT1NYXRoLm1pbixrYT1NYXRoLm1heCxQYT1NYXRoLnNpbixOYT1NYXRoLmNvcyxPYT0yKk1hdGguUEksRWE9b3QoKSx6YT1vdCgpLFJhPW90KCk7ZnVuY3Rpb24gQmEodCxlLGkpe2lmKDAhPT10Lmxlbmd0aCl7dmFyIG4sbz10WzBdLGE9b1swXSxyPW9bMF0scz1vWzFdLGw9b1sxXTtmb3Iobj0xO248dC5sZW5ndGg7bisrKW89dFtuXSxhPUxhKGEsb1swXSkscj1rYShyLG9bMF0pLHM9TGEocyxvWzFdKSxsPWthKGwsb1sxXSk7ZVswXT1hLGVbMV09cyxpWzBdPXIsaVsxXT1sfX1mdW5jdGlvbiBWYSh0LGUsaSxuLG8sYSl7b1swXT1MYSh0LGkpLG9bMV09TGEoZSxuKSxhWzBdPWthKHQsaSksYVsxXT1rYShlLG4pfXZhciBHYT1bXSxGYT1bXTtmdW5jdGlvbiBXYSh0LGUsaSxuLG8sYSxyLHMsbCx1KXt2YXIgaCxjPU1hLGQ9YmEsZj1jKHQsaSxvLHIsR2EpO2ZvcihsWzBdPTEvMCxsWzFdPTEvMCx1WzBdPS0xLzAsdVsxXT0tMS8wLGg9MDtoPGY7aCsrKXt2YXIgcD1kKHQsaSxvLHIsR2FbaF0pO2xbMF09TGEocCxsWzBdKSx1WzBdPWthKHAsdVswXSl9Zm9yKGY9YyhlLG4sYSxzLEZhKSxoPTA7aDxmO2grKyl7dmFyIGc9ZChlLG4sYSxzLEZhW2hdKTtsWzFdPUxhKGcsbFsxXSksdVsxXT1rYShnLHVbMV0pfWxbMF09TGEodCxsWzBdKSx1WzBdPWthKHQsdVswXSksbFswXT1MYShyLGxbMF0pLHVbMF09a2Eocix1WzBdKSxsWzFdPUxhKGUsbFsxXSksdVsxXT1rYShlLHVbMV0pLGxbMV09TGEocyxsWzFdKSx1WzFdPWthKHMsdVsxXSl9ZnVuY3Rpb24gSGEodCxlLGksbixvLGEscixzLGwpe3ZhciB1PVN0LGg9TXQsYz1NYXRoLmFicyhvLWEpO2lmKGMlT2E8MWUtNCYmMWUtNDxjKXJldHVybiBzWzBdPXQtaSxzWzFdPWUtbixsWzBdPXQraSx2b2lkKGxbMV09ZStuKTtpZihFYVswXT1OYShvKSppK3QsRWFbMV09UGEobykqbitlLHphWzBdPU5hKGEpKmkrdCx6YVsxXT1QYShhKSpuK2UsdShzLEVhLHphKSxoKGwsRWEsemEpLChvJT1PYSk8MCYmKG8rPU9hKSwoYSU9T2EpPDAmJihhKz1PYSksYTxvJiYhcj9hKz1PYTpvPGEmJnImJihvKz1PYSkscil7dmFyIGQ9YTthPW8sbz1kfWZvcih2YXIgZj0wO2Y8YTtmKz1NYXRoLlBJLzIpbzxmJiYoUmFbMF09TmEoZikqaSt0LFJhWzFdPVBhKGYpKm4rZSx1KHMsUmEscyksaChsLFJhLGwpKX12YXIgWmE9e006MSxMOjIsQzozLFE6NCxBOjUsWjo2LFI6N30sVWE9W10sWGE9W10sWWE9W10samE9W10scWE9TWF0aC5taW4sS2E9TWF0aC5tYXgsJGE9TWF0aC5jb3MsSmE9TWF0aC5zaW4sUWE9TWF0aC5zcXJ0LHRyPU1hdGguYWJzLGVyPSJ1bmRlZmluZWQiIT10eXBlb2YgRmxvYXQzMkFycmF5LGlyPWZ1bmN0aW9uKHQpe3RoaXMuX3NhdmVEYXRhPSF0LHRoaXMuX3NhdmVEYXRhJiYodGhpcy5kYXRhPVtdKSx0aGlzLl9jdHg9bnVsbH07ZnVuY3Rpb24gbnIodCxlLGksbixvLGEscil7aWYoMD09PW8pcmV0dXJuITE7dmFyIHM9byxsPTA7aWYoZStzPHImJm4rczxyfHxyPGUtcyYmcjxuLXN8fHQrczxhJiZpK3M8YXx8YTx0LXMmJmE8aS1zKXJldHVybiExO2lmKHQ9PT1pKXJldHVybiBNYXRoLmFicyhhLXQpPD1zLzI7dmFyIHU9KGw9KGUtbikvKHQtaSkpKmEtcisodCpuLWkqZSkvKHQtaSk7cmV0dXJuIHUqdS8obCpsKzEpPD1zLzIqcy8yfWZ1bmN0aW9uIG9yKHQsZSxpLG4sbyxhLHIscyxsLHUsaCl7aWYoMD09PWwpcmV0dXJuITE7dmFyIGM9bDtyZXR1cm4hKGUrYzxoJiZuK2M8aCYmYStjPGgmJnMrYzxofHxoPGUtYyYmaDxuLWMmJmg8YS1jJiZoPHMtY3x8dCtjPHUmJmkrYzx1JiZvK2M8dSYmcitjPHV8fHU8dC1jJiZ1PGktYyYmdTxvLWMmJnU8ci1jKSYmZnVuY3Rpb24odCxlLGksbixvLGEscixzLGwsdSxoKXt2YXIgYyxkLGYscCxnLG09LjAwNSx2PTEvMDt2YVswXT1sLHZhWzFdPXU7Zm9yKHZhciB5PTA7eTwxO3krPS4wNSl5YVswXT1iYSh0LGksbyxyLHkpLHlhWzFdPWJhKGUsbixhLHMseSksKHA9X3QodmEseWEpKTx2JiYoYz15LHY9cCk7dj0xLzA7Zm9yKHZhciB4PTA7eDwzMiYmIShtPHBhKTt4KyspZD1jLW0sZj1jK20seWFbMF09YmEodCxpLG8scixkKSx5YVsxXT1iYShlLG4sYSxzLGQpLHA9X3QoeWEsdmEpLDA8PWQmJnA8dj8oYz1kLHY9cCk6KHhhWzBdPWJhKHQsaSxvLHIsZikseGFbMV09YmEoZSxuLGEscyxmKSxnPV90KHhhLHZhKSxmPD0xJiZnPHY/KGM9Zix2PWcpOm0qPS41KTtyZXR1cm4gaCYmKGhbMF09YmEodCxpLG8scixjKSxoWzFdPWJhKGUsbixhLHMsYykpLGRhKHYpfSh0LGUsaSxuLG8sYSxyLHMsdSxoLG51bGwpPD1jLzJ9ZnVuY3Rpb24gYXIodCxlLGksbixvLGEscixzLGwpe2lmKDA9PT1yKXJldHVybiExO3ZhciB1PXI7cmV0dXJuIShlK3U8bCYmbit1PGwmJmErdTxsfHxsPGUtdSYmbDxuLXUmJmw8YS11fHx0K3U8cyYmaSt1PHMmJm8rdTxzfHxzPHQtdSYmczxpLXUmJnM8by11KSYmZnVuY3Rpb24odCxlLGksbixvLGEscixzLGwpe3ZhciB1LGg9LjAwNSxjPTEvMDt2YVswXT1yLHZhWzFdPXM7Zm9yKHZhciBkPTA7ZDwxO2QrPS4wNSl7eWFbMF09VGEodCxpLG8sZCkseWFbMV09VGEoZSxuLGEsZCksKG09X3QodmEseWEpKTxjJiYodT1kLGM9bSl9Yz0xLzA7Zm9yKHZhciBmPTA7ZjwzMiYmIShoPHBhKTtmKyspe3ZhciBwPXUtaCxnPXUraDt5YVswXT1UYSh0LGksbyxwKSx5YVsxXT1UYShlLG4sYSxwKTt2YXIgbT1fdCh5YSx2YSk7aWYoMDw9cCYmbTxjKXU9cCxjPW07ZWxzZXt4YVswXT1UYSh0LGksbyxnKSx4YVsxXT1UYShlLG4sYSxnKTt2YXIgdj1fdCh4YSx2YSk7Zzw9MSYmdjxjPyh1PWcsYz12KTpoKj0uNX19cmV0dXJuIGwmJihsWzBdPVRhKHQsaSxvLHUpLGxbMV09VGEoZSxuLGEsdSkpLGRhKGMpfSh0LGUsaSxuLG8sYSxzLGwsbnVsbCk8PXUvMn1pci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmlyLF94aTowLF95aTowLF94MDowLF95MDowLF91eDowLF91eTowLF9sZW46MCxfbGluZURhc2g6bnVsbCxfZGFzaE9mZnNldDowLF9kYXNoSWR4OjAsX2Rhc2hTdW06MCxzZXRTY2FsZTpmdW5jdGlvbih0LGUsaSl7aT1pfHwwLHRoaXMuX3V4PXRyKGkvaGkvdCl8fDAsdGhpcy5fdXk9dHIoaS9oaS9lKXx8MH0sZ2V0Q29udGV4dDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdHh9LGJlZ2luUGF0aDpmdW5jdGlvbih0KXtyZXR1cm4odGhpcy5fY3R4PXQpJiZ0LmJlZ2luUGF0aCgpLHQmJih0aGlzLmRwcj10LmRwciksdGhpcy5fc2F2ZURhdGEmJih0aGlzLl9sZW49MCksdGhpcy5fbGluZURhc2gmJih0aGlzLl9saW5lRGFzaD1udWxsLHRoaXMuX2Rhc2hPZmZzZXQ9MCksdGhpc30sbW92ZVRvOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYWRkRGF0YShaYS5NLHQsZSksdGhpcy5fY3R4JiZ0aGlzLl9jdHgubW92ZVRvKHQsZSksdGhpcy5feDA9dCx0aGlzLl95MD1lLHRoaXMuX3hpPXQsdGhpcy5feWk9ZSx0aGlzfSxsaW5lVG86ZnVuY3Rpb24odCxlKXt2YXIgaT10cih0LXRoaXMuX3hpKT50aGlzLl91eHx8dHIoZS10aGlzLl95aSk+dGhpcy5fdXl8fHRoaXMuX2xlbjw1O3JldHVybiB0aGlzLmFkZERhdGEoWmEuTCx0LGUpLHRoaXMuX2N0eCYmaSYmKHRoaXMuX25lZWRzRGFzaCgpP3RoaXMuX2Rhc2hlZExpbmVUbyh0LGUpOnRoaXMuX2N0eC5saW5lVG8odCxlKSksaSYmKHRoaXMuX3hpPXQsdGhpcy5feWk9ZSksdGhpc30sYmV6aWVyQ3VydmVUbzpmdW5jdGlvbih0LGUsaSxuLG8sYSl7cmV0dXJuIHRoaXMuYWRkRGF0YShaYS5DLHQsZSxpLG4sbyxhKSx0aGlzLl9jdHgmJih0aGlzLl9uZWVkc0Rhc2goKT90aGlzLl9kYXNoZWRCZXppZXJUbyh0LGUsaSxuLG8sYSk6dGhpcy5fY3R4LmJlemllckN1cnZlVG8odCxlLGksbixvLGEpKSx0aGlzLl94aT1vLHRoaXMuX3lpPWEsdGhpc30scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdGhpcy5hZGREYXRhKFphLlEsdCxlLGksbiksdGhpcy5fY3R4JiYodGhpcy5fbmVlZHNEYXNoKCk/dGhpcy5fZGFzaGVkUXVhZHJhdGljVG8odCxlLGksbik6dGhpcy5fY3R4LnF1YWRyYXRpY0N1cnZlVG8odCxlLGksbikpLHRoaXMuX3hpPWksdGhpcy5feWk9bix0aGlzfSxhcmM6ZnVuY3Rpb24odCxlLGksbixvLGEpe3JldHVybiB0aGlzLmFkZERhdGEoWmEuQSx0LGUsaSxpLG4sby1uLDAsYT8wOjEpLHRoaXMuX2N0eCYmdGhpcy5fY3R4LmFyYyh0LGUsaSxuLG8sYSksdGhpcy5feGk9JGEobykqaSt0LHRoaXMuX3lpPUphKG8pKmkrZSx0aGlzfSxhcmNUbzpmdW5jdGlvbih0LGUsaSxuLG8pe3JldHVybiB0aGlzLl9jdHgmJnRoaXMuX2N0eC5hcmNUbyh0LGUsaSxuLG8pLHRoaXN9LHJlY3Q6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIHRoaXMuX2N0eCYmdGhpcy5fY3R4LnJlY3QodCxlLGksbiksdGhpcy5hZGREYXRhKFphLlIsdCxlLGksbiksdGhpc30sY2xvc2VQYXRoOmZ1bmN0aW9uKCl7dGhpcy5hZGREYXRhKFphLlopO3ZhciB0PXRoaXMuX2N0eCxlPXRoaXMuX3gwLGk9dGhpcy5feTA7cmV0dXJuIHQmJih0aGlzLl9uZWVkc0Rhc2goKSYmdGhpcy5fZGFzaGVkTGluZVRvKGUsaSksdC5jbG9zZVBhdGgoKSksdGhpcy5feGk9ZSx0aGlzLl95aT1pLHRoaXN9LGZpbGw6ZnVuY3Rpb24odCl7dCYmdC5maWxsKCksdGhpcy50b1N0YXRpYygpfSxzdHJva2U6ZnVuY3Rpb24odCl7dCYmdC5zdHJva2UoKSx0aGlzLnRvU3RhdGljKCl9LHNldExpbmVEYXNoOmZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBBcnJheSl7dGhpcy5fbGluZURhc2g9dDtmb3IodmFyIGU9dGhpcy5fZGFzaElkeD0wLGk9MDtpPHQubGVuZ3RoO2krKyllKz10W2ldO3RoaXMuX2Rhc2hTdW09ZX1yZXR1cm4gdGhpc30sc2V0TGluZURhc2hPZmZzZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2Rhc2hPZmZzZXQ9dCx0aGlzfSxsZW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGVufSxzZXREYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO3RoaXMuZGF0YSYmdGhpcy5kYXRhLmxlbmd0aD09PWV8fCFlcnx8KHRoaXMuZGF0YT1uZXcgRmxvYXQzMkFycmF5KGUpKTtmb3IodmFyIGk9MDtpPGU7aSsrKXRoaXMuZGF0YVtpXT10W2ldO3RoaXMuX2xlbj1lfSxhcHBlbmRQYXRoOmZ1bmN0aW9uKHQpe3QgaW5zdGFuY2VvZiBBcnJheXx8KHQ9W3RdKTtmb3IodmFyIGU9dC5sZW5ndGgsaT0wLG49dGhpcy5fbGVuLG89MDtvPGU7bysrKWkrPXRbb10ubGVuKCk7ZXImJnRoaXMuZGF0YSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSYmKHRoaXMuZGF0YT1uZXcgRmxvYXQzMkFycmF5KG4raSkpO2ZvcihvPTA7bzxlO28rKylmb3IodmFyIGE9dFtvXS5kYXRhLHI9MDtyPGEubGVuZ3RoO3IrKyl0aGlzLmRhdGFbbisrXT1hW3JdO3RoaXMuX2xlbj1ufSxhZGREYXRhOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX3NhdmVEYXRhKXt2YXIgZT10aGlzLmRhdGE7dGhpcy5fbGVuK2FyZ3VtZW50cy5sZW5ndGg+ZS5sZW5ndGgmJih0aGlzLl9leHBhbmREYXRhKCksZT10aGlzLmRhdGEpO2Zvcih2YXIgaT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspZVt0aGlzLl9sZW4rK109YXJndW1lbnRzW2ldO3RoaXMuX3ByZXZDbWQ9dH19LF9leHBhbmREYXRhOmZ1bmN0aW9uKCl7aWYoISh0aGlzLmRhdGEgaW5zdGFuY2VvZiBBcnJheSkpe2Zvcih2YXIgdD1bXSxlPTA7ZTx0aGlzLl9sZW47ZSsrKXRbZV09dGhpcy5kYXRhW2VdO3RoaXMuZGF0YT10fX0sX25lZWRzRGFzaDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9saW5lRGFzaH0sX2Rhc2hlZExpbmVUbzpmdW5jdGlvbih0LGUpe3ZhciBpLG4sbz10aGlzLl9kYXNoU3VtLGE9dGhpcy5fZGFzaE9mZnNldCxyPXRoaXMuX2xpbmVEYXNoLHM9dGhpcy5fY3R4LGw9dGhpcy5feGksdT10aGlzLl95aSxoPXQtbCxjPWUtdSxkPVFhKGgqaCtjKmMpLGY9bCxwPXUsZz1yLmxlbmd0aDtmb3IoYTwwJiYoYT1vK2EpLGYtPShhJT1vKSooaC89ZCkscC09YSooYy89ZCk7MDxoJiZmPD10fHxoPDAmJnQ8PWZ8fDA9PT1oJiYoMDxjJiZwPD1lfHxjPDAmJmU8PXApOylmKz1oKihpPXJbbj10aGlzLl9kYXNoSWR4XSkscCs9YyppLHRoaXMuX2Rhc2hJZHg9KG4rMSklZywwPGgmJmY8bHx8aDwwJiZsPGZ8fDA8YyYmcDx1fHxjPDAmJnU8cHx8c1tuJTI/Im1vdmVUbyI6ImxpbmVUbyJdKDA8PWg/cWEoZix0KTpLYShmLHQpLDA8PWM/cWEocCxlKTpLYShwLGUpKTtoPWYtdCxjPXAtZSx0aGlzLl9kYXNoT2Zmc2V0PS1RYShoKmgrYypjKX0sX2Rhc2hlZEJlemllclRvOmZ1bmN0aW9uKHQsZSxpLG4sbyxhKXt2YXIgcixzLGwsdSxoLGM9dGhpcy5fZGFzaFN1bSxkPXRoaXMuX2Rhc2hPZmZzZXQsZj10aGlzLl9saW5lRGFzaCxwPXRoaXMuX2N0eCxnPXRoaXMuX3hpLG09dGhpcy5feWksdj1iYSx5PTAseD10aGlzLl9kYXNoSWR4LF89Zi5sZW5ndGgsdz0wO2ZvcihkPDAmJihkPWMrZCksZCU9YyxyPTA7cjwxO3IrPS4xKXM9dihnLHQsaSxvLHIrLjEpLXYoZyx0LGksbyxyKSxsPXYobSxlLG4sYSxyKy4xKS12KG0sZSxuLGEscikseSs9UWEocypzK2wqbCk7Zm9yKDt4PF8mJiEoZDwodys9Zlt4XSkpO3grKyk7Zm9yKHI9KHctZCkveTtyPD0xOyl1PXYoZyx0LGksbyxyKSxoPXYobSxlLG4sYSxyKSx4JTI/cC5tb3ZlVG8odSxoKTpwLmxpbmVUbyh1LGgpLHIrPWZbeF0veSx4PSh4KzEpJV87eCUyIT0wJiZwLmxpbmVUbyhvLGEpLHM9by11LGw9YS1oLHRoaXMuX2Rhc2hPZmZzZXQ9LVFhKHMqcytsKmwpfSxfZGFzaGVkUXVhZHJhdGljVG86ZnVuY3Rpb24odCxlLGksbil7dmFyIG89aSxhPW47aT0oaSsyKnQpLzMsbj0obisyKmUpLzMsdD0odGhpcy5feGkrMip0KS8zLGU9KHRoaXMuX3lpKzIqZSkvMyx0aGlzLl9kYXNoZWRCZXppZXJUbyh0LGUsaSxuLG8sYSl9LHRvU3RhdGljOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhO3QgaW5zdGFuY2VvZiBBcnJheSYmKHQubGVuZ3RoPXRoaXMuX2xlbixlciYmKHRoaXMuZGF0YT1uZXcgRmxvYXQzMkFycmF5KHQpKSl9LGdldEJvdW5kaW5nUmVjdDpmdW5jdGlvbigpe1VhWzBdPVVhWzFdPVlhWzBdPVlhWzFdPU51bWJlci5NQVhfVkFMVUUsWGFbMF09WGFbMV09amFbMF09amFbMV09LU51bWJlci5NQVhfVkFMVUU7Zm9yKHZhciB0LGUsaSxuLG8sYSxyLHMsbCx1LGgsYyxkLGYscD10aGlzLmRhdGEsZz0wLG09MCx2PTAseT0wLHg9MDt4PHAubGVuZ3RoOyl7dmFyIF89cFt4KytdO3N3aXRjaCgxPT09eCYmKHY9Zz1wW3hdLHk9bT1wW3grMV0pLF8pe2Nhc2UgWmEuTTpnPXY9cFt4KytdLG09eT1wW3grK10sWWFbMF09dixZYVsxXT15LGphWzBdPXYsamFbMV09eTticmVhaztjYXNlIFphLkw6VmEoZyxtLHBbeF0scFt4KzFdLFlhLGphKSxnPXBbeCsrXSxtPXBbeCsrXTticmVhaztjYXNlIFphLkM6V2EoZyxtLHBbeCsrXSxwW3grK10scFt4KytdLHBbeCsrXSxwW3hdLHBbeCsxXSxZYSxqYSksZz1wW3grK10sbT1wW3grK107YnJlYWs7Y2FzZSBaYS5ROnQ9ZyxlPW0saT1wW3grK10sbj1wW3grK10sbz1wW3hdLGE9cFt4KzFdLHI9WWEscz1qYSx1PWw9dm9pZCAwLHU9VGEsaD1rYShMYSgobD1EYSkodCxpLG8pLDEpLDApLGM9a2EoTGEobChlLG4sYSksMSksMCksZD11KHQsaSxvLGgpLGY9dShlLG4sYSxjKSxyWzBdPUxhKHQsbyxkKSxyWzFdPUxhKGUsYSxmKSxzWzBdPWthKHQsbyxkKSxzWzFdPWthKGUsYSxmKSxnPXBbeCsrXSxtPXBbeCsrXTticmVhaztjYXNlIFphLkE6dmFyIHc9cFt4KytdLGI9cFt4KytdLFM9cFt4KytdLE09cFt4KytdLEk9cFt4KytdLFQ9cFt4KytdK0k7eCs9MTt2YXIgQT0xLXBbeCsrXTsxPT09eCYmKHY9JGEoSSkqUyt3LHk9SmEoSSkqTStiKSxIYSh3LGIsUyxNLEksVCxBLFlhLGphKSxnPSRhKFQpKlMrdyxtPUphKFQpKk0rYjticmVhaztjYXNlIFphLlI6VmEodj1nPXBbeCsrXSx5PW09cFt4KytdLHYrcFt4KytdLHkrcFt4KytdLFlhLGphKTticmVhaztjYXNlIFphLlo6Zz12LG09eX1TdChVYSxVYSxZYSksTXQoWGEsWGEsamEpfXJldHVybiAwPT09eCYmKFVhWzBdPVVhWzFdPVhhWzBdPVhhWzFdPTApLG5ldyBNaShVYVswXSxVYVsxXSxYYVswXS1VYVswXSxYYVsxXS1VYVsxXSl9LHJlYnVpbGRQYXRoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxpLG4sbyxhLHIscz10aGlzLmRhdGEsbD10aGlzLl91eCx1PXRoaXMuX3V5LGg9dGhpcy5fbGVuLGM9MDtjPGg7KXt2YXIgZD1zW2MrK107c3dpdGNoKDE9PT1jJiYoZT1uPXNbY10saT1vPXNbYysxXSksZCl7Y2FzZSBaYS5NOmU9bj1zW2MrK10saT1vPXNbYysrXSx0Lm1vdmVUbyhuLG8pO2JyZWFrO2Nhc2UgWmEuTDphPXNbYysrXSxyPXNbYysrXSwodHIoYS1uKT5sfHx0cihyLW8pPnV8fGM9PT1oLTEpJiYodC5saW5lVG8oYSxyKSxuPWEsbz1yKTticmVhaztjYXNlIFphLkM6dC5iZXppZXJDdXJ2ZVRvKHNbYysrXSxzW2MrK10sc1tjKytdLHNbYysrXSxzW2MrK10sc1tjKytdKSxuPXNbYy0yXSxvPXNbYy0xXTticmVhaztjYXNlIFphLlE6dC5xdWFkcmF0aWNDdXJ2ZVRvKHNbYysrXSxzW2MrK10sc1tjKytdLHNbYysrXSksbj1zW2MtMl0sbz1zW2MtMV07YnJlYWs7Y2FzZSBaYS5BOnZhciBmPXNbYysrXSxwPXNbYysrXSxnPXNbYysrXSxtPXNbYysrXSx2PXNbYysrXSx5PXNbYysrXSx4PXNbYysrXSxfPXNbYysrXSx3PW08Zz9nOm0sYj1tPGc/MTpnL20sUz1tPGc/bS9nOjEsTT12K3k7LjAwMTxNYXRoLmFicyhnLW0pPyh0LnRyYW5zbGF0ZShmLHApLHQucm90YXRlKHgpLHQuc2NhbGUoYixTKSx0LmFyYygwLDAsdyx2LE0sMS1fKSx0LnNjYWxlKDEvYiwxL1MpLHQucm90YXRlKC14KSx0LnRyYW5zbGF0ZSgtZiwtcCkpOnQuYXJjKGYscCx3LHYsTSwxLV8pLDE9PT1jJiYoZT0kYSh2KSpnK2YsaT1KYSh2KSptK3ApLG49JGEoTSkqZytmLG89SmEoTSkqbStwO2JyZWFrO2Nhc2UgWmEuUjplPW49c1tjXSxpPW89c1tjKzFdLHQucmVjdChzW2MrK10sc1tjKytdLHNbYysrXSxzW2MrK10pO2JyZWFrO2Nhc2UgWmEuWjp0LmNsb3NlUGF0aCgpLG49ZSxvPWl9fX19LGlyLkNNRD1aYTt2YXIgcnI9MipNYXRoLlBJO2Z1bmN0aW9uIHNyKHQpe3JldHVybih0JT1ycik8MCYmKHQrPXJyKSx0fXZhciBscj0yKk1hdGguUEk7ZnVuY3Rpb24gdXIodCxlLGksbixvLGEscixzLGwpe2lmKDA9PT1yKXJldHVybiExO3ZhciB1PXI7cy09dCxsLT1lO3ZhciBoPU1hdGguc3FydChzKnMrbCpsKTtpZihpPGgtdXx8aCt1PGkpcmV0dXJuITE7aWYoTWF0aC5hYnMobi1vKSVscjwxZS00KXJldHVybiEwO2lmKGEpe3ZhciBjPW47bj1zcihvKSxvPXNyKGMpfWVsc2Ugbj1zcihuKSxvPXNyKG8pO288biYmKG8rPWxyKTt2YXIgZD1NYXRoLmF0YW4yKGwscyk7cmV0dXJuIGQ8MCYmKGQrPWxyKSxuPD1kJiZkPD1vfHxuPD1kK2xyJiZkK2xyPD1vfWZ1bmN0aW9uIGhyKHQsZSxpLG4sbyxhKXtpZihlPGEmJm48YXx8YTxlJiZhPG4pcmV0dXJuIDA7aWYobj09PWUpcmV0dXJuIDA7dmFyIHI9bjxlPzE6LTEscz0oYS1lKS8obi1lKTsxIT1zJiYwIT1zfHwocj1uPGU/LjU6LS41KTt2YXIgbD1zKihpLXQpK3Q7cmV0dXJuIGw9PT1vPzEvMDpvPGw/cjowfXZhciBjcj1pci5DTUQsZHI9MipNYXRoLlBJLGZyPTFlLTQ7dmFyIHByPVstMSwtMSwtMV0sZ3I9Wy0xLC0xXTtmdW5jdGlvbiBtcih0LGUsaSxuLG8sYSxyLHMsbCx1KXtpZihlPHUmJm48dSYmYTx1JiZzPHV8fHU8ZSYmdTxuJiZ1PGEmJnU8cylyZXR1cm4gMDt2YXIgaCxjPWZ1bmN0aW9uKHQsZSxpLG4sbyxhKXt2YXIgcj1uKzMqKGUtaSktdCxzPTMqKGktMiplK3QpLGw9MyooZS10KSx1PXQtbyxoPXMqcy0zKnIqbCxjPXMqbC05KnIqdSxkPWwqbC0zKnMqdSxmPTA7aWYoX2EoaCkmJl9hKGMpKXtpZihfYShzKSlhWzBdPTA7ZWxzZSAwPD0oTT0tbC9zKSYmTTw9MSYmKGFbZisrXT1NKX1lbHNle3ZhciBwPWMqYy00KmgqZDtpZihfYShwKSl7dmFyIGc9Yy9oLG09LWcvMjswPD0oTT0tcy9yK2cpJiZNPD0xJiYoYVtmKytdPU0pLDA8PW0mJm08PTEmJihhW2YrK109bSl9ZWxzZSBpZigwPHApe3ZhciB2PWRhKHApLHk9aCpzKzEuNSpyKigtYyt2KSx4PWgqcysxLjUqciooLWMtdik7MDw9KE09KC1zLSgoeT15PDA/LWNhKC15LG1hKTpjYSh5LG1hKSkrKHg9eDwwPy1jYSgteCxtYSk6Y2EoeCxtYSkpKSkvKDMqcikpJiZNPD0xJiYoYVtmKytdPU0pfWVsc2V7dmFyIF89KDIqaCpzLTMqcipjKS8oMipkYShoKmgqaCkpLHc9TWF0aC5hY29zKF8pLzMsYj1kYShoKSxTPU1hdGguY29zKHcpLE09KC1zLTIqYipTKS8oMypyKSxJPShtPSgtcytiKihTK2dhKk1hdGguc2luKHcpKSkvKDMqciksKC1zK2IqKFMtZ2EqTWF0aC5zaW4odykpKS8oMypyKSk7MDw9TSYmTTw9MSYmKGFbZisrXT1NKSwwPD1tJiZtPD0xJiYoYVtmKytdPW0pLDA8PUkmJkk8PTEmJihhW2YrK109SSl9fXJldHVybiBmfShlLG4sYSxzLHUscHIpO2lmKDA9PT1jKXJldHVybiAwO2Zvcih2YXIgZCxmLHA9MCxnPS0xLG09MDttPGM7bSsrKXt2YXIgdj1wclttXSx5PTA9PT12fHwxPT09dj8uNToxO2JhKHQsaSxvLHIsdik8bHx8KGc8MCYmKGc9TWEoZSxuLGEscyxnciksZ3JbMV08Z3JbMF0mJjE8ZyYmKHZvaWQgMCxoPWdyWzBdLGdyWzBdPWdyWzFdLGdyWzFdPWgpLGQ9YmEoZSxuLGEscyxnclswXSksMTxnJiYoZj1iYShlLG4sYSxzLGdyWzFdKSkpLDI9PT1nP3Y8Z3JbMF0/cCs9ZDxlP3k6LXk6djxnclsxXT9wKz1mPGQ/eToteTpwKz1zPGY/eToteTp2PGdyWzBdP3ArPWQ8ZT95Oi15OnArPXM8ZD95Oi15KX1yZXR1cm4gcH1mdW5jdGlvbiB2cih0LGUsaSxuLG8sYSxyLHMpe2lmKGU8cyYmbjxzJiZhPHN8fHM8ZSYmczxuJiZzPGEpcmV0dXJuIDA7dmFyIGw9ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT10LTIqZStpLHI9MiooZS10KSxzPXQtbixsPTA7aWYoX2EoYSkpe2lmKHdhKHIpKTA8PShoPS1zL3IpJiZoPD0xJiYob1tsKytdPWgpfWVsc2V7dmFyIHU9cipyLTQqYSpzO2lmKF9hKHUpKTA8PShoPS1yLygyKmEpKSYmaDw9MSYmKG9bbCsrXT1oKTtlbHNlIGlmKDA8dSl7dmFyIGgsYz1kYSh1KSxkPSgtci1jKS8oMiphKTswPD0oaD0oLXIrYykvKDIqYSkpJiZoPD0xJiYob1tsKytdPWgpLDA8PWQmJmQ8PTEmJihvW2wrK109ZCl9fXJldHVybiBsfShlLG4sYSxzLHByKTtpZigwPT09bClyZXR1cm4gMDt2YXIgdT1EYShlLG4sYSk7aWYoMDw9dSYmdTw9MSl7Zm9yKHZhciBoPTAsYz1UYShlLG4sYSx1KSxkPTA7ZDxsO2QrKyl7dmFyIGY9MD09PXByW2RdfHwxPT09cHJbZF0/LjU6MTtUYSh0LGksbyxwcltkXSk8cnx8KHByW2RdPHU/aCs9YzxlP2Y6LWY6aCs9YTxjP2Y6LWYpfXJldHVybiBofWY9MD09PXByWzBdfHwxPT09cHJbMF0/LjU6MTtyZXR1cm4gVGEodCxpLG8scHJbMF0pPHI/MDphPGU/ZjotZn1mdW5jdGlvbiB5cih0LGUsaSxuLG8sYSxyLHMpe2lmKGk8KHMtPWUpfHxzPC1pKXJldHVybiAwO3ZhciBsPU1hdGguc3FydChpKmktcypzKTtwclswXT0tbCxwclsxXT1sO3ZhciB1PU1hdGguYWJzKG4tbyk7aWYodTwxZS00KXJldHVybiAwO2lmKHUlZHI8MWUtNCl7bz1kcjt2YXIgaD1hPzE6LTE7cmV0dXJuIHI+PXByW249MF0rdCYmcjw9cHJbMV0rdD9oOjB9aWYoYSl7bD1uO249c3Iobyksbz1zcihsKX1lbHNlIG49c3Iobiksbz1zcihvKTtvPG4mJihvKz1kcik7Zm9yKHZhciBjPTAsZD0wO2Q8MjtkKyspe3ZhciBmPXByW2RdO2lmKHI8Zit0KXt2YXIgcD1NYXRoLmF0YW4yKHMsZik7aD1hPzE6LTE7cDwwJiYocD1kcitwKSwobjw9cCYmcDw9b3x8bjw9cCtkciYmcCtkcjw9bykmJihwPk1hdGguUEkvMiYmcDwxLjUqTWF0aC5QSSYmKGg9LWgpLGMrPWgpfX1yZXR1cm4gY31mdW5jdGlvbiB4cih0LGUsaSxuLG8pe2Zvcih2YXIgYT0wLHI9MCxzPTAsbD0wLHU9MCxoPTA7aDx0Lmxlbmd0aDspe3ZhciBjPXRbaCsrXTtzd2l0Y2goYz09PWNyLk0mJjE8aCYmKGl8fChhKz1ocihyLHMsbCx1LG4sbykpKSwxPT09aCYmKGw9cj10W2hdLHU9cz10W2grMV0pLGMpe2Nhc2UgY3IuTTpyPWw9dFtoKytdLHM9dT10W2grK107YnJlYWs7Y2FzZSBjci5MOmlmKGkpe2lmKG5yKHIscyx0W2hdLHRbaCsxXSxlLG4sbykpcmV0dXJuITB9ZWxzZSBhKz1ocihyLHMsdFtoXSx0W2grMV0sbixvKXx8MDtyPXRbaCsrXSxzPXRbaCsrXTticmVhaztjYXNlIGNyLkM6aWYoaSl7aWYob3IocixzLHRbaCsrXSx0W2grK10sdFtoKytdLHRbaCsrXSx0W2hdLHRbaCsxXSxlLG4sbykpcmV0dXJuITB9ZWxzZSBhKz1tcihyLHMsdFtoKytdLHRbaCsrXSx0W2grK10sdFtoKytdLHRbaF0sdFtoKzFdLG4sbyl8fDA7cj10W2grK10scz10W2grK107YnJlYWs7Y2FzZSBjci5ROmlmKGkpe2lmKGFyKHIscyx0W2grK10sdFtoKytdLHRbaF0sdFtoKzFdLGUsbixvKSlyZXR1cm4hMH1lbHNlIGErPXZyKHIscyx0W2grK10sdFtoKytdLHRbaF0sdFtoKzFdLG4sbyl8fDA7cj10W2grK10scz10W2grK107YnJlYWs7Y2FzZSBjci5BOnZhciBkPXRbaCsrXSxmPXRbaCsrXSxwPXRbaCsrXSxnPXRbaCsrXSxtPXRbaCsrXSx2PXRbaCsrXTtoKz0xO3ZhciB5PTEtdFtoKytdLHg9TWF0aC5jb3MobSkqcCtkLF89TWF0aC5zaW4obSkqZytmOzE8aD9hKz1ocihyLHMseCxfLG4sbyk6KGw9eCx1PV8pO3ZhciB3PShuLWQpKmcvcCtkO2lmKGkpe2lmKHVyKGQsZixnLG0sbSt2LHksZSx3LG8pKXJldHVybiEwfWVsc2UgYSs9eXIoZCxmLGcsbSxtK3YseSx3LG8pO3I9TWF0aC5jb3MobSt2KSpwK2Qscz1NYXRoLnNpbihtK3YpKmcrZjticmVhaztjYXNlIGNyLlI6bD1yPXRbaCsrXSx1PXM9dFtoKytdO3g9bCt0W2grK10sXz11K3RbaCsrXTtpZihpKXtpZihucihsLHUseCx1LGUsbixvKXx8bnIoeCx1LHgsXyxlLG4sbyl8fG5yKHgsXyxsLF8sZSxuLG8pfHxucihsLF8sbCx1LGUsbixvKSlyZXR1cm4hMH1lbHNlIGErPWhyKHgsdSx4LF8sbixvKSxhKz1ocihsLF8sbCx1LG4sbyk7YnJlYWs7Y2FzZSBjci5aOmlmKGkpe2lmKG5yKHIscyxsLHUsZSxuLG8pKXJldHVybiEwfWVsc2UgYSs9aHIocixzLGwsdSxuLG8pO3I9bCxzPXV9fXJldHVybiBpfHxmdW5jdGlvbih0LGUpe3JldHVybiBNYXRoLmFicyh0LWUpPGZyfShzLHUpfHwoYSs9aHIocixzLGwsdSxuLG8pfHwwKSwwIT09YX12YXIgX3I9WWkucHJvdG90eXBlLmdldENhbnZhc1BhdHRlcm4sd3I9TWF0aC5hYnMsYnI9bmV3IGlyKCEwKTtmdW5jdGlvbiBTcih0KXtqbi5jYWxsKHRoaXMsdCksdGhpcy5wYXRoPW51bGx9U3IucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpTcix0eXBlOiJwYXRoIixfX2RpcnR5UGF0aDohMCxzdHJva2VDb250YWluVGhyZXNob2xkOjUsc2VnbWVudElnbm9yZVRocmVzaG9sZDowLHN1YlBpeGVsT3B0aW1pemU6ITEsYnJ1c2g6ZnVuY3Rpb24odCxlKXt2YXIgaSxuPXRoaXMuc3R5bGUsbz10aGlzLnBhdGh8fGJyLGE9bi5oYXNTdHJva2UoKSxyPW4uaGFzRmlsbCgpLHM9bi5maWxsLGw9bi5zdHJva2UsdT1yJiYhIXMuY29sb3JTdG9wcyxoPWEmJiEhbC5jb2xvclN0b3BzLGM9ciYmISFzLmltYWdlLGQ9YSYmISFsLmltYWdlO24uYmluZCh0LHRoaXMsZSksdGhpcy5zZXRUcmFuc2Zvcm0odCksdGhpcy5fX2RpcnR5JiYodSYmKGk9aXx8dGhpcy5nZXRCb3VuZGluZ1JlY3QoKSx0aGlzLl9maWxsR3JhZGllbnQ9bi5nZXRHcmFkaWVudCh0LHMsaSkpLGgmJihpPWl8fHRoaXMuZ2V0Qm91bmRpbmdSZWN0KCksdGhpcy5fc3Ryb2tlR3JhZGllbnQ9bi5nZXRHcmFkaWVudCh0LGwsaSkpKTt1P3QuZmlsbFN0eWxlPXRoaXMuX2ZpbGxHcmFkaWVudDpjJiYodC5maWxsU3R5bGU9X3IuY2FsbChzLHQpKSxoP3Quc3Ryb2tlU3R5bGU9dGhpcy5fc3Ryb2tlR3JhZGllbnQ6ZCYmKHQuc3Ryb2tlU3R5bGU9X3IuY2FsbChsLHQpKTt2YXIgZj1uLmxpbmVEYXNoLHA9bi5saW5lRGFzaE9mZnNldCxnPSEhdC5zZXRMaW5lRGFzaCxtPXRoaXMuZ2V0R2xvYmFsU2NhbGUoKTtpZihvLnNldFNjYWxlKG1bMF0sbVsxXSx0aGlzLnNlZ21lbnRJZ25vcmVUaHJlc2hvbGQpLHRoaXMuX19kaXJ0eVBhdGh8fGYmJiFnJiZhPyhvLmJlZ2luUGF0aCh0KSxmJiYhZyYmKG8uc2V0TGluZURhc2goZiksby5zZXRMaW5lRGFzaE9mZnNldChwKSksdGhpcy5idWlsZFBhdGgobyx0aGlzLnNoYXBlLCExKSx0aGlzLnBhdGgmJih0aGlzLl9fZGlydHlQYXRoPSExKSk6KHQuYmVnaW5QYXRoKCksdGhpcy5wYXRoLnJlYnVpbGRQYXRoKHQpKSxyKWlmKG51bGwhPW4uZmlsbE9wYWNpdHkpe3ZhciB2PXQuZ2xvYmFsQWxwaGE7dC5nbG9iYWxBbHBoYT1uLmZpbGxPcGFjaXR5Km4ub3BhY2l0eSxvLmZpbGwodCksdC5nbG9iYWxBbHBoYT12fWVsc2Ugby5maWxsKHQpO2lmKGYmJmcmJih0LnNldExpbmVEYXNoKGYpLHQubGluZURhc2hPZmZzZXQ9cCksYSlpZihudWxsIT1uLnN0cm9rZU9wYWNpdHkpe3Y9dC5nbG9iYWxBbHBoYTt0Lmdsb2JhbEFscGhhPW4uc3Ryb2tlT3BhY2l0eSpuLm9wYWNpdHksby5zdHJva2UodCksdC5nbG9iYWxBbHBoYT12fWVsc2Ugby5zdHJva2UodCk7ZiYmZyYmdC5zZXRMaW5lRGFzaChbXSksbnVsbCE9bi50ZXh0JiYodGhpcy5yZXN0b3JlVHJhbnNmb3JtKHQpLHRoaXMuZHJhd1JlY3RUZXh0KHQsdGhpcy5nZXRCb3VuZGluZ1JlY3QoKSkpfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlLGkpe30sY3JlYXRlUGF0aFByb3h5OmZ1bmN0aW9uKCl7dGhpcy5wYXRoPW5ldyBpcn0sZ2V0Qm91bmRpbmdSZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcmVjdCxlPXRoaXMuc3R5bGUsaT0hdDtpZihpKXt2YXIgbj10aGlzLnBhdGg7bj1ufHwodGhpcy5wYXRoPW5ldyBpciksdGhpcy5fX2RpcnR5UGF0aCYmKG4uYmVnaW5QYXRoKCksdGhpcy5idWlsZFBhdGgobix0aGlzLnNoYXBlLCExKSksdD1uLmdldEJvdW5kaW5nUmVjdCgpfWlmKHRoaXMuX3JlY3Q9dCxlLmhhc1N0cm9rZSgpKXt2YXIgbz10aGlzLl9yZWN0V2l0aFN0cm9rZXx8KHRoaXMuX3JlY3RXaXRoU3Ryb2tlPXQuY2xvbmUoKSk7aWYodGhpcy5fX2RpcnR5fHxpKXtvLmNvcHkodCk7dmFyIGE9ZS5saW5lV2lkdGgscj1lLnN0cm9rZU5vU2NhbGU/dGhpcy5nZXRMaW5lU2NhbGUoKToxO2UuaGFzRmlsbCgpfHwoYT1NYXRoLm1heChhLHRoaXMuc3Ryb2tlQ29udGFpblRocmVzaG9sZHx8NCkpLDFlLTEwPHImJihvLndpZHRoKz1hL3Isby5oZWlnaHQrPWEvcixvLngtPWEvci8yLG8ueS09YS9yLzIpfXJldHVybiBvfXJldHVybiB0fSxjb250YWluOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy50cmFuc2Zvcm1Db29yZFRvTG9jYWwodCxlKSxuPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCksbz10aGlzLnN0eWxlO2lmKHQ9aVswXSxlPWlbMV0sbi5jb250YWluKHQsZSkpe3ZhciBhPXRoaXMucGF0aC5kYXRhO2lmKG8uaGFzU3Ryb2tlKCkpe3ZhciByPW8ubGluZVdpZHRoLHM9by5zdHJva2VOb1NjYWxlP3RoaXMuZ2V0TGluZVNjYWxlKCk6MTtpZigxZS0xMDxzJiYoby5oYXNGaWxsKCl8fChyPU1hdGgubWF4KHIsdGhpcy5zdHJva2VDb250YWluVGhyZXNob2xkKSksZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIHhyKHQsZSwhMCxpLG4pfShhLHIvcyx0LGUpKSlyZXR1cm4hMH1pZihvLmhhc0ZpbGwoKSlyZXR1cm4gZnVuY3Rpb24odCxlLGkpe3JldHVybiB4cih0LDAsITEsZSxpKX0oYSx0LGUpfXJldHVybiExfSxkaXJ0eTpmdW5jdGlvbih0KXtudWxsPT10JiYodD0hMCksdCYmKHRoaXMuX19kaXJ0eVBhdGg9dCx0aGlzLl9yZWN0PW51bGwpLHRoaXMuX19kaXJ0eT10aGlzLl9fZGlydHlUZXh0PSEwLHRoaXMuX196ciYmdGhpcy5fX3pyLnJlZnJlc2goKSx0aGlzLl9fY2xpcFRhcmdldCYmdGhpcy5fX2NsaXBUYXJnZXQuZGlydHkoKX0sYW5pbWF0ZVNoYXBlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFuaW1hdGUoInNoYXBlIix0KX0sYXR0cktWOmZ1bmN0aW9uKHQsZSl7InNoYXBlIj09PXQ/KHRoaXMuc2V0U2hhcGUoZSksdGhpcy5fX2RpcnR5UGF0aD0hMCx0aGlzLl9yZWN0PW51bGwpOmpuLnByb3RvdHlwZS5hdHRyS1YuY2FsbCh0aGlzLHQsZSl9LHNldFNoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5zaGFwZTtpZihpKXtpZihSKHQpKWZvcih2YXIgbiBpbiB0KXQuaGFzT3duUHJvcGVydHkobikmJihpW25dPXRbbl0pO2Vsc2UgaVt0XT1lO3RoaXMuZGlydHkoITApfXJldHVybiB0aGlzfSxnZXRMaW5lU2NhbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnRyYW5zZm9ybTtyZXR1cm4gdCYmMWUtMTA8d3IodFswXS0xKSYmMWUtMTA8d3IodFszXS0xKT9NYXRoLnNxcnQod3IodFswXSp0WzNdLXRbMl0qdFsxXSkpOjF9fSxTci5leHRlbmQ9ZnVuY3Rpb24obyl7ZnVuY3Rpb24gdCh0KXtTci5jYWxsKHRoaXMsdCksby5zdHlsZSYmdGhpcy5zdHlsZS5leHRlbmRGcm9tKG8uc3R5bGUsITEpO3ZhciBlPW8uc2hhcGU7aWYoZSl7dGhpcy5zaGFwZT10aGlzLnNoYXBlfHx7fTt2YXIgaT10aGlzLnNoYXBlO2Zvcih2YXIgbiBpbiBlKSFpLmhhc093blByb3BlcnR5KG4pJiZlLmhhc093blByb3BlcnR5KG4pJiYoaVtuXT1lW25dKX1vLmluaXQmJm8uaW5pdC5jYWxsKHRoaXMsdCl9Zm9yKHZhciBlIGluIHcodCxTciksbykic3R5bGUiIT09ZSYmInNoYXBlIiE9PWUmJih0LnByb3RvdHlwZVtlXT1vW2VdKTtyZXR1cm4gdH0sdyhTcixqbik7ZnVuY3Rpb24gTXIodCl7cmV0dXJuIE1hdGguc3FydCh0WzBdKnRbMF0rdFsxXSp0WzFdKX12YXIgSXI9aXIuQ01ELFRyPVtbXSxbXSxbXV0sQXI9TWF0aC5zcXJ0LERyPU1hdGguYXRhbjIsQ3I9ZnVuY3Rpb24odCxlKXt2YXIgaSxuLG8sYSxyLHM9dC5kYXRhLGw9SXIuTSx1PUlyLkMsaD1Jci5MLGM9SXIuUixkPUlyLkEsZj1Jci5RO2ZvcihhPW89MDtvPHMubGVuZ3RoOyl7c3dpdGNoKGk9c1tvKytdLGE9byxuPTAsaSl7Y2FzZSBsOmNhc2UgaDpuPTE7YnJlYWs7Y2FzZSB1Om49MzticmVhaztjYXNlIGY6bj0yO2JyZWFrO2Nhc2UgZDp2YXIgcD1lWzRdLGc9ZVs1XSxtPUFyKGVbMF0qZVswXStlWzFdKmVbMV0pLHY9QXIoZVsyXSplWzJdK2VbM10qZVszXSkseT1EcigtZVsxXS92LGVbMF0vbSk7c1tvXSo9bSxzW28rK10rPXAsc1tvXSo9dixzW28rK10rPWcsc1tvKytdKj1tLHNbbysrXSo9dixzW28rK10rPXksc1tvKytdKz15LGE9bys9MjticmVhaztjYXNlIGM6eFswXT1zW28rK10seFsxXT1zW28rK10sYnQoeCx4LGUpLHNbYSsrXT14WzBdLHNbYSsrXT14WzFdLHhbMF0rPXNbbysrXSx4WzFdKz1zW28rK10sYnQoeCx4LGUpLHNbYSsrXT14WzBdLHNbYSsrXT14WzFdfWZvcihyPTA7cjxuO3IrKyl7dmFyIHg7KHg9VHJbcl0pWzBdPXNbbysrXSx4WzFdPXNbbysrXSxidCh4LHgsZSksc1thKytdPXhbMF0sc1thKytdPXhbMV19fX0sTHI9TWF0aC5zcXJ0LGtyPU1hdGguc2luLFByPU1hdGguY29zLE5yPU1hdGguUEksT3I9ZnVuY3Rpb24odCxlKXtyZXR1cm4odFswXSplWzBdK3RbMV0qZVsxXSkvKE1yKHQpKk1yKGUpKX0sRXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4odFswXSplWzFdPHRbMV0qZVswXT8tMToxKSpNYXRoLmFjb3MoT3IodCxlKSl9O2Z1bmN0aW9uIHpyKHQsZSxpLG4sbyxhLHIscyxsLHUsaCl7dmFyIGM9bCooTnIvMTgwKSxkPVByKGMpKih0LWkpLzIra3IoYykqKGUtbikvMixmPS0xKmtyKGMpKih0LWkpLzIrUHIoYykqKGUtbikvMixwPWQqZC8ocipyKStmKmYvKHMqcyk7MTxwJiYocio9THIocCkscyo9THIocCkpO3ZhciBnPShvPT09YT8tMToxKSpMcigocipyKihzKnMpLXIqciooZipmKS1zKnMqKGQqZCkpLyhyKnIqKGYqZikrcypzKihkKmQpKSl8fDAsbT1nKnIqZi9zLHY9ZyotcypkL3IseT0odCtpKS8yK1ByKGMpKm0ta3IoYykqdix4PShlK24pLzIra3IoYykqbStQcihjKSp2LF89RXIoWzEsMF0sWyhkLW0pL3IsKGYtdikvc10pLHc9WyhkLW0pL3IsKGYtdikvc10sYj1bKC0xKmQtbSkvciwoLTEqZi12KS9zXSxTPUVyKHcsYik7T3IodyxiKTw9LTEmJihTPU5yKSwxPD1Pcih3LGIpJiYoUz0wKSwwPT09YSYmMDxTJiYoUy09MipOciksMT09PWEmJlM8MCYmKFMrPTIqTnIpLGguYWRkRGF0YSh1LHkseCxyLHMsXyxTLGMsYSl9dmFyIFJyPS8oW21sdmh6Y3F0c2FdKShbXm1sdmh6Y3F0c2FdKikvZ2ksQnI9Ly0/KFswLTldKlwuKT9bMC05XSsoW2VFXS0/WzAtOV0rKT8vZztmdW5jdGlvbiBWcih0LGUpe3ZhciBpPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiBuZXcgaXI7Zm9yKHZhciBlLGk9MCxuPTAsbz1pLGE9bixyPW5ldyBpcixzPWlyLkNNRCxsPXQubWF0Y2goUnIpLHU9MDt1PGwubGVuZ3RoO3UrKyl7Zm9yKHZhciBoLGM9bFt1XSxkPWMuY2hhckF0KDApLGY9Yy5tYXRjaChCcil8fFtdLHA9Zi5sZW5ndGgsZz0wO2c8cDtnKyspZltnXT1wYXJzZUZsb2F0KGZbZ10pO2Zvcih2YXIgbT0wO208cDspe3ZhciB2LHkseCxfLHcsYixTLE09aSxJPW47c3dpdGNoKGQpe2Nhc2UibCI6aSs9ZlttKytdLG4rPWZbbSsrXSxoPXMuTCxyLmFkZERhdGEoaCxpLG4pO2JyZWFrO2Nhc2UiTCI6aT1mW20rK10sbj1mW20rK10saD1zLkwsci5hZGREYXRhKGgsaSxuKTticmVhaztjYXNlIm0iOmkrPWZbbSsrXSxuKz1mW20rK10saD1zLk0sci5hZGREYXRhKGgsaSxuKSxvPWksYT1uLGQ9ImwiO2JyZWFrO2Nhc2UiTSI6aT1mW20rK10sbj1mW20rK10saD1zLk0sci5hZGREYXRhKGgsaSxuKSxvPWksYT1uLGQ9IkwiO2JyZWFrO2Nhc2UiaCI6aSs9ZlttKytdLGg9cy5MLHIuYWRkRGF0YShoLGksbik7YnJlYWs7Y2FzZSJIIjppPWZbbSsrXSxoPXMuTCxyLmFkZERhdGEoaCxpLG4pO2JyZWFrO2Nhc2UidiI6bis9ZlttKytdLGg9cy5MLHIuYWRkRGF0YShoLGksbik7YnJlYWs7Y2FzZSJWIjpuPWZbbSsrXSxoPXMuTCxyLmFkZERhdGEoaCxpLG4pO2JyZWFrO2Nhc2UiQyI6aD1zLkMsci5hZGREYXRhKGgsZlttKytdLGZbbSsrXSxmW20rK10sZlttKytdLGZbbSsrXSxmW20rK10pLGk9ZlttLTJdLG49ZlttLTFdO2JyZWFrO2Nhc2UiYyI6aD1zLkMsci5hZGREYXRhKGgsZlttKytdK2ksZlttKytdK24sZlttKytdK2ksZlttKytdK24sZlttKytdK2ksZlttKytdK24pLGkrPWZbbS0yXSxuKz1mW20tMV07YnJlYWs7Y2FzZSJTIjp2PWkseT1uO3ZhciBUPXIubGVuKCksQT1yLmRhdGE7ZT09PXMuQyYmKHYrPWktQVtULTRdLHkrPW4tQVtULTNdKSxoPXMuQyxNPWZbbSsrXSxJPWZbbSsrXSxpPWZbbSsrXSxuPWZbbSsrXSxyLmFkZERhdGEoaCx2LHksTSxJLGksbik7YnJlYWs7Y2FzZSJzIjp2PWkseT1uO1Q9ci5sZW4oKSxBPXIuZGF0YTtlPT09cy5DJiYodis9aS1BW1QtNF0seSs9bi1BW1QtM10pLGg9cy5DLE09aStmW20rK10sST1uK2ZbbSsrXSxpKz1mW20rK10sbis9ZlttKytdLHIuYWRkRGF0YShoLHYseSxNLEksaSxuKTticmVhaztjYXNlIlEiOk09ZlttKytdLEk9ZlttKytdLGk9ZlttKytdLG49ZlttKytdLGg9cy5RLHIuYWRkRGF0YShoLE0sSSxpLG4pO2JyZWFrO2Nhc2UicSI6TT1mW20rK10raSxJPWZbbSsrXStuLGkrPWZbbSsrXSxuKz1mW20rK10saD1zLlEsci5hZGREYXRhKGgsTSxJLGksbik7YnJlYWs7Y2FzZSJUIjp2PWkseT1uO1Q9ci5sZW4oKSxBPXIuZGF0YTtlPT09cy5RJiYodis9aS1BW1QtNF0seSs9bi1BW1QtM10pLGk9ZlttKytdLG49ZlttKytdLGg9cy5RLHIuYWRkRGF0YShoLHYseSxpLG4pO2JyZWFrO2Nhc2UidCI6dj1pLHk9bjtUPXIubGVuKCksQT1yLmRhdGE7ZT09PXMuUSYmKHYrPWktQVtULTRdLHkrPW4tQVtULTNdKSxpKz1mW20rK10sbis9ZlttKytdLGg9cy5RLHIuYWRkRGF0YShoLHYseSxpLG4pO2JyZWFrO2Nhc2UiQSI6eD1mW20rK10sXz1mW20rK10sdz1mW20rK10sYj1mW20rK10sUz1mW20rK10senIoTT1pLEk9bixpPWZbbSsrXSxuPWZbbSsrXSxiLFMseCxfLHcsaD1zLkEscik7YnJlYWs7Y2FzZSJhIjp4PWZbbSsrXSxfPWZbbSsrXSx3PWZbbSsrXSxiPWZbbSsrXSxTPWZbbSsrXSx6cihNPWksST1uLGkrPWZbbSsrXSxuKz1mW20rK10sYixTLHgsXyx3LGg9cy5BLHIpfX0ieiIhPT1kJiYiWiIhPT1kfHwoaD1zLlosci5hZGREYXRhKGgpLGk9byxuPWEpLGU9aH1yZXR1cm4gci50b1N0YXRpYygpLHJ9KHQpO3JldHVybihlPWV8fHt9KS5idWlsZFBhdGg9ZnVuY3Rpb24odCl7aWYodC5zZXREYXRhKXt0LnNldERhdGEoaS5kYXRhKSwoZT10LmdldENvbnRleHQoKSkmJnQucmVidWlsZFBhdGgoZSl9ZWxzZXt2YXIgZT10O2kucmVidWlsZFBhdGgoZSl9fSxlLmFwcGx5VHJhbnNmb3JtPWZ1bmN0aW9uKHQpe0NyKGksdCksdGhpcy5kaXJ0eSghMCl9LGV9ZnVuY3Rpb24gR3IodCxlKXtyZXR1cm4gbmV3IFNyKFZyKHQsZSkpfXZhciBGcj1mdW5jdGlvbih0KXtqbi5jYWxsKHRoaXMsdCl9O0ZyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RnIsdHlwZToidGV4dCIsYnJ1c2g6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLnN0eWxlO3RoaXMuX19kaXJ0eSYma24oaSksaS5maWxsPWkuc3Ryb2tlPWkuc2hhZG93Qmx1cj1pLnNoYWRvd0NvbG9yPWkuc2hhZG93T2Zmc2V0WD1pLnNoYWRvd09mZnNldFk9bnVsbDt2YXIgbj1pLnRleHQ7bnVsbCE9biYmKG4rPSIiKSxVbihuLGkpPyh0aGlzLnNldFRyYW5zZm9ybSh0KSxObih0aGlzLHQsbixpLG51bGwsZSksdGhpcy5yZXN0b3JlVHJhbnNmb3JtKHQpKTp0Ll9fYXR0ckNhY2hlZEJ5PUJpLk5PTkV9LGdldEJvdW5kaW5nUmVjdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3R5bGU7aWYodGhpcy5fX2RpcnR5JiZrbih0KSwhdGhpcy5fcmVjdCl7dmFyIGU9dC50ZXh0O251bGwhPWU/ZSs9IiI6ZT0iIjt2YXIgaT1jbih0LnRleHQrIiIsdC5mb250LHQudGV4dEFsaWduLHQudGV4dFZlcnRpY2FsQWxpZ24sdC50ZXh0UGFkZGluZyx0LnRleHRMaW5lSGVpZ2h0LHQucmljaCk7aWYoaS54Kz10Lnh8fDAsaS55Kz10Lnl8fDAsRm4odC50ZXh0U3Ryb2tlLHQudGV4dFN0cm9rZVdpZHRoKSl7dmFyIG49dC50ZXh0U3Ryb2tlV2lkdGg7aS54LT1uLzIsaS55LT1uLzIsaS53aWR0aCs9bixpLmhlaWdodCs9bn10aGlzLl9yZWN0PWl9cmV0dXJuIHRoaXMuX3JlY3R9fSx3KEZyLGpuKTtmdW5jdGlvbiBXcihsKXtyZXR1cm4gdi5icm93c2VyLmllJiYxMTw9di5icm93c2VyLnZlcnNpb24/ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuX19jbGlwUGF0aHMsaT10aGlzLnN0eWxlO2lmKGUpZm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl0sYT1vJiZvLnNoYXBlLHI9byYmby50eXBlO2lmKGEmJigic2VjdG9yIj09PXImJmEuc3RhcnRBbmdsZT09PWEuZW5kQW5nbGV8fCJyZWN0Ij09PXImJighYS53aWR0aHx8IWEuaGVpZ2h0KSkpe2Zvcih2YXIgcz0wO3M8WnIubGVuZ3RoO3MrKylacltzXVsyXT1pW1pyW3NdWzBdXSxpW1pyW3NdWzBdXT1acltzXVsxXTt0PSEwO2JyZWFrfX1pZihsLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0KWZvcihzPTA7czxaci5sZW5ndGg7cysrKWlbWnJbc11bMF1dPVpyW3NdWzJdfTpsfXZhciBIcj1Tci5leHRlbmQoe3R5cGU6ImNpcmNsZSIsc2hhcGU6e2N4OjAsY3k6MCxyOjB9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUsaSl7aSYmdC5tb3ZlVG8oZS5jeCtlLnIsZS5jeSksdC5hcmMoZS5jeCxlLmN5LGUuciwwLDIqTWF0aC5QSSwhMCl9fSksWnI9W1sic2hhZG93Qmx1ciIsMF0sWyJzaGFkb3dDb2xvciIsIiMwMDAiXSxbInNoYWRvd09mZnNldFgiLDBdLFsic2hhZG93T2Zmc2V0WSIsMF1dLFVyPVNyLmV4dGVuZCh7dHlwZToic2VjdG9yIixzaGFwZTp7Y3g6MCxjeTowLHIwOjAscjowLHN0YXJ0QW5nbGU6MCxlbmRBbmdsZToyKk1hdGguUEksY2xvY2t3aXNlOiEwfSxicnVzaDpXcihTci5wcm90b3R5cGUuYnJ1c2gpLGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUuY3gsbj1lLmN5LG89TWF0aC5tYXgoZS5yMHx8MCwwKSxhPU1hdGgubWF4KGUuciwwKSxyPWUuc3RhcnRBbmdsZSxzPWUuZW5kQW5nbGUsbD1lLmNsb2Nrd2lzZSx1PU1hdGguY29zKHIpLGg9TWF0aC5zaW4ocik7dC5tb3ZlVG8odSpvK2ksaCpvK24pLHQubGluZVRvKHUqYStpLGgqYStuKSx0LmFyYyhpLG4sYSxyLHMsIWwpLHQubGluZVRvKE1hdGguY29zKHMpKm8raSxNYXRoLnNpbihzKSpvK24pLDAhPT1vJiZ0LmFyYyhpLG4sbyxzLHIsbCksdC5jbG9zZVBhdGgoKX19KSxYcj1Tci5leHRlbmQoe3R5cGU6InJpbmciLHNoYXBlOntjeDowLGN5OjAscjowLHIwOjB9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUuY3gsbj1lLmN5LG89MipNYXRoLlBJO3QubW92ZVRvKGkrZS5yLG4pLHQuYXJjKGksbixlLnIsMCxvLCExKSx0Lm1vdmVUbyhpK2UucjAsbiksdC5hcmMoaSxuLGUucjAsMCxvLCEwKX19KTtmdW5jdGlvbiBZcih0LGUsaSxuLG8sYSxyKXt2YXIgcz0uNSooaS10KSxsPS41KihuLWUpO3JldHVybigyKihlLWkpK3MrbCkqcisoLTMqKGUtaSktMipzLWwpKmErcypvK2V9ZnVuY3Rpb24ganIodCxlLGkpe3ZhciBuPWUucG9pbnRzLG89ZS5zbW9vdGg7aWYobiYmMjw9bi5sZW5ndGgpe2lmKG8mJiJzcGxpbmUiIT09byl7dmFyIGE9ZnVuY3Rpb24odCxlLGksbil7dmFyIG8sYSxyLHMsbD1bXSx1PVtdLGg9W10sYz1bXTtpZihuKXtyPVsxLzAsMS8wXSxzPVstMS8wLC0xLzBdO2Zvcih2YXIgZD0wLGY9dC5sZW5ndGg7ZDxmO2QrKylTdChyLHIsdFtkXSksTXQocyxzLHRbZF0pO1N0KHIscixuWzBdKSxNdChzLHMsblsxXSl9Zm9yKGQ9MCxmPXQubGVuZ3RoO2Q8ZjtkKyspe3ZhciBwPXRbZF07aWYoaSlvPXRbZD9kLTE6Zi0xXSxhPXRbKGQrMSklZl07ZWxzZXtpZigwPT09ZHx8ZD09PWYtMSl7bC5wdXNoKHJ0KHRbZF0pKTtjb250aW51ZX1vPXRbZC0xXSxhPXRbZCsxXX1odCh1LGEsbyksZ3QodSx1LGUpO3ZhciBnPXZ0KHAsbyksbT12dChwLGEpLHY9ZyttOzAhPT12JiYoZy89dixtLz12KSxndChoLHUsLWcpLGd0KGMsdSxtKTt2YXIgeT1sdChbXSxwLGgpLHg9bHQoW10scCxjKTtuJiYoTXQoeSx5LHIpLFN0KHkseSxzKSxNdCh4LHgsciksU3QoeCx4LHMpKSxsLnB1c2goeSksbC5wdXNoKHgpfXJldHVybiBpJiZsLnB1c2gobC5zaGlmdCgpKSxsfShuLG8saSxlLnNtb290aENvbnN0cmFpbnQpO3QubW92ZVRvKG5bMF1bMF0sblswXVsxXSk7Zm9yKHZhciByPW4ubGVuZ3RoLHM9MDtzPChpP3I6ci0xKTtzKyspe3ZhciBsPWFbMipzXSx1PWFbMipzKzFdLGg9blsocysxKSVyXTt0LmJlemllckN1cnZlVG8obFswXSxsWzFdLHVbMF0sdVsxXSxoWzBdLGhbMV0pfX1lbHNleyJzcGxpbmUiPT09byYmKG49ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dC5sZW5ndGgsbj1bXSxvPTAsYT0xO2E8aTthKyspbys9dnQodFthLTFdLHRbYV0pO3ZhciByPW8vMjtyPXI8aT9pOnI7Zm9yKGE9MDthPHI7YSsrKXt2YXIgcyxsLHUsaD1hLyhyLTEpKihlP2k6aS0xKSxjPU1hdGguZmxvb3IoaCksZD1oLWMsZj10W2MlaV07dT1lPyhzPXRbKGMtMStpKSVpXSxsPXRbKGMrMSklaV0sdFsoYysyKSVpXSk6KHM9dFswPT09Yz9jOmMtMV0sbD10W2ktMjxjP2ktMTpjKzFdLHRbaS0zPGM/aS0xOmMrMl0pO3ZhciBwPWQqZCxnPWQqcDtuLnB1c2goW1lyKHNbMF0sZlswXSxsWzBdLHVbMF0sZCxwLGcpLFlyKHNbMV0sZlsxXSxsWzFdLHVbMV0sZCxwLGcpXSl9cmV0dXJuIG59KG4saSkpLHQubW92ZVRvKG5bMF1bMF0sblswXVsxXSk7cz0xO2Zvcih2YXIgYz1uLmxlbmd0aDtzPGM7cysrKXQubGluZVRvKG5bc11bMF0sbltzXVsxXSl9aSYmdC5jbG9zZVBhdGgoKX19dmFyIHFyPVNyLmV4dGVuZCh7dHlwZToicG9seWdvbiIsc2hhcGU6e3BvaW50czpudWxsLHNtb290aDohMSxzbW9vdGhDb25zdHJhaW50Om51bGx9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe2pyKHQsZSwhMCl9fSksS3I9U3IuZXh0ZW5kKHt0eXBlOiJwb2x5bGluZSIsc2hhcGU6e3BvaW50czpudWxsLHNtb290aDohMSxzbW9vdGhDb25zdHJhaW50Om51bGx9LHN0eWxlOntzdHJva2U6IiMwMDAiLGZpbGw6bnVsbH0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7anIodCxlLCExKX19KSwkcj1NYXRoLnJvdW5kO2Z1bmN0aW9uIEpyKHQsZSxpKXt2YXIgbj1pJiZpLmxpbmVXaWR0aDtpZihlJiZuKXt2YXIgbz1lLngxLGE9ZS54MixyPWUueTEscz1lLnkyOyRyKDIqbyk9PT0kcigyKmEpP3QueDE9dC54Mj10cyhvLG4sITApOih0LngxPW8sdC54Mj1hKSwkcigyKnIpPT09JHIoMipzKT90LnkxPXQueTI9dHMocixuLCEwKToodC55MT1yLHQueTI9cyl9fWZ1bmN0aW9uIFFyKHQsZSxpKXt2YXIgbj1pJiZpLmxpbmVXaWR0aDtpZihlJiZuKXt2YXIgbz1lLngsYT1lLnkscj1lLndpZHRoLHM9ZS5oZWlnaHQ7dC54PXRzKG8sbiwhMCksdC55PXRzKGEsbiwhMCksdC53aWR0aD1NYXRoLm1heCh0cyhvK3IsbiwhMSktdC54LDA9PT1yPzA6MSksdC5oZWlnaHQ9TWF0aC5tYXgodHMoYStzLG4sITEpLXQueSwwPT09cz8wOjEpfX1mdW5jdGlvbiB0cyh0LGUsaSl7dmFyIG49JHIoMip0KTtyZXR1cm4obiskcihlKSklMj09MD9uLzI6KG4rKGk/MTotMSkpLzJ9dmFyIGVzPXt9LGlzPVNyLmV4dGVuZCh7dHlwZToicmVjdCIsc2hhcGU6e3I6MCx4OjAseTowLHdpZHRoOjAsaGVpZ2h0OjB9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpLG4sbyxhO3RoaXMuc3ViUGl4ZWxPcHRpbWl6ZT8oUXIoZXMsZSx0aGlzLnN0eWxlKSxpPWVzLngsbj1lcy55LG89ZXMud2lkdGgsYT1lcy5oZWlnaHQsZXMucj1lLnIsZT1lcyk6KGk9ZS54LG49ZS55LG89ZS53aWR0aCxhPWUuaGVpZ2h0KSxlLnI/TW4odCxlKTp0LnJlY3QoaSxuLG8sYSksdC5jbG9zZVBhdGgoKX19KSxucz17fSxvcz1Tci5leHRlbmQoe3R5cGU6ImxpbmUiLHNoYXBlOnt4MTowLHkxOjAseDI6MCx5MjowLHBlcmNlbnQ6MX0sc3R5bGU6e3N0cm9rZToiIzAwMCIsZmlsbDpudWxsfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaSxuLG8sYTthPXRoaXMuc3ViUGl4ZWxPcHRpbWl6ZT8oSnIobnMsZSx0aGlzLnN0eWxlKSxpPW5zLngxLG49bnMueTEsbz1ucy54Mixucy55Mik6KGk9ZS54MSxuPWUueTEsbz1lLngyLGUueTIpO3ZhciByPWUucGVyY2VudDswIT09ciYmKHQubW92ZVRvKGksbikscjwxJiYobz1pKigxLXIpK28qcixhPW4qKDEtcikrYSpyKSx0LmxpbmVUbyhvLGEpKX0scG9pbnRBdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnNoYXBlO3JldHVybltlLngxKigxLXQpK2UueDIqdCxlLnkxKigxLXQpK2UueTIqdF19fSksYXM9W107ZnVuY3Rpb24gcnModCxlLGkpe3ZhciBuPXQuY3B4MixvPXQuY3B5MjtyZXR1cm4gbnVsbD09PW58fG51bGw9PT1vP1soaT9TYTpiYSkodC54MSx0LmNweDEsdC5jcHgyLHQueDIsZSksKGk/U2E6YmEpKHQueTEsdC5jcHkxLHQuY3B5Mix0LnkyLGUpXTpbKGk/QWE6VGEpKHQueDEsdC5jcHgxLHQueDIsZSksKGk/QWE6VGEpKHQueTEsdC5jcHkxLHQueTIsZSldfWZ1bmN0aW9uIHNzKHQpe3RoaXMuY29sb3JTdG9wcz10fHxbXX12YXIgbHM9U3IuZXh0ZW5kKHt0eXBlOiJiZXppZXItY3VydmUiLHNoYXBlOnt4MTowLHkxOjAseDI6MCx5MjowLGNweDE6MCxjcHkxOjAscGVyY2VudDoxfSxzdHlsZTp7c3Ryb2tlOiIjMDAwIixmaWxsOm51bGx9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUueDEsbj1lLnkxLG89ZS54MixhPWUueTIscj1lLmNweDEscz1lLmNweTEsbD1lLmNweDIsdT1lLmNweTIsaD1lLnBlcmNlbnQ7MCE9PWgmJih0Lm1vdmVUbyhpLG4pLG51bGw9PWx8fG51bGw9PXU/KGg8MSYmKENhKGkscixvLGgsYXMpLHI9YXNbMV0sbz1hc1syXSxDYShuLHMsYSxoLGFzKSxzPWFzWzFdLGE9YXNbMl0pLHQucXVhZHJhdGljQ3VydmVUbyhyLHMsbyxhKSk6KGg8MSYmKElhKGkscixsLG8saCxhcykscj1hc1sxXSxsPWFzWzJdLG89YXNbM10sSWEobixzLHUsYSxoLGFzKSxzPWFzWzFdLHU9YXNbMl0sYT1hc1szXSksdC5iZXppZXJDdXJ2ZVRvKHIscyxsLHUsbyxhKSkpfSxwb2ludEF0OmZ1bmN0aW9uKHQpe3JldHVybiBycyh0aGlzLnNoYXBlLHQsITEpfSx0YW5nZW50QXQ6ZnVuY3Rpb24odCl7dmFyIGU9cnModGhpcy5zaGFwZSx0LCEwKTtyZXR1cm4gbXQoZSxlKX19KSx1cz1Tci5leHRlbmQoe3R5cGU6ImFyYyIsc2hhcGU6e2N4OjAsY3k6MCxyOjAsc3RhcnRBbmdsZTowLGVuZEFuZ2xlOjIqTWF0aC5QSSxjbG9ja3dpc2U6ITB9LHN0eWxlOntzdHJva2U6IiMwMDAiLGZpbGw6bnVsbH0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5jeCxuPWUuY3ksbz1NYXRoLm1heChlLnIsMCksYT1lLnN0YXJ0QW5nbGUscj1lLmVuZEFuZ2xlLHM9ZS5jbG9ja3dpc2UsbD1NYXRoLmNvcyhhKSx1PU1hdGguc2luKGEpO3QubW92ZVRvKGwqbytpLHUqbytuKSx0LmFyYyhpLG4sbyxhLHIsIXMpfX0pLGhzPVNyLmV4dGVuZCh7dHlwZToiY29tcG91bmQiLHNoYXBlOntwYXRoczpudWxsfSxfdXBkYXRlUGF0aERpcnR5OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX19kaXJ0eVBhdGgsZT10aGlzLnNoYXBlLnBhdGhzLGk9MDtpPGUubGVuZ3RoO2krKyl0PXR8fGVbaV0uX19kaXJ0eVBhdGg7dGhpcy5fX2RpcnR5UGF0aD10LHRoaXMuX19kaXJ0eT10aGlzLl9fZGlydHl8fHR9LGJlZm9yZUJydXNoOmZ1bmN0aW9uKCl7dGhpcy5fdXBkYXRlUGF0aERpcnR5KCk7Zm9yKHZhciB0PXRoaXMuc2hhcGUucGF0aHN8fFtdLGU9dGhpcy5nZXRHbG9iYWxTY2FsZSgpLGk9MDtpPHQubGVuZ3RoO2krKyl0W2ldLnBhdGh8fHRbaV0uY3JlYXRlUGF0aFByb3h5KCksdFtpXS5wYXRoLnNldFNjYWxlKGVbMF0sZVsxXSx0W2ldLnNlZ21lbnRJZ25vcmVUaHJlc2hvbGQpfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9ZS5wYXRoc3x8W10sbj0wO248aS5sZW5ndGg7bisrKWlbbl0uYnVpbGRQYXRoKHQsaVtuXS5zaGFwZSwhMCl9LGFmdGVyQnJ1c2g6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5zaGFwZS5wYXRoc3x8W10sZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0uX19kaXJ0eVBhdGg9ITF9LGdldEJvdW5kaW5nUmVjdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cGRhdGVQYXRoRGlydHkoKSxTci5wcm90b3R5cGUuZ2V0Qm91bmRpbmdSZWN0LmNhbGwodGhpcyl9fSk7c3MucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpzcyxhZGRDb2xvclN0b3A6ZnVuY3Rpb24odCxlKXt0aGlzLmNvbG9yU3RvcHMucHVzaCh7b2Zmc2V0OnQsY29sb3I6ZX0pfX07ZnVuY3Rpb24gY3ModCxlLGksbixvLGEpe3RoaXMueD1udWxsPT10PzA6dCx0aGlzLnk9bnVsbD09ZT8wOmUsdGhpcy54Mj1udWxsPT1pPzE6aSx0aGlzLnkyPW51bGw9PW4/MDpuLHRoaXMudHlwZT0ibGluZWFyIix0aGlzLmdsb2JhbD1hfHwhMSxzcy5jYWxsKHRoaXMsbyl9Y3MucHJvdG90eXBlPXtjb25zdHJ1Y3Rvcjpjc30sdyhjcyxzcyk7ZnVuY3Rpb24gZHModCxlLGksbixvKXt0aGlzLng9bnVsbD09dD8uNTp0LHRoaXMueT1udWxsPT1lPy41OmUsdGhpcy5yPW51bGw9PWk/LjU6aSx0aGlzLnR5cGU9InJhZGlhbCIsdGhpcy5nbG9iYWw9b3x8ITEsc3MuY2FsbCh0aGlzLG4pfWZ1bmN0aW9uIGZzKHQpe2puLmNhbGwodGhpcyx0KSx0aGlzLl9kaXNwbGF5YWJsZXM9W10sdGhpcy5fdGVtcG9yYXJ5RGlzcGxheWFibGVzPVtdLHRoaXMuX2N1cnNvcj0wLHRoaXMubm90Q2xlYXI9ITB9ZHMucHJvdG90eXBlPXtjb25zdHJ1Y3Rvcjpkc30sdyhkcyxzcyksZnMucHJvdG90eXBlLmluY3JlbWVudGFsPSEwLGZzLnByb3RvdHlwZS5jbGVhckRpc3BsYXlibGVzPWZ1bmN0aW9uKCl7dGhpcy5fZGlzcGxheWFibGVzPVtdLHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcz1bXSx0aGlzLl9jdXJzb3I9MCx0aGlzLmRpcnR5KCksdGhpcy5ub3RDbGVhcj0hMX0sZnMucHJvdG90eXBlLmFkZERpc3BsYXlhYmxlPWZ1bmN0aW9uKHQsZSl7ZT90aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXMucHVzaCh0KTp0aGlzLl9kaXNwbGF5YWJsZXMucHVzaCh0KSx0aGlzLmRpcnR5KCl9LGZzLnByb3RvdHlwZS5hZGREaXNwbGF5YWJsZXM9ZnVuY3Rpb24odCxlKXtlPWV8fCExO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXRoaXMuYWRkRGlzcGxheWFibGUodFtpXSxlKX0sZnMucHJvdG90eXBlLmVhY2hQZW5kaW5nRGlzcGxheWFibGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX2N1cnNvcjtlPHRoaXMuX2Rpc3BsYXlhYmxlcy5sZW5ndGg7ZSsrKXQmJnQodGhpcy5fZGlzcGxheWFibGVzW2VdKTtmb3IoZT0wO2U8dGhpcy5fdGVtcG9yYXJ5RGlzcGxheWFibGVzLmxlbmd0aDtlKyspdCYmdCh0aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXNbZV0pfSxmcy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy51cGRhdGVUcmFuc2Zvcm0oKTtmb3IodmFyIHQ9dGhpcy5fY3Vyc29yO3Q8dGhpcy5fZGlzcGxheWFibGVzLmxlbmd0aDt0KyspeyhlPXRoaXMuX2Rpc3BsYXlhYmxlc1t0XSkucGFyZW50PXRoaXMsZS51cGRhdGUoKSxlLnBhcmVudD1udWxsfWZvcih0PTA7dDx0aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXMubGVuZ3RoO3QrKyl7dmFyIGU7KGU9dGhpcy5fdGVtcG9yYXJ5RGlzcGxheWFibGVzW3RdKS5wYXJlbnQ9dGhpcyxlLnVwZGF0ZSgpLGUucGFyZW50PW51bGx9fSxmcy5wcm90b3R5cGUuYnJ1c2g9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dGhpcy5fY3Vyc29yO2k8dGhpcy5fZGlzcGxheWFibGVzLmxlbmd0aDtpKyspeyhuPXRoaXMuX2Rpc3BsYXlhYmxlc1tpXSkuYmVmb3JlQnJ1c2gmJm4uYmVmb3JlQnJ1c2godCksbi5icnVzaCh0LGk9PT10aGlzLl9jdXJzb3I/bnVsbDp0aGlzLl9kaXNwbGF5YWJsZXNbaS0xXSksbi5hZnRlckJydXNoJiZuLmFmdGVyQnJ1c2godCl9dGhpcy5fY3Vyc29yPWk7Zm9yKGk9MDtpPHRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlcy5sZW5ndGg7aSsrKXt2YXIgbjsobj10aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXNbaV0pLmJlZm9yZUJydXNoJiZuLmJlZm9yZUJydXNoKHQpLG4uYnJ1c2godCwwPT09aT9udWxsOnRoaXMuX3RlbXBvcmFyeURpc3BsYXlhYmxlc1tpLTFdKSxuLmFmdGVyQnJ1c2gmJm4uYWZ0ZXJCcnVzaCh0KX10aGlzLl90ZW1wb3JhcnlEaXNwbGF5YWJsZXM9W10sdGhpcy5ub3RDbGVhcj0hMH07dmFyIHBzPVtdO2ZzLnByb3RvdHlwZS5nZXRCb3VuZGluZ1JlY3Q9ZnVuY3Rpb24oKXtpZighdGhpcy5fcmVjdCl7Zm9yKHZhciB0PW5ldyBNaSgxLzAsMS8wLC0xLzAsLTEvMCksZT0wO2U8dGhpcy5fZGlzcGxheWFibGVzLmxlbmd0aDtlKyspe3ZhciBpPXRoaXMuX2Rpc3BsYXlhYmxlc1tlXSxuPWkuZ2V0Qm91bmRpbmdSZWN0KCkuY2xvbmUoKTtpLm5lZWRMb2NhbFRyYW5zZm9ybSgpJiZuLmFwcGx5VHJhbnNmb3JtKGkuZ2V0TG9jYWxUcmFuc2Zvcm0ocHMpKSx0LnVuaW9uKG4pfXRoaXMuX3JlY3Q9dH1yZXR1cm4gdGhpcy5fcmVjdH0sZnMucHJvdG90eXBlLmNvbnRhaW49ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLnRyYW5zZm9ybUNvb3JkVG9Mb2NhbCh0LGUpO2lmKHRoaXMuZ2V0Qm91bmRpbmdSZWN0KCkuY29udGFpbihpWzBdLGlbMV0pKWZvcih2YXIgbj0wO248dGhpcy5fZGlzcGxheWFibGVzLmxlbmd0aDtuKyspe2lmKHRoaXMuX2Rpc3BsYXlhYmxlc1tuXS5jb250YWluKHQsZSkpcmV0dXJuITB9cmV0dXJuITF9LHcoZnMsam4pO3ZhciBncz1NYXRoLm1heCxtcz1NYXRoLm1pbix2cz17fSx5cz0xLHhzPXtjb2xvcjoidGV4dEZpbGwiLHRleHRCb3JkZXJDb2xvcjoidGV4dFN0cm9rZSIsdGV4dEJvcmRlcldpZHRoOiJ0ZXh0U3Ryb2tlV2lkdGgifSxfcz0iZW1waGFzaXMiLHdzPSJub3JtYWwiLGJzPTEsU3M9e30sTXM9e307ZnVuY3Rpb24gSXModCl7cmV0dXJuIFNyLmV4dGVuZCh0KX1mdW5jdGlvbiBUcyh0LGUpe01zW3RdPWV9ZnVuY3Rpb24gQXModCl7aWYoTXMuaGFzT3duUHJvcGVydHkodCkpcmV0dXJuIE1zW3RdfWZ1bmN0aW9uIERzKHQsZSxpLG4pe3ZhciBvPUdyKHQsZSk7cmV0dXJuIGkmJigiY2VudGVyIj09PW4mJihpPUxzKGksby5nZXRCb3VuZGluZ1JlY3QoKSkpLFBzKG8saSkpLG99ZnVuY3Rpb24gQ3ModCxpLG4pe3ZhciBvPW5ldyBxbih7c3R5bGU6e2ltYWdlOnQseDppLngseTppLnksd2lkdGg6aS53aWR0aCxoZWlnaHQ6aS5oZWlnaHR9LG9ubG9hZDpmdW5jdGlvbih0KXtpZigiY2VudGVyIj09PW4pe3ZhciBlPXt3aWR0aDp0LndpZHRoLGhlaWdodDp0LmhlaWdodH07by5zZXRTdHlsZShMcyhpLGUpKX19fSk7cmV0dXJuIG99ZnVuY3Rpb24gTHModCxlKXt2YXIgaSxuPWUud2lkdGgvZS5oZWlnaHQsbz10LmhlaWdodCpuO3JldHVybiBpPW88PXQud2lkdGg/dC5oZWlnaHQ6KG89dC53aWR0aCkvbix7eDp0LngrdC53aWR0aC8yLW8vMix5OnQueSt0LmhlaWdodC8yLWkvMix3aWR0aDpvLGhlaWdodDppfX12YXIga3M9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9W10sbj10Lmxlbmd0aCxvPTA7bzxuO28rKyl7dmFyIGE9dFtvXTthLnBhdGh8fGEuY3JlYXRlUGF0aFByb3h5KCksYS5fX2RpcnR5UGF0aCYmYS5idWlsZFBhdGgoYS5wYXRoLGEuc2hhcGUsITApLGkucHVzaChhLnBhdGgpfXZhciByPW5ldyBTcihlKTtyZXR1cm4gci5jcmVhdGVQYXRoUHJveHkoKSxyLmJ1aWxkUGF0aD1mdW5jdGlvbih0KXt0LmFwcGVuZFBhdGgoaSk7dmFyIGU9dC5nZXRDb250ZXh0KCk7ZSYmdC5yZWJ1aWxkUGF0aChlKX0scn07ZnVuY3Rpb24gUHModCxlKXtpZih0LmFwcGx5VHJhbnNmb3JtKXt2YXIgaT10LmdldEJvdW5kaW5nUmVjdCgpLmNhbGN1bGF0ZVRyYW5zZm9ybShlKTt0LmFwcGx5VHJhbnNmb3JtKGkpfX12YXIgTnM9dHM7ZnVuY3Rpb24gT3ModCl7cmV0dXJuIG51bGwhPXQmJiJub25lIiE9PXR9dmFyIEVzPVEoKSx6cz0wO2Z1bmN0aW9uIFJzKHQpe3ZhciBlPXQuX19ob3ZlclN0bDtpZihlJiYhdC5fX2hpZ2hsaWdodGVkKXt2YXIgaT10Ll9fenIsbj10LnVzZUhvdmVyTGF5ZXImJmkmJiJjYW52YXMiPT09aS5wYWludGVyLnR5cGU7aWYodC5fX2hpZ2hsaWdodGVkPW4/ImxheWVyIjoicGxhaW4iLCEodC5pc0dyb3VwfHwhaSYmdC51c2VIb3ZlckxheWVyKSl7dmFyIG89dCxhPXQuc3R5bGU7biYmKGE9KG89aS5hZGRIb3Zlcih0KSkuc3R5bGUpLG9sKGEpLG58fGZ1bmN0aW9uKHQpe2lmKHQuX19ob3ZlclN0bERpcnR5KXt0Ll9faG92ZXJTdGxEaXJ0eT0hMTt2YXIgZT10Ll9faG92ZXJTdGw7aWYoZSl7dmFyIGk9dC5fX2NhY2hlZE5vcm1hbFN0bD17fTt0Ll9fY2FjaGVkTm9ybWFsWjI9dC56Mjt2YXIgbj10LnN0eWxlO2Zvcih2YXIgbyBpbiBlKW51bGwhPWVbb10mJihpW29dPW5bb10pO2kuZmlsbD1uLmZpbGwsaS5zdHJva2U9bi5zdHJva2V9ZWxzZSB0Ll9fY2FjaGVkTm9ybWFsU3RsPXQuX19jYWNoZWROb3JtYWxaMj1udWxsfX0obyksYS5leHRlbmRGcm9tKGUpLEJzKGEsZSwiZmlsbCIpLEJzKGEsZSwic3Ryb2tlIiksbmwoYSksbnx8KHQuZGlydHkoITEpLHQuejIrPXlzKX19fWZ1bmN0aW9uIEJzKHQsZSxpKXshT3MoZVtpXSkmJk9zKHRbaV0pJiYodFtpXT1mdW5jdGlvbih0KXtpZigic3RyaW5nIiE9dHlwZW9mIHQpcmV0dXJuIHQ7dmFyIGU9RXMuZ2V0KHQpO3JldHVybiBlfHwoZT1WZSh0LC0uMSksenM8MWU0JiYoRXMuc2V0KHQsZSksenMrKykpLGV9KHRbaV0pKX1mdW5jdGlvbiBWcyh0KXt2YXIgZT10Ll9faGlnaGxpZ2h0ZWQ7aWYoZSYmKHQuX19oaWdobGlnaHRlZD0hMSwhdC5pc0dyb3VwKSlpZigibGF5ZXIiPT09ZSl0Ll9fenImJnQuX196ci5yZW1vdmVIb3Zlcih0KTtlbHNle3ZhciBpPXQuc3R5bGUsbj10Ll9fY2FjaGVkTm9ybWFsU3RsO24mJihvbChpKSx0LnNldFN0eWxlKG4pLG5sKGkpKTt2YXIgbz10Ll9fY2FjaGVkTm9ybWFsWjI7bnVsbCE9byYmdC56Mi1vPT09eXMmJih0LnoyPW8pfX1mdW5jdGlvbiBHcyh0LGUsaSl7dmFyIG4sbz13cyxhPXdzO3QuX19oaWdobGlnaHRlZCYmKG89X3Msbj0hMCksZSh0LGkpLHQuX19oaWdobGlnaHRlZCYmKGE9X3Msbj0hMCksdC5pc0dyb3VwJiZ0LnRyYXZlcnNlKGZ1bmN0aW9uKHQpe3QuaXNHcm91cHx8ZSh0LGkpfSksbiYmdC5fX2hpZ2hEb3duT25VcGRhdGUmJnQuX19oaWdoRG93bk9uVXBkYXRlKG8sYSl9ZnVuY3Rpb24gRnModCxlKXtlPXQuX19ob3ZlclN0bD0hMSE9PWUmJih0LmhvdmVyU3R5bGV8fGV8fHt9KSx0Ll9faG92ZXJTdGxEaXJ0eT0hMCx0Ll9faGlnaGxpZ2h0ZWQmJih0Ll9fY2FjaGVkTm9ybWFsU3RsPW51bGwsVnModCksUnModCkpfWZ1bmN0aW9uIFdzKHQpe1hzKHRoaXMsdCl8fHRoaXMuX19oaWdoQnlPdXRlcnx8R3ModGhpcyxScyl9ZnVuY3Rpb24gSHModCl7WHModGhpcyx0KXx8dGhpcy5fX2hpZ2hCeU91dGVyfHxHcyh0aGlzLFZzKX1mdW5jdGlvbiBacyh0KXt0aGlzLl9faGlnaEJ5T3V0ZXJ8PTE8PCh0fHwwKSxHcyh0aGlzLFJzKX1mdW5jdGlvbiBVcyh0KXsodGhpcy5fX2hpZ2hCeU91dGVyJj1+KDE8PCh0fHwwKSkpfHxHcyh0aGlzLFZzKX1mdW5jdGlvbiBYcyh0LGUpe3JldHVybiB0Ll9faGlnaERvd25TaWxlbnRPblRvdWNoJiZlLnpyQnlUb3VjaH1mdW5jdGlvbiBZcyh0LGUpe2pzKHQsITApLEdzKHQsRnMsZSl9ZnVuY3Rpb24ganModCxlKXt2YXIgaT0hMT09PWU7aWYodC5fX2hpZ2hEb3duU2lsZW50T25Ub3VjaD10LmhpZ2hEb3duU2lsZW50T25Ub3VjaCx0Ll9faGlnaERvd25PblVwZGF0ZT10LmhpZ2hEb3duT25VcGRhdGUsIWl8fHQuX19oaWdoRG93bkRpc3BhdGNoZXIpe3ZhciBuPWk/Im9mZiI6Im9uIjt0W25dKCJtb3VzZW92ZXIiLFdzKVtuXSgibW91c2VvdXQiLEhzKSx0W25dKCJlbXBoYXNpcyIsWnMpW25dKCJub3JtYWwiLFVzKSx0Ll9faGlnaEJ5T3V0ZXI9dC5fX2hpZ2hCeU91dGVyfHwwLHQuX19oaWdoRG93bkRpc3BhdGNoZXI9IWl9fWZ1bmN0aW9uIHFzKHQpe3JldHVybiEoIXR8fCF0Ll9faGlnaERvd25EaXNwYXRjaGVyKX1mdW5jdGlvbiBLcyh0KXt2YXIgZT1Tc1t0XTtyZXR1cm4gbnVsbD09ZSYmYnM8PTMyJiYoZT1Tc1t0XT1icysrKSxlfWZ1bmN0aW9uICRzKHQsZSxpLG4sbyxhLHIpe3ZhciBzLGw9KG89b3x8dnMpLmxhYmVsRmV0Y2hlcix1PW8ubGFiZWxEYXRhSW5kZXgsaD1vLmxhYmVsRGltSW5kZXgsYz1pLmdldFNoYWxsb3coInNob3ciKSxkPW4uZ2V0U2hhbGxvdygic2hvdyIpOyhjfHxkKSYmKGwmJihzPWwuZ2V0Rm9ybWF0dGVkTGFiZWwodSwibm9ybWFsIixudWxsLGgpKSxudWxsPT1zJiYocz1PKG8uZGVmYXVsdFRleHQpP28uZGVmYXVsdFRleHQodSxvKTpvLmRlZmF1bHRUZXh0KSk7dmFyIGY9Yz9zOm51bGwscD1kP0gobD9sLmdldEZvcm1hdHRlZExhYmVsKHUsImVtcGhhc2lzIixudWxsLGgpOm51bGwscyk6bnVsbDtudWxsPT1mJiZudWxsPT1wfHwoUXModCxpLGEsbyksUXMoZSxuLHIsbywhMCkpLHQudGV4dD1mLGUudGV4dD1wfWZ1bmN0aW9uIEpzKHQsZSxpKXt2YXIgbj10LnN0eWxlO2UmJihvbChuKSx0LnNldFN0eWxlKGUpLG5sKG4pKSxuPXQuX19ob3ZlclN0bCxpJiZuJiYob2wobiksTChuLGkpLG5sKG4pKX1mdW5jdGlvbiBRcyh0LGUsaSxuLG8pe3JldHVybiB0bCh0LGUsbixvKSxpJiZMKHQsaSksdH1mdW5jdGlvbiB0bCh0LGUsaSxuKXtpZigoaT1pfHx2cykuaXNSZWN0VGV4dCl7dmFyIG87aS5nZXRUZXh0UG9zaXRpb24/bz1pLmdldFRleHRQb3NpdGlvbihlLG4pOiJvdXRzaWRlIj09PShvPWUuZ2V0U2hhbGxvdygicG9zaXRpb24iKXx8KG4/bnVsbDoiaW5zaWRlIikpJiYobz0idG9wIiksdC50ZXh0UG9zaXRpb249byx0LnRleHRPZmZzZXQ9ZS5nZXRTaGFsbG93KCJvZmZzZXQiKTt2YXIgYT1lLmdldFNoYWxsb3coInJvdGF0ZSIpO251bGwhPWEmJihhKj1NYXRoLlBJLzE4MCksdC50ZXh0Um90YXRpb249YSx0LnRleHREaXN0YW5jZT1IKGUuZ2V0U2hhbGxvdygiZGlzdGFuY2UiKSxuP251bGw6NSl9dmFyIHIscz1lLmVjTW9kZWwsbD1zJiZzLm9wdGlvbi50ZXh0U3R5bGUsdT1mdW5jdGlvbih0KXt2YXIgZTtmb3IoO3QmJnQhPT10LmVjTW9kZWw7KXt2YXIgaT0odC5vcHRpb258fHZzKS5yaWNoO2lmKGkpZm9yKHZhciBuIGluIGU9ZXx8e30saSlpLmhhc093blByb3BlcnR5KG4pJiYoZVtuXT0xKTt0PXQucGFyZW50TW9kZWx9cmV0dXJuIGV9KGUpO2lmKHUpZm9yKHZhciBoIGluIHI9e30sdSlpZih1Lmhhc093blByb3BlcnR5KGgpKXt2YXIgYz1lLmdldE1vZGVsKFsicmljaCIsaF0pO2VsKHJbaF09e30sYyxsLGksbil9cmV0dXJuIHQucmljaD1yLGVsKHQsZSxsLGksbiwhMCksaS5mb3JjZVJpY2gmJiFpLnRleHRTdHlsZSYmKGkudGV4dFN0eWxlPXt9KSx0fWZ1bmN0aW9uIGVsKHQsZSxpLG4sbyxhKXtpPSFvJiZpfHx2cyx0LnRleHRGaWxsPWlsKGUuZ2V0U2hhbGxvdygiY29sb3IiKSxuKXx8aS5jb2xvcix0LnRleHRTdHJva2U9aWwoZS5nZXRTaGFsbG93KCJ0ZXh0Qm9yZGVyQ29sb3IiKSxuKXx8aS50ZXh0Qm9yZGVyQ29sb3IsdC50ZXh0U3Ryb2tlV2lkdGg9SChlLmdldFNoYWxsb3coInRleHRCb3JkZXJXaWR0aCIpLGkudGV4dEJvcmRlcldpZHRoKSxvfHwoYSYmKHQuaW5zaWRlUm9sbGJhY2tPcHQ9bixubCh0KSksbnVsbD09dC50ZXh0RmlsbCYmKHQudGV4dEZpbGw9bi5hdXRvQ29sb3IpKSx0LmZvbnRTdHlsZT1lLmdldFNoYWxsb3coImZvbnRTdHlsZSIpfHxpLmZvbnRTdHlsZSx0LmZvbnRXZWlnaHQ9ZS5nZXRTaGFsbG93KCJmb250V2VpZ2h0Iil8fGkuZm9udFdlaWdodCx0LmZvbnRTaXplPWUuZ2V0U2hhbGxvdygiZm9udFNpemUiKXx8aS5mb250U2l6ZSx0LmZvbnRGYW1pbHk9ZS5nZXRTaGFsbG93KCJmb250RmFtaWx5Iil8fGkuZm9udEZhbWlseSx0LnRleHRBbGlnbj1lLmdldFNoYWxsb3coImFsaWduIiksdC50ZXh0VmVydGljYWxBbGlnbj1lLmdldFNoYWxsb3coInZlcnRpY2FsQWxpZ24iKXx8ZS5nZXRTaGFsbG93KCJiYXNlbGluZSIpLHQudGV4dExpbmVIZWlnaHQ9ZS5nZXRTaGFsbG93KCJsaW5lSGVpZ2h0IiksdC50ZXh0V2lkdGg9ZS5nZXRTaGFsbG93KCJ3aWR0aCIpLHQudGV4dEhlaWdodD1lLmdldFNoYWxsb3coImhlaWdodCIpLHQudGV4dFRhZz1lLmdldFNoYWxsb3coInRhZyIpLGEmJm4uZGlzYWJsZUJveHx8KHQudGV4dEJhY2tncm91bmRDb2xvcj1pbChlLmdldFNoYWxsb3coImJhY2tncm91bmRDb2xvciIpLG4pLHQudGV4dFBhZGRpbmc9ZS5nZXRTaGFsbG93KCJwYWRkaW5nIiksdC50ZXh0Qm9yZGVyQ29sb3I9aWwoZS5nZXRTaGFsbG93KCJib3JkZXJDb2xvciIpLG4pLHQudGV4dEJvcmRlcldpZHRoPWUuZ2V0U2hhbGxvdygiYm9yZGVyV2lkdGgiKSx0LnRleHRCb3JkZXJSYWRpdXM9ZS5nZXRTaGFsbG93KCJib3JkZXJSYWRpdXMiKSx0LnRleHRCb3hTaGFkb3dDb2xvcj1lLmdldFNoYWxsb3coInNoYWRvd0NvbG9yIiksdC50ZXh0Qm94U2hhZG93Qmx1cj1lLmdldFNoYWxsb3coInNoYWRvd0JsdXIiKSx0LnRleHRCb3hTaGFkb3dPZmZzZXRYPWUuZ2V0U2hhbGxvdygic2hhZG93T2Zmc2V0WCIpLHQudGV4dEJveFNoYWRvd09mZnNldFk9ZS5nZXRTaGFsbG93KCJzaGFkb3dPZmZzZXRZIikpLHQudGV4dFNoYWRvd0NvbG9yPWUuZ2V0U2hhbGxvdygidGV4dFNoYWRvd0NvbG9yIil8fGkudGV4dFNoYWRvd0NvbG9yLHQudGV4dFNoYWRvd0JsdXI9ZS5nZXRTaGFsbG93KCJ0ZXh0U2hhZG93Qmx1ciIpfHxpLnRleHRTaGFkb3dCbHVyLHQudGV4dFNoYWRvd09mZnNldFg9ZS5nZXRTaGFsbG93KCJ0ZXh0U2hhZG93T2Zmc2V0WCIpfHxpLnRleHRTaGFkb3dPZmZzZXRYLHQudGV4dFNoYWRvd09mZnNldFk9ZS5nZXRTaGFsbG93KCJ0ZXh0U2hhZG93T2Zmc2V0WSIpfHxpLnRleHRTaGFkb3dPZmZzZXRZfWZ1bmN0aW9uIGlsKHQsZSl7cmV0dXJuImF1dG8iIT09dD90OmUmJmUuYXV0b0NvbG9yP2UuYXV0b0NvbG9yOm51bGx9ZnVuY3Rpb24gbmwodCl7dmFyIGUsaT10LnRleHRQb3NpdGlvbixuPXQuaW5zaWRlUm9sbGJhY2tPcHQ7aWYobiYmbnVsbD09dC50ZXh0RmlsbCl7dmFyIG89bi5hdXRvQ29sb3IsYT1uLmlzUmVjdFRleHQscj1uLnVzZUluc2lkZVN0eWxlLHM9ITEhPT1yJiYoITA9PT1yfHxhJiZpJiYic3RyaW5nIj09dHlwZW9mIGkmJjA8PWkuaW5kZXhPZigiaW5zaWRlIikpLGw9IXMmJm51bGwhPW87KHN8fGwpJiYoZT17dGV4dEZpbGw6dC50ZXh0RmlsbCx0ZXh0U3Ryb2tlOnQudGV4dFN0cm9rZSx0ZXh0U3Ryb2tlV2lkdGg6dC50ZXh0U3Ryb2tlV2lkdGh9KSxzJiYodC50ZXh0RmlsbD0iI2ZmZiIsbnVsbD09dC50ZXh0U3Ryb2tlJiYodC50ZXh0U3Ryb2tlPW8sbnVsbD09dC50ZXh0U3Ryb2tlV2lkdGgmJih0LnRleHRTdHJva2VXaWR0aD0yKSkpLGwmJih0LnRleHRGaWxsPW8pfXQuaW5zaWRlUm9sbGJhY2s9ZX1mdW5jdGlvbiBvbCh0KXt2YXIgZT10Lmluc2lkZVJvbGxiYWNrO2UmJih0LnRleHRGaWxsPWUudGV4dEZpbGwsdC50ZXh0U3Ryb2tlPWUudGV4dFN0cm9rZSx0LnRleHRTdHJva2VXaWR0aD1lLnRleHRTdHJva2VXaWR0aCx0Lmluc2lkZVJvbGxiYWNrPW51bGwpfWZ1bmN0aW9uIGFsKHQsZSl7dmFyIGk9ZSYmZS5nZXRNb2RlbCgidGV4dFN0eWxlIik7cmV0dXJuIGooW3QuZm9udFN0eWxlfHxpJiZpLmdldFNoYWxsb3coImZvbnRTdHlsZSIpfHwiIix0LmZvbnRXZWlnaHR8fGkmJmkuZ2V0U2hhbGxvdygiZm9udFdlaWdodCIpfHwiIiwodC5mb250U2l6ZXx8aSYmaS5nZXRTaGFsbG93KCJmb250U2l6ZSIpfHwxMikrInB4Iix0LmZvbnRGYW1pbHl8fGkmJmkuZ2V0U2hhbGxvdygiZm9udEZhbWlseSIpfHwic2Fucy1zZXJpZiJdLmpvaW4oIiAiKSl9ZnVuY3Rpb24gcmwodCxlLGksbixvLGEpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBvJiYoYT1vLG89bnVsbCksbiYmbi5pc0FuaW1hdGlvbkVuYWJsZWQoKSl7dmFyIHI9dD8iVXBkYXRlIjoiIixzPW4uZ2V0U2hhbGxvdygiYW5pbWF0aW9uRHVyYXRpb24iK3IpLGw9bi5nZXRTaGFsbG93KCJhbmltYXRpb25FYXNpbmciK3IpLHU9bi5nZXRTaGFsbG93KCJhbmltYXRpb25EZWxheSIrcik7ImZ1bmN0aW9uIj09dHlwZW9mIHUmJih1PXUobyxuLmdldEFuaW1hdGlvbkRlbGF5UGFyYW1zP24uZ2V0QW5pbWF0aW9uRGVsYXlQYXJhbXMoZSxvKTpudWxsKSksImZ1bmN0aW9uIj09dHlwZW9mIHMmJihzPXMobykpLDA8cz9lLmFuaW1hdGVUbyhpLHMsdXx8MCxsLGEsISFhKTooZS5zdG9wQW5pbWF0aW9uKCksZS5hdHRyKGkpLGEmJmEoKSl9ZWxzZSBlLnN0b3BBbmltYXRpb24oKSxlLmF0dHIoaSksYSYmYSgpfWZ1bmN0aW9uIHNsKHQsZSxpLG4sbyl7cmwoITAsdCxlLGksbixvKX1mdW5jdGlvbiBsbCh0LGUsaSxuLG8pe3JsKCExLHQsZSxpLG4sbyl9ZnVuY3Rpb24gdWwodCxlKXtmb3IodmFyIGk9aWUoW10pO3QmJnQhPT1lOylvZShpLHQuZ2V0TG9jYWxUcmFuc2Zvcm0oKSxpKSx0PXQucGFyZW50O3JldHVybiBpfWZ1bmN0aW9uIGhsKHQsZSxpKXtyZXR1cm4gZSYmIVAoZSkmJihlPWZlLmdldExvY2FsVHJhbnNmb3JtKGUpKSxpJiYoZT1sZShbXSxlKSksYnQoW10sdCxlKX1mdW5jdGlvbiBjbCh0LGUsaSl7dmFyIG49MD09PWVbNF18fDA9PT1lWzVdfHwwPT09ZVswXT8xOk1hdGguYWJzKDIqZVs0XS9lWzBdKSxvPTA9PT1lWzRdfHwwPT09ZVs1XXx8MD09PWVbMl0/MTpNYXRoLmFicygyKmVbNF0vZVsyXSksYT1bImxlZnQiPT09dD8tbjoicmlnaHQiPT09dD9uOjAsInRvcCI9PT10Py1vOiJib3R0b20iPT09dD9vOjBdO3JldHVybiBhPWhsKGEsZSxpKSxNYXRoLmFicyhhWzBdKT5NYXRoLmFicyhhWzFdKT8wPGFbMF0/InJpZ2h0IjoibGVmdCI6MDxhWzFdPyJib3R0b20iOiJ0b3AifWZ1bmN0aW9uIGRsKHQsZSxuLGkpe2lmKHQmJmUpe3ZhciBvLGE9KG89e30sdC50cmF2ZXJzZShmdW5jdGlvbih0KXshdC5pc0dyb3VwJiZ0LmFuaWQmJihvW3QuYW5pZF09dCl9KSxvKTtlLnRyYXZlcnNlKGZ1bmN0aW9uKHQpe2lmKCF0LmlzR3JvdXAmJnQuYW5pZCl7dmFyIGU9YVt0LmFuaWRdO2lmKGUpe3ZhciBpPXIodCk7dC5hdHRyKHIoZSkpLHNsKHQsaSxuLHQuZGF0YUluZGV4KX19fSl9ZnVuY3Rpb24gcih0KXt2YXIgZT17cG9zaXRpb246cnQodC5wb3NpdGlvbikscm90YXRpb246dC5yb3RhdGlvbn07cmV0dXJuIHQuc2hhcGUmJihlLnNoYXBlPUwoe30sdC5zaGFwZSkpLGV9fWZ1bmN0aW9uIGZsKHQsbil7cmV0dXJuIE4odCxmdW5jdGlvbih0KXt2YXIgZT10WzBdO2U9Z3MoZSxuLngpLGU9bXMoZSxuLngrbi53aWR0aCk7dmFyIGk9dFsxXTtyZXR1cm4gaT1ncyhpLG4ueSksW2UsaT1tcyhpLG4ueStuLmhlaWdodCldfSl9ZnVuY3Rpb24gcGwodCxlLGkpe3ZhciBuPShlPUwoe3JlY3RIb3ZlcjohMH0sZSkpLnN0eWxlPXtzdHJva2VOb1NjYWxlOiEwfTtpZihpPWl8fHt4Oi0xLHk6LTEsd2lkdGg6MixoZWlnaHQ6Mn0sdClyZXR1cm4gMD09PXQuaW5kZXhPZigiaW1hZ2U6Ly8iKT8obi5pbWFnZT10LnNsaWNlKDgpLEMobixpKSxuZXcgcW4oZSkpOkRzKHQucmVwbGFjZSgicGF0aDovLyIsIiIpLGUsaSwiY2VudGVyIil9ZnVuY3Rpb24gZ2wodCxlLGksbixvKXtmb3IodmFyIGE9MCxyPW9bby5sZW5ndGgtMV07YTxvLmxlbmd0aDthKyspe3ZhciBzPW9bYV07aWYobWwodCxlLGksbixzWzBdLHNbMV0sclswXSxyWzFdKSlyZXR1cm4hMDtyPXN9fWZ1bmN0aW9uIG1sKHQsZSxpLG4sbyxhLHIscyl7dmFyIGw9aS10LHU9bi1lLGg9ci1vLGM9cy1hLGQ9dmwoaCxjLGwsdSk7aWYoZnVuY3Rpb24odCl7cmV0dXJuIHQ8PTFlLTYmJi0xZS02PD10fShkKSlyZXR1cm4hMTt2YXIgZj10LW8scD1lLWEsZz12bChmLHAsbCx1KS9kO2lmKGc8MHx8MTxnKXJldHVybiExO3ZhciBtPXZsKGYscCxoLGMpL2Q7cmV0dXJuIShtPDB8fDE8bSl9ZnVuY3Rpb24gdmwodCxlLGksbil7cmV0dXJuIHQqbi1pKmV9VHMoImNpcmNsZSIsSHIpLFRzKCJzZWN0b3IiLFVyKSxUcygicmluZyIsWHIpLFRzKCJwb2x5Z29uIixxciksVHMoInBvbHlsaW5lIixLciksVHMoInJlY3QiLGlzKSxUcygibGluZSIsb3MpLFRzKCJiZXppZXJDdXJ2ZSIsbHMpLFRzKCJhcmMiLHVzKTt2YXIgeWw9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoe1oyX0VNUEhBU0lTX0xJRlQ6eXMsQ0FDSEVEX0xBQkVMX1NUWUxFX1BST1BFUlRJRVM6eHMsZXh0ZW5kU2hhcGU6SXMsZXh0ZW5kUGF0aDpmdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBTci5leHRlbmQoVnIodCxlKSl9KHQsZSl9LHJlZ2lzdGVyU2hhcGU6VHMsZ2V0U2hhcGVDbGFzczpBcyxtYWtlUGF0aDpEcyxtYWtlSW1hZ2U6Q3MsbWVyZ2VQYXRoOmtzLHJlc2l6ZVBhdGg6UHMsc3ViUGl4ZWxPcHRpbWl6ZUxpbmU6ZnVuY3Rpb24odCl7cmV0dXJuIEpyKHQuc2hhcGUsdC5zaGFwZSx0LnN0eWxlKSx0fSxzdWJQaXhlbE9wdGltaXplUmVjdDpmdW5jdGlvbih0KXtyZXR1cm4gUXIodC5zaGFwZSx0LnNoYXBlLHQuc3R5bGUpLHR9LHN1YlBpeGVsT3B0aW1pemU6TnMsc2V0RWxlbWVudEhvdmVyU3R5bGU6RnMsc2V0SG92ZXJTdHlsZTpZcyxzZXRBc0hpZ2hEb3duRGlzcGF0Y2hlcjpqcyxpc0hpZ2hEb3duRGlzcGF0Y2hlcjpxcyxnZXRIaWdobGlnaHREaWdpdDpLcyxzZXRMYWJlbFN0eWxlOiRzLG1vZGlmeUxhYmVsU3R5bGU6SnMsc2V0VGV4dFN0eWxlOlFzLHNldFRleHQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBuLG89e2lzUmVjdFRleHQ6ITB9OyExPT09aT9uPSEwOm8uYXV0b0NvbG9yPWksdGwodCxlLG8sbil9LGdldEZvbnQ6YWwsdXBkYXRlUHJvcHM6c2wsaW5pdFByb3BzOmxsLGdldFRyYW5zZm9ybTp1bCxhcHBseVRyYW5zZm9ybTpobCx0cmFuc2Zvcm1EaXJlY3Rpb246Y2wsZ3JvdXBUcmFuc2l0aW9uOmRsLGNsaXBQb2ludHNCeVJlY3Q6ZmwsY2xpcFJlY3RCeVJlY3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT1ncyh0LngsZS54KSxuPW1zKHQueCt0LndpZHRoLGUueCtlLndpZHRoKSxvPWdzKHQueSxlLnkpLGE9bXModC55K3QuaGVpZ2h0LGUueStlLmhlaWdodCk7aWYoaTw9biYmbzw9YSlyZXR1cm57eDppLHk6byx3aWR0aDpuLWksaGVpZ2h0OmEtb319LGNyZWF0ZUljb246cGwsbGluZVBvbHlnb25JbnRlcnNlY3Q6Z2wsbGluZUxpbmVJbnRlcnNlY3Q6bWwsR3JvdXA6SWksSW1hZ2U6cW4sVGV4dDpGcixDaXJjbGU6SHIsU2VjdG9yOlVyLFJpbmc6WHIsUG9seWdvbjpxcixQb2x5bGluZTpLcixSZWN0OmlzLExpbmU6b3MsQmV6aWVyQ3VydmU6bHMsQXJjOnVzLEluY3JlbWVudGFsRGlzcGxheWFibGU6ZnMsQ29tcG91bmRQYXRoOmhzLExpbmVhckdyYWRpZW50OmNzLFJhZGlhbEdyYWRpZW50OmRzLEJvdW5kaW5nUmVjdDpNaX0pLHhsPVsidGV4dFN0eWxlIiwiY29sb3IiXSxfbD17Z2V0VGV4dENvbG9yOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWNNb2RlbDtyZXR1cm4gdGhpcy5nZXRTaGFsbG93KCJjb2xvciIpfHwoIXQmJmU/ZS5nZXQoeGwpOm51bGwpfSxnZXRGb250OmZ1bmN0aW9uKCl7cmV0dXJuIGFsKHtmb250U3R5bGU6dGhpcy5nZXRTaGFsbG93KCJmb250U3R5bGUiKSxmb250V2VpZ2h0OnRoaXMuZ2V0U2hhbGxvdygiZm9udFdlaWdodCIpLGZvbnRTaXplOnRoaXMuZ2V0U2hhbGxvdygiZm9udFNpemUiKSxmb250RmFtaWx5OnRoaXMuZ2V0U2hhbGxvdygiZm9udEZhbWlseSIpfSx0aGlzLmVjTW9kZWwpfSxnZXRUZXh0UmVjdDpmdW5jdGlvbih0KXtyZXR1cm4gY24odCx0aGlzLmdldEZvbnQoKSx0aGlzLmdldFNoYWxsb3coImFsaWduIiksdGhpcy5nZXRTaGFsbG93KCJ2ZXJ0aWNhbEFsaWduIil8fHRoaXMuZ2V0U2hhbGxvdygiYmFzZWxpbmUiKSx0aGlzLmdldFNoYWxsb3coInBhZGRpbmciKSx0aGlzLmdldFNoYWxsb3coImxpbmVIZWlnaHQiKSx0aGlzLmdldFNoYWxsb3coInJpY2giKSx0aGlzLmdldFNoYWxsb3coInRydW5jYXRlVGV4dCIpKX19LHdsPXJhKFtbImZpbGwiLCJjb2xvciJdLFsic3Ryb2tlIiwiYm9yZGVyQ29sb3IiXSxbImxpbmVXaWR0aCIsImJvcmRlcldpZHRoIl0sWyJvcGFjaXR5Il0sWyJzaGFkb3dCbHVyIl0sWyJzaGFkb3dPZmZzZXRYIl0sWyJzaGFkb3dPZmZzZXRZIl0sWyJzaGFkb3dDb2xvciJdLFsidGV4dFBvc2l0aW9uIl0sWyJ0ZXh0QWxpZ24iXV0pLGJsPXtnZXRJdGVtU3R5bGU6ZnVuY3Rpb24odCxlKXt2YXIgaT13bCh0aGlzLHQsZSksbj10aGlzLmdldEJvcmRlckxpbmVEYXNoKCk7cmV0dXJuIG4mJihpLmxpbmVEYXNoPW4pLGl9LGdldEJvcmRlckxpbmVEYXNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoImJvcmRlclR5cGUiKTtyZXR1cm4ic29saWQiPT09dHx8bnVsbD09dD9udWxsOiJkYXNoZWQiPT09dD9bNSw1XTpbMSwxXX19LFNsPWIsTWw9Wm8oKTtmdW5jdGlvbiBJbCh0LGUsaSl7dGhpcy5wYXJlbnRNb2RlbD1lLHRoaXMuZWNNb2RlbD1pLHRoaXMub3B0aW9uPXR9ZnVuY3Rpb24gVGwodCxlLGkpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGgmJighZVtuXXx8bnVsbCE9KHQ9dCYmIm9iamVjdCI9PXR5cGVvZiB0P3RbZVtuXV06bnVsbCkpO24rKyk7cmV0dXJuIG51bGw9PXQmJmkmJih0PWkuZ2V0KGUpKSx0fWZ1bmN0aW9uIEFsKHQsZSl7dmFyIGk9TWwodCkuZ2V0UGFyZW50O3JldHVybiBpP2kuY2FsbCh0LGUpOnQucGFyZW50TW9kZWx9SWwucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpJbCxpbml0Om51bGwsbWVyZ2VPcHRpb246ZnVuY3Rpb24odCl7bSh0aGlzLm9wdGlvbix0LCEwKX0sZ2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQ/dGhpcy5vcHRpb246VGwodGhpcy5vcHRpb24sdGhpcy5wYXJzZVBhdGgodCksIWUmJkFsKHRoaXMsdCkpfSxnZXRTaGFsbG93OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5vcHRpb24sbj1udWxsPT1pP2k6aVt0XSxvPSFlJiZBbCh0aGlzLHQpO3JldHVybiBudWxsPT1uJiZvJiYobj1vLmdldFNoYWxsb3codCkpLG59LGdldE1vZGVsOmZ1bmN0aW9uKHQsZSl7dmFyIGk7cmV0dXJuIG5ldyBJbChudWxsPT10P3RoaXMub3B0aW9uOlRsKHRoaXMub3B0aW9uLHQ9dGhpcy5wYXJzZVBhdGgodCkpLGU9ZXx8KGk9QWwodGhpcyx0KSkmJmkuZ2V0TW9kZWwodCksdGhpcy5lY01vZGVsKX0saXNFbXB0eTpmdW5jdGlvbigpe3JldHVybiBudWxsPT10aGlzLm9wdGlvbn0scmVzdG9yZURhdGE6ZnVuY3Rpb24oKXt9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKEQodGhpcy5vcHRpb24pKX0sc2V0UmVhZE9ubHk6ZnVuY3Rpb24odCl7fSxwYXJzZVBhdGg6ZnVuY3Rpb24odCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0JiYodD10LnNwbGl0KCIuIikpLHR9LGN1c3RvbWl6ZUdldFBhcmVudDpmdW5jdGlvbih0KXtNbCh0aGlzKS5nZXRQYXJlbnQ9dH0saXNBbmltYXRpb25FbmFibGVkOmZ1bmN0aW9uKCl7aWYoIXYubm9kZSl7aWYobnVsbCE9dGhpcy5vcHRpb24uYW5pbWF0aW9uKXJldHVybiEhdGhpcy5vcHRpb24uYW5pbWF0aW9uO2lmKHRoaXMucGFyZW50TW9kZWwpcmV0dXJuIHRoaXMucGFyZW50TW9kZWwuaXNBbmltYXRpb25FbmFibGVkKCl9fX0sdGEoSWwpLGlhKElsKSxTbChJbCxsYSksU2woSWwsaGEpLFNsKElsLF9sKSxTbChJbCxibCk7dmFyIERsPTA7ZnVuY3Rpb24gQ2wodCl7cmV0dXJuW3R8fCIiLERsKyssTWF0aC5yYW5kb20oKS50b0ZpeGVkKDUpXS5qb2luKCJfIil9dmFyIExsPTFlLTQ7ZnVuY3Rpb24ga2wodCxlLGksbil7dmFyIG89ZVsxXS1lWzBdLGE9aVsxXS1pWzBdO2lmKDA9PW8pcmV0dXJuIDA9PWE/aVswXTooaVswXStpWzFdKS8yO2lmKG4paWYoMDxvKXtpZih0PD1lWzBdKXJldHVybiBpWzBdO2lmKHQ+PWVbMV0pcmV0dXJuIGlbMV19ZWxzZXtpZih0Pj1lWzBdKXJldHVybiBpWzBdO2lmKHQ8PWVbMV0pcmV0dXJuIGlbMV19ZWxzZXtpZih0PT09ZVswXSlyZXR1cm4gaVswXTtpZih0PT09ZVsxXSlyZXR1cm4gaVsxXX1yZXR1cm4odC1lWzBdKS9vKmEraVswXX1mdW5jdGlvbiBQbCh0LGUpe3N3aXRjaCh0KXtjYXNlImNlbnRlciI6Y2FzZSJtaWRkbGUiOnQ9IjUwJSI7YnJlYWs7Y2FzZSJsZWZ0IjpjYXNlInRvcCI6dD0iMCUiO2JyZWFrO2Nhc2UicmlnaHQiOmNhc2UiYm90dG9tIjp0PSIxMDAlIn1yZXR1cm4ic3RyaW5nIj09dHlwZW9mIHQ/ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXlxzK3xccyskL2csIiIpfSh0KS5tYXRjaCgvJSQvKT9wYXJzZUZsb2F0KHQpLzEwMCplOnBhcnNlRmxvYXQodCk6bnVsbD09dD9OYU46K3R9ZnVuY3Rpb24gTmwodCxlLGkpe3JldHVybiBudWxsPT1lJiYoZT0xMCksZT1NYXRoLm1pbihNYXRoLm1heCgwLGUpLDIwKSx0PSgrdCkudG9GaXhlZChlKSxpP3Q6K3R9ZnVuY3Rpb24gT2wodCl7cmV0dXJuIHQuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LWV9KSx0fWZ1bmN0aW9uIEVsKHQpe2lmKHQ9K3QsaXNOYU4odCkpcmV0dXJuIDA7Zm9yKHZhciBlPTEsaT0wO01hdGgucm91bmQodCplKS9lIT09dDspZSo9MTAsaSsrO3JldHVybiBpfWZ1bmN0aW9uIHpsKHQpe3ZhciBlPXQudG9TdHJpbmcoKSxpPWUuaW5kZXhPZigiZSIpO2lmKDA8aSl7dmFyIG49K2Uuc2xpY2UoaSsxKTtyZXR1cm4gbjwwPy1uOjB9dmFyIG89ZS5pbmRleE9mKCIuIik7cmV0dXJuIG88MD8wOmUubGVuZ3RoLTEtb31mdW5jdGlvbiBSbCh0LGUpe3ZhciBpPU1hdGgubG9nLG49TWF0aC5MTjEwLG89TWF0aC5mbG9vcihpKHRbMV0tdFswXSkvbiksYT1NYXRoLnJvdW5kKGkoTWF0aC5hYnMoZVsxXS1lWzBdKSkvbikscj1NYXRoLm1pbihNYXRoLm1heCgtbythLDApLDIwKTtyZXR1cm4gaXNGaW5pdGUocik/cjoyMH1mdW5jdGlvbiBCbCh0LGUsaSl7aWYoIXRbZV0pcmV0dXJuIDA7dmFyIG49Uyh0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrKGlzTmFOKGUpPzA6ZSl9LDApO2lmKDA9PT1uKXJldHVybiAwO2Zvcih2YXIgbz1NYXRoLnBvdygxMCxpKSxhPU4odCxmdW5jdGlvbih0KXtyZXR1cm4oaXNOYU4odCk/MDp0KS9uKm8qMTAwfSkscj0xMDAqbyxzPU4oYSxmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5mbG9vcih0KX0pLGw9UyhzLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0sMCksdT1OKGEsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1zW2VdfSk7bDxyOyl7Zm9yKHZhciBoPU51bWJlci5ORUdBVElWRV9JTkZJTklUWSxjPW51bGwsZD0wLGY9dS5sZW5ndGg7ZDxmOysrZCl1W2RdPmgmJihoPXVbZF0sYz1kKTsrK3NbY10sdVtjXT0wLCsrbH1yZXR1cm4gc1tlXS9vfXZhciBWbD05MDA3MTk5MjU0NzQwOTkxO2Z1bmN0aW9uIEdsKHQpe3ZhciBlPTIqTWF0aC5QSTtyZXR1cm4odCVlK2UpJWV9ZnVuY3Rpb24gRmwodCl7cmV0dXJuLUxsPHQmJnQ8TGx9dmFyIFdsPS9eKD86KFxkezR9KSg/OlstXC9dKFxkezEsMn0pKD86Wy1cL10oXGR7MSwyfSkoPzpbVCBdKFxkezEsMn0pKD86OihcZFxkKSg/OjooXGRcZCkoPzpbLixdKFxkKykpPyk/KT8oWnxbXCtcLV1cZFxkOj9cZFxkKT8pPyk/KT8pPyQvO2Z1bmN0aW9uIEhsKHQpe2lmKHQgaW5zdGFuY2VvZiBEYXRlKXJldHVybiB0O2lmKCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm4gbnVsbD09dD9uZXcgRGF0ZShOYU4pOm5ldyBEYXRlKE1hdGgucm91bmQodCkpO3ZhciBlPVdsLmV4ZWModCk7aWYoIWUpcmV0dXJuIG5ldyBEYXRlKE5hTik7aWYoZVs4XSl7dmFyIGk9K2VbNF18fDA7cmV0dXJuIloiIT09ZVs4XS50b1VwcGVyQ2FzZSgpJiYoaS09ZVs4XS5zbGljZSgwLDMpKSxuZXcgRGF0ZShEYXRlLlVUQygrZVsxXSwrKGVbMl18fDEpLTEsK2VbM118fDEsaSwrKGVbNV18fDApLCtlWzZdfHwwLCtlWzddfHwwKSl9cmV0dXJuIG5ldyBEYXRlKCtlWzFdLCsoZVsyXXx8MSktMSwrZVszXXx8MSwrZVs0XXx8MCwrKGVbNV18fDApLCtlWzZdfHwwLCtlWzddfHwwKX1mdW5jdGlvbiBabCh0KXtyZXR1cm4gTWF0aC5wb3coMTAsVWwodCkpfWZ1bmN0aW9uIFVsKHQpe2lmKDA9PT10KXJldHVybiAwO3ZhciBlPU1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjEwKTtyZXR1cm4gMTA8PXQvTWF0aC5wb3coMTAsZSkmJmUrKyxlfWZ1bmN0aW9uIFhsKHQsZSl7dmFyIGk9VWwodCksbj1NYXRoLnBvdygxMCxpKSxvPXQvbjtyZXR1cm4gdD0oZT9vPDEuNT8xOm88Mi41PzI6bzw0PzM6bzw3PzU6MTA6bzwxPzE6bzwyPzI6bzwzPzM6bzw1PzU6MTApKm4sLTIwPD1pPyt0LnRvRml4ZWQoaTwwPy1pOjApOnR9ZnVuY3Rpb24gWWwodCl7dC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uIHQoZSxpLG4pe3JldHVybiBlLmludGVydmFsW25dPGkuaW50ZXJ2YWxbbl18fGUuaW50ZXJ2YWxbbl09PT1pLmludGVydmFsW25dJiYoZS5jbG9zZVtuXS1pLmNsb3NlW25dPT0obj8tMToxKXx8IW4mJnQoZSxpLDEpKX0odCxlLDApPy0xOjF9KTtmb3IodmFyIGU9LTEvMCxpPTEsbj0wO248dC5sZW5ndGg7KXtmb3IodmFyIG89dFtuXS5pbnRlcnZhbCxhPXRbbl0uY2xvc2Uscj0wO3I8MjtyKyspb1tyXTw9ZSYmKG9bcl09ZSxhW3JdPXI/MToxLWkpLGU9b1tyXSxpPWFbcl07b1swXT09PW9bMV0mJmFbMF0qYVsxXSE9MT90LnNwbGljZShuLDEpOm4rK31yZXR1cm4gdH1mdW5jdGlvbiBqbCh0KXtyZXR1cm4gMDw9dC1wYXJzZUZsb2F0KHQpfXZhciBxbD0oT2JqZWN0LmZyZWV6ZXx8T2JqZWN0KSh7bGluZWFyTWFwOmtsLHBhcnNlUGVyY2VudDpQbCxyb3VuZDpObCxhc2M6T2wsZ2V0UHJlY2lzaW9uOkVsLGdldFByZWNpc2lvblNhZmU6emwsZ2V0UGl4ZWxQcmVjaXNpb246UmwsZ2V0UGVyY2VudFdpdGhQcmVjaXNpb246QmwsTUFYX1NBRkVfSU5URUdFUjpWbCxyZW1SYWRpYW46R2wsaXNSYWRpYW5Bcm91bmRaZXJvOkZsLHBhcnNlRGF0ZTpIbCxxdWFudGl0eTpabCxxdWFudGl0eUV4cG9uZW50OlVsLG5pY2U6WGwscXVhbnRpbGU6ZnVuY3Rpb24odCxlKXt2YXIgaT0odC5sZW5ndGgtMSkqZSsxLG49TWF0aC5mbG9vcihpKSxvPSt0W24tMV0sYT1pLW47cmV0dXJuIGE/bythKih0W25dLW8pOm99LHJlZm9ybUludGVydmFsczpZbCxpc051bWVyaWM6amx9KTtmdW5jdGlvbiBLbCh0KXtyZXR1cm4gaXNOYU4odCk/Ii0iOih0PSh0KyIiKS5zcGxpdCgiLiIpKVswXS5yZXBsYWNlKC8oXGR7MSwzfSkoPz0oPzpcZHszfSkrKD8hXGQpKS9nLCIkMSwiKSsoMTx0Lmxlbmd0aD8iLiIrdFsxXToiIil9ZnVuY3Rpb24gJGwodCxlKXtyZXR1cm4gdD0odHx8IiIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvLSguKS9nLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUudG9VcHBlckNhc2UoKX0pLGUmJnQmJih0PXQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKSksdH12YXIgSmw9WCxRbD0vKFsmPD4iJ10pL2csdHU9eyImIjoiJmFtcDsiLCI8IjoiJmx0OyIsIj4iOiImZ3Q7IiwnIic6IiZxdW90OyIsIiciOiImIzM5OyJ9O2Z1bmN0aW9uIGV1KHQpe3JldHVybiBudWxsPT10PyIiOih0KyIiKS5yZXBsYWNlKFFsLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR1W2VdfSl9ZnVuY3Rpb24gaXUodCxlKXtyZXR1cm4ieyIrdCsobnVsbD09ZT8iIjplKSsifSJ9dmFyIG51PVsiYSIsImIiLCJjIiwiZCIsImUiLCJmIiwiZyJdO2Z1bmN0aW9uIG91KHQsZSxpKXtrKGUpfHwoZT1bZV0pO3ZhciBuPWUubGVuZ3RoO2lmKCFuKXJldHVybiIiO2Zvcih2YXIgbz1lWzBdLiR2YXJzfHxbXSxhPTA7YTxvLmxlbmd0aDthKyspe3ZhciByPW51W2FdO3Q9dC5yZXBsYWNlKGl1KHIpLGl1KHIsMCkpfWZvcih2YXIgcz0wO3M8bjtzKyspZm9yKHZhciBsPTA7bDxvLmxlbmd0aDtsKyspe3ZhciB1PWVbc11bb1tsXV07dD10LnJlcGxhY2UoaXUobnVbbF0scyksaT9ldSh1KTp1KX1yZXR1cm4gdH1mdW5jdGlvbiBhdShpLHQsbil7cmV0dXJuIEUodCxmdW5jdGlvbih0LGUpe2k9aS5yZXBsYWNlKCJ7IitlKyJ9IixuP2V1KHQpOnQpfSksaX1mdW5jdGlvbiBydSh0LGUpe3ZhciBpPSh0PXoodCk/e2NvbG9yOnQsZXh0cmFDc3NUZXh0OmV9OnR8fHt9KS5jb2xvcixuPXQudHlwZSxvPShlPXQuZXh0cmFDc3NUZXh0LHQucmVuZGVyTW9kZXx8Imh0bWwiKSxhPXQubWFya2VySWR8fCJYIjtyZXR1cm4gaT8iaHRtbCI9PT1vPyJzdWJJdGVtIj09PW4/JzxzcGFuIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bWFyZ2luLXJpZ2h0OjhweDttYXJnaW4tbGVmdDozcHg7Ym9yZGVyLXJhZGl1czo0cHg7d2lkdGg6NHB4O2hlaWdodDo0cHg7YmFja2dyb3VuZC1jb2xvcjonK2V1KGkpKyI7IisoZXx8IiIpKyciPjwvc3Bhbj4nOic8c3BhbiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjVweDtib3JkZXItcmFkaXVzOjEwcHg7d2lkdGg6MTBweDtoZWlnaHQ6MTBweDtiYWNrZ3JvdW5kLWNvbG9yOicrZXUoaSkrIjsiKyhlfHwiIikrJyI+PC9zcGFuPic6e3JlbmRlck1vZGU6byxjb250ZW50OiJ7bWFya2VyIithKyJ8fSAgIixzdHlsZTp7Y29sb3I6aX19OiIifWZ1bmN0aW9uIHN1KHQsZSl7cmV0dXJuIjAwMDAiLnN1YnN0cigwLGUtKHQrPSIiKS5sZW5ndGgpK3R9ZnVuY3Rpb24gbHUodCxlLGkpeyJ3ZWVrIiE9PXQmJiJtb250aCIhPT10JiYicXVhcnRlciIhPT10JiYiaGFsZi15ZWFyIiE9PXQmJiJ5ZWFyIiE9PXR8fCh0PSJNTS1kZFxueXl5eSIpO3ZhciBuPUhsKGUpLG89aT8iVVRDIjoiIixhPW5bImdldCIrbysiRnVsbFllYXIiXSgpLHI9blsiZ2V0IitvKyJNb250aCJdKCkrMSxzPW5bImdldCIrbysiRGF0ZSJdKCksbD1uWyJnZXQiK28rIkhvdXJzIl0oKSx1PW5bImdldCIrbysiTWludXRlcyJdKCksaD1uWyJnZXQiK28rIlNlY29uZHMiXSgpLGM9blsiZ2V0IitvKyJNaWxsaXNlY29uZHMiXSgpO3JldHVybiB0PXQucmVwbGFjZSgiTU0iLHN1KHIsMikpLnJlcGxhY2UoIk0iLHIpLnJlcGxhY2UoInl5eXkiLGEpLnJlcGxhY2UoInl5IixhJTEwMCkucmVwbGFjZSgiZGQiLHN1KHMsMikpLnJlcGxhY2UoImQiLHMpLnJlcGxhY2UoImhoIixzdShsLDIpKS5yZXBsYWNlKCJoIixsKS5yZXBsYWNlKCJtbSIsc3UodSwyKSkucmVwbGFjZSgibSIsdSkucmVwbGFjZSgic3MiLHN1KGgsMikpLnJlcGxhY2UoInMiLGgpLnJlcGxhY2UoIlNTUyIsc3UoYywzKSl9ZnVuY3Rpb24gdXUodCl7cmV0dXJuIHQ/dC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnN1YnN0cigxKTp0fXZhciBodT1nbjt2YXIgY3U9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoe2FkZENvbW1hczpLbCx0b0NhbWVsQ2FzZTokbCxub3JtYWxpemVDc3NBcnJheTpKbCxlbmNvZGVIVE1MOmV1LGZvcm1hdFRwbDpvdSxmb3JtYXRUcGxTaW1wbGU6YXUsZ2V0VG9vbHRpcE1hcmtlcjpydSxmb3JtYXRUaW1lOmx1LGNhcGl0YWxGaXJzdDp1dSx0cnVuY2F0ZVRleHQ6aHUsZ2V0VGV4dEJvdW5kaW5nUmVjdDpmdW5jdGlvbih0KXtyZXR1cm4gY24odC50ZXh0LHQuZm9udCx0LnRleHRBbGlnbix0LnRleHRWZXJ0aWNhbEFsaWduLHQudGV4dFBhZGRpbmcsdC50ZXh0TGluZUhlaWdodCx0LnJpY2gsdC50cnVuY2F0ZSl9LGdldFRleHRSZWN0OmZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyl7cmV0dXJuIGNuKHQsZSxpLG4sbyxzLGEscil9fSksZHU9RSxmdT1bImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsIndpZHRoIiwiaGVpZ2h0Il0scHU9W1sid2lkdGgiLCJsZWZ0IiwicmlnaHQiXSxbImhlaWdodCIsInRvcCIsImJvdHRvbSJdXTtmdW5jdGlvbiBndShoLGMsZCxmLHApe3ZhciBnPTAsbT0wO251bGw9PWYmJihmPTEvMCksbnVsbD09cCYmKHA9MS8wKTt2YXIgdj0wO2MuZWFjaENoaWxkKGZ1bmN0aW9uKHQsZSl7dmFyIGksbixvPXQucG9zaXRpb24sYT10LmdldEJvdW5kaW5nUmVjdCgpLHI9Yy5jaGlsZEF0KGUrMSkscz1yJiZyLmdldEJvdW5kaW5nUmVjdCgpO2lmKCJob3Jpem9udGFsIj09PWgpe3ZhciBsPWEud2lkdGgrKHM/LXMueCthLng6MCk7dj1mPChpPWcrbCl8fHQubmV3bGluZT8oZz0wLGk9bCxtKz12K2QsYS5oZWlnaHQpOk1hdGgubWF4KHYsYS5oZWlnaHQpfWVsc2V7dmFyIHU9YS5oZWlnaHQrKHM/LXMueSthLnk6MCk7dj1wPChuPW0rdSl8fHQubmV3bGluZT8oZys9ditkLG09MCxuPXUsYS53aWR0aCk6TWF0aC5tYXgodixhLndpZHRoKX10Lm5ld2xpbmV8fChvWzBdPWcsb1sxXT1tLCJob3Jpem9udGFsIj09PWg/Zz1pK2Q6bT1uK2QpfSl9dmFyIG11PWd1O1QoZ3UsInZlcnRpY2FsIiksVChndSwiaG9yaXpvbnRhbCIpO2Z1bmN0aW9uIHZ1KHQsZSxpKXtpPUpsKGl8fDApO3ZhciBuPWUud2lkdGgsbz1lLmhlaWdodCxhPVBsKHQubGVmdCxuKSxyPVBsKHQudG9wLG8pLHM9UGwodC5yaWdodCxuKSxsPVBsKHQuYm90dG9tLG8pLHU9UGwodC53aWR0aCxuKSxoPVBsKHQuaGVpZ2h0LG8pLGM9aVsyXStpWzBdLGQ9aVsxXStpWzNdLGY9dC5hc3BlY3Q7c3dpdGNoKGlzTmFOKHUpJiYodT1uLXMtZC1hKSxpc05hTihoKSYmKGg9by1sLWMtciksbnVsbCE9ZiYmKGlzTmFOKHUpJiZpc05hTihoKSYmKG4vbzxmP3U9LjgqbjpoPS44Km8pLGlzTmFOKHUpJiYodT1mKmgpLGlzTmFOKGgpJiYoaD11L2YpKSxpc05hTihhKSYmKGE9bi1zLXUtZCksaXNOYU4ocikmJihyPW8tbC1oLWMpLHQubGVmdHx8dC5yaWdodCl7Y2FzZSJjZW50ZXIiOmE9bi8yLXUvMi1pWzNdO2JyZWFrO2Nhc2UicmlnaHQiOmE9bi11LWR9c3dpdGNoKHQudG9wfHx0LmJvdHRvbSl7Y2FzZSJtaWRkbGUiOmNhc2UiY2VudGVyIjpyPW8vMi1oLzItaVswXTticmVhaztjYXNlImJvdHRvbSI6cj1vLWgtY31hPWF8fDAscj1yfHwwLGlzTmFOKHUpJiYodT1uLWQtYS0oc3x8MCkpLGlzTmFOKGgpJiYoaD1vLWMtci0obHx8MCkpO3ZhciBwPW5ldyBNaShhK2lbM10scitpWzBdLHUsaCk7cmV0dXJuIHAubWFyZ2luPWkscH1mdW5jdGlvbiB5dSh0LGUsaSxuLG8pe3ZhciBhPSFvfHwhby5odnx8by5odlswXSxyPSFvfHwhby5odnx8by5odlsxXSxzPW8mJm8uYm91bmRpbmdNb2RlfHwiYWxsIjtpZihhfHxyKXt2YXIgbDtpZigicmF3Ij09PXMpbD0iZ3JvdXAiPT09dC50eXBlP25ldyBNaSgwLDAsK2Uud2lkdGh8fDAsK2UuaGVpZ2h0fHwwKTp0LmdldEJvdW5kaW5nUmVjdCgpO2Vsc2UgaWYobD10LmdldEJvdW5kaW5nUmVjdCgpLHQubmVlZExvY2FsVHJhbnNmb3JtKCkpe3ZhciB1PXQuZ2V0TG9jYWxUcmFuc2Zvcm0oKTsobD1sLmNsb25lKCkpLmFwcGx5VHJhbnNmb3JtKHUpfWU9dnUoQyh7d2lkdGg6bC53aWR0aCxoZWlnaHQ6bC5oZWlnaHR9LGUpLGksbik7dmFyIGg9dC5wb3NpdGlvbixjPWE/ZS54LWwueDowLGQ9cj9lLnktbC55OjA7dC5hdHRyKCJwb3NpdGlvbiIsInJhdyI9PT1zP1tjLGRdOltoWzBdK2MsaFsxXStkXSl9fWZ1bmN0aW9uIHh1KGwsdSx0KXtSKHQpfHwodD17fSk7dmFyIGg9dC5pZ25vcmVTaXplO2soaCl8fChoPVtoLGhdKTt2YXIgZT1uKHB1WzBdLDApLGk9bihwdVsxXSwxKTtmdW5jdGlvbiBuKHQsZSl7dmFyIGk9e30sbj0wLG89e30sYT0wO2lmKGR1KHQsZnVuY3Rpb24odCl7b1t0XT1sW3RdfSksZHUodCxmdW5jdGlvbih0KXtjKHUsdCkmJihpW3RdPW9bdF09dVt0XSksZChpLHQpJiZuKyssZChvLHQpJiZhKyt9KSxoW2VdKXJldHVybiBkKHUsdFsxXSk/b1t0WzJdXT1udWxsOmQodSx0WzJdKSYmKG9bdFsxXV09bnVsbCksbztpZigyIT09YSYmbil7aWYoMjw9bilyZXR1cm4gaTtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIHM9dFtyXTtpZighYyhpLHMpJiZjKGwscykpe2lbc109bFtzXTticmVha319cmV0dXJuIGl9cmV0dXJuIG99ZnVuY3Rpb24gYyh0LGUpe3JldHVybiB0Lmhhc093blByb3BlcnR5KGUpfWZ1bmN0aW9uIGQodCxlKXtyZXR1cm4gbnVsbCE9dFtlXSYmImF1dG8iIT09dFtlXX1mdW5jdGlvbiBvKHQsZSxpKXtkdSh0LGZ1bmN0aW9uKHQpe2VbdF09aVt0XX0pfW8ocHVbMF0sbCxlKSxvKHB1WzFdLGwsaSl9ZnVuY3Rpb24gX3UodCl7cmV0dXJuIHd1KHt9LHQpfWZ1bmN0aW9uIHd1KGUsaSl7cmV0dXJuIGkmJmUmJmR1KGZ1LGZ1bmN0aW9uKHQpe2kuaGFzT3duUHJvcGVydHkodCkmJihlW3RdPWlbdF0pfSksZX12YXIgYnUsU3UsTXUsSXU9Wm8oKSxUdT1JbC5leHRlbmQoe3R5cGU6ImNvbXBvbmVudCIsaWQ6IiIsbmFtZToiIixtYWluVHlwZToiIixzdWJUeXBlOiIiLGNvbXBvbmVudEluZGV4OjAsZGVmYXVsdE9wdGlvbjpudWxsLGVjTW9kZWw6bnVsbCxkZXBlbmRlbnRNb2RlbHM6W10sdWlkOm51bGwsbGF5b3V0TW9kZTpudWxsLCRjb25zdHJ1Y3RvcjpmdW5jdGlvbih0LGUsaSxuKXtJbC5jYWxsKHRoaXMsdCxlLGksbiksdGhpcy51aWQ9Q2woImVjX2NwdF9tb2RlbCIpfSxpbml0OmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMubWVyZ2VEZWZhdWx0QW5kVGhlbWUodCxpKX0sbWVyZ2VEZWZhdWx0QW5kVGhlbWU6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmxheW91dE1vZGUsbj1pP191KHQpOnt9O20odCxlLmdldFRoZW1lKCkuZ2V0KHRoaXMubWFpblR5cGUpKSxtKHQsdGhpcy5nZXREZWZhdWx0T3B0aW9uKCkpLGkmJnh1KHQsbixpKX0sbWVyZ2VPcHRpb246ZnVuY3Rpb24odCxlKXttKHRoaXMub3B0aW9uLHQsITApO3ZhciBpPXRoaXMubGF5b3V0TW9kZTtpJiZ4dSh0aGlzLm9wdGlvbix0LGkpfSxvcHRpb25VcGRhdGVkOmZ1bmN0aW9uKHQsZSl7fSxnZXREZWZhdWx0T3B0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9SXUodGhpcyk7aWYoIXQuZGVmYXVsdE9wdGlvbil7Zm9yKHZhciBlPVtdLGk9dGhpcy5jb25zdHJ1Y3RvcjtpOyl7dmFyIG49aS5wcm90b3R5cGUuZGVmYXVsdE9wdGlvbjtuJiZlLnB1c2gobiksaT1pLnN1cGVyQ2xhc3N9Zm9yKHZhciBvPXt9LGE9ZS5sZW5ndGgtMTswPD1hO2EtLSlvPW0obyxlW2FdLCEwKTt0LmRlZmF1bHRPcHRpb249b31yZXR1cm4gdC5kZWZhdWx0T3B0aW9ufSxnZXRSZWZlcnJpbmdDb21wb25lbnRzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVjTW9kZWwucXVlcnlDb21wb25lbnRzKHttYWluVHlwZTp0LGluZGV4OnRoaXMuZ2V0KHQrIkluZGV4IiwhMCksaWQ6dGhpcy5nZXQodCsiSWQiLCEwKX0pfX0pO2Z1bmN0aW9uIEF1KHQsZSl7cmV0dXJuIHRbZV18fCh0W2VdPXtwcmVkZWNlc3NvcjpbXSxzdWNjZXNzb3I6W119KSx0W2VdfWFhKFR1LHtyZWdpc3RlcldoZW5FeHRlbmQ6ITB9KSxTdT17fSwoYnU9VHUpLnJlZ2lzdGVyU3ViVHlwZURlZmF1bHRlcj1mdW5jdGlvbih0LGUpe3Q9UW8odCksU3VbdC5tYWluXT1lfSxidS5kZXRlcm1pbmVTdWJUeXBlPWZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS50eXBlO2lmKCFpKXt2YXIgbj1Rbyh0KS5tYWluO2J1Lmhhc1N1YlR5cGVzKHQpJiZTdVtuXSYmKGk9U3Vbbl0oZSkpfXJldHVybiBpfSxNdT1mdW5jdGlvbih0KXt2YXIgZT1bXTtFKFR1LmdldENsYXNzZXNCeU1haW5UeXBlKHQpLGZ1bmN0aW9uKHQpe2U9ZS5jb25jYXQodC5wcm90b3R5cGUuZGVwZW5kZW5jaWVzfHxbXSl9KSxlPU4oZSxmdW5jdGlvbih0KXtyZXR1cm4gUW8odCkubWFpbn0pLCJkYXRhc2V0IiE9PXQmJl8oZSwiZGF0YXNldCIpPD0wJiZlLnVuc2hpZnQoImRhdGFzZXQiKTtyZXR1cm4gZX0sVHUudG9wb2xvZ2ljYWxUcmF2ZWw9ZnVuY3Rpb24odCxlLGksbil7aWYodC5sZW5ndGgpe3ZhciBvPWZ1bmN0aW9uKGUpe3ZhciBvPXt9LGE9W107cmV0dXJuIEUoZSxmdW5jdGlvbihpKXt2YXIgbj1BdShvLGkpLHQ9ZnVuY3Rpb24odCxlKXt2YXIgaT1bXTtyZXR1cm4gRSh0LGZ1bmN0aW9uKHQpezA8PV8oZSx0KSYmaS5wdXNoKHQpfSksaX0obi5vcmlnaW5hbERlcHM9TXUoaSksZSk7bi5lbnRyeUNvdW50PXQubGVuZ3RoLDA9PT1uLmVudHJ5Q291bnQmJmEucHVzaChpKSxFKHQsZnVuY3Rpb24odCl7XyhuLnByZWRlY2Vzc29yLHQpPDAmJm4ucHJlZGVjZXNzb3IucHVzaCh0KTt2YXIgZT1BdShvLHQpO18oZS5zdWNjZXNzb3IsdCk8MCYmZS5zdWNjZXNzb3IucHVzaChpKX0pfSkse2dyYXBoOm8sbm9FbnRyeUxpc3Q6YX19KGUpLGE9by5ncmFwaCxyPW8ubm9FbnRyeUxpc3Qscz17fTtmb3IoRSh0LGZ1bmN0aW9uKHQpe3NbdF09ITB9KTtyLmxlbmd0aDspe3ZhciBsPXIucG9wKCksdT1hW2xdLGg9ISFzW2xdO2gmJihpLmNhbGwobixsLHUub3JpZ2luYWxEZXBzLnNsaWNlKCkpLGRlbGV0ZSBzW2xdKSxFKHUuc3VjY2Vzc29yLGg/ZDpjKX1FKHMsZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoIkNpcmNsZSBkZXBlbmRlbmN5IG1heSBleGlzdHMiKX0pfWZ1bmN0aW9uIGModCl7YVt0XS5lbnRyeUNvdW50LS0sMD09PWFbdF0uZW50cnlDb3VudCYmci5wdXNoKHQpfWZ1bmN0aW9uIGQodCl7c1t0XT0hMCxjKHQpfX0sYihUdSx7Z2V0Qm94TGF5b3V0UGFyYW1zOmZ1bmN0aW9uKCl7cmV0dXJue2xlZnQ6dGhpcy5nZXQoImxlZnQiKSx0b3A6dGhpcy5nZXQoInRvcCIpLHJpZ2h0OnRoaXMuZ2V0KCJyaWdodCIpLGJvdHRvbTp0aGlzLmdldCgiYm90dG9tIiksd2lkdGg6dGhpcy5nZXQoIndpZHRoIiksaGVpZ2h0OnRoaXMuZ2V0KCJoZWlnaHQiKX19fSk7dmFyIER1PSIiOyJ1bmRlZmluZWQiIT10eXBlb2YgbmF2aWdhdG9yJiYoRHU9bmF2aWdhdG9yLnBsYXRmb3JtfHwiIik7dmFyIEN1PXtjb2xvcjpbIiNjMjM1MzEiLCIjMmY0NTU0IiwiIzYxYTBhOCIsIiNkNDgyNjUiLCIjOTFjN2FlIiwiIzc0OWY4MyIsIiNjYTg2MjIiLCIjYmRhMjlhIiwiIzZlNzA3NCIsIiM1NDY1NzAiLCIjYzRjY2QzIl0sZ3JhZGllbnRDb2xvcjpbIiNmNmVmYTYiLCIjZDg4MjczIiwiI2JmNDQ0YyJdLHRleHRTdHlsZTp7Zm9udEZhbWlseTpEdS5tYXRjaCgvXldpbi8pPyJNaWNyb3NvZnQgWWFIZWkiOiJzYW5zLXNlcmlmIixmb250U2l6ZToxMixmb250U3R5bGU6Im5vcm1hbCIsZm9udFdlaWdodDoibm9ybWFsIn0sYmxlbmRNb2RlOm51bGwsYW5pbWF0aW9uOiJhdXRvIixhbmltYXRpb25EdXJhdGlvbjoxZTMsYW5pbWF0aW9uRHVyYXRpb25VcGRhdGU6MzAwLGFuaW1hdGlvbkVhc2luZzoiZXhwb25lbnRpYWxPdXQiLGFuaW1hdGlvbkVhc2luZ1VwZGF0ZToiY3ViaWNPdXQiLGFuaW1hdGlvblRocmVzaG9sZDoyZTMscHJvZ3Jlc3NpdmVUaHJlc2hvbGQ6M2UzLHByb2dyZXNzaXZlOjQwMCxob3ZlckxheWVyVGhyZXNob2xkOjNlMyx1c2VVVEM6ITF9LEx1PVpvKCk7dmFyIGt1PXtjbGVhckNvbG9yUGFsZXR0ZTpmdW5jdGlvbigpe0x1KHRoaXMpLmNvbG9ySWR4PTAsTHUodGhpcykuY29sb3JOYW1lTWFwPXt9fSxnZXRDb2xvckZyb21QYWxldHRlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1MdShlPWV8fHRoaXMpLG89bi5jb2xvcklkeHx8MCxhPW4uY29sb3JOYW1lTWFwPW4uY29sb3JOYW1lTWFwfHx7fTtpZihhLmhhc093blByb3BlcnR5KHQpKXJldHVybiBhW3RdO3ZhciByPUVvKHRoaXMuZ2V0KCJjb2xvciIsITApKSxzPXRoaXMuZ2V0KCJjb2xvckxheWVyIiwhMCksbD1udWxsIT1pJiZzP2Z1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXQubGVuZ3RoLG49MDtuPGk7bisrKWlmKHRbbl0ubGVuZ3RoPmUpcmV0dXJuIHRbbl07cmV0dXJuIHRbaS0xXX0ocyxpKTpyO2lmKChsPWx8fHIpJiZsLmxlbmd0aCl7dmFyIHU9bFtvXTtyZXR1cm4gdCYmKGFbdF09dSksbi5jb2xvcklkeD0obysxKSVsLmxlbmd0aCx1fX19LFB1PSJvcmlnaW5hbCIsTnU9ImFycmF5Um93cyIsT3U9Im9iamVjdFJvd3MiLEV1PSJrZXllZENvbHVtbnMiLHp1PSJ1bmtub3duIixSdT0idHlwZWRBcnJheSIsQnU9ImNvbHVtbiIsVnU9InJvdyI7ZnVuY3Rpb24gR3UodCl7dGhpcy5mcm9tRGF0YXNldD10LmZyb21EYXRhc2V0LHRoaXMuZGF0YT10LmRhdGF8fCh0LnNvdXJjZUZvcm1hdD09PUV1P3t9OltdKSx0aGlzLnNvdXJjZUZvcm1hdD10LnNvdXJjZUZvcm1hdHx8enUsdGhpcy5zZXJpZXNMYXlvdXRCeT10LnNlcmllc0xheW91dEJ5fHxCdSx0aGlzLmRpbWVuc2lvbnNEZWZpbmU9dC5kaW1lbnNpb25zRGVmaW5lLHRoaXMuZW5jb2RlRGVmaW5lPXQuZW5jb2RlRGVmaW5lJiZRKHQuZW5jb2RlRGVmaW5lKSx0aGlzLnN0YXJ0SW5kZXg9dC5zdGFydEluZGV4fHwwLHRoaXMuZGltZW5zaW9uc0RldGVjdENvdW50PXQuZGltZW5zaW9uc0RldGVjdENvdW50fUd1LnNlcmllc0RhdGFUb1NvdXJjZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEd1KHtkYXRhOnQsc291cmNlRm9ybWF0OlYodCk/UnU6UHUsZnJvbURhdGFzZXQ6ITF9KX0saWEoR3UpO3ZhciBGdT17TXVzdDoxLE1pZ2h0OjIsTm90OjN9LFd1PVpvKCk7ZnVuY3Rpb24gSHUodCl7dmFyIGU9dC5vcHRpb24saT1lLmRhdGEsbj1WKGkpP1J1OlB1LG89ITEsYT1lLnNlcmllc0xheW91dEJ5LHI9ZS5zb3VyY2VIZWFkZXIscz1lLmRpbWVuc2lvbnMsbD1qdSh0KTtpZihsKXt2YXIgdT1sLm9wdGlvbjtpPXUuc291cmNlLG49V3UobCkuc291cmNlRm9ybWF0LG89ITAsYT1hfHx1LnNlcmllc0xheW91dEJ5LG51bGw9PXImJihyPXUuc291cmNlSGVhZGVyKSxzPXN8fHUuZGltZW5zaW9uc312YXIgaD1mdW5jdGlvbih0LGUsaSxuLG8pe2lmKCF0KXJldHVybntkaW1lbnNpb25zRGVmaW5lOlp1KG8pfTt2YXIgYSxyO2lmKGU9PT1OdSkiYXV0byI9PT1ufHxudWxsPT1uP1V1KGZ1bmN0aW9uKHQpe251bGwhPXQmJiItIiE9PXQmJih6KHQpP251bGw9PXImJihyPTEpOnI9MCl9LGksdCwxMCk6cj1uPzE6MCxvfHwxIT09cnx8KG89W10sVXUoZnVuY3Rpb24odCxlKXtvW2VdPW51bGwhPXQ/dDoiIn0saSx0KSksYT1vP28ubGVuZ3RoOmk9PT1WdT90Lmxlbmd0aDp0WzBdP3RbMF0ubGVuZ3RoOm51bGw7ZWxzZSBpZihlPT09T3Upbz1vfHxmdW5jdGlvbih0KXt2YXIgZSxpPTA7Zm9yKDtpPHQubGVuZ3RoJiYhKGU9dFtpKytdKTspO2lmKGUpe3ZhciBuPVtdO3JldHVybiBFKGUsZnVuY3Rpb24odCxlKXtuLnB1c2goZSl9KSxufX0odCk7ZWxzZSBpZihlPT09RXUpb3x8KG89W10sRSh0LGZ1bmN0aW9uKHQsZSl7by5wdXNoKGUpfSkpO2Vsc2UgaWYoZT09PVB1KXt2YXIgcz1Cbyh0WzBdKTthPWsocykmJnMubGVuZ3RofHwxfXJldHVybntzdGFydEluZGV4OnIsZGltZW5zaW9uc0RlZmluZTpadShvKSxkaW1lbnNpb25zRGV0ZWN0Q291bnQ6YX19KGksbixhLHIscyk7V3UodCkuc291cmNlPW5ldyBHdSh7ZGF0YTppLGZyb21EYXRhc2V0Om8sc2VyaWVzTGF5b3V0Qnk6YSxzb3VyY2VGb3JtYXQ6bixkaW1lbnNpb25zRGVmaW5lOmguZGltZW5zaW9uc0RlZmluZSxzdGFydEluZGV4Omguc3RhcnRJbmRleCxkaW1lbnNpb25zRGV0ZWN0Q291bnQ6aC5kaW1lbnNpb25zRGV0ZWN0Q291bnQsZW5jb2RlRGVmaW5lOmUuZW5jb2RlfSl9ZnVuY3Rpb24gWnUodCl7aWYodCl7dmFyIG49USgpO3JldHVybiBOKHQsZnVuY3Rpb24odCxlKXtpZihudWxsPT0odD1MKHt9LFIodCk/dDp7bmFtZTp0fSkpLm5hbWUpcmV0dXJuIHQ7dC5uYW1lKz0iIixudWxsPT10LmRpc3BsYXlOYW1lJiYodC5kaXNwbGF5TmFtZT10Lm5hbWUpO3ZhciBpPW4uZ2V0KHQubmFtZSk7cmV0dXJuIGk/dC5uYW1lKz0iLSIraS5jb3VudCsrOm4uc2V0KHQubmFtZSx7Y291bnQ6MX0pLHR9KX19ZnVuY3Rpb24gVXUodCxlLGksbil7aWYobnVsbD09biYmKG49MS8wKSxlPT09VnUpZm9yKHZhciBvPTA7bzxpLmxlbmd0aCYmbzxuO28rKyl0KGlbb10/aVtvXVswXTpudWxsLG8pO2Vsc2V7dmFyIGE9aVswXXx8W107Zm9yKG89MDtvPGEubGVuZ3RoJiZvPG47bysrKXQoYVtvXSxvKX19ZnVuY3Rpb24gWHUoaSx0LGUpe3ZhciBhPXt9LG49anUodCk7aWYoIW58fCFpKXJldHVybiBhO3ZhciByLG8scz1bXSxsPVtdLHU9dC5lY01vZGVsLGg9V3UodSkuZGF0YXNldE1hcCxjPW4udWlkKyJfIitlLnNlcmllc0xheW91dEJ5O0UoaT1pLnNsaWNlKCksZnVuY3Rpb24odCxlKXtSKHQpfHwoaVtlXT17bmFtZTp0fSksIm9yZGluYWwiPT09dC50eXBlJiZudWxsPT1yJiYobz1wKGlbcj1lXSkpLGFbdC5uYW1lXT1bXX0pO3ZhciBkPWguZ2V0KGMpfHxoLnNldChjLHtjYXRlZ29yeVdheURpbTpvLHZhbHVlV2F5RGltOjB9KTtmdW5jdGlvbiBmKHQsZSxpKXtmb3IodmFyIG49MDtuPGk7bisrKXQucHVzaChlK24pfWZ1bmN0aW9uIHAodCl7dmFyIGU9dC5kaW1zRGVmO3JldHVybiBlP2UubGVuZ3RoOjF9cmV0dXJuIEUoaSxmdW5jdGlvbih0LGUpe3ZhciBpPXQubmFtZSxuPXAodCk7aWYobnVsbD09cil7dmFyIG89ZC52YWx1ZVdheURpbTtmKGFbaV0sbyxuKSxmKGwsbyxuKSxkLnZhbHVlV2F5RGltKz1ufWVsc2UgaWYocj09PWUpZihhW2ldLDAsbiksZihzLDAsbik7ZWxzZXtvPWQuY2F0ZWdvcnlXYXlEaW07ZihhW2ldLG8sbiksZihsLG8sbiksZC5jYXRlZ29yeVdheURpbSs9bn19KSxzLmxlbmd0aCYmKGEuaXRlbU5hbWU9cyksbC5sZW5ndGgmJihhLnNlcmllc05hbWU9bCksYX1mdW5jdGlvbiBZdSh0LGwsdSl7dmFyIGU9e307aWYoIWp1KHQpKXJldHVybiBlO3ZhciBoLGM9bC5zb3VyY2VGb3JtYXQsZD1sLmRpbWVuc2lvbnNEZWZpbmU7YyE9PU91JiZjIT09RXV8fEUoZCxmdW5jdGlvbih0LGUpeyJuYW1lIj09PShSKHQpP3QubmFtZTp0KSYmKGg9ZSl9KTt2YXIgaT1mdW5jdGlvbigpe2Zvcih2YXIgdD17fSxlPXt9LGk9W10sbj0wLG89TWF0aC5taW4oNSx1KTtuPG87bisrKXt2YXIgYT1xdShsLmRhdGEsYyxsLnNlcmllc0xheW91dEJ5LGQsbC5zdGFydEluZGV4LG4pO2kucHVzaChhKTt2YXIgcj1hPT09RnUuTm90O2lmKHImJm51bGw9PXQudiYmbiE9PWgmJih0LnY9biksbnVsbCE9dC5uJiZ0Lm4hPT10LnYmJihyfHxpW3Qubl0hPT1GdS5Ob3QpfHwodC5uPW4pLHModCkmJmlbdC5uXSE9PUZ1Lk5vdClyZXR1cm4gdDtyfHwoYT09PUZ1Lk1pZ2h0JiZudWxsPT1lLnYmJm4hPT1oJiYoZS52PW4pLG51bGwhPWUubiYmZS5uIT09ZS52fHwoZS5uPW4pKX1mdW5jdGlvbiBzKHQpe3JldHVybiBudWxsIT10LnYmJm51bGwhPXQubn1yZXR1cm4gcyh0KT90OnMoZSk/ZTpudWxsfSgpO2lmKGkpe2UudmFsdWU9aS52O3ZhciBuPW51bGwhPWg/aDppLm47ZS5pdGVtTmFtZT1bbl0sZS5zZXJpZXNOYW1lPVtuXX1yZXR1cm4gZX1mdW5jdGlvbiBqdSh0KXt2YXIgZT10Lm9wdGlvbjtpZighZS5kYXRhKXJldHVybiB0LmVjTW9kZWwuZ2V0Q29tcG9uZW50KCJkYXRhc2V0IixlLmRhdGFzZXRJbmRleHx8MCl9ZnVuY3Rpb24gcXUodCxlLGksbixvLGEpe3ZhciByLHMsbDtpZihWKHQpKXJldHVybiBGdS5Ob3Q7aWYobil7dmFyIHU9blthXTtSKHUpPyhzPXUubmFtZSxsPXUudHlwZSk6eih1KSYmKHM9dSl9aWYobnVsbCE9bClyZXR1cm4ib3JkaW5hbCI9PT1sP0Z1Lk11c3Q6RnUuTm90O2lmKGU9PT1OdSlpZihpPT09VnUpe2Zvcih2YXIgaD10W2FdLGM9MDtjPChofHxbXSkubGVuZ3RoJiZjPDU7YysrKWlmKG51bGwhPShyPWcoaFtvK2NdKSkpcmV0dXJuIHJ9ZWxzZSBmb3IoYz0wO2M8dC5sZW5ndGgmJmM8NTtjKyspe3ZhciBkPXRbbytjXTtpZihkJiZudWxsIT0ocj1nKGRbYV0pKSlyZXR1cm4gcn1lbHNlIGlmKGU9PT1PdSl7aWYoIXMpcmV0dXJuIEZ1Lk5vdDtmb3IoYz0wO2M8dC5sZW5ndGgmJmM8NTtjKyspe2lmKChmPXRbY10pJiZudWxsIT0ocj1nKGZbc10pKSlyZXR1cm4gcn19ZWxzZSBpZihlPT09RXUpe2lmKCFzKXJldHVybiBGdS5Ob3Q7aWYoIShoPXRbc10pfHxWKGgpKXJldHVybiBGdS5Ob3Q7Zm9yKGM9MDtjPGgubGVuZ3RoJiZjPDU7YysrKWlmKG51bGwhPShyPWcoaFtjXSkpKXJldHVybiByfWVsc2UgaWYoZT09PVB1KWZvcihjPTA7Yzx0Lmxlbmd0aCYmYzw1O2MrKyl7dmFyIGYscD1CbyhmPXRbY10pO2lmKCFrKHApKXJldHVybiBGdS5Ob3Q7aWYobnVsbCE9KHI9ZyhwW2FdKSkpcmV0dXJuIHJ9ZnVuY3Rpb24gZyh0KXt2YXIgZT16KHQpO3JldHVybiBudWxsIT10JiZpc0Zpbml0ZSh0KSYmIiIhPT10P2U/RnUuTWlnaHQ6RnUuTm90OmUmJiItIiE9PXQ/RnUuTXVzdDp2b2lkIDB9cmV0dXJuIEZ1Lk5vdH12YXIgS3U9IlwwX2VjX2lubmVyIiwkdT1JbC5leHRlbmQoe2luaXQ6ZnVuY3Rpb24odCxlLGksbil7aT1pfHx7fSx0aGlzLm9wdGlvbj1udWxsLHRoaXMuX3RoZW1lPW5ldyBJbChpKSx0aGlzLl9vcHRpb25NYW5hZ2VyPW59LHNldE9wdGlvbjpmdW5jdGlvbih0LGUpe1koIShLdSBpbiB0KSwicGxlYXNlIHVzZSBjaGFydC5nZXRPcHRpb24oKSIpLHRoaXMuX29wdGlvbk1hbmFnZXIuc2V0T3B0aW9uKHQsZSksdGhpcy5yZXNldE9wdGlvbihudWxsKX0scmVzZXRPcHRpb246ZnVuY3Rpb24odCl7dmFyIGU9ITEsaT10aGlzLl9vcHRpb25NYW5hZ2VyO2lmKCF0fHwicmVjcmVhdGUiPT09dCl7dmFyIG49aS5tb3VudE9wdGlvbigicmVjcmVhdGUiPT09dCk7dGhpcy5vcHRpb24mJiJyZWNyZWF0ZSIhPT10Pyh0aGlzLnJlc3RvcmVEYXRhKCksdGhpcy5tZXJnZU9wdGlvbihuKSk6ZnVuY3Rpb24odCl7dD10LHRoaXMub3B0aW9uPXt9LHRoaXMub3B0aW9uW0t1XT0xLHRoaXMuX2NvbXBvbmVudHNNYXA9USh7c2VyaWVzOltdfSksdGhpcy5fc2VyaWVzSW5kaWNlcyx0aGlzLl9zZXJpZXNJbmRpY2VzTWFwLGZ1bmN0aW9uKGksdCl7dmFyIG49aS5jb2xvciYmIWkuY29sb3JMYXllcjtFKHQsZnVuY3Rpb24odCxlKXsiY29sb3JMYXllciI9PT1lJiZufHxUdS5oYXNDbGFzcyhlKXx8KCJvYmplY3QiPT10eXBlb2YgdD9pW2VdPWlbZV0/bShpW2VdLHQsITEpOkQodCk6bnVsbD09aVtlXSYmKGlbZV09dCkpfSl9KHQsdGhpcy5fdGhlbWUub3B0aW9uKSxtKHQsQ3UsITEpLHRoaXMubWVyZ2VPcHRpb24odCl9LmNhbGwodGhpcyxuKSxlPSEwfWlmKCJ0aW1lbGluZSIhPT10JiYibWVkaWEiIT09dHx8dGhpcy5yZXN0b3JlRGF0YSgpLCF0fHwicmVjcmVhdGUiPT09dHx8InRpbWVsaW5lIj09PXQpe3ZhciBvPWkuZ2V0VGltZWxpbmVPcHRpb24odGhpcyk7byYmKHRoaXMubWVyZ2VPcHRpb24obyksZT0hMCl9aWYoIXR8fCJyZWNyZWF0ZSI9PT10fHwibWVkaWEiPT09dCl7dmFyIGE9aS5nZXRNZWRpYU9wdGlvbih0aGlzLHRoaXMuX2FwaSk7YS5sZW5ndGgmJkUoYSxmdW5jdGlvbih0KXt0aGlzLm1lcmdlT3B0aW9uKHQsZT0hMCl9LHRoaXMpfXJldHVybiBlfSxtZXJnZU9wdGlvbjpmdW5jdGlvbihuKXt2YXIgbD10aGlzLm9wdGlvbix1PXRoaXMuX2NvbXBvbmVudHNNYXAsaT1bXTshZnVuY3Rpb24odCl7V3UodCkuZGF0YXNldE1hcD1RKCl9KHRoaXMpLEUobixmdW5jdGlvbih0LGUpe251bGwhPXQmJihUdS5oYXNDbGFzcyhlKT9lJiZpLnB1c2goZSk6bFtlXT1udWxsPT1sW2VdP0QodCk6bShsW2VdLHQsITApKX0pLFR1LnRvcG9sb2dpY2FsVHJhdmVsKGksVHUuZ2V0QWxsQ2xhc3NNYWluVHlwZXMoKSxmdW5jdGlvbihyLHQpe3ZhciBlPUVvKG5bcl0pLGk9Vm8odS5nZXQociksZSk7R28oaSksRShpLGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5vcHRpb247UihpKSYmKHQua2V5SW5mby5tYWluVHlwZT1yLHQua2V5SW5mby5zdWJUeXBlPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZS50eXBlP2UudHlwZTppP2kuc3ViVHlwZTpUdS5kZXRlcm1pbmVTdWJUeXBlKHQsZSl9KHIsaSx0LmV4aXN0KSl9KTt2YXIgcz1mdW5jdGlvbihlLHQpe2sodCl8fCh0PXQ/W3RdOltdKTt2YXIgaT17fTtyZXR1cm4gRSh0LGZ1bmN0aW9uKHQpe2lbdF09KGUuZ2V0KHQpfHxbXSkuc2xpY2UoKX0pLGl9KHUsdCk7bFtyXT1bXSx1LnNldChyLFtdKSxFKGksZnVuY3Rpb24odCxlKXt2YXIgaT10LmV4aXN0LG49dC5vcHRpb247aWYoWShSKG4pfHxpLCJFbXB0eSBjb21wb25lbnQgZGVmaW5pdGlvbiIpLG4pe3ZhciBvPVR1LmdldENsYXNzKHIsdC5rZXlJbmZvLnN1YlR5cGUsITApO2lmKGkmJmkuY29uc3RydWN0b3I9PT1vKWkubmFtZT10LmtleUluZm8ubmFtZSxpLm1lcmdlT3B0aW9uKG4sdGhpcyksaS5vcHRpb25VcGRhdGVkKG4sITEpO2Vsc2V7dmFyIGE9TCh7ZGVwZW5kZW50TW9kZWxzOnMsY29tcG9uZW50SW5kZXg6ZX0sdC5rZXlJbmZvKTtMKGk9bmV3IG8obix0aGlzLHRoaXMsYSksYSksaS5pbml0KG4sdGhpcyx0aGlzLGEpLGkub3B0aW9uVXBkYXRlZChudWxsLCEwKX19ZWxzZSBpLm1lcmdlT3B0aW9uKHt9LHRoaXMpLGkub3B0aW9uVXBkYXRlZCh7fSwhMSk7dS5nZXQocilbZV09aSxsW3JdW2VdPWkub3B0aW9ufSx0aGlzKSwic2VyaWVzIj09PXImJkp1KHRoaXMsdS5nZXQoInNlcmllcyIpKX0sdGhpcyksdGhpcy5fc2VyaWVzSW5kaWNlc01hcD1RKHRoaXMuX3Nlcmllc0luZGljZXM9dGhpcy5fc2VyaWVzSW5kaWNlc3x8W10pfSxnZXRPcHRpb246ZnVuY3Rpb24oKXt2YXIgbj1EKHRoaXMub3B0aW9uKTtyZXR1cm4gRShuLGZ1bmN0aW9uKHQsZSl7aWYoVHUuaGFzQ2xhc3MoZSkpe2Zvcih2YXIgaT0odD1Fbyh0KSkubGVuZ3RoLTE7MDw9aTtpLS0pV28odFtpXSkmJnQuc3BsaWNlKGksMSk7bltlXT10fX0pLGRlbGV0ZSBuW0t1XSxufSxnZXRUaGVtZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aGVtZX0sZ2V0Q29tcG9uZW50OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fY29tcG9uZW50c01hcC5nZXQodCk7aWYoaSlyZXR1cm4gaVtlfHwwXX0scXVlcnlDb21wb25lbnRzOmZ1bmN0aW9uKHQpe3ZhciBlPXQubWFpblR5cGU7aWYoIWUpcmV0dXJuW107dmFyIGksbj10LmluZGV4LG89dC5pZCxhPXQubmFtZSxyPXRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KGUpO2lmKCFyfHwhci5sZW5ndGgpcmV0dXJuW107aWYobnVsbCE9bilrKG4pfHwobj1bbl0pLGk9TShOKG4sZnVuY3Rpb24odCl7cmV0dXJuIHJbdF19KSxmdW5jdGlvbih0KXtyZXR1cm4hIXR9KTtlbHNlIGlmKG51bGwhPW8pe3ZhciBzPWsobyk7aT1NKHIsZnVuY3Rpb24odCl7cmV0dXJuIHMmJjA8PV8obyx0LmlkKXx8IXMmJnQuaWQ9PT1vfSl9ZWxzZSBpZihudWxsIT1hKXt2YXIgbD1rKGEpO2k9TShyLGZ1bmN0aW9uKHQpe3JldHVybiBsJiYwPD1fKGEsdC5uYW1lKXx8IWwmJnQubmFtZT09PWF9KX1lbHNlIGk9ci5zbGljZSgpO3JldHVybiBRdShpLHQpfSxmaW5kQ29tcG9uZW50czpmdW5jdGlvbih0KXt2YXIgZSxpLG4sbyxhLHI9dC5xdWVyeSxzPXQubWFpblR5cGUsbD0oaT1zKyJJbmRleCIsbj1zKyJJZCIsbz1zKyJOYW1lIiwhKGU9cil8fG51bGw9PWVbaV0mJm51bGw9PWVbbl0mJm51bGw9PWVbb10/bnVsbDp7bWFpblR5cGU6cyxpbmRleDplW2ldLGlkOmVbbl0sbmFtZTplW29dfSksdT1sP3RoaXMucXVlcnlDb21wb25lbnRzKGwpOnRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KHMpO3JldHVybiBhPVF1KHUsdCksdC5maWx0ZXI/TShhLHQuZmlsdGVyKTphfSxlYWNoQ29tcG9uZW50OmZ1bmN0aW9uKHQsbixvKXt2YXIgZT10aGlzLl9jb21wb25lbnRzTWFwO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KW89bixuPXQsZS5lYWNoKGZ1bmN0aW9uKHQsaSl7RSh0LGZ1bmN0aW9uKHQsZSl7bi5jYWxsKG8saSx0LGUpfSl9KTtlbHNlIGlmKHoodCkpRShlLmdldCh0KSxuLG8pO2Vsc2UgaWYoUih0KSl7RSh0aGlzLmZpbmRDb21wb25lbnRzKHQpLG4sbyl9fSxnZXRTZXJpZXNCeU5hbWU6ZnVuY3Rpb24oZSl7cmV0dXJuIE0odGhpcy5fY29tcG9uZW50c01hcC5nZXQoInNlcmllcyIpLGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWU9PT1lfSl9LGdldFNlcmllc0J5SW5kZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KCJzZXJpZXMiKVt0XX0sZ2V0U2VyaWVzQnlUeXBlOmZ1bmN0aW9uKGUpe3JldHVybiBNKHRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KCJzZXJpZXMiKSxmdW5jdGlvbih0KXtyZXR1cm4gdC5zdWJUeXBlPT09ZX0pfSxnZXRTZXJpZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29tcG9uZW50c01hcC5nZXQoInNlcmllcyIpLnNsaWNlKCl9LGdldFNlcmllc0NvdW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KCJzZXJpZXMiKS5sZW5ndGh9LGVhY2hTZXJpZXM6ZnVuY3Rpb24oaSxuKXtFKHRoaXMuX3Nlcmllc0luZGljZXMsZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY29tcG9uZW50c01hcC5nZXQoInNlcmllcyIpW3RdO2kuY2FsbChuLGUsdCl9LHRoaXMpfSxlYWNoUmF3U2VyaWVzOmZ1bmN0aW9uKHQsZSl7RSh0aGlzLl9jb21wb25lbnRzTWFwLmdldCgic2VyaWVzIiksdCxlKX0sZWFjaFNlcmllc0J5VHlwZTpmdW5jdGlvbihpLG4sbyl7RSh0aGlzLl9zZXJpZXNJbmRpY2VzLGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KCJzZXJpZXMiKVt0XTtlLnN1YlR5cGU9PT1pJiZuLmNhbGwobyxlLHQpfSx0aGlzKX0sZWFjaFJhd1Nlcmllc0J5VHlwZTpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIEUodGhpcy5nZXRTZXJpZXNCeVR5cGUodCksZSxpKX0saXNTZXJpZXNGaWx0ZXJlZDpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dGhpcy5fc2VyaWVzSW5kaWNlc01hcC5nZXQodC5jb21wb25lbnRJbmRleCl9LGdldEN1cnJlbnRTZXJpZXNJbmRpY2VzOmZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMuX3Nlcmllc0luZGljZXN8fFtdKS5zbGljZSgpfSxmaWx0ZXJTZXJpZXM6ZnVuY3Rpb24odCxlKXt2YXIgaT1NKHRoaXMuX2NvbXBvbmVudHNNYXAuZ2V0KCJzZXJpZXMiKSx0LGUpO0p1KHRoaXMsaSl9LHJlc3RvcmVEYXRhOmZ1bmN0aW9uKGkpe3ZhciBuPXRoaXMuX2NvbXBvbmVudHNNYXA7SnUodGhpcyxuLmdldCgic2VyaWVzIikpO3ZhciBvPVtdO24uZWFjaChmdW5jdGlvbih0LGUpe28ucHVzaChlKX0pLFR1LnRvcG9sb2dpY2FsVHJhdmVsKG8sVHUuZ2V0QWxsQ2xhc3NNYWluVHlwZXMoKSxmdW5jdGlvbihlLHQpe0Uobi5nZXQoZSksZnVuY3Rpb24odCl7InNlcmllcyI9PT1lJiZmdW5jdGlvbih0LGUpe2lmKGUpe3ZhciBpPWUuc2VpcmVzSW5kZXgsbj1lLnNlcmllc0lkLG89ZS5zZXJpZXNOYW1lO3JldHVybiBudWxsIT1pJiZ0LmNvbXBvbmVudEluZGV4IT09aXx8bnVsbCE9biYmdC5pZCE9PW58fG51bGwhPW8mJnQubmFtZSE9PW99fSh0LGkpfHx0LnJlc3RvcmVEYXRhKCl9KX0pfX0pO2Z1bmN0aW9uIEp1KHQsZSl7dC5fc2VyaWVzSW5kaWNlc01hcD1RKHQuX3Nlcmllc0luZGljZXM9TihlLGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbXBvbmVudEluZGV4fSl8fFtdKX1mdW5jdGlvbiBRdSh0LGUpe3JldHVybiBlLmhhc093blByb3BlcnR5KCJzdWJUeXBlIik/TSh0LGZ1bmN0aW9uKHQpe3JldHVybiB0LnN1YlR5cGU9PT1lLnN1YlR5cGV9KTp0fWIoJHUsa3UpO3ZhciB0aD1bImdldERvbSIsImdldFpyIiwiZ2V0V2lkdGgiLCJnZXRIZWlnaHQiLCJnZXREZXZpY2VQaXhlbFJhdGlvIiwiZGlzcGF0Y2hBY3Rpb24iLCJpc0Rpc3Bvc2VkIiwib24iLCJvZmYiLCJnZXREYXRhVVJMIiwiZ2V0Q29ubmVjdGVkRGF0YVVSTCIsImdldE1vZGVsIiwiZ2V0T3B0aW9uIiwiZ2V0Vmlld09mQ29tcG9uZW50TW9kZWwiLCJnZXRWaWV3T2ZTZXJpZXNNb2RlbCJdO2Z1bmN0aW9uIGVoKGUpe0UodGgsZnVuY3Rpb24odCl7dGhpc1t0XT1BKGVbdF0sZSl9LHRoaXMpfXZhciBpaD17fTtmdW5jdGlvbiBuaCgpe3RoaXMuX2Nvb3JkaW5hdGVTeXN0ZW1zPVtdfW5oLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bmgsY3JlYXRlOmZ1bmN0aW9uKG4sbyl7dmFyIGE9W107RShpaCxmdW5jdGlvbih0LGUpe3ZhciBpPXQuY3JlYXRlKG4sbyk7YT1hLmNvbmNhdChpfHxbXSl9KSx0aGlzLl9jb29yZGluYXRlU3lzdGVtcz1hfSx1cGRhdGU6ZnVuY3Rpb24oZSxpKXtFKHRoaXMuX2Nvb3JkaW5hdGVTeXN0ZW1zLGZ1bmN0aW9uKHQpe3QudXBkYXRlJiZ0LnVwZGF0ZShlLGkpfSl9LGdldENvb3JkaW5hdGVTeXN0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nvb3JkaW5hdGVTeXN0ZW1zLnNsaWNlKCl9fSxuaC5yZWdpc3Rlcj1mdW5jdGlvbih0LGUpe2loW3RdPWV9LG5oLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gaWhbdF19O3ZhciBvaD1FLGFoPUQscmg9TixzaD1tLGxoPS9eKG1pbnxtYXgpPyguKykkLztmdW5jdGlvbiB1aCh0KXt0aGlzLl9hcGk9dCx0aGlzLl90aW1lbGluZU9wdGlvbnM9W10sdGhpcy5fbWVkaWFMaXN0PVtdLHRoaXMuX21lZGlhRGVmYXVsdCx0aGlzLl9jdXJyZW50TWVkaWFJbmRpY2VzPVtdLHRoaXMuX29wdGlvbkJhY2t1cCx0aGlzLl9uZXdCYXNlT3B0aW9ufWZ1bmN0aW9uIGhoKHQsZSxpKXt2YXIgYT17d2lkdGg6ZSxoZWlnaHQ6aSxhc3BlY3RyYXRpbzplL2l9LHI9ITA7cmV0dXJuIEUodCxmdW5jdGlvbih0LGUpe3ZhciBpPWUubWF0Y2gobGgpO2lmKGkmJmlbMV0mJmlbMl0pe3ZhciBuPWlbMV0sbz1pWzJdLnRvTG93ZXJDYXNlKCk7IWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4ibWluIj09PWk/ZTw9dDoibWF4Ij09PWk/dDw9ZTp0PT09ZX0oYVtvXSx0LG4pJiYocj0hMSl9fSkscn11aC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnVoLHNldE9wdGlvbjpmdW5jdGlvbih0LGUpe3QmJkUoRW8odC5zZXJpZXMpLGZ1bmN0aW9uKHQpe3QmJnQuZGF0YSYmVih0LmRhdGEpJiZLKHQuZGF0YSl9KSx0PWFoKHQpO3ZhciBpPXRoaXMuX29wdGlvbkJhY2t1cCxuPWZ1bmN0aW9uKHQsaSxuKXt2YXIgZSxvLGE9W10scj1bXSxzPXQudGltZWxpbmU7dC5iYXNlT3B0aW9uJiYobz10LmJhc2VPcHRpb24pOyhzfHx0Lm9wdGlvbnMpJiYobz1vfHx7fSxhPSh0Lm9wdGlvbnN8fFtdKS5zbGljZSgpKTtpZih0Lm1lZGlhKXtvPW98fHt9O3ZhciBsPXQubWVkaWE7b2gobCxmdW5jdGlvbih0KXt0JiZ0Lm9wdGlvbiYmKHQucXVlcnk/ci5wdXNoKHQpOmU9ZXx8dCl9KX1vPW98fHQ7by50aW1lbGluZXx8KG8udGltZWxpbmU9cyk7cmV0dXJuIG9oKFtvXS5jb25jYXQoYSkuY29uY2F0KE4ocixmdW5jdGlvbih0KXtyZXR1cm4gdC5vcHRpb259KSksZnVuY3Rpb24oZSl7b2goaSxmdW5jdGlvbih0KXt0KGUsbil9KX0pLHtiYXNlT3B0aW9uOm8sdGltZWxpbmVPcHRpb25zOmEsbWVkaWFEZWZhdWx0OmUsbWVkaWFMaXN0OnJ9fS5jYWxsKHRoaXMsdCxlLCFpKTt0aGlzLl9uZXdCYXNlT3B0aW9uPW4uYmFzZU9wdGlvbixpPyhmdW5jdGlvbihvLHQpe29oKHQ9dHx8e30sZnVuY3Rpb24odCxlKXtpZihudWxsIT10KXt2YXIgaT1vW2VdO2lmKFR1Lmhhc0NsYXNzKGUpKXt0PUVvKHQpO3ZhciBuPVZvKGk9RW8oaSksdCk7b1tlXT1yaChuLGZ1bmN0aW9uKHQpe3JldHVybiB0Lm9wdGlvbiYmdC5leGlzdD9zaCh0LmV4aXN0LHQub3B0aW9uLCEwKTp0LmV4aXN0fHx0Lm9wdGlvbn0pfWVsc2Ugb1tlXT1zaChpLHQsITApfX0pfShpLmJhc2VPcHRpb24sbi5iYXNlT3B0aW9uKSxuLnRpbWVsaW5lT3B0aW9ucy5sZW5ndGgmJihpLnRpbWVsaW5lT3B0aW9ucz1uLnRpbWVsaW5lT3B0aW9ucyksbi5tZWRpYUxpc3QubGVuZ3RoJiYoaS5tZWRpYUxpc3Q9bi5tZWRpYUxpc3QpLG4ubWVkaWFEZWZhdWx0JiYoaS5tZWRpYURlZmF1bHQ9bi5tZWRpYURlZmF1bHQpKTp0aGlzLl9vcHRpb25CYWNrdXA9bn0sbW91bnRPcHRpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fb3B0aW9uQmFja3VwO3JldHVybiB0aGlzLl90aW1lbGluZU9wdGlvbnM9cmgoZS50aW1lbGluZU9wdGlvbnMsYWgpLHRoaXMuX21lZGlhTGlzdD1yaChlLm1lZGlhTGlzdCxhaCksdGhpcy5fbWVkaWFEZWZhdWx0PWFoKGUubWVkaWFEZWZhdWx0KSx0aGlzLl9jdXJyZW50TWVkaWFJbmRpY2VzPVtdLGFoKHQ/ZS5iYXNlT3B0aW9uOnRoaXMuX25ld0Jhc2VPcHRpb24pfSxnZXRUaW1lbGluZU9wdGlvbjpmdW5jdGlvbih0KXt2YXIgZSxpPXRoaXMuX3RpbWVsaW5lT3B0aW9ucztpZihpLmxlbmd0aCl7dmFyIG49dC5nZXRDb21wb25lbnQoInRpbWVsaW5lIik7biYmKGU9YWgoaVtuLmdldEN1cnJlbnRJbmRleCgpXSwhMCkpfXJldHVybiBlfSxnZXRNZWRpYU9wdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9hcGkuZ2V0V2lkdGgoKSxpPXRoaXMuX2FwaS5nZXRIZWlnaHQoKSxuPXRoaXMuX21lZGlhTGlzdCxvPXRoaXMuX21lZGlhRGVmYXVsdCxhPVtdLHI9W107aWYoIW4ubGVuZ3RoJiYhbylyZXR1cm4gcjtmb3IodmFyIHM9MCxsPW4ubGVuZ3RoO3M8bDtzKyspaGgobltzXS5xdWVyeSxlLGkpJiZhLnB1c2gocyk7cmV0dXJuIWEubGVuZ3RoJiZvJiYoYT1bLTFdKSxhLmxlbmd0aCYmIWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuam9pbigiLCIpPT09ZS5qb2luKCIsIil9KGEsdGhpcy5fY3VycmVudE1lZGlhSW5kaWNlcykmJihyPXJoKGEsZnVuY3Rpb24odCl7cmV0dXJuIGFoKC0xPT09dD9vLm9wdGlvbjpuW3RdLm9wdGlvbil9KSksdGhpcy5fY3VycmVudE1lZGlhSW5kaWNlcz1hLHJ9fTt2YXIgY2g9RSxkaD1SLGZoPVsiYXJlYVN0eWxlIiwibGluZVN0eWxlIiwibm9kZVN0eWxlIiwibGlua1N0eWxlIiwiY2hvcmRTdHlsZSIsImxhYmVsIiwibGFiZWxMaW5lIl07ZnVuY3Rpb24gcGgodCl7dmFyIGU9dCYmdC5pdGVtU3R5bGU7aWYoZSlmb3IodmFyIGk9MCxuPWZoLmxlbmd0aDtpPG47aSsrKXt2YXIgbz1maFtpXSxhPWUubm9ybWFsLHI9ZS5lbXBoYXNpczthJiZhW29dJiYodFtvXT10W29dfHx7fSx0W29dLm5vcm1hbD9tKHRbb10ubm9ybWFsLGFbb10pOnRbb10ubm9ybWFsPWFbb10sYVtvXT1udWxsKSxyJiZyW29dJiYodFtvXT10W29dfHx7fSx0W29dLmVtcGhhc2lzP20odFtvXS5lbXBoYXNpcyxyW29dKTp0W29dLmVtcGhhc2lzPXJbb10scltvXT1udWxsKX19ZnVuY3Rpb24gZ2godCxlLGkpe2lmKHQmJnRbZV0mJih0W2VdLm5vcm1hbHx8dFtlXS5lbXBoYXNpcykpe3ZhciBuPXRbZV0ubm9ybWFsLG89dFtlXS5lbXBoYXNpcztuJiYoaT8odFtlXS5ub3JtYWw9dFtlXS5lbXBoYXNpcz1udWxsLEModFtlXSxuKSk6dFtlXT1uKSxvJiYodC5lbXBoYXNpcz10LmVtcGhhc2lzfHx7fSx0LmVtcGhhc2lzW2VdPW8pfX1mdW5jdGlvbiBtaCh0KXtnaCh0LCJpdGVtU3R5bGUiKSxnaCh0LCJsaW5lU3R5bGUiKSxnaCh0LCJhcmVhU3R5bGUiKSxnaCh0LCJsYWJlbCIpLGdoKHQsImxhYmVsTGluZSIpLGdoKHQsInVwcGVyTGFiZWwiKSxnaCh0LCJlZGdlTGFiZWwiKX1mdW5jdGlvbiB2aCh0LGUpe3ZhciBpPWRoKHQpJiZ0W2VdLG49ZGgoaSkmJmkudGV4dFN0eWxlO2lmKG4pZm9yKHZhciBvPTAsYT1Sby5sZW5ndGg7bzxhO28rKyl7ZT1Sb1tvXTtuLmhhc093blByb3BlcnR5KGUpJiYoaVtlXT1uW2VdKX19ZnVuY3Rpb24geWgodCl7dCYmKG1oKHQpLHZoKHQsImxhYmVsIiksdC5lbXBoYXNpcyYmdmgodC5lbXBoYXNpcywibGFiZWwiKSl9ZnVuY3Rpb24geGgodCl7cmV0dXJuIGsodCk/dDp0P1t0XTpbXX1mdW5jdGlvbiBfaCh0KXtyZXR1cm4oayh0KT90WzBdOnQpfHx7fX1mdW5jdGlvbiB3aChlLHQpe2NoKHhoKGUuc2VyaWVzKSxmdW5jdGlvbih0KXtkaCh0KSYmZnVuY3Rpb24odCl7aWYoZGgodCkpe3BoKHQpLG1oKHQpLHZoKHQsImxhYmVsIiksdmgodCwidXBwZXJMYWJlbCIpLHZoKHQsImVkZ2VMYWJlbCIpLHQuZW1waGFzaXMmJih2aCh0LmVtcGhhc2lzLCJsYWJlbCIpLHZoKHQuZW1waGFzaXMsInVwcGVyTGFiZWwiKSx2aCh0LmVtcGhhc2lzLCJlZGdlTGFiZWwiKSksKGk9dC5tYXJrUG9pbnQpJiYocGgoaSkseWgoaSkpLChuPXQubWFya0xpbmUpJiYocGgobikseWgobikpO3ZhciBlPXQubWFya0FyZWE7ZSYmeWgoZSk7dmFyIGksbixvPXQuZGF0YTtpZigiZ3JhcGgiPT09dC50eXBlKXtvPW98fHQubm9kZXM7dmFyIGE9dC5saW5rc3x8dC5lZGdlcztpZihhJiYhVihhKSlmb3IodmFyIHI9MDtyPGEubGVuZ3RoO3IrKyl5aChhW3JdKTtFKHQuY2F0ZWdvcmllcyxmdW5jdGlvbih0KXttaCh0KX0pfWlmKG8mJiFWKG8pKWZvcihyPTA7cjxvLmxlbmd0aDtyKyspeWgob1tyXSk7aWYoKGk9dC5tYXJrUG9pbnQpJiZpLmRhdGEpe3ZhciBzPWkuZGF0YTtmb3Iocj0wO3I8cy5sZW5ndGg7cisrKXloKHNbcl0pfWlmKChuPXQubWFya0xpbmUpJiZuLmRhdGEpe3ZhciBsPW4uZGF0YTtmb3Iocj0wO3I8bC5sZW5ndGg7cisrKWsobFtyXSk/KHloKGxbcl1bMF0pLHloKGxbcl1bMV0pKTp5aChsW3JdKX0iZ2F1Z2UiPT09dC50eXBlPyh2aCh0LCJheGlzTGFiZWwiKSx2aCh0LCJ0aXRsZSIpLHZoKHQsImRldGFpbCIpKToidHJlZW1hcCI9PT10LnR5cGU/KGdoKHQuYnJlYWRjcnVtYiwiaXRlbVN0eWxlIiksRSh0LmxldmVscyxmdW5jdGlvbih0KXttaCh0KX0pKToidHJlZSI9PT10LnR5cGUmJm1oKHQubGVhdmVzKX19KHQpfSk7dmFyIGk9WyJ4QXhpcyIsInlBeGlzIiwicmFkaXVzQXhpcyIsImFuZ2xlQXhpcyIsInNpbmdsZUF4aXMiLCJwYXJhbGxlbEF4aXMiLCJyYWRhciJdO3QmJmkucHVzaCgidmFsdWVBeGlzIiwiY2F0ZWdvcnlBeGlzIiwibG9nQXhpcyIsInRpbWVBeGlzIiksY2goaSxmdW5jdGlvbih0KXtjaCh4aChlW3RdKSxmdW5jdGlvbih0KXt0JiYodmgodCwiYXhpc0xhYmVsIiksdmgodC5heGlzUG9pbnRlciwibGFiZWwiKSl9KX0pLGNoKHhoKGUucGFyYWxsZWwpLGZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQucGFyYWxsZWxBeGlzRGVmYXVsdDt2aChlLCJheGlzTGFiZWwiKSx2aChlJiZlLmF4aXNQb2ludGVyLCJsYWJlbCIpfSksY2goeGgoZS5jYWxlbmRhciksZnVuY3Rpb24odCl7Z2godCwiaXRlbVN0eWxlIiksdmgodCwiZGF5TGFiZWwiKSx2aCh0LCJtb250aExhYmVsIiksdmgodCwieWVhckxhYmVsIil9KSxjaCh4aChlLnJhZGFyKSxmdW5jdGlvbih0KXt2aCh0LCJuYW1lIil9KSxjaCh4aChlLmdlbyksZnVuY3Rpb24odCl7ZGgodCkmJih5aCh0KSxjaCh4aCh0LnJlZ2lvbnMpLGZ1bmN0aW9uKHQpe3loKHQpfSkpfSksY2goeGgoZS50aW1lbGluZSksZnVuY3Rpb24odCl7eWgodCksZ2godCwibGFiZWwiKSxnaCh0LCJpdGVtU3R5bGUiKSxnaCh0LCJjb250cm9sU3R5bGUiLCEwKTt2YXIgZT10LmRhdGE7ayhlKSYmRShlLGZ1bmN0aW9uKHQpe1IodCkmJihnaCh0LCJsYWJlbCIpLGdoKHQsIml0ZW1TdHlsZSIpKX0pfSksY2goeGgoZS50b29sYm94KSxmdW5jdGlvbih0KXtnaCh0LCJpY29uU3R5bGUiKSxjaCh0LmZlYXR1cmUsZnVuY3Rpb24odCl7Z2godCwiaWNvblN0eWxlIil9KX0pLHZoKF9oKGUuYXhpc1BvaW50ZXIpLCJsYWJlbCIpLHZoKF9oKGUudG9vbHRpcCkuYXhpc1BvaW50ZXIsImxhYmVsIil9ZnVuY3Rpb24gYmgoZSl7RShTaCxmdW5jdGlvbih0KXt0WzBdaW4gZSYmISh0WzFdaW4gZSkmJihlW3RbMV1dPWVbdFswXV0pfSl9dmFyIFNoPVtbIngiLCJsZWZ0Il0sWyJ5IiwidG9wIl0sWyJ4MiIsInJpZ2h0Il0sWyJ5MiIsImJvdHRvbSJdXSxNaD1bImdyaWQiLCJnZW8iLCJwYXJhbGxlbCIsImxlZ2VuZCIsInRvb2xib3giLCJ0aXRsZSIsInZpc3VhbE1hcCIsImRhdGFab29tIiwidGltZWxpbmUiXSxJaD1mdW5jdGlvbihpLHQpe3doKGksdCksaS5zZXJpZXM9RW8oaS5zZXJpZXMpLEUoaS5zZXJpZXMsZnVuY3Rpb24odCl7aWYoUih0KSl7dmFyIGU9dC50eXBlO2lmKCJsaW5lIj09PWUpbnVsbCE9dC5jbGlwT3ZlcmZsb3cmJih0LmNsaXA9dC5jbGlwT3ZlcmZsb3cpO2Vsc2UgaWYoInBpZSI9PT1lfHwiZ2F1Z2UiPT09ZSludWxsIT10LmNsb2NrV2lzZSYmKHQuY2xvY2t3aXNlPXQuY2xvY2tXaXNlKTtlbHNlIGlmKCJnYXVnZSI9PT1lKXt2YXIgaT1mdW5jdGlvbih0LGUpe2U9ZS5zcGxpdCgiLCIpO2Zvcih2YXIgaT10LG49MDtuPGUubGVuZ3RoJiZudWxsIT0oaT1pJiZpW2Vbbl1dKTtuKyspO3JldHVybiBpfSh0LCJwb2ludGVyLmNvbG9yIik7bnVsbCE9aSYmZnVuY3Rpb24odCxlLGksbil7ZT1lLnNwbGl0KCIsIik7Zm9yKHZhciBvLGE9dCxyPTA7cjxlLmxlbmd0aC0xO3IrKyludWxsPT1hW289ZVtyXV0mJihhW29dPXt9KSxhPWFbb107IW4mJm51bGwhPWFbZVtyXV18fChhW2Vbcl1dPWkpfSh0LCJpdGVtU3R5bGUuY29sb3IiLGkpfWJoKHQpfX0pLGkuZGF0YVJhbmdlJiYoaS52aXN1YWxNYXA9aS5kYXRhUmFuZ2UpLEUoTWgsZnVuY3Rpb24odCl7dmFyIGU9aVt0XTtlJiYoayhlKXx8KGU9W2VdKSxFKGUsZnVuY3Rpb24odCl7YmgodCl9KSl9KX07ZnVuY3Rpb24gVGgobSl7RShtLGZ1bmN0aW9uKGgsYyl7dmFyIGQ9W10sZj1bTmFOLE5hTl0sdD1baC5zdGFja1Jlc3VsdERpbWVuc2lvbixoLnN0YWNrZWRPdmVyRGltZW5zaW9uXSxwPWguZGF0YSxnPWguaXNTdGFja2VkQnlJbmRleCxlPXAubWFwKHQsZnVuY3Rpb24odCxlLGkpe3ZhciBuLG8sYT1wLmdldChoLnN0YWNrZWREaW1lbnNpb24saSk7aWYoaXNOYU4oYSkpcmV0dXJuIGY7Zz9vPXAuZ2V0UmF3SW5kZXgoaSk6bj1wLmdldChoLnN0YWNrZWRCeURpbWVuc2lvbixpKTtmb3IodmFyIHI9TmFOLHM9Yy0xOzA8PXM7cy0tKXt2YXIgbD1tW3NdO2lmKGd8fChvPWwuZGF0YS5yYXdJbmRleE9mKGwuc3RhY2tlZEJ5RGltZW5zaW9uLG4pKSwwPD1vKXt2YXIgdT1sLmRhdGEuZ2V0QnlSYXdJbmRleChsLnN0YWNrUmVzdWx0RGltZW5zaW9uLG8pO2lmKDA8PWEmJjA8dXx8YTw9MCYmdTwwKXthKz11LHI9dTticmVha319fXJldHVybiBkWzBdPWEsZFsxXT1yLGR9KTtwLmhvc3RNb2RlbC5zZXREYXRhKGUpLGguZGF0YT1lfSl9ZnVuY3Rpb24gQWgodCxlKXtHdS5pc0luc3RhbmNlKHQpfHwodD1HdS5zZXJpZXNEYXRhVG9Tb3VyY2UodCkpLHRoaXMuX3NvdXJjZT10O3ZhciBpPXRoaXMuX2RhdGE9dC5kYXRhLG49dC5zb3VyY2VGb3JtYXQ7bj09PVJ1JiYodGhpcy5fb2Zmc2V0PTAsdGhpcy5fZGltU2l6ZT1lLHRoaXMuX2RhdGE9aSksTCh0aGlzLENoW249PT1OdT9uKyJfIit0LnNlcmllc0xheW91dEJ5Om5dKX12YXIgRGg9QWgucHJvdG90eXBlO0RoLnB1cmU9ITE7dmFyIENoPXthcnJheVJvd3NfY29sdW1uOntwdXJlOkRoLnBlcnNpc3RlbnQ9ITAsY291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5tYXgoMCx0aGlzLl9kYXRhLmxlbmd0aC10aGlzLl9zb3VyY2Uuc3RhcnRJbmRleCl9LGdldEl0ZW06ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2RhdGFbdCt0aGlzLl9zb3VyY2Uuc3RhcnRJbmRleF19LGFwcGVuZERhdGE6UGh9LGFycmF5Um93c19yb3c6e3B1cmU6ITAsY291bnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhWzBdO3JldHVybiB0P01hdGgubWF4KDAsdC5sZW5ndGgtdGhpcy5fc291cmNlLnN0YXJ0SW5kZXgpOjB9LGdldEl0ZW06ZnVuY3Rpb24odCl7dCs9dGhpcy5fc291cmNlLnN0YXJ0SW5kZXg7Zm9yKHZhciBlPVtdLGk9dGhpcy5fZGF0YSxuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPWlbbl07ZS5wdXNoKG8/b1t0XTpudWxsKX1yZXR1cm4gZX0sYXBwZW5kRGF0YTpmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcignRG8gbm90IHN1cHBvcnQgYXBwZW5kRGF0YSB3aGVuIHNldCBzZXJpZXNMYXlvdXRCeTogInJvdyIuJyl9fSxvYmplY3RSb3dzOntwdXJlOiEwLGNvdW50OkxoLGdldEl0ZW06a2gsYXBwZW5kRGF0YTpQaH0sa2V5ZWRDb2x1bW5zOntwdXJlOiEwLGNvdW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fc291cmNlLmRpbWVuc2lvbnNEZWZpbmVbMF0ubmFtZSxlPXRoaXMuX2RhdGFbdF07cmV0dXJuIGU/ZS5sZW5ndGg6MH0sZ2V0SXRlbTpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10saT10aGlzLl9zb3VyY2UuZGltZW5zaW9uc0RlZmluZSxuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPXRoaXMuX2RhdGFbaVtuXS5uYW1lXTtlLnB1c2gobz9vW3RdOm51bGwpfXJldHVybiBlfSxhcHBlbmREYXRhOmZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMuX2RhdGE7RSh0LGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPW9bZV18fChvW2VdPVtdKSxuPTA7bjwodHx8W10pLmxlbmd0aDtuKyspaS5wdXNoKHRbbl0pfSl9fSxvcmlnaW5hbDp7Y291bnQ6TGgsZ2V0SXRlbTpraCxhcHBlbmREYXRhOlBofSx0eXBlZEFycmF5OntwZXJzaXN0ZW50OiEoRGguZ2V0U291cmNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NvdXJjZX0pLHB1cmU6ITAsY291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YT90aGlzLl9kYXRhLmxlbmd0aC90aGlzLl9kaW1TaXplOjB9LGdldEl0ZW06ZnVuY3Rpb24odCxlKXt0LT10aGlzLl9vZmZzZXQsZT1lfHxbXTtmb3IodmFyIGk9dGhpcy5fZGltU2l6ZSp0LG49MDtuPHRoaXMuX2RpbVNpemU7bisrKWVbbl09dGhpcy5fZGF0YVtpK25dO3JldHVybiBlfSxhcHBlbmREYXRhOmZ1bmN0aW9uKHQpe3RoaXMuX2RhdGE9dH0sY2xlYW46ZnVuY3Rpb24oKXt0aGlzLl9vZmZzZXQrPXRoaXMuY291bnQoKSx0aGlzLl9kYXRhPW51bGx9fX07ZnVuY3Rpb24gTGgoKXtyZXR1cm4gdGhpcy5fZGF0YS5sZW5ndGh9ZnVuY3Rpb24ga2godCl7cmV0dXJuIHRoaXMuX2RhdGFbdF19ZnVuY3Rpb24gUGgodCl7Zm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspdGhpcy5fZGF0YS5wdXNoKHRbZV0pfXZhciBOaD17YXJyYXlSb3dzOk9oLG9iamVjdFJvd3M6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIG51bGwhPWk/dFtuXTp0fSxrZXllZENvbHVtbnM6T2gsb3JpZ2luYWw6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89Qm8odCk7cmV0dXJuIG51bGwhPWkmJm8gaW5zdGFuY2VvZiBBcnJheT9vW2ldOm99LHR5cGVkQXJyYXk6T2h9O2Z1bmN0aW9uIE9oKHQsZSxpLG4pe3JldHVybiBudWxsIT1pP3RbaV06dH12YXIgRWg9e2FycmF5Um93czp6aCxvYmplY3RSb3dzOmZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiBSaCh0W2VdLHRoaXMuX2RpbWVuc2lvbkluZm9zW2VdKX0sa2V5ZWRDb2x1bW5zOnpoLG9yaWdpbmFsOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQmJihudWxsPT10LnZhbHVlP3Q6dC52YWx1ZSk7cmV0dXJuIXRoaXMuX3Jhd0RhdGEucHVyZSYmZnVuY3Rpb24odCl7cmV0dXJuIFBvKHQpJiYhKHQgaW5zdGFuY2VvZiBBcnJheSl9KHQpJiYodGhpcy5oYXNJdGVtT3B0aW9uPSEwKSxSaChvIGluc3RhbmNlb2YgQXJyYXk/b1tuXTpvLHRoaXMuX2RpbWVuc2lvbkluZm9zW2VdKX0sdHlwZWRBcnJheTpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdFtuXX19O2Z1bmN0aW9uIHpoKHQsZSxpLG4pe3JldHVybiBSaCh0W25dLHRoaXMuX2RpbWVuc2lvbkluZm9zW2VdKX1mdW5jdGlvbiBSaCh0LGUpe3ZhciBpPWUmJmUudHlwZTtpZigib3JkaW5hbCIhPT1pKXJldHVybiJ0aW1lIj09PWkmJiJudW1iZXIiIT10eXBlb2YgdCYmbnVsbCE9dCYmIi0iIT09dCYmKHQ9K0hsKHQpKSxudWxsPT10fHwiIj09PXQ/TmFOOit0O3ZhciBuPWUmJmUub3JkaW5hbE1ldGE7cmV0dXJuIG4/bi5wYXJzZUFuZENvbGxlY3QodCk6dH1mdW5jdGlvbiBCaCh0LGUsaSl7aWYodCl7dmFyIG49dC5nZXRSYXdEYXRhSXRlbShlKTtpZihudWxsIT1uKXt2YXIgbyxhLHI9dC5nZXRQcm92aWRlcigpLmdldFNvdXJjZSgpLnNvdXJjZUZvcm1hdCxzPXQuZ2V0RGltZW5zaW9uSW5mbyhpKTtyZXR1cm4gcyYmKG89cy5uYW1lLGE9cy5pbmRleCksTmhbcl0obixlLGEsbyl9fX1mdW5jdGlvbiBWaCh0LGUsaSl7aWYodCl7dmFyIG49dC5nZXRQcm92aWRlcigpLmdldFNvdXJjZSgpLnNvdXJjZUZvcm1hdDtpZihuPT09UHV8fG49PT1PdSl7dmFyIG89dC5nZXRSYXdEYXRhSXRlbShlKTtyZXR1cm4gbiE9PVB1fHxSKG8pfHwobz1udWxsKSxvP29baV06dm9pZCAwfX19dmFyIEdoPS9ce0AoLis/KVx9L2csRmg9e2dldERhdGFQYXJhbXM6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmdldERhdGEoZSksbj10aGlzLmdldFJhd1ZhbHVlKHQsZSksbz1pLmdldFJhd0luZGV4KHQpLGE9aS5nZXROYW1lKHQpLHI9aS5nZXRSYXdEYXRhSXRlbSh0KSxzPWkuZ2V0SXRlbVZpc3VhbCh0LCJjb2xvciIpLGw9aS5nZXRJdGVtVmlzdWFsKHQsImJvcmRlckNvbG9yIiksdT10aGlzLmVjTW9kZWwuZ2V0Q29tcG9uZW50KCJ0b29sdGlwIiksaD1xbyh1JiZ1LmdldCgicmVuZGVyTW9kZSIpKSxjPXRoaXMubWFpblR5cGUsZD0ic2VyaWVzIj09PWMsZj1pLnVzZXJPdXRwdXQ7cmV0dXJue2NvbXBvbmVudFR5cGU6Yyxjb21wb25lbnRTdWJUeXBlOnRoaXMuc3ViVHlwZSxjb21wb25lbnRJbmRleDp0aGlzLmNvbXBvbmVudEluZGV4LHNlcmllc1R5cGU6ZD90aGlzLnN1YlR5cGU6bnVsbCxzZXJpZXNJbmRleDp0aGlzLnNlcmllc0luZGV4LHNlcmllc0lkOmQ/dGhpcy5pZDpudWxsLHNlcmllc05hbWU6ZD90aGlzLm5hbWU6bnVsbCxuYW1lOmEsZGF0YUluZGV4Om8sZGF0YTpyLGRhdGFUeXBlOmUsdmFsdWU6bixjb2xvcjpzLGJvcmRlckNvbG9yOmwsZGltZW5zaW9uTmFtZXM6Zj9mLmRpbWVuc2lvbk5hbWVzOm51bGwsZW5jb2RlOmY/Zi5lbmNvZGU6bnVsbCxtYXJrZXI6cnUoe2NvbG9yOnMscmVuZGVyTW9kZTpofSksJHZhcnM6WyJzZXJpZXNOYW1lIiwibmFtZSIsInZhbHVlIl19fSxnZXRGb3JtYXR0ZWRMYWJlbDpmdW5jdGlvbihuLHQsZSxpLG8pe3Q9dHx8Im5vcm1hbCI7dmFyIGE9dGhpcy5nZXREYXRhKGUpLHI9YS5nZXRJdGVtTW9kZWwobikscz10aGlzLmdldERhdGFQYXJhbXMobixlKTtudWxsIT1pJiZzLnZhbHVlIGluc3RhbmNlb2YgQXJyYXkmJihzLnZhbHVlPXMudmFsdWVbaV0pO3ZhciBsPXIuZ2V0KCJub3JtYWwiPT09dD9bb3x8ImxhYmVsIiwiZm9ybWF0dGVyIl06W3Qsb3x8ImxhYmVsIiwiZm9ybWF0dGVyIl0pO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBsPyhzLnN0YXR1cz10LHMuZGltZW5zaW9uSW5kZXg9aSxsKHMpKToic3RyaW5nIj09dHlwZW9mIGw/b3UobCxzKS5yZXBsYWNlKEdoLGZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5sZW5ndGg7cmV0dXJuIlsiPT09ZS5jaGFyQXQoMCkmJiJdIj09PWUuY2hhckF0KGktMSkmJihlPStlLnNsaWNlKDEsaS0xKSksQmgoYSxuLGUpfSk6dm9pZCAwfSxnZXRSYXdWYWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiBCaCh0aGlzLmdldERhdGEoZSksdCl9LGZvcm1hdFRvb2x0aXA6ZnVuY3Rpb24oKXt9fTtmdW5jdGlvbiBXaCh0KXtyZXR1cm4gbmV3IEhoKHQpfWZ1bmN0aW9uIEhoKHQpe3Q9dHx8e30sdGhpcy5fcmVzZXQ9dC5yZXNldCx0aGlzLl9wbGFuPXQucGxhbix0aGlzLl9jb3VudD10LmNvdW50LHRoaXMuX29uRGlydHk9dC5vbkRpcnR5LHRoaXMuX2RpcnR5PSEwLHRoaXMuY29udGV4dH12YXIgWmg9SGgucHJvdG90eXBlO1poLnBlcmZvcm09ZnVuY3Rpb24odCl7dmFyIGUsaT10aGlzLl91cHN0cmVhbSxuPXQmJnQuc2tpcDtpZih0aGlzLl9kaXJ0eSYmaSl7dmFyIG89dGhpcy5jb250ZXh0O28uZGF0YT1vLm91dHB1dERhdGE9aS5jb250ZXh0Lm91dHB1dERhdGF9dGhpcy5fX3BpcGVsaW5lJiYodGhpcy5fX3BpcGVsaW5lLmN1cnJlbnRUYXNrPXRoaXMpLHRoaXMuX3BsYW4mJiFuJiYoZT10aGlzLl9wbGFuKHRoaXMuY29udGV4dCkpO3ZhciBhLHI9aCh0aGlzLl9tb2RCeSkscz10aGlzLl9tb2REYXRhQ291bnR8fDAsbD1oKHQmJnQubW9kQnkpLHU9dCYmdC5tb2REYXRhQ291bnR8fDA7ZnVuY3Rpb24gaCh0KXtyZXR1cm4gMTw9dHx8KHQ9MSksdH1yPT09bCYmcz09PXV8fChlPSJyZXNldCIpLCF0aGlzLl9kaXJ0eSYmInJlc2V0IiE9PWV8fCh0aGlzLl9kaXJ0eT0hMSxhPWZ1bmN0aW9uKHQsZSl7dmFyIGksbjt0Ll9kdWVJbmRleD10Ll9vdXRwdXREdWVFbmQ9dC5fZHVlRW5kPTAsdC5fc2V0dGVkT3V0cHV0RW5kPW51bGwsIWUmJnQuX3Jlc2V0JiYoKGk9dC5fcmVzZXQodC5jb250ZXh0KSkmJmkucHJvZ3Jlc3MmJihuPWkuZm9yY2VGaXJzdFByb2dyZXNzLGk9aS5wcm9ncmVzcyksayhpKSYmIWkubGVuZ3RoJiYoaT1udWxsKSk7dC5fcHJvZ3Jlc3M9aSx0Ll9tb2RCeT10Ll9tb2REYXRhQ291bnQ9bnVsbDt2YXIgbz10Ll9kb3duc3RyZWFtO3JldHVybiBvJiZvLmRpcnR5KCksbn0odGhpcyxuKSksdGhpcy5fbW9kQnk9bCx0aGlzLl9tb2REYXRhQ291bnQ9dTt2YXIgYz10JiZ0LnN0ZXA7aWYodGhpcy5fZHVlRW5kPWk/aS5fb3V0cHV0RHVlRW5kOnRoaXMuX2NvdW50P3RoaXMuX2NvdW50KHRoaXMuY29udGV4dCk6MS8wLHRoaXMuX3Byb2dyZXNzKXt2YXIgZD10aGlzLl9kdWVJbmRleCxmPU1hdGgubWluKG51bGwhPWM/dGhpcy5fZHVlSW5kZXgrYzoxLzAsdGhpcy5fZHVlRW5kKTtpZighbiYmKGF8fGQ8Zikpe3ZhciBwPXRoaXMuX3Byb2dyZXNzO2lmKGsocCkpZm9yKHZhciBnPTA7ZzxwLmxlbmd0aDtnKyspdGModGhpcyxwW2ddLGQsZixsLHUpO2Vsc2UgdGModGhpcyxwLGQsZixsLHUpfXRoaXMuX2R1ZUluZGV4PWY7dmFyIG09bnVsbCE9dGhpcy5fc2V0dGVkT3V0cHV0RW5kP3RoaXMuX3NldHRlZE91dHB1dEVuZDpmO3RoaXMuX291dHB1dER1ZUVuZD1tfWVsc2UgdGhpcy5fZHVlSW5kZXg9dGhpcy5fb3V0cHV0RHVlRW5kPW51bGwhPXRoaXMuX3NldHRlZE91dHB1dEVuZD90aGlzLl9zZXR0ZWRPdXRwdXRFbmQ6dGhpcy5fZHVlRW5kO3JldHVybiB0aGlzLnVuZmluaXNoZWQoKX07dmFyIFVoLFhoLFloLGpoLHFoLEtoLCRoPUtoPXtyZXNldDpmdW5jdGlvbih0LGUsaSxuKXtYaD10LFVoPWUsWWg9aSxqaD1uLHFoPU1hdGguY2VpbChqaC9ZaCksS2gubmV4dD0xPFloJiYwPGpoP1FoOkpofX07ZnVuY3Rpb24gSmgoKXtyZXR1cm4gWGg8VWg/WGgrKzpudWxsfWZ1bmN0aW9uIFFoKCl7dmFyIHQ9WGglcWgqWWgrTWF0aC5jZWlsKFhoL3FoKSxlPVVoPD1YaD9udWxsOnQ8amg/dDpYaDtyZXR1cm4gWGgrKyxlfWZ1bmN0aW9uIHRjKHQsZSxpLG4sbyxhKXskaC5yZXNldChpLG4sbyxhKSx0Ll9jYWxsaW5nUHJvZ3Jlc3M9ZSx0Ll9jYWxsaW5nUHJvZ3Jlc3Moe3N0YXJ0OmksZW5kOm4sY291bnQ6bi1pLG5leHQ6JGgubmV4dH0sdC5jb250ZXh0KX1aaC5kaXJ0eT1mdW5jdGlvbigpe3RoaXMuX2RpcnR5PSEwLHRoaXMuX29uRGlydHkmJnRoaXMuX29uRGlydHkodGhpcy5jb250ZXh0KX0sWmgudW5maW5pc2hlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9ncmVzcyYmdGhpcy5fZHVlSW5kZXg8dGhpcy5fZHVlRW5kfSxaaC5waXBlPWZ1bmN0aW9uKHQpe3RoaXMuX2Rvd25zdHJlYW09PT10JiYhdGhpcy5fZGlydHl8fCgodGhpcy5fZG93bnN0cmVhbT10KS5fdXBzdHJlYW09dGhpcyx0LmRpcnR5KCkpfSxaaC5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5fZGlzcG9zZWR8fCh0aGlzLl91cHN0cmVhbSYmKHRoaXMuX3Vwc3RyZWFtLl9kb3duc3RyZWFtPW51bGwpLHRoaXMuX2Rvd25zdHJlYW0mJih0aGlzLl9kb3duc3RyZWFtLl91cHN0cmVhbT1udWxsKSx0aGlzLl9kaXJ0eT0hMSx0aGlzLl9kaXNwb3NlZD0hMCl9LFpoLmdldFVwc3RyZWFtPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Vwc3RyZWFtfSxaaC5nZXREb3duc3RyZWFtPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Rvd25zdHJlYW19LFpoLnNldE91dHB1dEVuZD1mdW5jdGlvbih0KXt0aGlzLl9vdXRwdXREdWVFbmQ9dGhpcy5fc2V0dGVkT3V0cHV0RW5kPXR9O3ZhciBlYz1abygpLGljPVR1LmV4dGVuZCh7dHlwZToic2VyaWVzLl9fYmFzZV9fIixzZXJpZXNJbmRleDowLGNvb3JkaW5hdGVTeXN0ZW06bnVsbCxkZWZhdWx0T3B0aW9uOm51bGwsbGVnZW5kVmlzdWFsUHJvdmlkZXI6bnVsbCx2aXN1YWxDb2xvckFjY2Vzc1BhdGg6Iml0ZW1TdHlsZS5jb2xvciIsdmlzdWFsQm9yZGVyQ29sb3JBY2Nlc3NQYXRoOiJpdGVtU3R5bGUuYm9yZGVyQ29sb3IiLGxheW91dE1vZGU6bnVsbCxpbml0OmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuc2VyaWVzSW5kZXg9dGhpcy5jb21wb25lbnRJbmRleCx0aGlzLmRhdGFUYXNrPVdoKHtjb3VudDpvYyxyZXNldDphY30pLHRoaXMuZGF0YVRhc2suY29udGV4dD17bW9kZWw6dGhpc30sdGhpcy5tZXJnZURlZmF1bHRBbmRUaGVtZSh0LGkpLEh1KHRoaXMpO3ZhciBvPXRoaXMuZ2V0SW5pdGlhbERhdGEodCxpKTtzYyhvLHRoaXMpLHRoaXMuZGF0YVRhc2suY29udGV4dC5kYXRhPW8sZWModGhpcykuZGF0YUJlZm9yZVByb2Nlc3NlZD1vLG5jKHRoaXMpfSxtZXJnZURlZmF1bHRBbmRUaGVtZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMubGF5b3V0TW9kZSxuPWk/X3UodCk6e30sbz10aGlzLnN1YlR5cGU7VHUuaGFzQ2xhc3MobykmJihvKz0iU2VyaWVzIiksbSh0LGUuZ2V0VGhlbWUoKS5nZXQodGhpcy5zdWJUeXBlKSksbSh0LHRoaXMuZ2V0RGVmYXVsdE9wdGlvbigpKSx6byh0LCJsYWJlbCIsWyJzaG93Il0pLHRoaXMuZmlsbERhdGFUZXh0U3R5bGUodC5kYXRhKSxpJiZ4dSh0LG4saSl9LG1lcmdlT3B0aW9uOmZ1bmN0aW9uKHQsZSl7dD1tKHRoaXMub3B0aW9uLHQsITApLHRoaXMuZmlsbERhdGFUZXh0U3R5bGUodC5kYXRhKTt2YXIgaT10aGlzLmxheW91dE1vZGU7aSYmeHUodGhpcy5vcHRpb24sdCxpKSxIdSh0aGlzKTt2YXIgbj10aGlzLmdldEluaXRpYWxEYXRhKHQsZSk7c2Mobix0aGlzKSx0aGlzLmRhdGFUYXNrLmRpcnR5KCksdGhpcy5kYXRhVGFzay5jb250ZXh0LmRhdGE9bixlYyh0aGlzKS5kYXRhQmVmb3JlUHJvY2Vzc2VkPW4sbmModGhpcyl9LGZpbGxEYXRhVGV4dFN0eWxlOmZ1bmN0aW9uKHQpe2lmKHQmJiFWKHQpKWZvcih2YXIgZT1bInNob3ciXSxpPTA7aTx0Lmxlbmd0aDtpKyspdFtpXSYmdFtpXS5sYWJlbCYmem8odFtpXSwibGFiZWwiLGUpfSxnZXRJbml0aWFsRGF0YTpmdW5jdGlvbigpe30sYXBwZW5kRGF0YTpmdW5jdGlvbih0KXt0aGlzLmdldFJhd0RhdGEoKS5hcHBlbmREYXRhKHQuZGF0YSl9LGdldERhdGE6ZnVuY3Rpb24odCl7dmFyIGU9dWModGhpcyk7aWYoZSl7dmFyIGk9ZS5jb250ZXh0LmRhdGE7cmV0dXJuIG51bGw9PXQ/aTppLmdldExpbmtlZERhdGEodCl9cmV0dXJuIGVjKHRoaXMpLmRhdGF9LHNldERhdGE6ZnVuY3Rpb24odCl7dmFyIGU9dWModGhpcyk7aWYoZSl7dmFyIGk9ZS5jb250ZXh0O2kuZGF0YSE9PXQmJmUubW9kaWZ5T3V0cHV0RW5kJiZlLnNldE91dHB1dEVuZCh0LmNvdW50KCkpLGkub3V0cHV0RGF0YT10LGUhPT10aGlzLmRhdGFUYXNrJiYoaS5kYXRhPXQpfWVjKHRoaXMpLmRhdGE9dH0sZ2V0U291cmNlOmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBXdSh0KS5zb3VyY2V9KHRoaXMpfSxnZXRSYXdEYXRhOmZ1bmN0aW9uKCl7cmV0dXJuIGVjKHRoaXMpLmRhdGFCZWZvcmVQcm9jZXNzZWR9LGdldEJhc2VBeGlzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb29yZGluYXRlU3lzdGVtO3JldHVybiB0JiZ0LmdldEJhc2VBeGlzJiZ0LmdldEJhc2VBeGlzKCl9LGZvcm1hdFRvb2x0aXA6ZnVuY3Rpb24obyxoLHQsYyl7dmFyIGQ9dGhpcyxlPSJodG1sIj09PShjPWN8fCJodG1sIik/Ijxici8+IjoiXG4iLGY9InJpY2hUZXh0Ij09PWMscD17fSxnPTA7ZnVuY3Rpb24gaSh0KXtyZXR1cm57cmVuZGVyTW9kZTpjLGNvbnRlbnQ6ZXUoS2wodCkpLHN0eWxlOnB9fXZhciBtPXRoaXMuZ2V0RGF0YSgpLGE9bS5tYXBEaW1lbnNpb24oImRlZmF1bHRlZFRvb2x0aXAiLCEwKSxuPWEubGVuZ3RoLHI9dGhpcy5nZXRSYXdWYWx1ZShvKSxzPWsociksdj1tLmdldEl0ZW1WaXN1YWwobywiY29sb3IiKTtSKHYpJiZ2LmNvbG9yU3RvcHMmJih2PSh2LmNvbG9yU3RvcHNbMF18fHt9KS5jb2xvciksdj12fHwidHJhbnNwYXJlbnQiO3ZhciBsPSgxPG58fHMmJiFuP2Z1bmN0aW9uKHQpe3ZhciBsPVModCxmdW5jdGlvbih0LGUsaSl7dmFyIG49bS5nZXREaW1lbnNpb25JbmZvKGkpO3JldHVybiB0fChuJiYhMSE9PW4udG9vbHRpcCYmbnVsbCE9bi5kaXNwbGF5TmFtZSl9LDApLHU9W107ZnVuY3Rpb24gZSh0LGUpe3ZhciBpPW0uZ2V0RGltZW5zaW9uSW5mbyhlKTtpZihpJiYhMSE9PWkub3RoZXJEaW1zLnRvb2x0aXApe3ZhciBuPWkudHlwZSxvPSJzdWIiK2Quc2VyaWVzSW5kZXgrImF0IitnLGE9cnUoe2NvbG9yOnYsdHlwZToic3ViSXRlbSIscmVuZGVyTW9kZTpjLG1hcmtlcklkOm99KSxyPSJzdHJpbmciPT10eXBlb2YgYT9hOmEuY29udGVudCxzPShsP3IrZXUoaS5kaXNwbGF5TmFtZXx8Ii0iKSsiOiAiOiIiKStldSgib3JkaW5hbCI9PT1uP3QrIiI6InRpbWUiPT09bj9oPyIiOmx1KCJ5eXl5L01NL2RkIGhoOm1tOnNzIix0KTpLbCh0KSk7cyYmdS5wdXNoKHMpLGYmJihwW29dPXYsKytnKX19YS5sZW5ndGg/RShhLGZ1bmN0aW9uKHQpe2UoQmgobSxvLHQpLHQpfSk6RSh0LGUpO3ZhciBpPWw/Zj8iXG4iOiI8YnIvPiI6IiIsbj1pK3Uuam9pbihpfHwiLCAiKTtyZXR1cm57cmVuZGVyTW9kZTpjLGNvbnRlbnQ6bixzdHlsZTpwfX0ocik6aShuP0JoKG0sbyxhWzBdKTpzP3JbMF06cikpLmNvbnRlbnQsdT1kLnNlcmllc0luZGV4KyJhdCIrZyx5PXJ1KHtjb2xvcjp2LHR5cGU6Iml0ZW0iLHJlbmRlck1vZGU6YyxtYXJrZXJJZDp1fSk7cFt1XT12LCsrZzt2YXIgeD1tLmdldE5hbWUobyksXz10aGlzLm5hbWU7Rm8odGhpcyl8fChfPSIiKSxfPV8/ZXUoXykrKGg/IjogIjplKToiIjt2YXIgdz0ic3RyaW5nIj09dHlwZW9mIHk/eTp5LmNvbnRlbnQ7cmV0dXJue2h0bWw6aD93K18rbDpfK3crKHg/ZXUoeCkrIjogIitsOmwpLG1hcmtlcnM6cH19LGlzQW5pbWF0aW9uRW5hYmxlZDpmdW5jdGlvbigpe2lmKHYubm9kZSlyZXR1cm4hMTt2YXIgdD10aGlzLmdldFNoYWxsb3coImFuaW1hdGlvbiIpO3JldHVybiB0JiZ0aGlzLmdldERhdGEoKS5jb3VudCgpPnRoaXMuZ2V0U2hhbGxvdygiYW5pbWF0aW9uVGhyZXNob2xkIikmJih0PSExKSx0fSxyZXN0b3JlRGF0YTpmdW5jdGlvbigpe3RoaXMuZGF0YVRhc2suZGlydHkoKX0sZ2V0Q29sb3JGcm9tUGFsZXR0ZTpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5lY01vZGVsLG89a3UuZ2V0Q29sb3JGcm9tUGFsZXR0ZS5jYWxsKHRoaXMsdCxlLGkpO3JldHVybiBvPW98fG4uZ2V0Q29sb3JGcm9tUGFsZXR0ZSh0LGUsaSl9LGNvb3JkRGltVG9EYXRhRGltOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmdldFJhd0RhdGEoKS5tYXBEaW1lbnNpb24odCwhMCl9LGdldFByb2dyZXNzaXZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KCJwcm9ncmVzc2l2ZSIpfSxnZXRQcm9ncmVzc2l2ZVRocmVzaG9sZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldCgicHJvZ3Jlc3NpdmVUaHJlc2hvbGQiKX0sZ2V0QXhpc1Rvb2x0aXBEYXRhOm51bGwsZ2V0VG9vbHRpcFBvc2l0aW9uOm51bGwscGlwZVRhc2s6bnVsbCxwcmV2ZW50SW5jcmVtZW50YWw6bnVsbCxwaXBlbGluZUNvbnRleHQ6bnVsbH0pO2Z1bmN0aW9uIG5jKHQpe3ZhciBlPXQubmFtZTtGbyh0KXx8KHQubmFtZT1mdW5jdGlvbih0KXt2YXIgaT10LmdldFJhd0RhdGEoKSxlPWkubWFwRGltZW5zaW9uKCJzZXJpZXNOYW1lIiwhMCksbj1bXTtyZXR1cm4gRShlLGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0RGltZW5zaW9uSW5mbyh0KTtlLmRpc3BsYXlOYW1lJiZuLnB1c2goZS5kaXNwbGF5TmFtZSl9KSxuLmpvaW4oIiAiKX0odCl8fGUpfWZ1bmN0aW9uIG9jKHQpe3JldHVybiB0Lm1vZGVsLmdldFJhd0RhdGEoKS5jb3VudCgpfWZ1bmN0aW9uIGFjKHQpe3ZhciBlPXQubW9kZWw7cmV0dXJuIGUuc2V0RGF0YShlLmdldFJhd0RhdGEoKS5jbG9uZVNoYWxsb3coKSkscmN9ZnVuY3Rpb24gcmModCxlKXt0LmVuZD5lLm91dHB1dERhdGEuY291bnQoKSYmZS5tb2RlbC5nZXRSYXdEYXRhKCkuY2xvbmVTaGFsbG93KGUub3V0cHV0RGF0YSl9ZnVuY3Rpb24gc2MoZSxpKXtFKGUuQ0hBTkdBQkxFX01FVEhPRFMsZnVuY3Rpb24odCl7ZS53cmFwTWV0aG9kKHQsVChsYyxpKSl9KX1mdW5jdGlvbiBsYyh0KXt2YXIgZT11Yyh0KTtlJiZlLnNldE91dHB1dEVuZCh0aGlzLmNvdW50KCkpfWZ1bmN0aW9uIHVjKHQpe3ZhciBlPSh0LmVjTW9kZWx8fHt9KS5zY2hlZHVsZXIsaT1lJiZlLmdldFBpcGVsaW5lKHQudWlkKTtpZihpKXt2YXIgbj1pLmN1cnJlbnRUYXNrO2lmKG4pe3ZhciBvPW4uYWdlbnRTdHViTWFwO28mJihuPW8uZ2V0KHQudWlkKSl9cmV0dXJuIG59fWIoaWMsRmgpLGIoaWMsa3UpO3ZhciBoYz1mdW5jdGlvbigpe3RoaXMuZ3JvdXA9bmV3IElpLHRoaXMudWlkPUNsKCJ2aWV3Q29tcG9uZW50Iil9O2hjLnByb3RvdHlwZT17Y29uc3RydWN0b3I6aGMsaW5pdDpmdW5jdGlvbih0LGUpe30scmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe30sZGlzcG9zZTpmdW5jdGlvbigpe30sZmlsdGVyRm9yRXhwb3NlZEV2ZW50Om51bGx9O3ZhciBjYz1oYy5wcm90b3R5cGU7Y2MudXBkYXRlVmlldz1jYy51cGRhdGVMYXlvdXQ9Y2MudXBkYXRlVmlzdWFsPWZ1bmN0aW9uKHQsZSxpLG4pe30sdGEoaGMpLGFhKGhjLHtyZWdpc3RlcldoZW5FeHRlbmQ6ITB9KTtmdW5jdGlvbiBkYygpe3ZhciBzPVpvKCk7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXModCksaT10LnBpcGVsaW5lQ29udGV4dCxuPWUubGFyZ2Usbz1lLnByb2dyZXNzaXZlUmVuZGVyLGE9ZS5sYXJnZT1pLmxhcmdlLHI9ZS5wcm9ncmVzc2l2ZVJlbmRlcj1pLnByb2dyZXNzaXZlUmVuZGVyO3JldHVybiEhKG5eYXx8b15yKSYmInJlc2V0In19dmFyIGZjPVpvKCkscGM9ZGMoKTtmdW5jdGlvbiBnYygpe3RoaXMuZ3JvdXA9bmV3IElpLHRoaXMudWlkPUNsKCJ2aWV3Q2hhcnQiKSx0aGlzLnJlbmRlclRhc2s9V2goe3BsYW46eGMscmVzZXQ6X2N9KSx0aGlzLnJlbmRlclRhc2suY29udGV4dD17dmlldzp0aGlzfX12YXIgbWM9Z2MucHJvdG90eXBlPXt0eXBlOiJjaGFydCIsaW5pdDpmdW5jdGlvbih0LGUpe30scmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe30saGlnaGxpZ2h0OmZ1bmN0aW9uKHQsZSxpLG4pe3ljKHQuZ2V0RGF0YSgpLG4sImVtcGhhc2lzIil9LGRvd25wbGF5OmZ1bmN0aW9uKHQsZSxpLG4pe3ljKHQuZ2V0RGF0YSgpLG4sIm5vcm1hbCIpfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt0aGlzLmdyb3VwLnJlbW92ZUFsbCgpfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fSxpbmNyZW1lbnRhbFByZXBhcmVSZW5kZXI6bnVsbCxpbmNyZW1lbnRhbFJlbmRlcjpudWxsLHVwZGF0ZVRyYW5zZm9ybTpudWxsLGZpbHRlckZvckV4cG9zZWRFdmVudDpudWxsfTtmdW5jdGlvbiB2Yyh0LGUsaSl7aWYodCYmKHQudHJpZ2dlcihlLGkpLHQuaXNHcm91cCYmIXFzKHQpKSlmb3IodmFyIG49MCxvPXQuY2hpbGRDb3VudCgpO248bztuKyspdmModC5jaGlsZEF0KG4pLGUsaSl9ZnVuY3Rpb24geWMoZSx0LGkpe3ZhciBuPUhvKGUsdCksbz10JiZudWxsIT10LmhpZ2hsaWdodEtleT9Lcyh0LmhpZ2hsaWdodEtleSk6bnVsbDtudWxsIT1uP0UoRW8obiksZnVuY3Rpb24odCl7dmMoZS5nZXRJdGVtR3JhcGhpY0VsKHQpLGksbyl9KTplLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQpe3ZjKHQsaSxvKX0pfWZ1bmN0aW9uIHhjKHQpe3JldHVybiBwYyh0Lm1vZGVsKX1mdW5jdGlvbiBfYyh0KXt2YXIgZT10Lm1vZGVsLGk9dC5lY01vZGVsLG49dC5hcGksbz10LnBheWxvYWQsYT1lLnBpcGVsaW5lQ29udGV4dC5wcm9ncmVzc2l2ZVJlbmRlcixyPXQudmlldyxzPW8mJmZjKG8pLnVwZGF0ZU1ldGhvZCxsPWE/ImluY3JlbWVudGFsUHJlcGFyZVJlbmRlciI6cyYmcltzXT9zOiJyZW5kZXIiO3JldHVybiJyZW5kZXIiIT09bCYmcltsXShlLGksbixvKSx3Y1tsXX1tYy51cGRhdGVWaWV3PW1jLnVwZGF0ZUxheW91dD1tYy51cGRhdGVWaXN1YWw9ZnVuY3Rpb24odCxlLGksbil7dGhpcy5yZW5kZXIodCxlLGksbil9LHRhKGdjKSxhYShnYyx7cmVnaXN0ZXJXaGVuRXh0ZW5kOiEwfSksZ2MubWFya1VwZGF0ZU1ldGhvZD1mdW5jdGlvbih0LGUpe2ZjKHQpLnVwZGF0ZU1ldGhvZD1lfTt2YXIgd2M9e2luY3JlbWVudGFsUHJlcGFyZVJlbmRlcjp7cHJvZ3Jlc3M6ZnVuY3Rpb24odCxlKXtlLnZpZXcuaW5jcmVtZW50YWxSZW5kZXIodCxlLm1vZGVsLGUuZWNNb2RlbCxlLmFwaSxlLnBheWxvYWQpfX0scmVuZGVyOntmb3JjZUZpcnN0UHJvZ3Jlc3M6ITAscHJvZ3Jlc3M6ZnVuY3Rpb24odCxlKXtlLnZpZXcucmVuZGVyKGUubW9kZWwsZS5lY01vZGVsLGUuYXBpLGUucGF5bG9hZCl9fX0sYmM9IlwwX190aHJvdHRsZU9yaWdpbk1ldGhvZCIsU2M9IlwwX190aHJvdHRsZVJhdGUiLE1jPSJcMF9fdGhyb3R0bGVUeXBlIjtmdW5jdGlvbiBJYyh0LGksbil7dmFyIG8sYSxyLHMsbCx1PTAsaD0wLGM9bnVsbDtmdW5jdGlvbiBkKCl7aD0obmV3IERhdGUpLmdldFRpbWUoKSxjPW51bGwsdC5hcHBseShyLHN8fFtdKX1pPWl8fDA7ZnVuY3Rpb24gZSgpe289KG5ldyBEYXRlKS5nZXRUaW1lKCkscj10aGlzLHM9YXJndW1lbnRzO3ZhciB0PWx8fGksZT1sfHxuO2w9bnVsbCxhPW8tKGU/dTpoKS10LGNsZWFyVGltZW91dChjKSxlP2M9c2V0VGltZW91dChkLHQpOjA8PWE/ZCgpOmM9c2V0VGltZW91dChkLC1hKSx1PW99cmV0dXJuIGUuY2xlYXI9ZnVuY3Rpb24oKXtjJiYoY2xlYXJUaW1lb3V0KGMpLGM9bnVsbCl9LGUuZGVib3VuY2VOZXh0Q2FsbD1mdW5jdGlvbih0KXtsPXR9LGV9ZnVuY3Rpb24gVGModCxlLGksbil7dmFyIG89dFtlXTtpZihvKXt2YXIgYT1vW2JjXXx8byxyPW9bTWNdO2lmKG9bU2NdIT09aXx8ciE9PW4pe2lmKG51bGw9PWl8fCFuKXJldHVybiB0W2VdPWE7KG89dFtlXT1JYyhhLGksImRlYm91bmNlIj09PW4pKVtiY109YSxvW01jXT1uLG9bU2NdPWl9cmV0dXJuIG99fWZ1bmN0aW9uIEFjKHQsZSl7dmFyIGk9dFtlXTtpJiZpW2JjXSYmKHRbZV09aVtiY10pfXZhciBEYz17Y3JlYXRlT25BbGxTZXJpZXM6ITAscGVyZm9ybVJhd1NlcmllczohMCxyZXNldDpmdW5jdGlvbihlLHQpe3ZhciBpPWUuZ2V0RGF0YSgpLGE9KGUudmlzdWFsQ29sb3JBY2Nlc3NQYXRofHwiaXRlbVN0eWxlLmNvbG9yIikuc3BsaXQoIi4iKSxuPWUuZ2V0KGEpLG89IU8obil8fG4gaW5zdGFuY2VvZiBzcz9udWxsOm47biYmIW98fChuPWUuZ2V0Q29sb3JGcm9tUGFsZXR0ZShlLm5hbWUsbnVsbCx0LmdldFNlcmllc0NvdW50KCkpKSxpLnNldFZpc3VhbCgiY29sb3IiLG4pO3ZhciByPShlLnZpc3VhbEJvcmRlckNvbG9yQWNjZXNzUGF0aHx8Iml0ZW1TdHlsZS5ib3JkZXJDb2xvciIpLnNwbGl0KCIuIikscz1lLmdldChyKTtpZihpLnNldFZpc3VhbCgiYm9yZGVyQ29sb3IiLHMpLCF0LmlzU2VyaWVzRmlsdGVyZWQoZSkpe28mJmkuZWFjaChmdW5jdGlvbih0KXtpLnNldEl0ZW1WaXN1YWwodCwiY29sb3IiLG8oZS5nZXREYXRhUGFyYW1zKHQpKSl9KTtyZXR1cm57ZGF0YUVhY2g6aS5oYXNJdGVtT3B0aW9uP2Z1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXRJdGVtTW9kZWwoZSksbj1pLmdldChhLCEwKSxvPWkuZ2V0KHIsITApO251bGwhPW4mJnQuc2V0SXRlbVZpc3VhbChlLCJjb2xvciIsbiksbnVsbCE9byYmdC5zZXRJdGVtVmlzdWFsKGUsImJvcmRlckNvbG9yIixvKX06bnVsbH19fX0sQ2M9e2xlZ2VuZDp7c2VsZWN0b3I6e2FsbDoi5YWo6YCJIixpbnZlcnNlOiLlj43pgIkifX0sdG9vbGJveDp7YnJ1c2g6e3RpdGxlOntyZWN0OiLnn6nlvaLpgInmi6kiLHBvbHlnb246IuWciOmAiSIsbGluZVg6IuaoquWQkemAieaLqSIsbGluZVk6Iue6teWQkemAieaLqSIsa2VlcDoi5L+d5oyB6YCJ5oupIixjbGVhcjoi5riF6Zmk6YCJ5oupIn19LGRhdGFWaWV3Ont0aXRsZToi5pWw5o2u6KeG5Zu+IixsYW5nOlsi5pWw5o2u6KeG5Zu+Iiwi5YWz6ZetIiwi5Yi35pawIl19LGRhdGFab29tOnt0aXRsZTp7em9vbToi5Yy65Z+f57yp5pS+IixiYWNrOiLljLrln5/nvKnmlL7ov5jljp8ifX0sbWFnaWNUeXBlOnt0aXRsZTp7bGluZToi5YiH5o2i5Li65oqY57q/5Zu+IixiYXI6IuWIh+aNouS4uuafseeKtuWbviIsc3RhY2s6IuWIh+aNouS4uuWghuWPoCIsdGlsZWQ6IuWIh+aNouS4uuW5s+mTuiJ9fSxyZXN0b3JlOnt0aXRsZToi6L+Y5Y6fIn0sc2F2ZUFzSW1hZ2U6e3RpdGxlOiLkv53lrZjkuLrlm77niYciLGxhbmc6WyLlj7PplK7lj6blrZjkuLrlm77niYciXX19LHNlcmllczp7dHlwZU5hbWVzOntwaWU6IumlvOWbviIsYmFyOiLmn7Hnirblm74iLGxpbmU6IuaKmOe6v+WbviIsc2NhdHRlcjoi5pWj54K55Zu+IixlZmZlY3RTY2F0dGVyOiLmtp/mvKrmlaPngrnlm74iLHJhZGFyOiLpm7fovr7lm74iLHRyZWU6IuagkeWbviIsdHJlZW1hcDoi55+p5b2i5qCR5Zu+Iixib3hwbG90OiLnrrHlnovlm74iLGNhbmRsZXN0aWNrOiJL57q/5Zu+IixrOiJL57q/5Zu+IixoZWF0bWFwOiLng63lipvlm74iLG1hcDoi5Zyw5Zu+IixwYXJhbGxlbDoi5bmz6KGM5Z2Q5qCH5Zu+IixsaW5lczoi57q/5Zu+IixncmFwaDoi5YWz57O75Zu+IixzYW5rZXk6IuahkeWfuuWbviIsZnVubmVsOiLmvI/mlpflm74iLGdhdWdlOiLku6rooajnm5jlm74iLHBpY3RvcmlhbEJhcjoi6LGh5b2i5p+x5Zu+Iix0aGVtZVJpdmVyOiLkuLvpopjmsrPmtYHlm74iLHN1bmJ1cnN0OiLml63ml6Xlm74ifX0sYXJpYTp7Z2VuZXJhbDp7d2l0aFRpdGxlOiLov5nmmK/kuIDkuKrlhbPkuo7igJx7dGl0bGV94oCd55qE5Zu+6KGo44CCIix3aXRob3V0VGl0bGU6Iui/meaYr+S4gOS4quWbvuihqO+8jCJ9LHNlcmllczp7c2luZ2xlOntwcmVmaXg6IiIsd2l0aE5hbWU6IuWbvuihqOexu+Wei+aYr3tzZXJpZXNUeXBlfe+8jOihqOekuntzZXJpZXNOYW1lfeOAgiIsd2l0aG91dE5hbWU6IuWbvuihqOexu+Wei+aYr3tzZXJpZXNUeXBlfeOAgiJ9LG11bHRpcGxlOntwcmVmaXg6IuWug+eUsXtzZXJpZXNDb3VudH3kuKrlm77ooajns7vliJfnu4TmiJDjgIIiLHdpdGhOYW1lOiLnrKx7c2VyaWVzSWR95Liq57O75YiX5piv5LiA5Liq6KGo56S6e3Nlcmllc05hbWV955qEe3Nlcmllc1R5cGV977yMIix3aXRob3V0TmFtZToi56yse3Nlcmllc0lkfeS4quezu+WIl+aYr+S4gOS4qntzZXJpZXNUeXBlfe+8jCIsc2VwYXJhdG9yOnttaWRkbGU6Iu+8myIsZW5kOiLjgIIifX19LGRhdGE6e2FsbERhdGE6IuWFtuaVsOaNruaYr+KAlOKAlCIscGFydGlhbERhdGE6IuWFtuS4re+8jOWJjXtkaXNwbGF5Q250femhueaYr+KAlOKAlCIsd2l0aE5hbWU6IntuYW1lfeeahOaVsOaNruaYr3t2YWx1ZX0iLHdpdGhvdXROYW1lOiJ7dmFsdWV9IixzZXBhcmF0b3I6e21pZGRsZToi77yMIixlbmQ6IiJ9fX19LExjPWZ1bmN0aW9uKHQsZSl7dmFyIGE9ZS5nZXRNb2RlbCgiYXJpYSIpO2lmKGEuZ2V0KCJzaG93IikpaWYoYS5nZXQoImRlc2NyaXB0aW9uIikpdC5zZXRBdHRyaWJ1dGUoImFyaWEtbGFiZWwiLGEuZ2V0KCJkZXNjcmlwdGlvbiIpKTtlbHNle3ZhciBoPTA7ZS5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQsZSl7KytofSx0aGlzKTt2YXIgaSxjPWEuZ2V0KCJkYXRhLm1heENvdW50Iil8fDEwLG49YS5nZXQoInNlcmllcy5tYXhDb3VudCIpfHwxMCxkPU1hdGgubWluKGgsbik7aWYoIShoPDEpKXt2YXIgbz1mdW5jdGlvbigpe3ZhciB0PWUuZ2V0TW9kZWwoInRpdGxlIikub3B0aW9uO3QmJnQubGVuZ3RoJiYodD10WzBdKTtyZXR1cm4gdCYmdC50ZXh0fSgpO2k9bz9wKGcoImdlbmVyYWwud2l0aFRpdGxlIikse3RpdGxlOm99KTpnKCJnZW5lcmFsLndpdGhvdXRUaXRsZSIpO3ZhciBmPVtdO2krPXAoZygxPGg/InNlcmllcy5tdWx0aXBsZS5wcmVmaXgiOiJzZXJpZXMuc2luZ2xlLnByZWZpeCIpLHtzZXJpZXNDb3VudDpofSksZS5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQsZSl7aWYoZTxkKXt2YXIgaSxuPXQuZ2V0KCJuYW1lIiksbz0ic2VyaWVzLiIrKDE8aD8ibXVsdGlwbGUiOiJzaW5nbGUiKSsiLiI7aT1wKGk9ZyhuP28rIndpdGhOYW1lIjpvKyJ3aXRob3V0TmFtZSIpLHtzZXJpZXNJZDp0LnNlcmllc0luZGV4LHNlcmllc05hbWU6dC5nZXQoIm5hbWUiKSxzZXJpZXNUeXBlOmZ1bmN0aW9uKHQpe3JldHVybiBDYy5zZXJpZXMudHlwZU5hbWVzW3RdfHwi6Ieq5a6a5LmJ5Zu+In0odC5zdWJUeXBlKX0pO3ZhciBhPXQuZ2V0RGF0YSgpOyh3aW5kb3cuZGF0YT1hKS5jb3VudCgpPmM/aSs9cChnKCJkYXRhLnBhcnRpYWxEYXRhIikse2Rpc3BsYXlDbnQ6Y30pOmkrPWcoImRhdGEuYWxsRGF0YSIpO2Zvcih2YXIgcj1bXSxzPTA7czxhLmNvdW50KCk7cysrKWlmKHM8Yyl7dmFyIGw9YS5nZXROYW1lKHMpLHU9QmgoYSxzKTtyLnB1c2gocChnKGw/ImRhdGEud2l0aE5hbWUiOiJkYXRhLndpdGhvdXROYW1lIikse25hbWU6bCx2YWx1ZTp1fSkpfWkrPXIuam9pbihnKCJkYXRhLnNlcGFyYXRvci5taWRkbGUiKSkrZygiZGF0YS5zZXBhcmF0b3IuZW5kIiksZi5wdXNoKGkpfX0pLGkrPWYuam9pbihnKCJzZXJpZXMubXVsdGlwbGUuc2VwYXJhdG9yLm1pZGRsZSIpKStnKCJzZXJpZXMubXVsdGlwbGUuc2VwYXJhdG9yLmVuZCIpLHQuc2V0QXR0cmlidXRlKCJhcmlhLWxhYmVsIixpKX19ZnVuY3Rpb24gcCh0LGUpe2lmKCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm4gdDt2YXIgaT10O3JldHVybiBFKGUsZnVuY3Rpb24odCxlKXtpPWkucmVwbGFjZShuZXcgUmVnRXhwKCJcXHtcXHMqIitlKyJcXHMqXFx9IiwiZyIpLHQpfSksaX1mdW5jdGlvbiBnKHQpe3ZhciBlPWEuZ2V0KHQpO2lmKG51bGwhPWUpcmV0dXJuIGU7Zm9yKHZhciBpPXQuc3BsaXQoIi4iKSxuPUNjLmFyaWEsbz0wO288aS5sZW5ndGg7KytvKW49bltpW29dXTtyZXR1cm4gbn19LGtjPU1hdGguUEk7ZnVuY3Rpb24gUGModCxlLGksbil7dGhpcy5lY0luc3RhbmNlPXQsdGhpcy5hcGk9ZSx0aGlzLnVuZmluaXNoZWQ7aT10aGlzLl9kYXRhUHJvY2Vzc29ySGFuZGxlcnM9aS5zbGljZSgpLG49dGhpcy5fdmlzdWFsSGFuZGxlcnM9bi5zbGljZSgpO3RoaXMuX2FsbEhhbmRsZXJzPWkuY29uY2F0KG4pLHRoaXMuX3N0YWdlVGFza01hcD1RKCl9dmFyIE5jPVBjLnByb3RvdHlwZTtmdW5jdGlvbiBPYyhsLHQsdSxoLGMpe3ZhciBkO2Z1bmN0aW9uIGYodCxlKXtyZXR1cm4gdC5zZXREaXJ0eSYmKCF0LmRpcnR5TWFwfHx0LmRpcnR5TWFwLmdldChlLl9fcGlwZWxpbmUuaWQpKX1jPWN8fHt9LEUodCxmdW5jdGlvbihuLHQpe2lmKCFjLnZpc3VhbFR5cGV8fGMudmlzdWFsVHlwZT09PW4udmlzdWFsVHlwZSl7dmFyIGU9bC5fc3RhZ2VUYXNrTWFwLmdldChuLnVpZCksaT1lLnNlcmllc1Rhc2tNYXAsbz1lLm92ZXJhbGxUYXNrO2lmKG8pe3ZhciBhLHI9by5hZ2VudFN0dWJNYXA7ci5lYWNoKGZ1bmN0aW9uKHQpe2YoYyx0KSYmKHQuZGlydHkoKSxhPSEwKX0pLGEmJm8uZGlydHkoKSxFYyhvLGgpO3ZhciBzPWwuZ2V0UGVyZm9ybUFyZ3MobyxjLmJsb2NrKTtyLmVhY2goZnVuY3Rpb24odCl7dC5wZXJmb3JtKHMpfSksZHw9by5wZXJmb3JtKHMpfWVsc2UgaSYmaS5lYWNoKGZ1bmN0aW9uKHQsZSl7ZihjLHQpJiZ0LmRpcnR5KCk7dmFyIGk9bC5nZXRQZXJmb3JtQXJncyh0LGMuYmxvY2spO2kuc2tpcD0hbi5wZXJmb3JtUmF3U2VyaWVzJiZ1LmlzU2VyaWVzRmlsdGVyZWQodC5jb250ZXh0Lm1vZGVsKSxFYyh0LGgpLGR8PXQucGVyZm9ybShpKX0pfX0pLGwudW5maW5pc2hlZHw9ZH1OYy5yZXN0b3JlRGF0YT1mdW5jdGlvbih0LGUpe3QucmVzdG9yZURhdGEoZSksdGhpcy5fc3RhZ2VUYXNrTWFwLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC5vdmVyYWxsVGFzaztlJiZlLmRpcnR5KCl9KX0sTmMuZ2V0UGVyZm9ybUFyZ3M9ZnVuY3Rpb24odCxlKXtpZih0Ll9fcGlwZWxpbmUpe3ZhciBpPXRoaXMuX3BpcGVsaW5lTWFwLmdldCh0Ll9fcGlwZWxpbmUuaWQpLG49aS5jb250ZXh0LG89IWUmJmkucHJvZ3Jlc3NpdmVFbmFibGVkJiYoIW58fG4ucHJvZ3Jlc3NpdmVSZW5kZXIpJiZ0Ll9faWR4SW5QaXBlbGluZT5pLmJsb2NrSW5kZXg/aS5zdGVwOm51bGwsYT1uJiZuLm1vZERhdGFDb3VudDtyZXR1cm57c3RlcDpvLG1vZEJ5Om51bGwhPWE/TWF0aC5jZWlsKGEvbyk6bnVsbCxtb2REYXRhQ291bnQ6YX19fSxOYy5nZXRQaXBlbGluZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcGlwZWxpbmVNYXAuZ2V0KHQpfSxOYy51cGRhdGVTdHJlYW1Nb2Rlcz1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX3BpcGVsaW5lTWFwLmdldCh0LnVpZCksbj10LmdldERhdGEoKS5jb3VudCgpLG89aS5wcm9ncmVzc2l2ZUVuYWJsZWQmJmUuaW5jcmVtZW50YWxQcmVwYXJlUmVuZGVyJiZuPj1pLnRocmVzaG9sZCxhPXQuZ2V0KCJsYXJnZSIpJiZuPj10LmdldCgibGFyZ2VUaHJlc2hvbGQiKSxyPSJtb2QiPT09dC5nZXQoInByb2dyZXNzaXZlQ2h1bmtNb2RlIik/bjpudWxsO3QucGlwZWxpbmVDb250ZXh0PWkuY29udGV4dD17cHJvZ3Jlc3NpdmVSZW5kZXI6byxtb2REYXRhQ291bnQ6cixsYXJnZTphfX0sTmMucmVzdG9yZVBpcGVsaW5lcz1mdW5jdGlvbih0KXt2YXIgbj10aGlzLG89bi5fcGlwZWxpbmVNYXA9USgpO3QuZWFjaFNlcmllcyhmdW5jdGlvbih0KXt2YXIgZT10LmdldFByb2dyZXNzaXZlKCksaT10LnVpZDtvLnNldChpLHtpZDppLGhlYWQ6bnVsbCx0YWlsOm51bGwsdGhyZXNob2xkOnQuZ2V0UHJvZ3Jlc3NpdmVUaHJlc2hvbGQoKSxwcm9ncmVzc2l2ZUVuYWJsZWQ6ZSYmISh0LnByZXZlbnRJbmNyZW1lbnRhbCYmdC5wcmV2ZW50SW5jcmVtZW50YWwoKSksYmxvY2tJbmRleDotMSxzdGVwOk1hdGgucm91bmQoZXx8NzAwKSxjb3VudDowfSksVWMobix0LHQuZGF0YVRhc2spfSl9LE5jLnByZXBhcmVTdGFnZVRhc2tzPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcy5fc3RhZ2VUYXNrTWFwLG49dGhpcy5lY0luc3RhbmNlLmdldE1vZGVsKCksbz10aGlzLmFwaTtFKHRoaXMuX2FsbEhhbmRsZXJzLGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0KHQudWlkKXx8aS5zZXQodC51aWQsW10pO3QucmVzZXQmJmZ1bmN0aW9uKG4sbyx0LGEscil7dmFyIHM9dC5zZXJpZXNUYXNrTWFwfHwodC5zZXJpZXNUYXNrTWFwPVEoKSksZT1vLnNlcmllc1R5cGUsaT1vLmdldFRhcmdldFNlcmllcztvLmNyZWF0ZU9uQWxsU2VyaWVzP2EuZWFjaFJhd1NlcmllcyhsKTplP2EuZWFjaFJhd1Nlcmllc0J5VHlwZShlLGwpOmkmJmkoYSxyKS5lYWNoKGwpO2Z1bmN0aW9uIGwodCl7dmFyIGU9dC51aWQsaT1zLmdldChlKXx8cy5zZXQoZSxXaCh7cGxhbjpHYyxyZXNldDpGYyxjb3VudDpaY30pKTtpLmNvbnRleHQ9e21vZGVsOnQsZWNNb2RlbDphLGFwaTpyLHVzZUNsZWFyVmlzdWFsOm8uaXNWaXN1YWwmJiFvLmlzTGF5b3V0LHBsYW46by5wbGFuLHJlc2V0Om8ucmVzZXQsc2NoZWR1bGVyOm59LFVjKG4sdCxpKX12YXIgdT1uLl9waXBlbGluZU1hcDtzLmVhY2goZnVuY3Rpb24odCxlKXt1LmdldChlKXx8KHQuZGlzcG9zZSgpLHMucmVtb3ZlS2V5KGUpKX0pfSh0aGlzLHQsZSxuLG8pLHQub3ZlcmFsbFJlc2V0JiZmdW5jdGlvbihuLHQsZSxpLG8pe3ZhciBhPWUub3ZlcmFsbFRhc2s9ZS5vdmVyYWxsVGFza3x8V2goe3Jlc2V0OnpjfSk7YS5jb250ZXh0PXtlY01vZGVsOmksYXBpOm8sb3ZlcmFsbFJlc2V0OnQub3ZlcmFsbFJlc2V0LHNjaGVkdWxlcjpufTt2YXIgcj1hLmFnZW50U3R1Yk1hcD1hLmFnZW50U3R1Yk1hcHx8USgpLHM9dC5zZXJpZXNUeXBlLGw9dC5nZXRUYXJnZXRTZXJpZXMsdT0hMCxoPXQubW9kaWZ5T3V0cHV0RW5kO3M/aS5lYWNoUmF3U2VyaWVzQnlUeXBlKHMsYyk6bD9sKGksbykuZWFjaChjKToodT0hMSxFKGkuZ2V0U2VyaWVzKCksYykpO2Z1bmN0aW9uIGModCl7dmFyIGU9dC51aWQsaT1yLmdldChlKTtpfHwoaT1yLnNldChlLFdoKHtyZXNldDpSYyxvbkRpcnR5OlZjfSkpLGEuZGlydHkoKSksaS5jb250ZXh0PXttb2RlbDp0LG92ZXJhbGxQcm9ncmVzczp1LG1vZGlmeU91dHB1dEVuZDpofSxpLmFnZW50PWEsaS5fX2Jsb2NrPXUsVWMobix0LGkpfXZhciBkPW4uX3BpcGVsaW5lTWFwO3IuZWFjaChmdW5jdGlvbih0LGUpe2QuZ2V0KGUpfHwodC5kaXNwb3NlKCksYS5kaXJ0eSgpLHIucmVtb3ZlS2V5KGUpKX0pfSh0aGlzLHQsZSxuLG8pfSx0aGlzKX0sTmMucHJlcGFyZVZpZXc9ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dC5yZW5kZXJUYXNrLGE9by5jb250ZXh0O2EubW9kZWw9ZSxhLmVjTW9kZWw9aSxhLmFwaT1uLG8uX19ibG9jaz0hdC5pbmNyZW1lbnRhbFByZXBhcmVSZW5kZXIsVWModGhpcyxlLG8pfSxOYy5wZXJmb3JtRGF0YVByb2Nlc3NvclRhc2tzPWZ1bmN0aW9uKHQsZSl7T2ModGhpcyx0aGlzLl9kYXRhUHJvY2Vzc29ySGFuZGxlcnMsdCxlLHtibG9jazohMH0pfSxOYy5wZXJmb3JtVmlzdWFsVGFza3M9ZnVuY3Rpb24odCxlLGkpe09jKHRoaXMsdGhpcy5fdmlzdWFsSGFuZGxlcnMsdCxlLGkpfSxOYy5wZXJmb3JtU2VyaWVzVGFza3M9ZnVuY3Rpb24odCl7dmFyIGU7dC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQpe2V8PXQuZGF0YVRhc2sucGVyZm9ybSgpfSksdGhpcy51bmZpbmlzaGVkfD1lfSxOYy5wbGFuPWZ1bmN0aW9uKCl7dGhpcy5fcGlwZWxpbmVNYXAuZWFjaChmdW5jdGlvbih0KXt2YXIgZT10LnRhaWw7ZG97aWYoZS5fX2Jsb2NrKXt0LmJsb2NrSW5kZXg9ZS5fX2lkeEluUGlwZWxpbmU7YnJlYWt9ZT1lLmdldFVwc3RyZWFtKCl9d2hpbGUoZSl9KX07dmFyIEVjPU5jLnVwZGF0ZVBheWxvYWQ9ZnVuY3Rpb24odCxlKXsicmVtYWluIiE9PWUmJih0LmNvbnRleHQucGF5bG9hZD1lKX07ZnVuY3Rpb24gemModCl7dC5vdmVyYWxsUmVzZXQodC5lY01vZGVsLHQuYXBpLHQucGF5bG9hZCl9ZnVuY3Rpb24gUmModCxlKXtyZXR1cm4gdC5vdmVyYWxsUHJvZ3Jlc3MmJkJjfWZ1bmN0aW9uIEJjKCl7dGhpcy5hZ2VudC5kaXJ0eSgpLHRoaXMuZ2V0RG93bnN0cmVhbSgpLmRpcnR5KCl9ZnVuY3Rpb24gVmMoKXt0aGlzLmFnZW50JiZ0aGlzLmFnZW50LmRpcnR5KCl9ZnVuY3Rpb24gR2ModCl7cmV0dXJuIHQucGxhbiYmdC5wbGFuKHQubW9kZWwsdC5lY01vZGVsLHQuYXBpLHQucGF5bG9hZCl9ZnVuY3Rpb24gRmModCl7dC51c2VDbGVhclZpc3VhbCYmdC5kYXRhLmNsZWFyQWxsVmlzdWFsKCk7dmFyIGU9dC5yZXNldERlZmluZXM9RW8odC5yZXNldCh0Lm1vZGVsLHQuZWNNb2RlbCx0LmFwaSx0LnBheWxvYWQpKTtyZXR1cm4gMTxlLmxlbmd0aD9OKGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gSGMoZSl9KTpXY312YXIgV2M9SGMoMCk7ZnVuY3Rpb24gSGMoYSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5kYXRhLG49ZS5yZXNldERlZmluZXNbYV07aWYobiYmbi5kYXRhRWFjaClmb3IodmFyIG89dC5zdGFydDtvPHQuZW5kO28rKyluLmRhdGFFYWNoKGksbyk7ZWxzZSBuJiZuLnByb2dyZXNzJiZuLnByb2dyZXNzKHQsaSl9fWZ1bmN0aW9uIFpjKHQpe3JldHVybiB0LmRhdGEuY291bnQoKX1mdW5jdGlvbiBVYyh0LGUsaSl7dmFyIG49ZS51aWQsbz10Ll9waXBlbGluZU1hcC5nZXQobik7by5oZWFkfHwoby5oZWFkPWkpLG8udGFpbCYmby50YWlsLnBpcGUoaSksKG8udGFpbD1pKS5fX2lkeEluUGlwZWxpbmU9by5jb3VudCsrLGkuX19waXBlbGluZT1vfVBjLndyYXBTdGFnZUhhbmRsZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTyh0KSYmKHQ9e292ZXJhbGxSZXNldDp0LHNlcmllc1R5cGU6ZnVuY3Rpb24odCl7WGM9bnVsbDt0cnl7dChZYyxqYyl9Y2F0Y2godCl7fXJldHVybiBYY30odCl9KSx0LnVpZD1DbCgic3RhZ2VIYW5kbGVyIiksZSYmKHQudmlzdWFsVHlwZT1lKSx0fTt2YXIgWGMsWWM9e30samM9e307ZnVuY3Rpb24gcWModCxlKXtmb3IodmFyIGkgaW4gZS5wcm90b3R5cGUpdFtpXT1ldH1xYyhZYywkdSkscWMoamMsZWgpLFljLmVhY2hTZXJpZXNCeVR5cGU9WWMuZWFjaFJhd1Nlcmllc0J5VHlwZT1mdW5jdGlvbih0KXtYYz10fSxZYy5lYWNoQ29tcG9uZW50PWZ1bmN0aW9uKHQpeyJzZXJpZXMiPT09dC5tYWluVHlwZSYmdC5zdWJUeXBlJiYoWGM9dC5zdWJUeXBlKX07ZnVuY3Rpb24gS2MoKXtyZXR1cm57YXhpc0xpbmU6e2xpbmVTdHlsZTp7Y29sb3I6UWN9fSxheGlzVGljazp7bGluZVN0eWxlOntjb2xvcjpRY319LGF4aXNMYWJlbDp7dGV4dFN0eWxlOntjb2xvcjpRY319LHNwbGl0TGluZTp7bGluZVN0eWxlOnt0eXBlOiJkYXNoZWQiLGNvbG9yOiIjYWFhIn19LHNwbGl0QXJlYTp7YXJlYVN0eWxlOntjb2xvcjpRY319fX12YXIgJGM9WyIjMzdBMkRBIiwiIzMyQzVFOSIsIiM2N0UwRTMiLCIjOUZFNkI4IiwiI0ZGREI1QyIsIiNmZjlmN2YiLCIjZmI3MjkzIiwiI0UwNjJBRSIsIiNFNjkwRDEiLCIjZTdiY2YzIiwiIzlkOTZmNSIsIiM4Mzc4RUEiLCIjOTZCRkZGIl0sSmM9e2NvbG9yOiRjLGNvbG9yTGF5ZXI6W1siIzM3QTJEQSIsIiNmZmQ4NWMiLCIjZmQ3YjVmIl0sWyIjMzdBMkRBIiwiIzY3RTBFMyIsIiNGRkRCNUMiLCIjZmY5ZjdmIiwiI0UwNjJBRSIsIiM5ZDk2ZjUiXSxbIiMzN0EyREEiLCIjMzJDNUU5IiwiIzlGRTZCOCIsIiNGRkRCNUMiLCIjZmY5ZjdmIiwiI2ZiNzI5MyIsIiNlN2JjZjMiLCIjODM3OEVBIiwiIzk2QkZGRiJdLCRjXX0sUWM9IiNlZWUiLHRkPVsiI2RkNmI2NiIsIiM3NTlhYTAiLCIjZTY5ZDg3IiwiIzhkYzFhOSIsIiNlYTdlNTMiLCIjZWVkZDc4IiwiIzczYTM3MyIsIiM3M2I5YmMiLCIjNzI4OWFiIiwiIzkxY2E4YyIsIiNmNDlmNDIiXSxlZD17Y29sb3I6dGQsYmFja2dyb3VuZENvbG9yOiIjMzMzIix0b29sdGlwOntheGlzUG9pbnRlcjp7bGluZVN0eWxlOntjb2xvcjpRY30sY3Jvc3NTdHlsZTp7Y29sb3I6UWN9LGxhYmVsOntjb2xvcjoiIzAwMCJ9fX0sbGVnZW5kOnt0ZXh0U3R5bGU6e2NvbG9yOlFjfX0sdGV4dFN0eWxlOntjb2xvcjpRY30sdGl0bGU6e3RleHRTdHlsZTp7Y29sb3I6UWN9fSx0b29sYm94OntpY29uU3R5bGU6e25vcm1hbDp7Ym9yZGVyQ29sb3I6UWN9fX0sZGF0YVpvb206e3RleHRTdHlsZTp7Y29sb3I6UWN9fSx2aXN1YWxNYXA6e3RleHRTdHlsZTp7Y29sb3I6UWN9fSx0aW1lbGluZTp7bGluZVN0eWxlOntjb2xvcjpRY30saXRlbVN0eWxlOntub3JtYWw6e2NvbG9yOnRkWzFdfX0sbGFiZWw6e25vcm1hbDp7dGV4dFN0eWxlOntjb2xvcjpRY319fSxjb250cm9sU3R5bGU6e25vcm1hbDp7Y29sb3I6UWMsYm9yZGVyQ29sb3I6UWN9fX0sdGltZUF4aXM6S2MoKSxsb2dBeGlzOktjKCksdmFsdWVBeGlzOktjKCksY2F0ZWdvcnlBeGlzOktjKCksbGluZTp7c3ltYm9sOiJjaXJjbGUifSxncmFwaDp7Y29sb3I6dGR9LGdhdWdlOnt0aXRsZTp7dGV4dFN0eWxlOntjb2xvcjpRY319fSxjYW5kbGVzdGljazp7aXRlbVN0eWxlOntub3JtYWw6e2NvbG9yOiIjRkQxMDUwIixjb2xvcjA6IiMwQ0Y0OUIiLGJvcmRlckNvbG9yOiIjRkQxMDUwIixib3JkZXJDb2xvcjA6IiMwQ0Y0OUIifX19fTtlZC5jYXRlZ29yeUF4aXMuc3BsaXRMaW5lLnNob3c9ITEsVHUuZXh0ZW5kKHt0eXBlOiJkYXRhc2V0IixkZWZhdWx0T3B0aW9uOntzZXJpZXNMYXlvdXRCeTpCdSxzb3VyY2VIZWFkZXI6bnVsbCxkaW1lbnNpb25zOm51bGwsc291cmNlOm51bGx9LG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24oKXshZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb24uc291cmNlLGk9enU7aWYoVihlKSlpPVJ1O2Vsc2UgaWYoayhlKSl7MD09PWUubGVuZ3RoJiYoaT1OdSk7Zm9yKHZhciBuPTAsbz1lLmxlbmd0aDtuPG87bisrKXt2YXIgYT1lW25dO2lmKG51bGwhPWEpe2lmKGsoYSkpe2k9TnU7YnJlYWt9aWYoUihhKSl7aT1PdTticmVha319fX1lbHNlIGlmKFIoZSkpe2Zvcih2YXIgciBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkocikmJlAoZVtyXSkpe2k9RXU7YnJlYWt9fWVsc2UgaWYobnVsbCE9ZSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgZGF0YSIpO1d1KHQpLnNvdXJjZUZvcm1hdD1pfSh0aGlzKX19KSxoYy5leHRlbmQoe3R5cGU6ImRhdGFzZXQifSk7dmFyIGlkPVNyLmV4dGVuZCh7dHlwZToiZWxsaXBzZSIsc2hhcGU6e2N4OjAsY3k6MCxyeDowLHJ5OjB9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUuY3gsbj1lLmN5LG89ZS5yeCxhPWUucnkscj0uNTUyMjg0OCpvLHM9LjU1MjI4NDgqYTt0Lm1vdmVUbyhpLW8sbiksdC5iZXppZXJDdXJ2ZVRvKGktbyxuLXMsaS1yLG4tYSxpLG4tYSksdC5iZXppZXJDdXJ2ZVRvKGkrcixuLWEsaStvLG4tcyxpK28sbiksdC5iZXppZXJDdXJ2ZVRvKGkrbyxuK3MsaStyLG4rYSxpLG4rYSksdC5iZXppZXJDdXJ2ZVRvKGktcixuK2EsaS1vLG4rcyxpLW8sbiksdC5jbG9zZVBhdGgoKX19KSxuZD0vW1xzLF0rLztmdW5jdGlvbiBvZCh0KXt6KHQpJiYodD0obmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKHQsInRleHQveG1sIikpO2Zvcig5PT09dC5ub2RlVHlwZSYmKHQ9dC5maXJzdENoaWxkKTsic3ZnIiE9PXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKXx8MSE9PXQubm9kZVR5cGU7KXQ9dC5uZXh0U2libGluZztyZXR1cm4gdH1mdW5jdGlvbiBhZCgpe3RoaXMuX2RlZnM9e30sdGhpcy5fcm9vdD1udWxsLHRoaXMuX2lzRGVmaW5lPSExLHRoaXMuX2lzVGV4dD0hMX1hZC5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24odCxlKXtlPWV8fHt9O3ZhciBpPW9kKHQpO2lmKCFpKXRocm93IG5ldyBFcnJvcigiSWxsZWdhbCBzdmciKTt2YXIgbj1uZXcgSWk7dGhpcy5fcm9vdD1uO3ZhciBvPWkuZ2V0QXR0cmlidXRlKCJ2aWV3Qm94Iil8fCIiLGE9cGFyc2VGbG9hdChpLmdldEF0dHJpYnV0ZSgid2lkdGgiKXx8ZS53aWR0aCkscj1wYXJzZUZsb2F0KGkuZ2V0QXR0cmlidXRlKCJoZWlnaHQiKXx8ZS5oZWlnaHQpO2lzTmFOKGEpJiYoYT1udWxsKSxpc05hTihyKSYmKHI9bnVsbCksY2QoaSxuLG51bGwsITApO2Zvcih2YXIgcyxsLHU9aS5maXJzdENoaWxkO3U7KXRoaXMuX3BhcnNlTm9kZSh1LG4pLHU9dS5uZXh0U2libGluZztpZihvKXt2YXIgaD1qKG8pLnNwbGl0KG5kKTs0PD1oLmxlbmd0aCYmKHM9e3g6cGFyc2VGbG9hdChoWzBdfHwwKSx5OnBhcnNlRmxvYXQoaFsxXXx8MCksd2lkdGg6cGFyc2VGbG9hdChoWzJdKSxoZWlnaHQ6cGFyc2VGbG9hdChoWzNdKX0pfWlmKHMmJm51bGwhPWEmJm51bGwhPXImJihsPW1kKHMsYSxyKSwhZS5pZ25vcmVWaWV3Qm94KSl7dmFyIGM9bjsobj1uZXcgSWkpLmFkZChjKSxjLnNjYWxlPWwuc2NhbGUuc2xpY2UoKSxjLnBvc2l0aW9uPWwucG9zaXRpb24uc2xpY2UoKX1yZXR1cm4gZS5pZ25vcmVSb290Q2xpcHx8bnVsbD09YXx8bnVsbD09cnx8bi5zZXRDbGlwUGF0aChuZXcgaXMoe3NoYXBlOnt4OjAseTowLHdpZHRoOmEsaGVpZ2h0OnJ9fSkpLHtyb290Om4sd2lkdGg6YSxoZWlnaHQ6cix2aWV3Qm94UmVjdDpzLHZpZXdCb3hUcmFuc2Zvcm06bH19LGFkLnByb3RvdHlwZS5fcGFyc2VOb2RlPWZ1bmN0aW9uKHQsZSl7dmFyIGksbixvPXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZigiZGVmcyI9PT1vP3RoaXMuX2lzRGVmaW5lPSEwOiJ0ZXh0Ij09PW8mJih0aGlzLl9pc1RleHQ9ITApLHRoaXMuX2lzRGVmaW5lKXtpZihuPXNkW29dKXt2YXIgYT1uLmNhbGwodGhpcyx0KSxyPXQuZ2V0QXR0cmlidXRlKCJpZCIpO3ImJih0aGlzLl9kZWZzW3JdPWEpfX1lbHNlKG49cmRbb10pJiYoaT1uLmNhbGwodGhpcyx0LGUpLGUuYWRkKGkpKTtmb3IodmFyIHM9dC5maXJzdENoaWxkO3M7KTE9PT1zLm5vZGVUeXBlJiZ0aGlzLl9wYXJzZU5vZGUocyxpKSwzPT09cy5ub2RlVHlwZSYmdGhpcy5faXNUZXh0JiZ0aGlzLl9wYXJzZVRleHQocyxpKSxzPXMubmV4dFNpYmxpbmc7ImRlZnMiPT09bz90aGlzLl9pc0RlZmluZT0hMToidGV4dCI9PT1vJiYodGhpcy5faXNUZXh0PSExKX0sYWQucHJvdG90eXBlLl9wYXJzZVRleHQ9ZnVuY3Rpb24odCxlKXtpZigxPT09dC5ub2RlVHlwZSl7dmFyIGk9dC5nZXRBdHRyaWJ1dGUoImR4Iil8fDAsbj10LmdldEF0dHJpYnV0ZSgiZHkiKXx8MDt0aGlzLl90ZXh0WCs9cGFyc2VGbG9hdChpKSx0aGlzLl90ZXh0WSs9cGFyc2VGbG9hdChuKX12YXIgbz1uZXcgRnIoe3N0eWxlOnt0ZXh0OnQudGV4dENvbnRlbnQsdHJhbnNmb3JtVGV4dDohMH0scG9zaXRpb246W3RoaXMuX3RleHRYfHwwLHRoaXMuX3RleHRZfHwwXX0pO2xkKGUsbyksY2QodCxvLHRoaXMuX2RlZnMpO3ZhciBhPW8uc3R5bGUuZm9udFNpemU7YSYmYTw5JiYoby5zdHlsZS5mb250U2l6ZT05LG8uc2NhbGU9by5zY2FsZXx8WzEsMV0sby5zY2FsZVswXSo9YS85LG8uc2NhbGVbMV0qPWEvOSk7dmFyIHI9by5nZXRCb3VuZGluZ1JlY3QoKTtyZXR1cm4gdGhpcy5fdGV4dFgrPXIud2lkdGgsZS5hZGQobyksb307dmFyIHJkPXtnOmZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IElpO3JldHVybiBsZChlLGkpLGNkKHQsaSx0aGlzLl9kZWZzKSxpfSxyZWN0OmZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IGlzO3JldHVybiBsZChlLGkpLGNkKHQsaSx0aGlzLl9kZWZzKSxpLnNldFNoYXBlKHt4OnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoIngiKXx8MCkseTpwYXJzZUZsb2F0KHQuZ2V0QXR0cmlidXRlKCJ5Iil8fDApLHdpZHRoOnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoIndpZHRoIil8fDApLGhlaWdodDpwYXJzZUZsb2F0KHQuZ2V0QXR0cmlidXRlKCJoZWlnaHQiKXx8MCl9KSxpfSxjaXJjbGU6ZnVuY3Rpb24odCxlKXt2YXIgaT1uZXcgSHI7cmV0dXJuIGxkKGUsaSksY2QodCxpLHRoaXMuX2RlZnMpLGkuc2V0U2hhcGUoe2N4OnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoImN4Iil8fDApLGN5OnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoImN5Iil8fDApLHI6cGFyc2VGbG9hdCh0LmdldEF0dHJpYnV0ZSgiciIpfHwwKX0pLGl9LGxpbmU6ZnVuY3Rpb24odCxlKXt2YXIgaT1uZXcgb3M7cmV0dXJuIGxkKGUsaSksY2QodCxpLHRoaXMuX2RlZnMpLGkuc2V0U2hhcGUoe3gxOnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoIngxIil8fDApLHkxOnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoInkxIil8fDApLHgyOnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoIngyIil8fDApLHkyOnBhcnNlRmxvYXQodC5nZXRBdHRyaWJ1dGUoInkyIil8fDApfSksaX0sZWxsaXBzZTpmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBpZDtyZXR1cm4gbGQoZSxpKSxjZCh0LGksdGhpcy5fZGVmcyksaS5zZXRTaGFwZSh7Y3g6cGFyc2VGbG9hdCh0LmdldEF0dHJpYnV0ZSgiY3giKXx8MCksY3k6cGFyc2VGbG9hdCh0LmdldEF0dHJpYnV0ZSgiY3kiKXx8MCkscng6cGFyc2VGbG9hdCh0LmdldEF0dHJpYnV0ZSgicngiKXx8MCkscnk6cGFyc2VGbG9hdCh0LmdldEF0dHJpYnV0ZSgicnkiKXx8MCl9KSxpfSxwb2x5Z29uOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXRBdHRyaWJ1dGUoInBvaW50cyIpO2k9aSYmdWQoaSk7dmFyIG49bmV3IHFyKHtzaGFwZTp7cG9pbnRzOml8fFtdfX0pO3JldHVybiBsZChlLG4pLGNkKHQsbix0aGlzLl9kZWZzKSxufSxwb2x5bGluZTpmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBTcjtsZChlLGkpLGNkKHQsaSx0aGlzLl9kZWZzKTt2YXIgbj10LmdldEF0dHJpYnV0ZSgicG9pbnRzIik7cmV0dXJuIG49biYmdWQobiksbmV3IEtyKHtzaGFwZTp7cG9pbnRzOm58fFtdfX0pfSxpbWFnZTpmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBxbjtyZXR1cm4gbGQoZSxpKSxjZCh0LGksdGhpcy5fZGVmcyksaS5zZXRTdHlsZSh7aW1hZ2U6dC5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKSx4OnQuZ2V0QXR0cmlidXRlKCJ4IikseTp0LmdldEF0dHJpYnV0ZSgieSIpLHdpZHRoOnQuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpLGhlaWdodDp0LmdldEF0dHJpYnV0ZSgiaGVpZ2h0Iil9KSxpfSx0ZXh0OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXRBdHRyaWJ1dGUoIngiKXx8MCxuPXQuZ2V0QXR0cmlidXRlKCJ5Iil8fDAsbz10LmdldEF0dHJpYnV0ZSgiZHgiKXx8MCxhPXQuZ2V0QXR0cmlidXRlKCJkeSIpfHwwO3RoaXMuX3RleHRYPXBhcnNlRmxvYXQoaSkrcGFyc2VGbG9hdChvKSx0aGlzLl90ZXh0WT1wYXJzZUZsb2F0KG4pK3BhcnNlRmxvYXQoYSk7dmFyIHI9bmV3IElpO3JldHVybiBsZChlLHIpLGNkKHQscix0aGlzLl9kZWZzKSxyfSx0c3BhbjpmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0QXR0cmlidXRlKCJ4Iiksbj10LmdldEF0dHJpYnV0ZSgieSIpO251bGwhPWkmJih0aGlzLl90ZXh0WD1wYXJzZUZsb2F0KGkpKSxudWxsIT1uJiYodGhpcy5fdGV4dFk9cGFyc2VGbG9hdChuKSk7dmFyIG89dC5nZXRBdHRyaWJ1dGUoImR4Iil8fDAsYT10LmdldEF0dHJpYnV0ZSgiZHkiKXx8MCxyPW5ldyBJaTtyZXR1cm4gbGQoZSxyKSxjZCh0LHIsdGhpcy5fZGVmcyksdGhpcy5fdGV4dFgrPW8sdGhpcy5fdGV4dFkrPWEscn0scGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPUdyKHQuZ2V0QXR0cmlidXRlKCJkIil8fCIiKTtyZXR1cm4gbGQoZSxpKSxjZCh0LGksdGhpcy5fZGVmcyksaX19LHNkPXtsaW5lYXJncmFkaWVudDpmdW5jdGlvbih0KXt2YXIgZT1wYXJzZUludCh0LmdldEF0dHJpYnV0ZSgieDEiKXx8MCwxMCksaT1wYXJzZUludCh0LmdldEF0dHJpYnV0ZSgieTEiKXx8MCwxMCksbj1wYXJzZUludCh0LmdldEF0dHJpYnV0ZSgieDIiKXx8MTAsMTApLG89cGFyc2VJbnQodC5nZXRBdHRyaWJ1dGUoInkyIil8fDAsMTApLGE9bmV3IGNzKGUsaSxuLG8pO3JldHVybiBmdW5jdGlvbih0LGUpe3ZhciBpPXQuZmlyc3RDaGlsZDtmb3IoO2k7KXtpZigxPT09aS5ub2RlVHlwZSl7dmFyIG49aS5nZXRBdHRyaWJ1dGUoIm9mZnNldCIpO249MDxuLmluZGV4T2YoIiUiKT9wYXJzZUludChuLDEwKS8xMDA6bj9wYXJzZUZsb2F0KG4pOjA7dmFyIG89aS5nZXRBdHRyaWJ1dGUoInN0b3AtY29sb3IiKXx8IiMwMDAwMDAiO2UuYWRkQ29sb3JTdG9wKG4sbyl9aT1pLm5leHRTaWJsaW5nfX0odCxhKSxhfSxyYWRpYWxncmFkaWVudDpmdW5jdGlvbih0KXt9fTtmdW5jdGlvbiBsZCh0LGUpe3QmJnQuX19pbmhlcml0ZWRTdHlsZSYmKGUuX19pbmhlcml0ZWRTdHlsZXx8KGUuX19pbmhlcml0ZWRTdHlsZT17fSksQyhlLl9faW5oZXJpdGVkU3R5bGUsdC5fX2luaGVyaXRlZFN0eWxlKSl9ZnVuY3Rpb24gdWQodCl7Zm9yKHZhciBlPWoodCkuc3BsaXQobmQpLGk9W10sbj0wO248ZS5sZW5ndGg7bis9Mil7dmFyIG89cGFyc2VGbG9hdChlW25dKSxhPXBhcnNlRmxvYXQoZVtuKzFdKTtpLnB1c2goW28sYV0pfXJldHVybiBpfXZhciBoZD17ZmlsbDoiZmlsbCIsc3Ryb2tlOiJzdHJva2UiLCJzdHJva2Utd2lkdGgiOiJsaW5lV2lkdGgiLG9wYWNpdHk6Im9wYWNpdHkiLCJmaWxsLW9wYWNpdHkiOiJmaWxsT3BhY2l0eSIsInN0cm9rZS1vcGFjaXR5Ijoic3Ryb2tlT3BhY2l0eSIsInN0cm9rZS1kYXNoYXJyYXkiOiJsaW5lRGFzaCIsInN0cm9rZS1kYXNob2Zmc2V0IjoibGluZURhc2hPZmZzZXQiLCJzdHJva2UtbGluZWNhcCI6ImxpbmVDYXAiLCJzdHJva2UtbGluZWpvaW4iOiJsaW5lSm9pbiIsInN0cm9rZS1taXRlcmxpbWl0IjoibWl0ZXJMaW1pdCIsImZvbnQtZmFtaWx5IjoiZm9udEZhbWlseSIsImZvbnQtc2l6ZSI6ImZvbnRTaXplIiwiZm9udC1zdHlsZSI6ImZvbnRTdHlsZSIsImZvbnQtd2VpZ2h0IjoiZm9udFdlaWdodCIsInRleHQtYWxpZ24iOiJ0ZXh0QWxpZ24iLCJhbGlnbm1lbnQtYmFzZWxpbmUiOiJ0ZXh0QmFzZWxpbmUifTtmdW5jdGlvbiBjZCh0LGUsaSxuKXt2YXIgbz1lLl9faW5oZXJpdGVkU3R5bGV8fHt9LGE9InRleHQiPT09ZS50eXBlO2lmKDE9PT10Lm5vZGVUeXBlJiYoZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEF0dHJpYnV0ZSgidHJhbnNmb3JtIik7aWYoaSl7aT1pLnJlcGxhY2UoLywvZywiICIpO3ZhciBuPW51bGwsbz1bXTtpLnJlcGxhY2UocGQsZnVuY3Rpb24odCxlLGkpe28ucHVzaChlLGkpfSk7Zm9yKHZhciBhPW8ubGVuZ3RoLTE7MDxhO2EtPTIpe3ZhciByPW9bYV0scz1vW2EtMV07c3dpdGNoKG49bnx8ZWUoKSxzKXtjYXNlInRyYW5zbGF0ZSI6cj1qKHIpLnNwbGl0KG5kKSxhZShuLG4sW3BhcnNlRmxvYXQoclswXSkscGFyc2VGbG9hdChyWzFdfHwwKV0pO2JyZWFrO2Nhc2Uic2NhbGUiOnI9aihyKS5zcGxpdChuZCksc2UobixuLFtwYXJzZUZsb2F0KHJbMF0pLHBhcnNlRmxvYXQoclsxXXx8clswXSldKTticmVhaztjYXNlInJvdGF0ZSI6cj1qKHIpLnNwbGl0KG5kKSxyZShuLG4scGFyc2VGbG9hdChyWzBdKSk7YnJlYWs7Y2FzZSJza2V3IjpyPWoocikuc3BsaXQobmQpLGNvbnNvbGUud2FybigiU2tldyB0cmFuc2Zvcm0gaXMgbm90IHN1cHBvcnRlZCB5ZXQiKTticmVhaztjYXNlIm1hdHJpeCI6cj1qKHIpLnNwbGl0KG5kKTtuWzBdPXBhcnNlRmxvYXQoclswXSksblsxXT1wYXJzZUZsb2F0KHJbMV0pLG5bMl09cGFyc2VGbG9hdChyWzJdKSxuWzNdPXBhcnNlRmxvYXQoclszXSksbls0XT1wYXJzZUZsb2F0KHJbNF0pLG5bNV09cGFyc2VGbG9hdChyWzVdKX19ZS5zZXRMb2NhbFRyYW5zZm9ybShuKX19KHQsZSksTChvLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0QXR0cmlidXRlKCJzdHlsZSIpLGk9e307aWYoIWUpcmV0dXJuIGk7dmFyIG4sbz17fTtnZC5sYXN0SW5kZXg9MDtmb3IoO251bGwhPShuPWdkLmV4ZWMoZSkpOylvW25bMV1dPW5bMl07Zm9yKHZhciBhIGluIGhkKWhkLmhhc093blByb3BlcnR5KGEpJiZudWxsIT1vW2FdJiYoaVtoZFthXV09b1thXSk7cmV0dXJuIGl9KHQpKSwhbikpZm9yKHZhciByIGluIGhkKWlmKGhkLmhhc093blByb3BlcnR5KHIpKXt2YXIgcz10LmdldEF0dHJpYnV0ZShyKTtudWxsIT1zJiYob1toZFtyXV09cyl9dmFyIGw9YT8idGV4dEZpbGwiOiJmaWxsIix1PWE/InRleHRTdHJva2UiOiJzdHJva2UiO2Uuc3R5bGU9ZS5zdHlsZXx8bmV3IEZpO3ZhciBoPWUuc3R5bGU7bnVsbCE9by5maWxsJiZoLnNldChsLGZkKG8uZmlsbCxpKSksbnVsbCE9by5zdHJva2UmJmguc2V0KHUsZmQoby5zdHJva2UsaSkpLEUoWyJsaW5lV2lkdGgiLCJvcGFjaXR5IiwiZmlsbE9wYWNpdHkiLCJzdHJva2VPcGFjaXR5IiwibWl0ZXJMaW1pdCIsImZvbnRTaXplIl0sZnVuY3Rpb24odCl7dmFyIGU9ImxpbmVXaWR0aCI9PT10JiZhPyJ0ZXh0U3Ryb2tlV2lkdGgiOnQ7bnVsbCE9b1t0XSYmaC5zZXQoZSxwYXJzZUZsb2F0KG9bdF0pKX0pLG8udGV4dEJhc2VsaW5lJiYiYXV0byIhPT1vLnRleHRCYXNlbGluZXx8KG8udGV4dEJhc2VsaW5lPSJhbHBoYWJldGljIiksImFscGhhYmV0aWMiPT09by50ZXh0QmFzZWxpbmUmJihvLnRleHRCYXNlbGluZT0iYm90dG9tIiksInN0YXJ0Ij09PW8udGV4dEFsaWduJiYoby50ZXh0QWxpZ249ImxlZnQiKSwiZW5kIj09PW8udGV4dEFsaWduJiYoby50ZXh0QWxpZ249InJpZ2h0IiksRShbImxpbmVEYXNoT2Zmc2V0IiwibGluZUNhcCIsImxpbmVKb2luIiwiZm9udFdlaWdodCIsImZvbnRGYW1pbHkiLCJmb250U3R5bGUiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QmFzZWxpbmUiXSxmdW5jdGlvbih0KXtudWxsIT1vW3RdJiZoLnNldCh0LG9bdF0pfSksby5saW5lRGFzaCYmKGUuc3R5bGUubGluZURhc2g9aihvLmxpbmVEYXNoKS5zcGxpdChuZCkpLGhbdV0mJiJub25lIiE9PWhbdV0mJihlW3VdPSEwKSxlLl9faW5oZXJpdGVkU3R5bGU9b312YXIgZGQ9L3VybFwoXHMqIyguKj8pXCkvO2Z1bmN0aW9uIGZkKHQsZSl7dmFyIGk9ZSYmdCYmdC5tYXRjaChkZCk7cmV0dXJuIGk/ZVtqKGlbMV0pXTp0fXZhciBwZD0vKHRyYW5zbGF0ZXxzY2FsZXxyb3RhdGV8c2tld1h8c2tld1l8bWF0cml4KVwoKFtcLVxzMC05XC5lLF0qKVwpL2c7dmFyIGdkPS8oW15cczo7XSspXHMqOlxzKihbXjo7XSspL2c7ZnVuY3Rpb24gbWQodCxlLGkpe3ZhciBuPWUvdC53aWR0aCxvPWkvdC5oZWlnaHQsYT1NYXRoLm1pbihuLG8pO3JldHVybntzY2FsZTpbYSxhXSxwb3NpdGlvbjpbLSh0LngrdC53aWR0aC8yKSphK2UvMiwtKHQueSt0LmhlaWdodC8yKSphK2kvMl19fXZhciB2ZD1RKCkseWQ9e3JlZ2lzdGVyTWFwOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbjtyZXR1cm4gRShuPWsoZSk/ZTplLnN2Zz9be3R5cGU6InN2ZyIsc291cmNlOmUuc3ZnLHNwZWNpYWxBcmVhczplLnNwZWNpYWxBcmVhc31dOihlLmdlb0pzb24mJiFlLmZlYXR1cmVzJiYoaT1lLnNwZWNpYWxBcmVhcyxlPWUuZ2VvSnNvbiksW3t0eXBlOiJnZW9KU09OIixzb3VyY2U6ZSxzcGVjaWFsQXJlYXM6aX1dKSxmdW5jdGlvbih0KXt2YXIgZT10LnR5cGU7Imdlb0pzb24iPT09ZSYmKGU9dC50eXBlPSJnZW9KU09OIiksKDAseGRbZV0pKHQpfSksdmQuc2V0KHQsbil9LHJldHJpZXZlTWFwOmZ1bmN0aW9uKHQpe3JldHVybiB2ZC5nZXQodCl9fSx4ZD17Z2VvSlNPTjpmdW5jdGlvbih0KXt2YXIgZT10LnNvdXJjZTt0Lmdlb0pTT049eihlKT8idW5kZWZpbmVkIiE9dHlwZW9mIEpTT04mJkpTT04ucGFyc2U/SlNPTi5wYXJzZShlKTpuZXcgRnVuY3Rpb24oInJldHVybiAoIitlKyIpOyIpKCk6ZX0sc3ZnOmZ1bmN0aW9uKHQpe3Quc3ZnWE1MPW9kKHQuc291cmNlKX19LF9kPVksd2Q9RSxiZD1PLFNkPVIsTWQ9VHUucGFyc2VDbGFzc1R5cGUsSWQ9e1BST0NFU1NPUjp7RklMVEVSOjFlMyxTRVJJRVNfRklMVEVSOjgwMCxTVEFUSVNUSUM6NWUzfSxWSVNVQUw6e0xBWU9VVDoxZTMsUFJPR1JFU1NJVkVfTEFZT1VUOjExMDAsR0xPQkFMOjJlMyxDSEFSVDozZTMsUE9TVF9DSEFSVF9MQVlPVVQ6MzUwMCxDT01QT05FTlQ6NGUzLEJSVVNIOjVlM319LFRkPSJfX2ZsYWdJbk1haW5Qcm9jZXNzIixBZD0iX19vcHRpb25VcGRhdGVkIixEZD0vXlthLXpBLVowLTlfXSskLztmdW5jdGlvbiBDZChuLG8pe3JldHVybiBmdW5jdGlvbih0LGUsaSl7IW8mJnRoaXMuX2Rpc3Bvc2VkfHwodD10JiZ0LnRvTG93ZXJDYXNlKCksQ3QucHJvdG90eXBlW25dLmNhbGwodGhpcyx0LGUsaSkpfX1mdW5jdGlvbiBMZCgpe0N0LmNhbGwodGhpcyl9ZnVuY3Rpb24ga2QodCxlLGkpe2k9aXx8e30sInN0cmluZyI9PXR5cGVvZiBlJiYoZT1lZltlXSksdGhpcy5pZCx0aGlzLmdyb3VwLHRoaXMuX2RvbT10O3ZhciBuPXRoaXMuX3pyPUFvKHQse3JlbmRlcmVyOmkucmVuZGVyZXJ8fCJjYW52YXMiLGRldmljZVBpeGVsUmF0aW86aS5kZXZpY2VQaXhlbFJhdGlvLHdpZHRoOmkud2lkdGgsaGVpZ2h0OmkuaGVpZ2h0fSk7dGhpcy5fdGhyb3R0bGVkWnJGbHVzaD1JYyhBKG4uZmx1c2gsbiksMTcpLChlPUQoZSkpJiZJaChlLCEwKSx0aGlzLl90aGVtZT1lLHRoaXMuX2NoYXJ0c1ZpZXdzPVtdLHRoaXMuX2NoYXJ0c01hcD17fSx0aGlzLl9jb21wb25lbnRzVmlld3M9W10sdGhpcy5fY29tcG9uZW50c01hcD17fSx0aGlzLl9jb29yZFN5c01ncj1uZXcgbmg7dmFyIG89dGhpcy5fYXBpPWZ1bmN0aW9uKGkpe3ZhciB0PWkuX2Nvb3JkU3lzTWdyO3JldHVybiBMKG5ldyBlaChpKSx7Z2V0Q29vcmRpbmF0ZVN5c3RlbXM6QSh0LmdldENvb3JkaW5hdGVTeXN0ZW1zLHQpLGdldENvbXBvbmVudEJ5RWxlbWVudDpmdW5jdGlvbih0KXtmb3IoO3Q7KXt2YXIgZT10Ll9fZWNDb21wb25lbnRJbmZvO2lmKG51bGwhPWUpcmV0dXJuIGkuX21vZGVsLmdldENvbXBvbmVudChlLm1haW5UeXBlLGUuaW5kZXgpO3Q9dC5wYXJlbnR9fX0pfSh0aGlzKTtmdW5jdGlvbiBhKHQsZSl7cmV0dXJuIHQuX19wcmlvLWUuX19wcmlvfU5pKHRmLGEpLE5pKCRkLGEpLHRoaXMuX3NjaGVkdWxlcj1uZXcgUGModGhpcyxvLCRkLHRmKSxDdC5jYWxsKHRoaXMsdGhpcy5fZWNFdmVudFByb2Nlc3Nvcj1uZXcgamQpLHRoaXMuX21lc3NhZ2VDZW50ZXI9bmV3IExkLHRoaXMuX2luaXRFdmVudHMoKSx0aGlzLnJlc2l6ZT1BKHRoaXMucmVzaXplLHRoaXMpLHRoaXMuX3BlbmRpbmdBY3Rpb25zPVtdLG4uYW5pbWF0aW9uLm9uKCJmcmFtZSIsdGhpcy5fb25mcmFtZSx0aGlzKSxmdW5jdGlvbih0LGUpe3Qub24oInJlbmRlcmVkIixmdW5jdGlvbigpe2UudHJpZ2dlcigicmVuZGVyZWQiKSwhdC5hbmltYXRpb24uaXNGaW5pc2hlZCgpfHxlW0FkXXx8ZS5fc2NoZWR1bGVyLnVuZmluaXNoZWR8fGUuX3BlbmRpbmdBY3Rpb25zLmxlbmd0aHx8ZS50cmlnZ2VyKCJmaW5pc2hlZCIpfSl9KG4sdGhpcyksSyh0aGlzKX1MZC5wcm90b3R5cGUub249Q2QoIm9uIiwhMCksTGQucHJvdG90eXBlLm9mZj1DZCgib2ZmIiwhMCksTGQucHJvdG90eXBlLm9uZT1DZCgib25lIiwhMCksYihMZCxDdCk7dmFyIFBkPWtkLnByb3RvdHlwZTtmdW5jdGlvbiBOZCh0LGUsaSl7aWYoIXRoaXMuX2Rpc3Bvc2VkKXt2YXIgbixvPXRoaXMuX21vZGVsLGE9dGhpcy5fY29vcmRTeXNNZ3IuZ2V0Q29vcmRpbmF0ZVN5c3RlbXMoKTtlPVhvKG8sZSk7Zm9yKHZhciByPTA7cjxhLmxlbmd0aDtyKyspe3ZhciBzPWFbcl07aWYoc1t0XSYmbnVsbCE9KG49c1t0XShvLGUsaSkpKXJldHVybiBufX19UGQuX29uZnJhbWU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlzcG9zZWQpe3ZhciB0PXRoaXMuX3NjaGVkdWxlcjtpZih0aGlzW0FkXSl7dmFyIGU9dGhpc1tBZF0uc2lsZW50O3RoaXNbVGRdPSEwLEVkKHRoaXMpLE9kLnVwZGF0ZS5jYWxsKHRoaXMpLHRoaXNbVGRdPSExLHRoaXNbQWRdPSExLFZkLmNhbGwodGhpcyxlKSxHZC5jYWxsKHRoaXMsZSl9ZWxzZSBpZih0LnVuZmluaXNoZWQpe3ZhciBpPTEsbj10aGlzLl9tb2RlbCxvPXRoaXMuX2FwaTt0LnVuZmluaXNoZWQ9ITE7ZG97dmFyIGE9K25ldyBEYXRlO3QucGVyZm9ybVNlcmllc1Rhc2tzKG4pLHQucGVyZm9ybURhdGFQcm9jZXNzb3JUYXNrcyhuKSxSZCh0aGlzLG4pLHQucGVyZm9ybVZpc3VhbFRhc2tzKG4pLFpkKHRoaXMsdGhpcy5fbW9kZWwsbywicmVtYWluIiksaS09K25ldyBEYXRlLWF9d2hpbGUoMDxpJiZ0LnVuZmluaXNoZWQpO3QudW5maW5pc2hlZHx8dGhpcy5fenIuZmx1c2goKX19fSxQZC5nZXREb209ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZG9tfSxQZC5nZXRacj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl96cn0sUGQuc2V0T3B0aW9uPWZ1bmN0aW9uKHQsZSxpKXtpZighdGhpcy5fZGlzcG9zZWQpe3ZhciBuO2lmKFNkKGUpJiYoaT1lLmxhenlVcGRhdGUsbj1lLnNpbGVudCxlPWUubm90TWVyZ2UpLHRoaXNbVGRdPSEwLCF0aGlzLl9tb2RlbHx8ZSl7dmFyIG89bmV3IHVoKHRoaXMuX2FwaSksYT10aGlzLl90aGVtZSxyPXRoaXMuX21vZGVsPW5ldyAkdTtyLnNjaGVkdWxlcj10aGlzLl9zY2hlZHVsZXIsci5pbml0KG51bGwsbnVsbCxhLG8pfXRoaXMuX21vZGVsLnNldE9wdGlvbih0LEpkKSxpPyh0aGlzW0FkXT17c2lsZW50Om59LHRoaXNbVGRdPSExKTooRWQodGhpcyksT2QudXBkYXRlLmNhbGwodGhpcyksdGhpcy5fenIuZmx1c2goKSx0aGlzW0FkXT0hMSx0aGlzW1RkXT0hMSxWZC5jYWxsKHRoaXMsbiksR2QuY2FsbCh0aGlzLG4pKX19LFBkLnNldFRoZW1lPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiRUNoYXJ0cyNzZXRUaGVtZSgpIGlzIERFUFJFQ0FURUQgaW4gRUNoYXJ0cyAzLjAiKX0sUGQuZ2V0TW9kZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZWx9LFBkLmdldE9wdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RlbCYmdGhpcy5fbW9kZWwuZ2V0T3B0aW9uKCl9LFBkLmdldFdpZHRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3pyLmdldFdpZHRoKCl9LFBkLmdldEhlaWdodD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl96ci5nZXRIZWlnaHQoKX0sUGQuZ2V0RGV2aWNlUGl4ZWxSYXRpbz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl96ci5wYWludGVyLmRwcnx8d2luZG93LmRldmljZVBpeGVsUmF0aW98fDF9LFBkLmdldFJlbmRlcmVkQ2FudmFzPWZ1bmN0aW9uKHQpe2lmKHYuY2FudmFzU3VwcG9ydGVkKXJldHVybih0PXR8fHt9KS5waXhlbFJhdGlvPXQucGl4ZWxSYXRpb3x8MSx0LmJhY2tncm91bmRDb2xvcj10LmJhY2tncm91bmRDb2xvcnx8dGhpcy5fbW9kZWwuZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiKSx0aGlzLl96ci5wYWludGVyLmdldFJlbmRlcmVkQ2FudmFzKHQpfSxQZC5nZXRTdmdEYXRhVXJsPWZ1bmN0aW9uKCl7aWYodi5zdmdTdXBwb3J0ZWQpe3ZhciB0PXRoaXMuX3pyO3JldHVybiBFKHQuc3RvcmFnZS5nZXREaXNwbGF5TGlzdCgpLGZ1bmN0aW9uKHQpe3Quc3RvcEFuaW1hdGlvbighMCl9KSx0LnBhaW50ZXIucGF0aFRvRGF0YVVybCgpfX0sUGQuZ2V0RGF0YVVSTD1mdW5jdGlvbih0KXtpZighdGhpcy5fZGlzcG9zZWQpe3ZhciBlPSh0PXR8fHt9KS5leGNsdWRlQ29tcG9uZW50cyxpPXRoaXMuX21vZGVsLG49W10sbz10aGlzO3dkKGUsZnVuY3Rpb24odCl7aS5lYWNoQ29tcG9uZW50KHttYWluVHlwZTp0fSxmdW5jdGlvbih0KXt2YXIgZT1vLl9jb21wb25lbnRzTWFwW3QuX192aWV3SWRdO2UuZ3JvdXAuaWdub3JlfHwobi5wdXNoKGUpLGUuZ3JvdXAuaWdub3JlPSEwKX0pfSk7dmFyIGE9InN2ZyI9PT10aGlzLl96ci5wYWludGVyLmdldFR5cGUoKT90aGlzLmdldFN2Z0RhdGFVcmwoKTp0aGlzLmdldFJlbmRlcmVkQ2FudmFzKHQpLnRvRGF0YVVSTCgiaW1hZ2UvIisodCYmdC50eXBlfHwicG5nIikpO3JldHVybiB3ZChuLGZ1bmN0aW9uKHQpe3QuZ3JvdXAuaWdub3JlPSExfSksYX19LFBkLmdldENvbm5lY3RlZERhdGFVUkw9ZnVuY3Rpb24obyl7aWYoIXRoaXMuX2Rpc3Bvc2VkJiZ2LmNhbnZhc1N1cHBvcnRlZCl7dmFyIGE9dGhpcy5ncm91cCxyPU1hdGgubWluLHM9TWF0aC5tYXg7aWYoYWZbYV0pe3ZhciBsPTEvMCx1PTEvMCxoPS0xLzAsYz0tMS8wLGQ9W10saT1vJiZvLnBpeGVsUmF0aW98fDE7RShvZixmdW5jdGlvbih0LGUpe2lmKHQuZ3JvdXA9PT1hKXt2YXIgaT10LmdldFJlbmRlcmVkQ2FudmFzKEQobykpLG49dC5nZXREb20oKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtsPXIobi5sZWZ0LGwpLHU9cihuLnRvcCx1KSxoPXMobi5yaWdodCxoKSxjPXMobi5ib3R0b20sYyksZC5wdXNoKHtkb206aSxsZWZ0Om4ubGVmdCx0b3A6bi50b3B9KX19KTt2YXIgdD0oaCo9aSktKGwqPWkpLGU9KGMqPWkpLSh1Kj1pKSxuPWcoKTtuLndpZHRoPXQsbi5oZWlnaHQ9ZTt2YXIgZj1BbyhuKTtyZXR1cm4gby5jb25uZWN0ZWRCYWNrZ3JvdW5kQ29sb3ImJmYuYWRkKG5ldyBpcyh7c2hhcGU6e3g6MCx5OjAsd2lkdGg6dCxoZWlnaHQ6ZX0sc3R5bGU6e2ZpbGw6by5jb25uZWN0ZWRCYWNrZ3JvdW5kQ29sb3J9fSkpLHdkKGQsZnVuY3Rpb24odCl7dmFyIGU9bmV3IHFuKHtzdHlsZTp7eDp0LmxlZnQqaS1sLHk6dC50b3AqaS11LGltYWdlOnQuZG9tfX0pO2YuYWRkKGUpfSksZi5yZWZyZXNoSW1tZWRpYXRlbHkoKSxuLnRvRGF0YVVSTCgiaW1hZ2UvIisobyYmby50eXBlfHwicG5nIikpfXJldHVybiB0aGlzLmdldERhdGFVUkwobyl9fSxQZC5jb252ZXJ0VG9QaXhlbD1UKE5kLCJjb252ZXJ0VG9QaXhlbCIpLFBkLmNvbnZlcnRGcm9tUGl4ZWw9VChOZCwiY29udmVydEZyb21QaXhlbCIpLFBkLmNvbnRhaW5QaXhlbD1mdW5jdGlvbih0LG8pe3ZhciBhO2lmKCF0aGlzLl9kaXNwb3NlZClyZXR1cm4gRSh0PVhvKHRoaXMuX21vZGVsLHQpLGZ1bmN0aW9uKHQsbil7MDw9bi5pbmRleE9mKCJNb2RlbHMiKSYmRSh0LGZ1bmN0aW9uKHQpe3ZhciBlPXQuY29vcmRpbmF0ZVN5c3RlbTtpZihlJiZlLmNvbnRhaW5Qb2ludClhfD0hIWUuY29udGFpblBvaW50KG8pO2Vsc2UgaWYoInNlcmllc01vZGVscyI9PT1uKXt2YXIgaT10aGlzLl9jaGFydHNNYXBbdC5fX3ZpZXdJZF07aSYmaS5jb250YWluUG9pbnQmJihhfD1pLmNvbnRhaW5Qb2ludChvLHQpKX19LHRoaXMpfSx0aGlzKSwhIWF9LFBkLmdldFZpc3VhbD1mdW5jdGlvbih0LGUpe3ZhciBpPSh0PVhvKHRoaXMuX21vZGVsLHQse2RlZmF1bHRNYWluVHlwZToic2VyaWVzIn0pKS5zZXJpZXNNb2RlbC5nZXREYXRhKCksbj10Lmhhc093blByb3BlcnR5KCJkYXRhSW5kZXhJbnNpZGUiKT90LmRhdGFJbmRleEluc2lkZTp0Lmhhc093blByb3BlcnR5KCJkYXRhSW5kZXgiKT9pLmluZGV4T2ZSYXdJbmRleCh0LmRhdGFJbmRleCk6bnVsbDtyZXR1cm4gbnVsbCE9bj9pLmdldEl0ZW1WaXN1YWwobixlKTppLmdldFZpc3VhbChlKX0sUGQuZ2V0Vmlld09mQ29tcG9uZW50TW9kZWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2NvbXBvbmVudHNNYXBbdC5fX3ZpZXdJZF19LFBkLmdldFZpZXdPZlNlcmllc01vZGVsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jaGFydHNNYXBbdC5fX3ZpZXdJZF19O3ZhciBPZD17cHJlcGFyZUFuZFVwZGF0ZTpmdW5jdGlvbih0KXtFZCh0aGlzKSxPZC51cGRhdGUuY2FsbCh0aGlzLHQpfSx1cGRhdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbW9kZWwsaT10aGlzLl9hcGksbj10aGlzLl96cixvPXRoaXMuX2Nvb3JkU3lzTWdyLGE9dGhpcy5fc2NoZWR1bGVyO2lmKGUpe2EucmVzdG9yZURhdGEoZSx0KSxhLnBlcmZvcm1TZXJpZXNUYXNrcyhlKSxvLmNyZWF0ZShlLGkpLGEucGVyZm9ybURhdGFQcm9jZXNzb3JUYXNrcyhlLHQpLFJkKHRoaXMsZSksby51cGRhdGUoZSxpKSxXZChlKSxhLnBlcmZvcm1WaXN1YWxUYXNrcyhlLHQpLEhkKHRoaXMsZSxpLHQpO3ZhciByPWUuZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiKXx8InRyYW5zcGFyZW50IjtpZih2LmNhbnZhc1N1cHBvcnRlZCluLnNldEJhY2tncm91bmRDb2xvcihyKTtlbHNle3ZhciBzPVJlKHIpO3I9WWUocywicmdiIiksMD09PXNbM10mJihyPSJ0cmFuc3BhcmVudCIpfVVkKGUsaSl9fSx1cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24obyl7dmFyIGE9dGhpcy5fbW9kZWwscj10aGlzLHM9dGhpcy5fYXBpO2lmKGEpe3ZhciBsPVtdO2EuZWFjaENvbXBvbmVudChmdW5jdGlvbih0LGUpe3ZhciBpPXIuZ2V0Vmlld09mQ29tcG9uZW50TW9kZWwoZSk7aWYoaSYmaS5fX2FsaXZlKWlmKGkudXBkYXRlVHJhbnNmb3JtKXt2YXIgbj1pLnVwZGF0ZVRyYW5zZm9ybShlLGEscyxvKTtuJiZuLnVwZGF0ZSYmbC5wdXNoKGkpfWVsc2UgbC5wdXNoKGkpfSk7dmFyIG49USgpO2EuZWFjaFNlcmllcyhmdW5jdGlvbih0KXt2YXIgZT1yLl9jaGFydHNNYXBbdC5fX3ZpZXdJZF07aWYoZS51cGRhdGVUcmFuc2Zvcm0pe3ZhciBpPWUudXBkYXRlVHJhbnNmb3JtKHQsYSxzLG8pO2kmJmkudXBkYXRlJiZuLnNldCh0LnVpZCwxKX1lbHNlIG4uc2V0KHQudWlkLDEpfSksV2QoYSksdGhpcy5fc2NoZWR1bGVyLnBlcmZvcm1WaXN1YWxUYXNrcyhhLG8se3NldERpcnR5OiEwLGRpcnR5TWFwOm59KSxaZChyLGEscyxvLG4pLFVkKGEsdGhpcy5fYXBpKX19LHVwZGF0ZVZpZXc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbW9kZWw7ZSYmKGdjLm1hcmtVcGRhdGVNZXRob2QodCwidXBkYXRlVmlldyIpLFdkKGUpLHRoaXMuX3NjaGVkdWxlci5wZXJmb3JtVmlzdWFsVGFza3MoZSx0LHtzZXREaXJ0eTohMH0pLEhkKHRoaXMsdGhpcy5fbW9kZWwsdGhpcy5fYXBpLHQpLFVkKGUsdGhpcy5fYXBpKSl9LHVwZGF0ZVZpc3VhbDpmdW5jdGlvbih0KXtPZC51cGRhdGUuY2FsbCh0aGlzLHQpfSx1cGRhdGVMYXlvdXQ6ZnVuY3Rpb24odCl7T2QudXBkYXRlLmNhbGwodGhpcyx0KX19O2Z1bmN0aW9uIEVkKHQpe3ZhciBlPXQuX21vZGVsLGk9dC5fc2NoZWR1bGVyO2kucmVzdG9yZVBpcGVsaW5lcyhlKSxpLnByZXBhcmVTdGFnZVRhc2tzKCksRmQodCwiY29tcG9uZW50IixlLGkpLEZkKHQsImNoYXJ0IixlLGkpLGkucGxhbigpfWZ1bmN0aW9uIHpkKGUsaSxuLG8sdCl7dmFyIGE9ZS5fbW9kZWw7aWYobyl7dmFyIHI9e307cltvKyJJZCJdPW5bbysiSWQiXSxyW28rIkluZGV4Il09bltvKyJJbmRleCJdLHJbbysiTmFtZSJdPW5bbysiTmFtZSJdO3ZhciBzPXttYWluVHlwZTpvLHF1ZXJ5OnJ9O3QmJihzLnN1YlR5cGU9dCk7dmFyIGw9bi5leGNsdWRlU2VyaWVzSWQ7bnVsbCE9bCYmKGw9UShFbyhsKSkpLGEmJmEuZWFjaENvbXBvbmVudChzLGZ1bmN0aW9uKHQpe2wmJm51bGwhPWwuZ2V0KHQuaWQpfHx1KGVbInNlcmllcyI9PT1vPyJfY2hhcnRzTWFwIjoiX2NvbXBvbmVudHNNYXAiXVt0Ll9fdmlld0lkXSl9LGUpfWVsc2Ugd2QoZS5fY29tcG9uZW50c1ZpZXdzLmNvbmNhdChlLl9jaGFydHNWaWV3cyksdSk7ZnVuY3Rpb24gdSh0KXt0JiZ0Ll9fYWxpdmUmJnRbaV0mJnRbaV0odC5fX21vZGVsLGEsZS5fYXBpLG4pfX1mdW5jdGlvbiBSZCh0LGUpe3ZhciBpPXQuX2NoYXJ0c01hcCxuPXQuX3NjaGVkdWxlcjtlLmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7bi51cGRhdGVTdHJlYW1Nb2Rlcyh0LGlbdC5fX3ZpZXdJZF0pfSl9ZnVuY3Rpb24gQmQoZSx0KXt2YXIgaT1lLnR5cGUsbj1lLmVzY2FwZUNvbm5lY3Qsbz1xZFtpXSxhPW8uYWN0aW9uSW5mbyxyPShhLnVwZGF0ZXx8InVwZGF0ZSIpLnNwbGl0KCI6Iikscz1yLnBvcCgpO3I9bnVsbCE9clswXSYmTWQoclswXSksdGhpc1tUZF09ITA7dmFyIGw9W2VdLHU9ITE7ZS5iYXRjaCYmKHU9ITAsbD1OKGUuYmF0Y2gsZnVuY3Rpb24odCl7cmV0dXJuKHQ9QyhMKHt9LHQpLGUpKS5iYXRjaD1udWxsLHR9KSk7dmFyIGgsYz1bXSxkPSJoaWdobGlnaHQiPT09aXx8ImRvd25wbGF5Ij09PWk7d2QobCxmdW5jdGlvbih0KXsoaD0oaD1vLmFjdGlvbih0LHRoaXMuX21vZGVsLHRoaXMuX2FwaSkpfHxMKHt9LHQpKS50eXBlPWEuZXZlbnR8fGgudHlwZSxjLnB1c2goaCksZD96ZCh0aGlzLHMsdCwic2VyaWVzIik6ciYmemQodGhpcyxzLHQsci5tYWluLHIuc3ViKX0sdGhpcyksIm5vbmUiPT09c3x8ZHx8cnx8KHRoaXNbQWRdPyhFZCh0aGlzKSxPZC51cGRhdGUuY2FsbCh0aGlzLGUpLHRoaXNbQWRdPSExKTpPZFtzXS5jYWxsKHRoaXMsZSkpLGg9dT97dHlwZTphLmV2ZW50fHxpLGVzY2FwZUNvbm5lY3Q6bixiYXRjaDpjfTpjWzBdLHRoaXNbVGRdPSExLHR8fHRoaXMuX21lc3NhZ2VDZW50ZXIudHJpZ2dlcihoLnR5cGUsaCl9ZnVuY3Rpb24gVmQodCl7Zm9yKHZhciBlPXRoaXMuX3BlbmRpbmdBY3Rpb25zO2UubGVuZ3RoOyl7dmFyIGk9ZS5zaGlmdCgpO0JkLmNhbGwodGhpcyxpLHQpfX1mdW5jdGlvbiBHZCh0KXt0fHx0aGlzLnRyaWdnZXIoInVwZGF0ZWQiKX1mdW5jdGlvbiBGZCh0LGUsbyxhKXtmb3IodmFyIHI9ImNvbXBvbmVudCI9PT1lLHM9cj90Ll9jb21wb25lbnRzVmlld3M6dC5fY2hhcnRzVmlld3MsbD1yP3QuX2NvbXBvbmVudHNNYXA6dC5fY2hhcnRzTWFwLHU9dC5fenIsaD10Ll9hcGksaT0wO2k8cy5sZW5ndGg7aSsrKXNbaV0uX19hbGl2ZT0hMTtmdW5jdGlvbiBuKHQpe3ZhciBlPSJfZWNfIit0LmlkKyJfIit0LnR5cGUsaT1sW2VdO2lmKCFpKXt2YXIgbj1NZCh0LnR5cGUpOyhpPW5ldyhyP2hjLmdldENsYXNzKG4ubWFpbixuLnN1Yik6Z2MuZ2V0Q2xhc3Mobi5zdWIpKSkuaW5pdChvLGgpLGxbZV09aSxzLnB1c2goaSksdS5hZGQoaS5ncm91cCl9dC5fX3ZpZXdJZD1pLl9faWQ9ZSxpLl9fYWxpdmU9ITAsaS5fX21vZGVsPXQsaS5ncm91cC5fX2VjQ29tcG9uZW50SW5mbz17bWFpblR5cGU6dC5tYWluVHlwZSxpbmRleDp0LmNvbXBvbmVudEluZGV4fSxyfHxhLnByZXBhcmVWaWV3KGksdCxvLGgpfXI/by5lYWNoQ29tcG9uZW50KGZ1bmN0aW9uKHQsZSl7InNlcmllcyIhPT10JiZuKGUpfSk6by5lYWNoU2VyaWVzKG4pO2ZvcihpPTA7aTxzLmxlbmd0aDspe3ZhciBjPXNbaV07Yy5fX2FsaXZlP2krKzoocnx8Yy5yZW5kZXJUYXNrLmRpc3Bvc2UoKSx1LnJlbW92ZShjLmdyb3VwKSxjLmRpc3Bvc2UobyxoKSxzLnNwbGljZShpLDEpLGRlbGV0ZSBsW2MuX19pZF0sYy5fX2lkPWMuZ3JvdXAuX19lY0NvbXBvbmVudEluZm89bnVsbCl9fWZ1bmN0aW9uIFdkKHQpe3QuY2xlYXJDb2xvclBhbGV0dGUoKSx0LmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7dC5jbGVhckNvbG9yUGFsZXR0ZSgpfSl9ZnVuY3Rpb24gSGQodCxlLGksbil7IWZ1bmN0aW9uKHQsaSxuLG8sZSl7d2QoZXx8dC5fY29tcG9uZW50c1ZpZXdzLGZ1bmN0aW9uKHQpe3ZhciBlPXQuX19tb2RlbDt0LnJlbmRlcihlLGksbixvKSxZZChlLHQpfSl9KHQsZSxpLG4pLHdkKHQuX2NoYXJ0c1ZpZXdzLGZ1bmN0aW9uKHQpe3QuX19hbGl2ZT0hMX0pLFpkKHQsZSxpLG4pLHdkKHQuX2NoYXJ0c1ZpZXdzLGZ1bmN0aW9uKHQpe3QuX19hbGl2ZXx8dC5yZW1vdmUoZSxpKX0pfWZ1bmN0aW9uIFpkKG4sdCxlLG8sYSl7dmFyIHIscz1uLl9zY2hlZHVsZXI7dC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQpe3ZhciBlPW4uX2NoYXJ0c01hcFt0Ll9fdmlld0lkXTtlLl9fYWxpdmU9ITA7dmFyIGk9ZS5yZW5kZXJUYXNrO3MudXBkYXRlUGF5bG9hZChpLG8pLGEmJmEuZ2V0KHQudWlkKSYmaS5kaXJ0eSgpLHJ8PWkucGVyZm9ybShzLmdldFBlcmZvcm1BcmdzKGkpKSxlLmdyb3VwLnNpbGVudD0hIXQuZ2V0KCJzaWxlbnQiKSxZZCh0LGUpLGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXQoImJsZW5kTW9kZSIpfHxudWxsO2UuZ3JvdXAudHJhdmVyc2UoZnVuY3Rpb24odCl7dC5pc0dyb3VwfHx0LnN0eWxlLmJsZW5kIT09aSYmdC5zZXRTdHlsZSgiYmxlbmQiLGkpLHQuZWFjaFBlbmRpbmdEaXNwbGF5YWJsZSYmdC5lYWNoUGVuZGluZ0Rpc3BsYXlhYmxlKGZ1bmN0aW9uKHQpe3Quc2V0U3R5bGUoImJsZW5kIixpKX0pfSl9KHQsZSl9KSxzLnVuZmluaXNoZWR8PXIsZnVuY3Rpb24oaSx0KXt2YXIgZT1pLl96ci5zdG9yYWdlLG49MDtlLnRyYXZlcnNlKGZ1bmN0aW9uKHQpe24rK30pLG4+dC5nZXQoImhvdmVyTGF5ZXJUaHJlc2hvbGQiKSYmIXYubm9kZSYmdC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQpe2lmKCF0LnByZXZlbnRVc2luZ0hvdmVyTGF5ZXIpe3ZhciBlPWkuX2NoYXJ0c01hcFt0Ll9fdmlld0lkXTtlLl9fYWxpdmUmJmUuZ3JvdXAudHJhdmVyc2UoZnVuY3Rpb24odCl7dC51c2VIb3ZlckxheWVyPSEwfSl9fSl9KG4sdCksTGMobi5fenIuZG9tLHQpfWZ1bmN0aW9uIFVkKGUsaSl7d2QoUWQsZnVuY3Rpb24odCl7dChlLGkpfSl9UGQucmVzaXplPWZ1bmN0aW9uKHQpe2lmKCF0aGlzLl9kaXNwb3NlZCl7dGhpcy5fenIucmVzaXplKHQpO3ZhciBlPXRoaXMuX21vZGVsO2lmKHRoaXMuX2xvYWRpbmdGWCYmdGhpcy5fbG9hZGluZ0ZYLnJlc2l6ZSgpLGUpe3ZhciBpPWUucmVzZXRPcHRpb24oIm1lZGlhIiksbj10JiZ0LnNpbGVudDt0aGlzW1RkXT0hMCxpJiZFZCh0aGlzKSxPZC51cGRhdGUuY2FsbCh0aGlzKSx0aGlzW1RkXT0hMSxWZC5jYWxsKHRoaXMsbiksR2QuY2FsbCh0aGlzLG4pfX19LFBkLnNob3dMb2FkaW5nPWZ1bmN0aW9uKHQsZSl7aWYoIXRoaXMuX2Rpc3Bvc2VkJiYoU2QodCkmJihlPXQsdD0iIiksdD10fHwiZGVmYXVsdCIsdGhpcy5oaWRlTG9hZGluZygpLG5mW3RdKSl7dmFyIGk9bmZbdF0odGhpcy5fYXBpLGUpLG49dGhpcy5fenI7dGhpcy5fbG9hZGluZ0ZYPWksbi5hZGQoaSl9fSxQZC5oaWRlTG9hZGluZz1mdW5jdGlvbigpe3RoaXMuX2Rpc3Bvc2VkfHwodGhpcy5fbG9hZGluZ0ZYJiZ0aGlzLl96ci5yZW1vdmUodGhpcy5fbG9hZGluZ0ZYKSx0aGlzLl9sb2FkaW5nRlg9bnVsbCl9LFBkLm1ha2VBY3Rpb25Gcm9tRXZlbnQ9ZnVuY3Rpb24odCl7dmFyIGU9TCh7fSx0KTtyZXR1cm4gZS50eXBlPUtkW3QudHlwZV0sZX0sUGQuZGlzcGF0Y2hBY3Rpb249ZnVuY3Rpb24odCxlKXt0aGlzLl9kaXNwb3NlZHx8KFNkKGUpfHwoZT17c2lsZW50OiEhZX0pLHFkW3QudHlwZV0mJnRoaXMuX21vZGVsJiYodGhpc1tUZF0/dGhpcy5fcGVuZGluZ0FjdGlvbnMucHVzaCh0KTooQmQuY2FsbCh0aGlzLHQsZS5zaWxlbnQpLGUuZmx1c2g/dGhpcy5fenIuZmx1c2goITApOiExIT09ZS5mbHVzaCYmdi5icm93c2VyLndlQ2hhdCYmdGhpcy5fdGhyb3R0bGVkWnJGbHVzaCgpLFZkLmNhbGwodGhpcyxlLnNpbGVudCksR2QuY2FsbCh0aGlzLGUuc2lsZW50KSkpKX0sUGQuYXBwZW5kRGF0YT1mdW5jdGlvbih0KXtpZighdGhpcy5fZGlzcG9zZWQpe3ZhciBlPXQuc2VyaWVzSW5kZXg7dGhpcy5nZXRNb2RlbCgpLmdldFNlcmllc0J5SW5kZXgoZSkuYXBwZW5kRGF0YSh0KSx0aGlzLl9zY2hlZHVsZXIudW5maW5pc2hlZD0hMH19LFBkLm9uPUNkKCJvbiIsITEpLFBkLm9mZj1DZCgib2ZmIiwhMSksUGQub25lPUNkKCJvbmUiLCExKTt2YXIgWGQ9WyJjbGljayIsImRibGNsaWNrIiwibW91c2VvdmVyIiwibW91c2VvdXQiLCJtb3VzZW1vdmUiLCJtb3VzZWRvd24iLCJtb3VzZXVwIiwiZ2xvYmFsb3V0IiwiY29udGV4dG1lbnUiXTtmdW5jdGlvbiBZZCh0LGUpe3ZhciBpPXQuZ2V0KCJ6Iiksbj10LmdldCgiemxldmVsIik7ZS5ncm91cC50cmF2ZXJzZShmdW5jdGlvbih0KXsiZ3JvdXAiIT09dC50eXBlJiYobnVsbCE9aSYmKHQuej1pKSxudWxsIT1uJiYodC56bGV2ZWw9bikpfSl9ZnVuY3Rpb24gamQoKXt0aGlzLmV2ZW50SW5mb31QZC5faW5pdEV2ZW50cz1mdW5jdGlvbigpe3dkKFhkLGZ1bmN0aW9uKHUpe2Z1bmN0aW9uIHQodCl7dmFyIGUsaT10aGlzLmdldE1vZGVsKCksbj10LnRhcmdldDtpZigiZ2xvYmFsb3V0Ij09PXUpZT17fTtlbHNlIGlmKG4mJm51bGwhPW4uZGF0YUluZGV4KXt2YXIgbz1uLmRhdGFNb2RlbHx8aS5nZXRTZXJpZXNCeUluZGV4KG4uc2VyaWVzSW5kZXgpO2U9byYmby5nZXREYXRhUGFyYW1zKG4uZGF0YUluZGV4LG4uZGF0YVR5cGUsbil8fHt9fWVsc2UgbiYmbi5ldmVudERhdGEmJihlPUwoe30sbi5ldmVudERhdGEpKTtpZihlKXt2YXIgYT1lLmNvbXBvbmVudFR5cGUscj1lLmNvbXBvbmVudEluZGV4OyJtYXJrTGluZSIhPT1hJiYibWFya1BvaW50IiE9PWEmJiJtYXJrQXJlYSIhPT1hfHwoYT0ic2VyaWVzIixyPWUuc2VyaWVzSW5kZXgpO3ZhciBzPWEmJm51bGwhPXImJmkuZ2V0Q29tcG9uZW50KGEsciksbD1zJiZ0aGlzWyJzZXJpZXMiPT09cy5tYWluVHlwZT8iX2NoYXJ0c01hcCI6Il9jb21wb25lbnRzTWFwIl1bcy5fX3ZpZXdJZF07ZS5ldmVudD10LGUudHlwZT11LHRoaXMuX2VjRXZlbnRQcm9jZXNzb3IuZXZlbnRJbmZvPXt0YXJnZXRFbDpuLHBhY2tlZEV2ZW50OmUsbW9kZWw6cyx2aWV3Omx9LHRoaXMudHJpZ2dlcih1LGUpfX10LnpyRXZlbnRmdWxDYWxsQXRMYXN0PSEwLHRoaXMuX3pyLm9uKHUsdCx0aGlzKX0sdGhpcyksd2QoS2QsZnVuY3Rpb24odCxlKXt0aGlzLl9tZXNzYWdlQ2VudGVyLm9uKGUsZnVuY3Rpb24odCl7dGhpcy50cmlnZ2VyKGUsdCl9LHRoaXMpfSx0aGlzKX0sUGQuaXNEaXNwb3NlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kaXNwb3NlZH0sUGQuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLl9kaXNwb3NlZHx8dGhpcy5zZXRPcHRpb24oe3NlcmllczpbXX0sITApfSxQZC5kaXNwb3NlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2Rpc3Bvc2VkKXt0aGlzLl9kaXNwb3NlZD0hMCxqbyh0aGlzLmdldERvbSgpLGxmLCIiKTt2YXIgZT10aGlzLl9hcGksaT10aGlzLl9tb2RlbDt3ZCh0aGlzLl9jb21wb25lbnRzVmlld3MsZnVuY3Rpb24odCl7dC5kaXNwb3NlKGksZSl9KSx3ZCh0aGlzLl9jaGFydHNWaWV3cyxmdW5jdGlvbih0KXt0LmRpc3Bvc2UoaSxlKX0pLHRoaXMuX3pyLmRpc3Bvc2UoKSxkZWxldGUgb2ZbdGhpcy5pZF19fSxiKGtkLEN0KSxqZC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmpkLG5vcm1hbGl6ZVF1ZXJ5OmZ1bmN0aW9uKHQpe3ZhciBzPXt9LGw9e30sdT17fTtpZih6KHQpKXt2YXIgZT1NZCh0KTtzLm1haW5UeXBlPWUubWFpbnx8bnVsbCxzLnN1YlR5cGU9ZS5zdWJ8fG51bGx9ZWxzZXt2YXIgaD1bIkluZGV4IiwiTmFtZSIsIklkIl0sYz17bmFtZToxLGRhdGFJbmRleDoxLGRhdGFUeXBlOjF9O0UodCxmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT0hMSxuPTA7bjxoLmxlbmd0aDtuKyspe3ZhciBvPWhbbl0sYT1lLmxhc3RJbmRleE9mKG8pO2lmKDA8YSYmYT09PWUubGVuZ3RoLW8ubGVuZ3RoKXt2YXIgcj1lLnNsaWNlKDAsYSk7ImRhdGEiIT09ciYmKHMubWFpblR5cGU9cixzW28udG9Mb3dlckNhc2UoKV09dCxpPSEwKX19Yy5oYXNPd25Qcm9wZXJ0eShlKSYmKGxbZV09dCxpPSEwKSxpfHwodVtlXT10KX0pfXJldHVybntjcHRRdWVyeTpzLGRhdGFRdWVyeTpsLG90aGVyUXVlcnk6dX19LGZpbHRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5ldmVudEluZm87aWYoIW4pcmV0dXJuITA7dmFyIG89bi50YXJnZXRFbCxhPW4ucGFja2VkRXZlbnQscj1uLm1vZGVsLHM9bi52aWV3O2lmKCFyfHwhcylyZXR1cm4hMDt2YXIgbD1lLmNwdFF1ZXJ5LHU9ZS5kYXRhUXVlcnk7cmV0dXJuIGgobCxyLCJtYWluVHlwZSIpJiZoKGwsciwic3ViVHlwZSIpJiZoKGwsciwiaW5kZXgiLCJjb21wb25lbnRJbmRleCIpJiZoKGwsciwibmFtZSIpJiZoKGwsciwiaWQiKSYmaCh1LGEsIm5hbWUiKSYmaCh1LGEsImRhdGFJbmRleCIpJiZoKHUsYSwiZGF0YVR5cGUiKSYmKCFzLmZpbHRlckZvckV4cG9zZWRFdmVudHx8cy5maWx0ZXJGb3JFeHBvc2VkRXZlbnQodCxlLm90aGVyUXVlcnksbyxhKSk7ZnVuY3Rpb24gaCh0LGUsaSxuKXtyZXR1cm4gbnVsbD09dFtpXXx8ZVtufHxpXT09PXRbaV19fSxhZnRlclRyaWdnZXI6ZnVuY3Rpb24oKXt0aGlzLmV2ZW50SW5mbz1udWxsfX07dmFyIHFkPXt9LEtkPXt9LCRkPVtdLEpkPVtdLFFkPVtdLHRmPVtdLGVmPXt9LG5mPXt9LG9mPXt9LGFmPXt9LHJmPW5ldyBEYXRlLTAsc2Y9bmV3IERhdGUtMCxsZj0iX2VjaGFydHNfaW5zdGFuY2VfIjtmdW5jdGlvbiB1Zih0KXthZlt0XT0hMX12YXIgaGY9dWY7ZnVuY3Rpb24gY2YodCl7cmV0dXJuIG9mW2Z1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0QXR0cmlidXRlP3QuZ2V0QXR0cmlidXRlKGUpOnRbZV19KHQsbGYpXX1mdW5jdGlvbiBkZih0LGUpe2VmW3RdPWV9ZnVuY3Rpb24gZmYodCl7SmQucHVzaCh0KX1mdW5jdGlvbiBwZih0LGUpe3hmKCRkLHQsZSwxZTMpfWZ1bmN0aW9uIGdmKHQsZSxpKXsiZnVuY3Rpb24iPT10eXBlb2YgZSYmKGk9ZSxlPSIiKTt2YXIgbj1TZCh0KT90LnR5cGU6W3QsdD17ZXZlbnQ6ZX1dWzBdO3QuZXZlbnQ9KHQuZXZlbnR8fG4pLnRvTG93ZXJDYXNlKCksZT10LmV2ZW50LF9kKERkLnRlc3QobikmJkRkLnRlc3QoZSkpLHFkW25dfHwocWRbbl09e2FjdGlvbjppLGFjdGlvbkluZm86dH0pLEtkW2VdPW59ZnVuY3Rpb24gbWYodCxlKXtuaC5yZWdpc3Rlcih0LGUpfWZ1bmN0aW9uIHZmKHQsZSl7eGYodGYsdCxlLDFlMywibGF5b3V0Iil9ZnVuY3Rpb24geWYodCxlKXt4Zih0Zix0LGUsM2UzLCJ2aXN1YWwiKX1mdW5jdGlvbiB4Zih0LGUsaSxuLG8peyhiZChlKXx8U2QoZSkpJiYoaT1lLGU9bik7dmFyIGE9UGMud3JhcFN0YWdlSGFuZGxlcihpLG8pO3JldHVybiBhLl9fcHJpbz1lLGEuX19yYXc9aSx0LnB1c2goYSksYX1mdW5jdGlvbiBfZih0LGUpe25mW3RdPWV9ZnVuY3Rpb24gd2YodCl7cmV0dXJuIFR1LmV4dGVuZCh0KX1mdW5jdGlvbiBiZih0KXtyZXR1cm4gaGMuZXh0ZW5kKHQpfWZ1bmN0aW9uIFNmKHQpe3JldHVybiBpYy5leHRlbmQodCl9ZnVuY3Rpb24gTWYodCl7cmV0dXJuIGdjLmV4dGVuZCh0KX15ZigyZTMsRGMpLGZmKEloKSxwZig5MDAsZnVuY3Rpb24odCl7dmFyIGE9USgpO3QuZWFjaFNlcmllcyhmdW5jdGlvbih0KXt2YXIgZT10LmdldCgic3RhY2siKTtpZihlKXt2YXIgaT1hLmdldChlKXx8YS5zZXQoZSxbXSksbj10LmdldERhdGEoKSxvPXtzdGFja1Jlc3VsdERpbWVuc2lvbjpuLmdldENhbGN1bGF0aW9uSW5mbygic3RhY2tSZXN1bHREaW1lbnNpb24iKSxzdGFja2VkT3ZlckRpbWVuc2lvbjpuLmdldENhbGN1bGF0aW9uSW5mbygic3RhY2tlZE92ZXJEaW1lbnNpb24iKSxzdGFja2VkRGltZW5zaW9uOm4uZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja2VkRGltZW5zaW9uIiksc3RhY2tlZEJ5RGltZW5zaW9uOm4uZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja2VkQnlEaW1lbnNpb24iKSxpc1N0YWNrZWRCeUluZGV4Om4uZ2V0Q2FsY3VsYXRpb25JbmZvKCJpc1N0YWNrZWRCeUluZGV4IiksZGF0YTpuLHNlcmllc01vZGVsOnR9O2lmKCFvLnN0YWNrZWREaW1lbnNpb258fCFvLmlzU3RhY2tlZEJ5SW5kZXgmJiFvLnN0YWNrZWRCeURpbWVuc2lvbilyZXR1cm47aS5sZW5ndGgmJm4uc2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja2VkT25TZXJpZXMiLGlbaS5sZW5ndGgtMV0uc2VyaWVzTW9kZWwpLGkucHVzaChvKX19KSxhLmVhY2goVGgpfSksX2YoImRlZmF1bHQiLGZ1bmN0aW9uKG4sdCl7Qyh0PXR8fHt9LHt0ZXh0OiJsb2FkaW5nIixjb2xvcjoiI2MyMzUzMSIsdGV4dENvbG9yOiIjMDAwIixtYXNrQ29sb3I6InJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KSIsemxldmVsOjB9KTt2YXIgbz1uZXcgaXMoe3N0eWxlOntmaWxsOnQubWFza0NvbG9yfSx6bGV2ZWw6dC56bGV2ZWwsejoxZTR9KSxhPW5ldyB1cyh7c2hhcGU6e3N0YXJ0QW5nbGU6LWtjLzIsZW5kQW5nbGU6LWtjLzIrLjEscjoxMH0sc3R5bGU6e3N0cm9rZTp0LmNvbG9yLGxpbmVDYXA6InJvdW5kIixsaW5lV2lkdGg6NX0semxldmVsOnQuemxldmVsLHo6MTAwMDF9KSxyPW5ldyBpcyh7c3R5bGU6e2ZpbGw6Im5vbmUiLHRleHQ6dC50ZXh0LHRleHRQb3NpdGlvbjoicmlnaHQiLHRleHREaXN0YW5jZToxMCx0ZXh0RmlsbDp0LnRleHRDb2xvcn0semxldmVsOnQuemxldmVsLHo6MTAwMDF9KTthLmFuaW1hdGVTaGFwZSghMCkud2hlbigxZTMse2VuZEFuZ2xlOjMqa2MvMn0pLnN0YXJ0KCJjaXJjdWxhckluT3V0IiksYS5hbmltYXRlU2hhcGUoITApLndoZW4oMWUzLHtzdGFydEFuZ2xlOjMqa2MvMn0pLmRlbGF5KDMwMCkuc3RhcnQoImNpcmN1bGFySW5PdXQiKTt2YXIgZT1uZXcgSWk7cmV0dXJuIGUuYWRkKGEpLGUuYWRkKHIpLGUuYWRkKG8pLGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQ9bi5nZXRXaWR0aCgpLzIsZT1uLmdldEhlaWdodCgpLzI7YS5zZXRTaGFwZSh7Y3g6dCxjeTplfSk7dmFyIGk9YS5zaGFwZS5yO3Iuc2V0U2hhcGUoe3g6dC1pLHk6ZS1pLHdpZHRoOjIqaSxoZWlnaHQ6MippfSksby5zZXRTaGFwZSh7eDowLHk6MCx3aWR0aDpuLmdldFdpZHRoKCksaGVpZ2h0Om4uZ2V0SGVpZ2h0KCl9KX0sZS5yZXNpemUoKSxlfSksZ2Yoe3R5cGU6ImhpZ2hsaWdodCIsZXZlbnQ6ImhpZ2hsaWdodCIsdXBkYXRlOiJoaWdobGlnaHQifSxldCksZ2Yoe3R5cGU6ImRvd25wbGF5IixldmVudDoiZG93bnBsYXkiLHVwZGF0ZToiZG93bnBsYXkifSxldCksZGYoImxpZ2h0IixKYyksZGYoImRhcmsiLGVkKTtmdW5jdGlvbiBJZih0KXtyZXR1cm4gdH1mdW5jdGlvbiBUZih0LGUsaSxuLG8pe3RoaXMuX29sZD10LHRoaXMuX25ldz1lLHRoaXMuX29sZEtleUdldHRlcj1pfHxJZix0aGlzLl9uZXdLZXlHZXR0ZXI9bnx8SWYsdGhpcy5jb250ZXh0PW99ZnVuY3Rpb24gQWYodCxlLGksbixvKXtmb3IodmFyIGE9MDthPHQubGVuZ3RoO2ErKyl7dmFyIHI9Il9lY18iK29bbl0odFthXSxhKSxzPWVbcl07bnVsbD09cz8oaS5wdXNoKHIpLGVbcl09YSk6KHMubGVuZ3RofHwoZVtyXT1zPVtzXSkscy5wdXNoKGEpKX19VGYucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUZixhZGQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2FkZD10LHRoaXN9LHVwZGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fdXBkYXRlPXQsdGhpc30scmVtb3ZlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yZW1vdmU9dCx0aGlzfSxleGVjdXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fb2xkLGU9dGhpcy5fbmV3LGk9e30sbj1bXSxvPVtdO2ZvcihBZih0LHt9LG4sIl9vbGRLZXlHZXR0ZXIiLHRoaXMpLEFmKGUsaSxvLCJfbmV3S2V5R2V0dGVyIix0aGlzKSxhPTA7YTx0Lmxlbmd0aDthKyspe2lmKG51bGwhPShzPWlbcj1uW2FdXSkpKHU9cy5sZW5ndGgpPygxPT09dSYmKGlbcl09bnVsbCkscz1zLnNoaWZ0KCkpOmlbcl09bnVsbCx0aGlzLl91cGRhdGUmJnRoaXMuX3VwZGF0ZShzLGEpO2Vsc2UgdGhpcy5fcmVtb3ZlJiZ0aGlzLl9yZW1vdmUoYSl9Zm9yKHZhciBhPTA7YTxvLmxlbmd0aDthKyspe3ZhciByPW9bYV07aWYoaS5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIHM7aWYobnVsbD09KHM9aVtyXSkpY29udGludWU7aWYocy5sZW5ndGgpZm9yKHZhciBsPTAsdT1zLmxlbmd0aDtsPHU7bCsrKXRoaXMuX2FkZCYmdGhpcy5fYWRkKHNbbF0pO2Vsc2UgdGhpcy5fYWRkJiZ0aGlzLl9hZGQocyl9fX19O3ZhciBEZj1RKFsidG9vbHRpcCIsImxhYmVsIiwiaXRlbU5hbWUiLCJpdGVtSWQiLCJzZXJpZXNOYW1lIl0pO2Z1bmN0aW9uIENmKHQsZSl7cmV0dXJuIHQuaGFzT3duUHJvcGVydHkoZSl8fCh0W2VdPVtdKSx0W2VdfWZ1bmN0aW9uIExmKHQpe3JldHVybiJjYXRlZ29yeSI9PT10PyJvcmRpbmFsIjoidGltZSI9PT10PyJ0aW1lIjoiZmxvYXQifWZ1bmN0aW9uIGtmKHQpe251bGwhPXQmJkwodGhpcyx0KSx0aGlzLm90aGVyRGltcz17fX12YXIgUGY9UixOZj0idW5kZWZpbmVkIixPZj17ZmxvYXQ6dHlwZW9mIEZsb2F0NjRBcnJheT09TmY/QXJyYXk6RmxvYXQ2NEFycmF5LGludDp0eXBlb2YgSW50MzJBcnJheT09TmY/QXJyYXk6SW50MzJBcnJheSxvcmRpbmFsOkFycmF5LG51bWJlcjpBcnJheSx0aW1lOkFycmF5fSxFZj10eXBlb2YgVWludDMyQXJyYXk9PU5mP0FycmF5OlVpbnQzMkFycmF5LHpmPXR5cGVvZiBJbnQzMkFycmF5PT1OZj9BcnJheTpJbnQzMkFycmF5LFJmPXR5cGVvZiBVaW50MTZBcnJheT09TmY/QXJyYXk6VWludDE2QXJyYXk7ZnVuY3Rpb24gQmYodCl7cmV0dXJuIDY1NTM1PHQuX3Jhd0NvdW50P0VmOlJmfXZhciBWZj1bImhhc0l0ZW1PcHRpb24iLCJfbmFtZUxpc3QiLCJfaWRMaXN0IiwiX2ludmVydGVkSW5kaWNlc01hcCIsIl9yYXdEYXRhIiwiX2NodW5rU2l6ZSIsIl9jaHVua0NvdW50IiwiX2RpbVZhbHVlR2V0dGVyIiwiX2NvdW50IiwiX3Jhd0NvdW50IiwiX25hbWVEaW1JZHgiLCJfaWREaW1JZHgiXSxHZj1bIl9leHRlbnQiLCJfYXBwcm94aW1hdGVFeHRlbnQiLCJfcmF3RXh0ZW50Il07ZnVuY3Rpb24gRmYoZSxpKXtFKFZmLmNvbmNhdChpLl9fd3JhcHBlZE1ldGhvZHN8fFtdKSxmdW5jdGlvbih0KXtpLmhhc093blByb3BlcnR5KHQpJiYoZVt0XT1pW3RdKX0pLGUuX193cmFwcGVkTWV0aG9kcz1pLl9fd3JhcHBlZE1ldGhvZHMsRShHZixmdW5jdGlvbih0KXtlW3RdPUQoaVt0XSl9KSxlLl9jYWxjdWxhdGlvbkluZm89TChpLl9jYWxjdWxhdGlvbkluZm8pfXZhciBXZj1mdW5jdGlvbih0LGUpe3Q9dHx8WyJ4IiwieSJdO2Zvcih2YXIgaT17fSxuPVtdLG89e30sYT0wO2E8dC5sZW5ndGg7YSsrKXt2YXIgcj10W2FdO3oocik/cj1uZXcga2Yoe25hbWU6cn0pOnIgaW5zdGFuY2VvZiBrZnx8KHI9bmV3IGtmKHIpKTt2YXIgcz1yLm5hbWU7ci50eXBlPXIudHlwZXx8ImZsb2F0IixyLmNvb3JkRGltfHwoci5jb29yZERpbT1zLHIuY29vcmREaW1JbmRleD0wKSxyLm90aGVyRGltcz1yLm90aGVyRGltc3x8e30sbi5wdXNoKHMpLChpW3NdPXIpLmluZGV4PWEsci5jcmVhdGVJbnZlcnRlZEluZGljZXMmJihvW3NdPVtdKX10aGlzLmRpbWVuc2lvbnM9bix0aGlzLl9kaW1lbnNpb25JbmZvcz1pLHRoaXMuaG9zdE1vZGVsPWUsdGhpcy5kYXRhVHlwZSx0aGlzLl9pbmRpY2VzPW51bGwsdGhpcy5fY291bnQ9MCx0aGlzLl9yYXdDb3VudD0wLHRoaXMuX3N0b3JhZ2U9e30sdGhpcy5fbmFtZUxpc3Q9W10sdGhpcy5faWRMaXN0PVtdLHRoaXMuX29wdGlvbk1vZGVscz1bXSx0aGlzLl92aXN1YWw9e30sdGhpcy5fbGF5b3V0PXt9LHRoaXMuX2l0ZW1WaXN1YWxzPVtdLHRoaXMuaGFzSXRlbVZpc3VhbD17fSx0aGlzLl9pdGVtTGF5b3V0cz1bXSx0aGlzLl9ncmFwaGljRWxzPVtdLHRoaXMuX2NodW5rU2l6ZT0xZTUsdGhpcy5fY2h1bmtDb3VudD0wLHRoaXMuX3Jhd0RhdGEsdGhpcy5fcmF3RXh0ZW50PXt9LHRoaXMuX2V4dGVudD17fSx0aGlzLl9hcHByb3hpbWF0ZUV4dGVudD17fSx0aGlzLl9kaW1lbnNpb25zU3VtbWFyeT1mdW5jdGlvbihuKXt2YXIgdD17fSxhPXQuZW5jb2RlPXt9LHI9USgpLHM9W10sbD1bXSx1PXQudXNlck91dHB1dD17ZGltZW5zaW9uTmFtZXM6bi5kaW1lbnNpb25zLnNsaWNlKCksZW5jb2RlOnt9fTtFKG4uZGltZW5zaW9ucyxmdW5jdGlvbih0KXt2YXIgbz1uLmdldERpbWVuc2lvbkluZm8odCksZT1vLmNvb3JkRGltO2lmKGUpe3ZhciBpPW8uY29vcmREaW1JbmRleDtDZihhLGUpW2ldPXQsby5pc0V4dHJhQ29vcmR8fChyLnNldChlLDEpLGZ1bmN0aW9uKHQpe3JldHVybiEoIm9yZGluYWwiPT09dHx8InRpbWUiPT09dCl9KG8udHlwZSkmJihzWzBdPXQpLENmKHUuZW5jb2RlLGUpW2ldPW8uaW5kZXgpLG8uZGVmYXVsdFRvb2x0aXAmJmwucHVzaCh0KX1EZi5lYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIGk9Q2YoYSxlKSxuPW8ub3RoZXJEaW1zW2VdO251bGwhPW4mJiExIT09biYmKGlbbl09by5uYW1lKX0pfSk7dmFyIG89W10saD17fTtyLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgaT1hW2VdO2hbZV09aVswXSxvPW8uY29uY2F0KGkpfSksdC5kYXRhRGltc09uQ29vcmQ9byx0LmVuY29kZUZpcnN0RGltTm90RXh0cmE9aDt2YXIgZT1hLmxhYmVsO2UmJmUubGVuZ3RoJiYocz1lLnNsaWNlKCkpO3ZhciBpPWEudG9vbHRpcDtyZXR1cm4gaSYmaS5sZW5ndGg/bD1pLnNsaWNlKCk6bC5sZW5ndGh8fChsPXMuc2xpY2UoKSksYS5kZWZhdWx0ZWRMYWJlbD1zLGEuZGVmYXVsdGVkVG9vbHRpcD1sLHR9KHRoaXMpLHRoaXMuX2ludmVydGVkSW5kaWNlc01hcD1vLHRoaXMuX2NhbGN1bGF0aW9uSW5mbz17fSx0aGlzLnVzZXJPdXRwdXQ9dGhpcy5fZGltZW5zaW9uc1N1bW1hcnkudXNlck91dHB1dH0sSGY9V2YucHJvdG90eXBlO2Z1bmN0aW9uIFpmKHQsZSxpLG4sbyl7dmFyIGE9T2ZbZS50eXBlXSxyPW4tMSxzPWUubmFtZSxsPXRbc11bcl07aWYobCYmbC5sZW5ndGg8aSl7Zm9yKHZhciB1PW5ldyBhKE1hdGgubWluKG8tcippLGkpKSxoPTA7aDxsLmxlbmd0aDtoKyspdVtoXT1sW2hdO3Rbc11bcl09dX1mb3IodmFyIGM9bippO2M8bztjKz1pKXRbc10ucHVzaChuZXcgYShNYXRoLm1pbihvLWMsaSkpKX1mdW5jdGlvbiBVZihvKXt2YXIgYT1vLl9pbnZlcnRlZEluZGljZXNNYXA7RShhLGZ1bmN0aW9uKHQsZSl7dmFyIGk9by5fZGltZW5zaW9uSW5mb3NbZV0ub3JkaW5hbE1ldGE7aWYoaSl7dD1hW2VdPW5ldyB6ZihpLmNhdGVnb3JpZXMubGVuZ3RoKTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl0W25dPS0xO2ZvcihuPTA7bjxvLl9jb3VudDtuKyspdFtvLmdldChlLG4pXT1ufX0pfWZ1bmN0aW9uIFhmKHQsZSxpKXt2YXIgbjtpZihudWxsIT1lKXt2YXIgbz10Ll9jaHVua1NpemUsYT1NYXRoLmZsb29yKGkvbykscj1pJW8scz10LmRpbWVuc2lvbnNbZV0sbD10Ll9zdG9yYWdlW3NdW2FdO2lmKGwpe249bFtyXTt2YXIgdT10Ll9kaW1lbnNpb25JbmZvc1tzXS5vcmRpbmFsTWV0YTt1JiZ1LmNhdGVnb3JpZXMubGVuZ3RoJiYobj11LmNhdGVnb3JpZXNbbl0pfX1yZXR1cm4gbn1mdW5jdGlvbiBZZih0KXtyZXR1cm4gdH1mdW5jdGlvbiBqZih0KXtyZXR1cm4gdDx0aGlzLl9jb3VudCYmMDw9dD90aGlzLl9pbmRpY2VzW3RdOi0xfWZ1bmN0aW9uIHFmKHQsZSl7dmFyIGk9dC5faWRMaXN0W2VdO3JldHVybiBudWxsPT1pJiYoaT1YZih0LHQuX2lkRGltSWR4LGUpKSxudWxsPT1pJiYoaT0iZVwwXDAiK2UpLGl9ZnVuY3Rpb24gS2YodCl7cmV0dXJuIGsodCl8fCh0PVt0XSksdH1mdW5jdGlvbiAkZih0LGUpe3ZhciBpPXQuZGltZW5zaW9ucyxuPW5ldyBXZihOKGksdC5nZXREaW1lbnNpb25JbmZvLHQpLHQuaG9zdE1vZGVsKTtGZihuLHQpO2Zvcih2YXIgbz1uLl9zdG9yYWdlPXt9LGE9dC5fc3RvcmFnZSxyPTA7cjxpLmxlbmd0aDtyKyspe3ZhciBzPWlbcl07YVtzXSYmKDA8PV8oZSxzKT8ob1tzXT1KZihhW3NdKSxuLl9yYXdFeHRlbnRbc109UWYoKSxuLl9leHRlbnRbc109bnVsbCk6b1tzXT1hW3NdKX1yZXR1cm4gbn1mdW5jdGlvbiBKZih0KXtmb3IodmFyIGUsaSxuPW5ldyBBcnJheSh0Lmxlbmd0aCksbz0wO288dC5sZW5ndGg7bysrKW5bb109KGU9dFtvXSxpPXZvaWQgMCwoaT1lLmNvbnN0cnVjdG9yKT09PUFycmF5P2Uuc2xpY2UoKTpuZXcgaShlKSk7cmV0dXJuIG59ZnVuY3Rpb24gUWYoKXtyZXR1cm5bMS8wLC0xLzBdfUhmLnR5cGU9Imxpc3QiLEhmLmhhc0l0ZW1PcHRpb249ITAsSGYuZ2V0RGltZW5zaW9uPWZ1bmN0aW9uKHQpe3JldHVybiJudW1iZXIiIT10eXBlb2YgdCYmKGlzTmFOKHQpfHx0aGlzLl9kaW1lbnNpb25JbmZvcy5oYXNPd25Qcm9wZXJ0eSh0KSl8fCh0PXRoaXMuZGltZW5zaW9uc1t0XSksdH0sSGYuZ2V0RGltZW5zaW9uSW5mbz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZGltZW5zaW9uSW5mb3NbdGhpcy5nZXREaW1lbnNpb24odCldfSxIZi5nZXREaW1lbnNpb25zT25Db29yZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kaW1lbnNpb25zU3VtbWFyeS5kYXRhRGltc09uQ29vcmQuc2xpY2UoKX0sSGYubWFwRGltZW5zaW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fZGltZW5zaW9uc1N1bW1hcnk7aWYobnVsbD09ZSlyZXR1cm4gaS5lbmNvZGVGaXJzdERpbU5vdEV4dHJhW3RdO3ZhciBuPWkuZW5jb2RlW3RdO3JldHVybiEwPT09ZT8obnx8W10pLnNsaWNlKCk6biYmbltlXX0sSGYuaW5pdERhdGE9ZnVuY3Rpb24odCxlLGkpeyhHdS5pc0luc3RhbmNlKHQpfHxQKHQpKSYmKHQ9bmV3IEFoKHQsdGhpcy5kaW1lbnNpb25zLmxlbmd0aCkpLHRoaXMuX3Jhd0RhdGE9dCx0aGlzLl9zdG9yYWdlPXt9LHRoaXMuX2luZGljZXM9bnVsbCx0aGlzLl9uYW1lTGlzdD1lfHxbXSx0aGlzLl9pZExpc3Q9W10sdGhpcy5fbmFtZVJlcGVhdENvdW50PXt9LGl8fCh0aGlzLmhhc0l0ZW1PcHRpb249ITEpLHRoaXMuZGVmYXVsdERpbVZhbHVlR2V0dGVyPUVoW3RoaXMuX3Jhd0RhdGEuZ2V0U291cmNlKCkuc291cmNlRm9ybWF0XSx0aGlzLl9kaW1WYWx1ZUdldHRlcj1pPWl8fHRoaXMuZGVmYXVsdERpbVZhbHVlR2V0dGVyLHRoaXMuX2RpbVZhbHVlR2V0dGVyQXJyYXlSb3dzPUVoLmFycmF5Um93cyx0aGlzLl9yYXdFeHRlbnQ9e30sdGhpcy5faW5pdERhdGFGcm9tUHJvdmlkZXIoMCx0LmNvdW50KCkpLHQucHVyZSYmKHRoaXMuaGFzSXRlbU9wdGlvbj0hMSl9LEhmLmdldFByb3ZpZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jhd0RhdGF9LEhmLmFwcGVuZERhdGE9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmF3RGF0YSxpPXRoaXMuY291bnQoKTtlLmFwcGVuZERhdGEodCk7dmFyIG49ZS5jb3VudCgpO2UucGVyc2lzdGVudHx8KG4rPWkpLHRoaXMuX2luaXREYXRhRnJvbVByb3ZpZGVyKGksbil9LEhmLmFwcGVuZFZhbHVlcz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLl9jaHVua1NpemUsbj10aGlzLl9zdG9yYWdlLG89dGhpcy5kaW1lbnNpb25zLGE9by5sZW5ndGgscj10aGlzLl9yYXdFeHRlbnQscz10aGlzLmNvdW50KCksbD1zK01hdGgubWF4KHQubGVuZ3RoLGU/ZS5sZW5ndGg6MCksdT10aGlzLl9jaHVua0NvdW50LGg9MDtoPGE7aCsrKXtyW3Y9b1toXV18fChyW3ZdPVFmKCkpLG5bdl18fChuW3ZdPVtdKSxaZihuLHRoaXMuX2RpbWVuc2lvbkluZm9zW3ZdLGksdSxsKSx0aGlzLl9jaHVua0NvdW50PW5bdl0ubGVuZ3RofWZvcih2YXIgYz1uZXcgQXJyYXkoYSksZD1zO2Q8bDtkKyspe2Zvcih2YXIgZj1kLXMscD1NYXRoLmZsb29yKGQvaSksZz1kJWksbT0wO208YTttKyspe3ZhciB2PW9bbV0seT10aGlzLl9kaW1WYWx1ZUdldHRlckFycmF5Um93cyh0W2ZdfHxjLHYsZixtKTtuW3ZdW3BdW2ddPXk7dmFyIHg9clt2XTt5PHhbMF0mJih4WzBdPXkpLHk+eFsxXSYmKHhbMV09eSl9ZSYmKHRoaXMuX25hbWVMaXN0W2RdPWVbZl0pfXRoaXMuX3Jhd0NvdW50PXRoaXMuX2NvdW50PWwsdGhpcy5fZXh0ZW50PXt9LFVmKHRoaXMpfSxIZi5faW5pdERhdGFGcm9tUHJvdmlkZXI9ZnVuY3Rpb24odCxlKXtpZighKGU8PXQpKXtmb3IodmFyIGksbj10aGlzLl9jaHVua1NpemUsbz10aGlzLl9yYXdEYXRhLGE9dGhpcy5fc3RvcmFnZSxyPXRoaXMuZGltZW5zaW9ucyxzPXIubGVuZ3RoLGw9dGhpcy5fZGltZW5zaW9uSW5mb3MsdT10aGlzLl9uYW1lTGlzdCxoPXRoaXMuX2lkTGlzdCxjPXRoaXMuX3Jhd0V4dGVudCxkPXRoaXMuX25hbWVSZXBlYXRDb3VudD17fSxmPXRoaXMuX2NodW5rQ291bnQscD0wO3A8cztwKyspe2Nbdz1yW3BdXXx8KGNbd109UWYoKSk7dmFyIGc9bFt3XTswPT09Zy5vdGhlckRpbXMuaXRlbU5hbWUmJihpPXRoaXMuX25hbWVEaW1JZHg9cCksMD09PWcub3RoZXJEaW1zLml0ZW1JZCYmKHRoaXMuX2lkRGltSWR4PXApLGFbd118fChhW3ddPVtdKSxaZihhLGcsbixmLGUpLHRoaXMuX2NodW5rQ291bnQ9YVt3XS5sZW5ndGh9Zm9yKHZhciBtPW5ldyBBcnJheShzKSx2PXQ7djxlO3YrKyl7bT1vLmdldEl0ZW0odixtKTtmb3IodmFyIHk9TWF0aC5mbG9vcih2L24pLHg9diVuLF89MDtfPHM7XysrKXt2YXIgdyxiPWFbdz1yW19dXVt5XSxTPXRoaXMuX2RpbVZhbHVlR2V0dGVyKG0sdyx2LF8pO2JbeF09Uzt2YXIgTT1jW3ddO1M8TVswXSYmKE1bMF09UyksUz5NWzFdJiYoTVsxXT1TKX1pZighby5wdXJlKXt2YXIgST11W3ZdO2lmKG0mJm51bGw9PUkpaWYobnVsbCE9bS5uYW1lKXVbdl09ST1tLm5hbWU7ZWxzZSBpZihudWxsIT1pKXt2YXIgVD1yW2ldLEE9YVtUXVt5XTtpZihBKXtJPUFbeF07dmFyIEQ9bFtUXS5vcmRpbmFsTWV0YTtEJiZELmNhdGVnb3JpZXMubGVuZ3RoJiYoST1ELmNhdGVnb3JpZXNbSV0pfX12YXIgQz1udWxsPT1tP251bGw6bS5pZDtudWxsPT1DJiZudWxsIT1JJiYoZFtJXT1kW0ldfHwwLDA8ZFtDPUldJiYoQys9Il9fZWNfXyIrZFtJXSksZFtJXSsrKSxudWxsIT1DJiYoaFt2XT1DKX19IW8ucGVyc2lzdGVudCYmby5jbGVhbiYmby5jbGVhbigpLHRoaXMuX3Jhd0NvdW50PXRoaXMuX2NvdW50PWUsdGhpcy5fZXh0ZW50PXt9LFVmKHRoaXMpfX0sSGYuY291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY291bnR9LEhmLmdldEluZGljZXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9pbmRpY2VzO2lmKHQpe3ZhciBlPXQuY29uc3RydWN0b3IsaT10aGlzLl9jb3VudDtpZihlPT09QXJyYXkpe289bmV3IGUoaSk7Zm9yKHZhciBuPTA7bjxpO24rKylvW25dPXRbbl19ZWxzZSBvPW5ldyBlKHQuYnVmZmVyLDAsaSl9ZWxzZXt2YXIgbz1uZXcoZT1CZih0aGlzKSkodGhpcy5jb3VudCgpKTtmb3Iobj0wO248by5sZW5ndGg7bisrKW9bbl09bn1yZXR1cm4gb30sSGYuZ2V0PWZ1bmN0aW9uKHQsZSl7aWYoISgwPD1lJiZlPHRoaXMuX2NvdW50KSlyZXR1cm4gTmFOO3ZhciBpPXRoaXMuX3N0b3JhZ2U7aWYoIWlbdF0pcmV0dXJuIE5hTjtlPXRoaXMuZ2V0UmF3SW5kZXgoZSk7dmFyIG49TWF0aC5mbG9vcihlL3RoaXMuX2NodW5rU2l6ZSksbz1lJXRoaXMuX2NodW5rU2l6ZTtyZXR1cm4gaVt0XVtuXVtvXX0sSGYuZ2V0QnlSYXdJbmRleD1mdW5jdGlvbih0LGUpe2lmKCEoMDw9ZSYmZTx0aGlzLl9yYXdDb3VudCkpcmV0dXJuIE5hTjt2YXIgaT10aGlzLl9zdG9yYWdlW3RdO2lmKCFpKXJldHVybiBOYU47dmFyIG49TWF0aC5mbG9vcihlL3RoaXMuX2NodW5rU2l6ZSksbz1lJXRoaXMuX2NodW5rU2l6ZTtyZXR1cm4gaVtuXVtvXX0sSGYuX2dldEZhc3Q9ZnVuY3Rpb24odCxlKXt2YXIgaT1NYXRoLmZsb29yKGUvdGhpcy5fY2h1bmtTaXplKSxuPWUldGhpcy5fY2h1bmtTaXplO3JldHVybiB0aGlzLl9zdG9yYWdlW3RdW2ldW25dfSxIZi5nZXRWYWx1ZXM9ZnVuY3Rpb24odCxlKXt2YXIgaT1bXTtrKHQpfHwoZT10LHQ9dGhpcy5kaW1lbnNpb25zKTtmb3IodmFyIG49MCxvPXQubGVuZ3RoO248bztuKyspaS5wdXNoKHRoaXMuZ2V0KHRbbl0sZSkpO3JldHVybiBpfSxIZi5oYXNWYWx1ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5fZGltZW5zaW9uc1N1bW1hcnkuZGF0YURpbXNPbkNvb3JkLGk9MCxuPWUubGVuZ3RoO2k8bjtpKyspaWYoaXNOYU4odGhpcy5nZXQoZVtpXSx0KSkpcmV0dXJuITE7cmV0dXJuITB9LEhmLmdldERhdGFFeHRlbnQ9ZnVuY3Rpb24odCl7dD10aGlzLmdldERpbWVuc2lvbih0KTt2YXIgZT10aGlzLl9zdG9yYWdlW3RdLGk9UWYoKTtpZighZSlyZXR1cm4gaTt2YXIgbixvPXRoaXMuY291bnQoKTtpZighdGhpcy5faW5kaWNlcylyZXR1cm4gdGhpcy5fcmF3RXh0ZW50W3RdLnNsaWNlKCk7aWYobj10aGlzLl9leHRlbnRbdF0pcmV0dXJuIG4uc2xpY2UoKTtmb3IodmFyIGE9KG49aSlbMF0scj1uWzFdLHM9MDtzPG87cysrKXt2YXIgbD10aGlzLl9nZXRGYXN0KHQsdGhpcy5nZXRSYXdJbmRleChzKSk7bDxhJiYoYT1sKSxyPGwmJihyPWwpfXJldHVybiBuPVthLHJdLHRoaXMuX2V4dGVudFt0XT1ufSxIZi5nZXRBcHByb3hpbWF0ZUV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gdD10aGlzLmdldERpbWVuc2lvbih0KSx0aGlzLl9hcHByb3hpbWF0ZUV4dGVudFt0XXx8dGhpcy5nZXREYXRhRXh0ZW50KHQpfSxIZi5zZXRBcHByb3hpbWF0ZUV4dGVudD1mdW5jdGlvbih0LGUpe2U9dGhpcy5nZXREaW1lbnNpb24oZSksdGhpcy5fYXBwcm94aW1hdGVFeHRlbnRbZV09dC5zbGljZSgpfSxIZi5nZXRDYWxjdWxhdGlvbkluZm89ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2NhbGN1bGF0aW9uSW5mb1t0XX0sSGYuc2V0Q2FsY3VsYXRpb25JbmZvPWZ1bmN0aW9uKHQsZSl7UGYodCk/TCh0aGlzLl9jYWxjdWxhdGlvbkluZm8sdCk6dGhpcy5fY2FsY3VsYXRpb25JbmZvW3RdPWV9LEhmLmdldFN1bT1mdW5jdGlvbih0KXt2YXIgZT0wO2lmKHRoaXMuX3N0b3JhZ2VbdF0pZm9yKHZhciBpPTAsbj10aGlzLmNvdW50KCk7aTxuO2krKyl7dmFyIG89dGhpcy5nZXQodCxpKTtpc05hTihvKXx8KGUrPW8pfXJldHVybiBlfSxIZi5nZXRNZWRpYW49ZnVuY3Rpb24odCl7dmFyIGk9W107dGhpcy5lYWNoKHQsZnVuY3Rpb24odCxlKXtpc05hTih0KXx8aS5wdXNoKHQpfSk7dmFyIGU9W10uY29uY2F0KGkpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSksbj10aGlzLmNvdW50KCk7cmV0dXJuIDA9PT1uPzA6biUyPT0xP2VbKG4tMSkvMl06KGVbbi8yXStlW24vMi0xXSkvMn0sSGYucmF3SW5kZXhPZj1mdW5jdGlvbih0LGUpe3ZhciBpPSh0JiZ0aGlzLl9pbnZlcnRlZEluZGljZXNNYXBbdF0pW2VdO3JldHVybiBudWxsPT1pfHxpc05hTihpKT8tMTppfSxIZi5pbmRleE9mTmFtZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxpPXRoaXMuY291bnQoKTtlPGk7ZSsrKWlmKHRoaXMuZ2V0TmFtZShlKT09PXQpcmV0dXJuIGU7cmV0dXJuLTF9LEhmLmluZGV4T2ZSYXdJbmRleD1mdW5jdGlvbih0KXtpZih0Pj10aGlzLl9yYXdDb3VudHx8dDwwKXJldHVybi0xO2lmKCF0aGlzLl9pbmRpY2VzKXJldHVybiB0O3ZhciBlPXRoaXMuX2luZGljZXMsaT1lW3RdO2lmKG51bGwhPWkmJmk8dGhpcy5fY291bnQmJmk9PT10KXJldHVybiB0O2Zvcih2YXIgbj0wLG89dGhpcy5fY291bnQtMTtuPD1vOyl7dmFyIGE9KG4rbykvMnwwO2lmKGVbYV08dCluPTErYTtlbHNle2lmKCEoZVthXT50KSlyZXR1cm4gYTtvPWEtMX19cmV0dXJuLTF9LEhmLmluZGljZXNPZk5lYXJlc3Q9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPVtdO2lmKCF0aGlzLl9zdG9yYWdlW3RdKXJldHVybiBuO251bGw9PWkmJihpPTEvMCk7Zm9yKHZhciBvPTEvMCxhPS0xLHI9MCxzPTAsbD10aGlzLmNvdW50KCk7czxsO3MrKyl7dmFyIHU9ZS10aGlzLmdldCh0LHMpLGg9TWF0aC5hYnModSk7aDw9aSYmKChoPG98fGg9PT1vJiYwPD11JiZhPDApJiYobz1oLGE9dSxyPTApLHU9PT1hJiYobltyKytdPXMpKX1yZXR1cm4gbi5sZW5ndGg9cixufSxIZi5nZXRSYXdJbmRleD1ZZixIZi5nZXRSYXdEYXRhSXRlbT1mdW5jdGlvbih0KXtpZih0aGlzLl9yYXdEYXRhLnBlcnNpc3RlbnQpcmV0dXJuIHRoaXMuX3Jhd0RhdGEuZ2V0SXRlbSh0aGlzLmdldFJhd0luZGV4KHQpKTtmb3IodmFyIGU9W10saT0wO2k8dGhpcy5kaW1lbnNpb25zLmxlbmd0aDtpKyspe3ZhciBuPXRoaXMuZGltZW5zaW9uc1tpXTtlLnB1c2godGhpcy5nZXQobix0KSl9cmV0dXJuIGV9LEhmLmdldE5hbWU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRSYXdJbmRleCh0KTtyZXR1cm4gdGhpcy5fbmFtZUxpc3RbZV18fFhmKHRoaXMsdGhpcy5fbmFtZURpbUlkeCxlKXx8IiJ9LEhmLmdldElkPWZ1bmN0aW9uKHQpe3JldHVybiBxZih0aGlzLHRoaXMuZ2V0UmF3SW5kZXgodCkpfSxIZi5lYWNoPWZ1bmN0aW9uKHQsZSxpLG4pe2lmKHRoaXMuX2NvdW50KXsiZnVuY3Rpb24iPT10eXBlb2YgdCYmKG49aSxpPWUsZT10LHQ9W10pLGk9aXx8bnx8dGhpcztmb3IodmFyIG89KHQ9TihLZih0KSx0aGlzLmdldERpbWVuc2lvbix0aGlzKSkubGVuZ3RoLGE9MDthPHRoaXMuY291bnQoKTthKyspc3dpdGNoKG8pe2Nhc2UgMDplLmNhbGwoaSxhKTticmVhaztjYXNlIDE6ZS5jYWxsKGksdGhpcy5nZXQodFswXSxhKSxhKTticmVhaztjYXNlIDI6ZS5jYWxsKGksdGhpcy5nZXQodFswXSxhKSx0aGlzLmdldCh0WzFdLGEpLGEpO2JyZWFrO2RlZmF1bHQ6Zm9yKHZhciByPTAscz1bXTtyPG87cisrKXNbcl09dGhpcy5nZXQodFtyXSxhKTtzW3JdPWEsZS5hcHBseShpLHMpfX19LEhmLmZpbHRlclNlbGY9ZnVuY3Rpb24odCxlLGksbil7aWYodGhpcy5fY291bnQpeyJmdW5jdGlvbiI9PXR5cGVvZiB0JiYobj1pLGk9ZSxlPXQsdD1bXSksaT1pfHxufHx0aGlzLHQ9TihLZih0KSx0aGlzLmdldERpbWVuc2lvbix0aGlzKTtmb3IodmFyIG89dGhpcy5jb3VudCgpLGE9bmV3KEJmKHRoaXMpKShvKSxyPVtdLHM9dC5sZW5ndGgsbD0wLHU9dFswXSxoPTA7aDxvO2grKyl7dmFyIGMsZD10aGlzLmdldFJhd0luZGV4KGgpO2lmKDA9PT1zKWM9ZS5jYWxsKGksaCk7ZWxzZSBpZigxPT09cyl7dmFyIGY9dGhpcy5fZ2V0RmFzdCh1LGQpO2M9ZS5jYWxsKGksZixoKX1lbHNle2Zvcih2YXIgcD0wO3A8cztwKyspcltwXT10aGlzLl9nZXRGYXN0KHUsZCk7cltwXT1oLGM9ZS5hcHBseShpLHIpfWMmJihhW2wrK109ZCl9cmV0dXJuIGw8byYmKHRoaXMuX2luZGljZXM9YSksdGhpcy5fY291bnQ9bCx0aGlzLl9leHRlbnQ9e30sdGhpcy5nZXRSYXdJbmRleD10aGlzLl9pbmRpY2VzP2pmOllmLHRoaXN9fSxIZi5zZWxlY3RSYW5nZT1mdW5jdGlvbih0KXtpZih0aGlzLl9jb3VudCl7dmFyIGU9W107Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmZS5wdXNoKGkpO3ZhciBuPWUubGVuZ3RoO2lmKG4pe3ZhciBvPXRoaXMuY291bnQoKSxhPW5ldyhCZih0aGlzKSkobykscj0wLHM9ZVswXSxsPXRbc11bMF0sdT10W3NdWzFdLGg9ITE7aWYoIXRoaXMuX2luZGljZXMpe3ZhciBjPTA7aWYoMT09PW4pe2Zvcih2YXIgZD10aGlzLl9zdG9yYWdlW2VbMF1dLGY9MDtmPHRoaXMuX2NodW5rQ291bnQ7ZisrKWZvcih2YXIgcD1kW2ZdLGc9TWF0aC5taW4odGhpcy5fY291bnQtZip0aGlzLl9jaHVua1NpemUsdGhpcy5fY2h1bmtTaXplKSxtPTA7bTxnO20rKyl7KGw8PSh3PXBbbV0pJiZ3PD11fHxpc05hTih3KSkmJihhW3IrK109YyksYysrfWg9ITB9ZWxzZSBpZigyPT09bil7ZD10aGlzLl9zdG9yYWdlW3NdO3ZhciB2PXRoaXMuX3N0b3JhZ2VbZVsxXV0seT10W2VbMV1dWzBdLHg9dFtlWzFdXVsxXTtmb3IoZj0wO2Y8dGhpcy5fY2h1bmtDb3VudDtmKyspe3A9ZFtmXTt2YXIgXz12W2ZdO2ZvcihnPU1hdGgubWluKHRoaXMuX2NvdW50LWYqdGhpcy5fY2h1bmtTaXplLHRoaXMuX2NodW5rU2l6ZSksbT0wO208ZzttKyspe3ZhciB3PXBbbV0sYj1fW21dOyhsPD13JiZ3PD11fHxpc05hTih3KSkmJih5PD1iJiZiPD14fHxpc05hTihiKSkmJihhW3IrK109YyksYysrfX1oPSEwfX1pZighaClpZigxPT09bilmb3IobT0wO208bzttKyspe3ZhciBTPXRoaXMuZ2V0UmF3SW5kZXgobSk7KGw8PSh3PXRoaXMuX2dldEZhc3QocyxTKSkmJnc8PXV8fGlzTmFOKHcpKSYmKGFbcisrXT1TKX1lbHNlIGZvcihtPTA7bTxvO20rKyl7dmFyIE09ITA7Zm9yKFM9dGhpcy5nZXRSYXdJbmRleChtKSxmPTA7ZjxuO2YrKyl7dmFyIEk9ZVtmXTsoKHc9dGhpcy5fZ2V0RmFzdChpLFMpKTx0W0ldWzBdfHx3PnRbSV1bMV0pJiYoTT0hMSl9TSYmKGFbcisrXT10aGlzLmdldFJhd0luZGV4KG0pKX1yZXR1cm4gcjxvJiYodGhpcy5faW5kaWNlcz1hKSx0aGlzLl9jb3VudD1yLHRoaXMuX2V4dGVudD17fSx0aGlzLmdldFJhd0luZGV4PXRoaXMuX2luZGljZXM/amY6WWYsdGhpc319fSxIZi5tYXBBcnJheT1mdW5jdGlvbih0LGUsaSxuKXsiZnVuY3Rpb24iPT10eXBlb2YgdCYmKG49aSxpPWUsZT10LHQ9W10pLGk9aXx8bnx8dGhpczt2YXIgbz1bXTtyZXR1cm4gdGhpcy5lYWNoKHQsZnVuY3Rpb24oKXtvLnB1c2goZSYmZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxpKSxvfSxIZi5tYXA9ZnVuY3Rpb24odCxlLGksbil7aT1pfHxufHx0aGlzO3ZhciBvPSRmKHRoaXMsdD1OKEtmKHQpLHRoaXMuZ2V0RGltZW5zaW9uLHRoaXMpKTtvLl9pbmRpY2VzPXRoaXMuX2luZGljZXMsby5nZXRSYXdJbmRleD1vLl9pbmRpY2VzP2pmOllmO2Zvcih2YXIgYT1vLl9zdG9yYWdlLHI9W10scz10aGlzLl9jaHVua1NpemUsbD10Lmxlbmd0aCx1PXRoaXMuY291bnQoKSxoPVtdLGM9by5fcmF3RXh0ZW50LGQ9MDtkPHU7ZCsrKXtmb3IodmFyIGY9MDtmPGw7ZisrKWhbZl09dGhpcy5nZXQodFtmXSxkKTtoW2xdPWQ7dmFyIHA9ZSYmZS5hcHBseShpLGgpO2lmKG51bGwhPXApeyJvYmplY3QiIT10eXBlb2YgcCYmKHJbMF09cCxwPXIpO2Zvcih2YXIgZz10aGlzLmdldFJhd0luZGV4KGQpLG09TWF0aC5mbG9vcihnL3MpLHY9ZyVzLHk9MDt5PHAubGVuZ3RoO3krKyl7dmFyIHg9dFt5XSxfPXBbeV0sdz1jW3hdLGI9YVt4XTtiJiYoYlttXVt2XT1fKSxfPHdbMF0mJih3WzBdPV8pLF8+d1sxXSYmKHdbMV09Xyl9fX1yZXR1cm4gb30sSGYuZG93blNhbXBsZT1mdW5jdGlvbih0LGUsaSxuKXtmb3IodmFyIG89JGYodGhpcyxbdF0pLGE9by5fc3RvcmFnZSxyPVtdLHM9TWF0aC5mbG9vcigxL2UpLGw9YVt0XSx1PXRoaXMuY291bnQoKSxoPXRoaXMuX2NodW5rU2l6ZSxjPW8uX3Jhd0V4dGVudFt0XSxkPW5ldyhCZih0aGlzKSkodSksZj0wLHA9MDtwPHU7cCs9cyl7dS1wPHMmJihzPXUtcCxyLmxlbmd0aD1zKTtmb3IodmFyIGc9MDtnPHM7ZysrKXt2YXIgbT10aGlzLmdldFJhd0luZGV4KHArZyksdj1NYXRoLmZsb29yKG0vaCkseT1tJWg7cltnXT1sW3ZdW3ldfXZhciB4PWkociksXz10aGlzLmdldFJhd0luZGV4KE1hdGgubWluKHArbihyLHgpfHwwLHUtMSkpLHc9XyVoOyhsW01hdGguZmxvb3IoXy9oKV1bd109eCk8Y1swXSYmKGNbMF09eCkseD5jWzFdJiYoY1sxXT14KSxkW2YrK109X31yZXR1cm4gby5fY291bnQ9ZixvLl9pbmRpY2VzPWQsby5nZXRSYXdJbmRleD1qZixvfSxIZi5nZXRJdGVtTW9kZWw9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5ob3N0TW9kZWw7cmV0dXJuIG5ldyBJbCh0aGlzLmdldFJhd0RhdGFJdGVtKHQpLGUsZSYmZS5lY01vZGVsKX0sSGYuZGlmZj1mdW5jdGlvbihlKXt2YXIgaT10aGlzO3JldHVybiBuZXcgVGYoZT9lLmdldEluZGljZXMoKTpbXSx0aGlzLmdldEluZGljZXMoKSxmdW5jdGlvbih0KXtyZXR1cm4gcWYoZSx0KX0sZnVuY3Rpb24odCl7cmV0dXJuIHFmKGksdCl9KX0sSGYuZ2V0VmlzdWFsPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3Zpc3VhbDtyZXR1cm4gZSYmZVt0XX0sSGYuc2V0VmlzdWFsPWZ1bmN0aW9uKHQsZSl7aWYoUGYodCkpZm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmdGhpcy5zZXRWaXN1YWwoaSx0W2ldKTtlbHNlIHRoaXMuX3Zpc3VhbD10aGlzLl92aXN1YWx8fHt9LHRoaXMuX3Zpc3VhbFt0XT1lfSxIZi5zZXRMYXlvdXQ9ZnVuY3Rpb24odCxlKXtpZihQZih0KSlmb3IodmFyIGkgaW4gdCl0Lmhhc093blByb3BlcnR5KGkpJiZ0aGlzLnNldExheW91dChpLHRbaV0pO2Vsc2UgdGhpcy5fbGF5b3V0W3RdPWV9LEhmLmdldExheW91dD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fbGF5b3V0W3RdfSxIZi5nZXRJdGVtTGF5b3V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9pdGVtTGF5b3V0c1t0XX0sSGYuc2V0SXRlbUxheW91dD1mdW5jdGlvbih0LGUsaSl7dGhpcy5faXRlbUxheW91dHNbdF09aT9MKHRoaXMuX2l0ZW1MYXlvdXRzW3RdfHx7fSxlKTplfSxIZi5jbGVhckl0ZW1MYXlvdXRzPWZ1bmN0aW9uKCl7dGhpcy5faXRlbUxheW91dHMubGVuZ3RoPTB9LEhmLmdldEl0ZW1WaXN1YWw9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX2l0ZW1WaXN1YWxzW3RdLG89biYmbltlXTtyZXR1cm4gbnVsbCE9b3x8aT9vOnRoaXMuZ2V0VmlzdWFsKGUpfSxIZi5zZXRJdGVtVmlzdWFsPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLl9pdGVtVmlzdWFsc1t0XXx8e30sbz10aGlzLmhhc0l0ZW1WaXN1YWw7aWYodGhpcy5faXRlbVZpc3VhbHNbdF09bixQZihlKSlmb3IodmFyIGEgaW4gZSllLmhhc093blByb3BlcnR5KGEpJiYoblthXT1lW2FdLG9bYV09ITApO2Vsc2UgbltlXT1pLG9bZV09ITB9LEhmLmNsZWFyQWxsVmlzdWFsPWZ1bmN0aW9uKCl7dGhpcy5fdmlzdWFsPXt9LHRoaXMuX2l0ZW1WaXN1YWxzPVtdLHRoaXMuaGFzSXRlbVZpc3VhbD17fX07ZnVuY3Rpb24gdHAodCl7dC5zZXJpZXNJbmRleD10aGlzLnNlcmllc0luZGV4LHQuZGF0YUluZGV4PXRoaXMuZGF0YUluZGV4LHQuZGF0YVR5cGU9dGhpcy5kYXRhVHlwZX1mdW5jdGlvbiBlcCh0LGUsaSl7R3UuaXNJbnN0YW5jZShlKXx8KGU9R3Uuc2VyaWVzRGF0YVRvU291cmNlKGUpKSxpPWl8fHt9LHQ9KHR8fFtdKS5zbGljZSgpO2Zvcih2YXIgbj0oaS5kaW1zRGVmfHxbXSkuc2xpY2UoKSxvPVEoKSxhPVEoKSxsPVtdLHI9ZnVuY3Rpb24odCxlLGksbil7dmFyIG89TWF0aC5tYXgodC5kaW1lbnNpb25zRGV0ZWN0Q291bnR8fDEsZS5sZW5ndGgsaS5sZW5ndGgsbnx8MCk7cmV0dXJuIEUoZSxmdW5jdGlvbih0KXt2YXIgZT10LmRpbXNEZWY7ZSYmKG89TWF0aC5tYXgobyxlLmxlbmd0aCkpfSksb30oZSx0LG4saS5kaW1Db3VudCkscz0wO3M8cjtzKyspe3ZhciB1PW5bc109TCh7fSxSKG5bc10pP25bc106e25hbWU6bltzXX0pLGg9dS5uYW1lLGM9bFtzXT1uZXcga2Y7bnVsbCE9aCYmbnVsbD09by5nZXQoaCkmJihjLm5hbWU9Yy5kaXNwbGF5TmFtZT1oLG8uc2V0KGgscykpLG51bGwhPXUudHlwZSYmKGMudHlwZT11LnR5cGUpLG51bGwhPXUuZGlzcGxheU5hbWUmJihjLmRpc3BsYXlOYW1lPXUuZGlzcGxheU5hbWUpfXZhciBkPWkuZW5jb2RlRGVmOyFkJiZpLmVuY29kZURlZmF1bHRlciYmKGQ9aS5lbmNvZGVEZWZhdWx0ZXIoZSxyKSksKGQ9UShkKSkuZWFjaChmdW5jdGlvbih0LGkpe2lmKDE9PT0odD1Fbyh0KS5zbGljZSgpKS5sZW5ndGgmJiF6KHRbMF0pJiZ0WzBdPDApZC5zZXQoaSwhMSk7ZWxzZXt2YXIgbj1kLnNldChpLFtdKTtFKHQsZnVuY3Rpb24odCxlKXt6KHQpJiYodD1vLmdldCh0KSksbnVsbCE9dCYmdDxyJiYobltlXT10LHAobFt0XSxpLGUpKX0pfX0pO3ZhciBmPTA7ZnVuY3Rpb24gcCh0LGUsaSl7bnVsbCE9RGYuZ2V0KGUpP3Qub3RoZXJEaW1zW2VdPWk6KHQuY29vcmREaW09ZSx0LmNvb3JkRGltSW5kZXg9aSxhLnNldChlLCEwKSl9RSh0LGZ1bmN0aW9uKG8sdCl7dmFyIGEscixzO2lmKHoobykpYT1vLG89e307ZWxzZXthPW8ubmFtZTt2YXIgZT1vLm9yZGluYWxNZXRhO28ub3JkaW5hbE1ldGE9bnVsbCwobz1EKG8pKS5vcmRpbmFsTWV0YT1lLHI9by5kaW1zRGVmLHM9by5vdGhlckRpbXMsby5uYW1lPW8uY29vcmREaW09by5jb29yZERpbUluZGV4PW8uZGltc0RlZj1vLm90aGVyRGltcz1udWxsfWlmKCExIT09KGk9ZC5nZXQoYSkpKXt2YXIgaTtpZighKGk9RW8oaSkpLmxlbmd0aClmb3IodmFyIG49MDtuPChyJiZyLmxlbmd0aHx8MSk7bisrKXtmb3IoO2Y8bC5sZW5ndGgmJm51bGwhPWxbZl0uY29vcmREaW07KWYrKztmPGwubGVuZ3RoJiZpLnB1c2goZisrKX1FKGksZnVuY3Rpb24odCxlKXt2YXIgaT1sW3RdO2lmKHAoQyhpLG8pLGEsZSksbnVsbD09aS5uYW1lJiZyKXt2YXIgbj1yW2VdO1Iobil8fChuPXtuYW1lOm59KSxpLm5hbWU9aS5kaXNwbGF5TmFtZT1uLm5hbWUsaS5kZWZhdWx0VG9vbHRpcD1uLmRlZmF1bHRUb29sdGlwfXMmJkMoaS5vdGhlckRpbXMscyl9KX19KTt2YXIgZz1pLmdlbmVyYXRlQ29vcmQsbT1pLmdlbmVyYXRlQ29vcmRDb3VudCx2PW51bGwhPW07bT1nP218fDE6MDtmb3IodmFyIHkseCxfPWd8fCJ2YWx1ZSIsdz0wO3c8cjt3Kyspe251bGw9PShjPWxbd109bFt3XXx8bmV3IGtmKS5jb29yZERpbSYmKGMuY29vcmREaW09aXAoXyxhLHYpLGMuY29vcmREaW1JbmRleD0wLCghZ3x8bTw9MCkmJihjLmlzRXh0cmFDb29yZD0hMCksbS0tKSxudWxsPT1jLm5hbWUmJihjLm5hbWU9aXAoYy5jb29yZERpbSxvKSksbnVsbD09Yy50eXBlJiYoeT1lLHg9dyxjLm5hbWUscXUoeS5kYXRhLHkuc291cmNlRm9ybWF0LHkuc2VyaWVzTGF5b3V0QnkseS5kaW1lbnNpb25zRGVmaW5lLHkuc3RhcnRJbmRleCx4KT09PUZ1Lk11c3R8fGMuaXNFeHRyYUNvb3JkJiYobnVsbCE9Yy5vdGhlckRpbXMuaXRlbU5hbWV8fG51bGwhPWMub3RoZXJEaW1zLnNlcmllc05hbWUpKSYmKGMudHlwZT0ib3JkaW5hbCIpfXJldHVybiBsfWZ1bmN0aW9uIGlwKHQsZSxpKXtpZihpfHxudWxsIT1lLmdldCh0KSl7Zm9yKHZhciBuPTA7bnVsbCE9ZS5nZXQodCtuKTspbisrO3QrPW59cmV0dXJuIGUuc2V0KHQsITApLHR9SGYuc2V0SXRlbUdyYXBoaWNFbD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuaG9zdE1vZGVsO2UmJihlLmRhdGFJbmRleD10LGUuZGF0YVR5cGU9dGhpcy5kYXRhVHlwZSxlLnNlcmllc0luZGV4PWkmJmkuc2VyaWVzSW5kZXgsImdyb3VwIj09PWUudHlwZSYmZS50cmF2ZXJzZSh0cCxlKSksdGhpcy5fZ3JhcGhpY0Vsc1t0XT1lfSxIZi5nZXRJdGVtR3JhcGhpY0VsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9ncmFwaGljRWxzW3RdfSxIZi5lYWNoSXRlbUdyYXBoaWNFbD1mdW5jdGlvbihpLG4pe0UodGhpcy5fZ3JhcGhpY0VscyxmdW5jdGlvbih0LGUpe3QmJmkmJmkuY2FsbChuLHQsZSl9KX0sSGYuY2xvbmVTaGFsbG93PWZ1bmN0aW9uKHQpe2lmKCF0KXt2YXIgZT1OKHRoaXMuZGltZW5zaW9ucyx0aGlzLmdldERpbWVuc2lvbkluZm8sdGhpcyk7dD1uZXcgV2YoZSx0aGlzLmhvc3RNb2RlbCl9aWYodC5fc3RvcmFnZT10aGlzLl9zdG9yYWdlLEZmKHQsdGhpcyksdGhpcy5faW5kaWNlcyl7dmFyIGk9dGhpcy5faW5kaWNlcy5jb25zdHJ1Y3Rvcjt0Ll9pbmRpY2VzPW5ldyBpKHRoaXMuX2luZGljZXMpfWVsc2UgdC5faW5kaWNlcz1udWxsO3JldHVybiB0LmdldFJhd0luZGV4PXQuX2luZGljZXM/amY6WWYsdH0sSGYud3JhcE1ldGhvZD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXNbdF07ImZ1bmN0aW9uIj09dHlwZW9mIGkmJih0aGlzLl9fd3JhcHBlZE1ldGhvZHM9dGhpcy5fX3dyYXBwZWRNZXRob2RzfHxbXSx0aGlzLl9fd3JhcHBlZE1ldGhvZHMucHVzaCh0KSx0aGlzW3RdPWZ1bmN0aW9uKCl7dmFyIHQ9aS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGUuYXBwbHkodGhpcyxbdF0uY29uY2F0KFUoYXJndW1lbnRzKSkpfSl9LEhmLlRSQU5TRkVSQUJMRV9NRVRIT0RTPVsiY2xvbmVTaGFsbG93IiwiZG93blNhbXBsZSIsIm1hcCJdLEhmLkNIQU5HQUJMRV9NRVRIT0RTPVsiZmlsdGVyU2VsZiIsInNlbGVjdFJhbmdlIl07dmFyIG5wPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGVwKChlPWV8fHt9KS5jb29yZERpbWVuc2lvbnN8fFtdLHQse2RpbXNEZWY6ZS5kaW1lbnNpb25zRGVmaW5lfHx0LmRpbWVuc2lvbnNEZWZpbmUsZW5jb2RlRGVmOmUuZW5jb2RlRGVmaW5lfHx0LmVuY29kZURlZmluZSxkaW1Db3VudDplLmRpbWVuc2lvbnNDb3VudCxlbmNvZGVEZWZhdWx0ZXI6ZS5lbmNvZGVEZWZhdWx0ZXIsZ2VuZXJhdGVDb29yZDplLmdlbmVyYXRlQ29vcmQsZ2VuZXJhdGVDb29yZENvdW50OmUuZ2VuZXJhdGVDb29yZENvdW50fSl9O2Z1bmN0aW9uIG9wKHQpe3RoaXMuY29vcmRTeXNOYW1lPXQsdGhpcy5jb29yZFN5c0RpbXM9W10sdGhpcy5heGlzTWFwPVEoKSx0aGlzLmNhdGVnb3J5QXhpc01hcD1RKCksdGhpcy5maXJzdENhdGVnb3J5RGltSW5kZXg9bnVsbH12YXIgYXA9e2NhcnRlc2lhbjJkOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQuZ2V0UmVmZXJyaW5nQ29tcG9uZW50cygieEF4aXMiKVswXSxhPXQuZ2V0UmVmZXJyaW5nQ29tcG9uZW50cygieUF4aXMiKVswXTtlLmNvb3JkU3lzRGltcz1bIngiLCJ5Il0saS5zZXQoIngiLG8pLGkuc2V0KCJ5IixhKSxycChvKSYmKG4uc2V0KCJ4IixvKSxlLmZpcnN0Q2F0ZWdvcnlEaW1JbmRleD0wKSxycChhKSYmKG4uc2V0KCJ5IixhKSxlLmZpcnN0Q2F0ZWdvcnlEaW1JbmRleCxlLmZpcnN0Q2F0ZWdvcnlEaW1JbmRleD0xKX0sc2luZ2xlQXhpczpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10LmdldFJlZmVycmluZ0NvbXBvbmVudHMoInNpbmdsZUF4aXMiKVswXTtlLmNvb3JkU3lzRGltcz1bInNpbmdsZSJdLGkuc2V0KCJzaW5nbGUiLG8pLHJwKG8pJiYobi5zZXQoInNpbmdsZSIsbyksZS5maXJzdENhdGVnb3J5RGltSW5kZXg9MCl9LHBvbGFyOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQuZ2V0UmVmZXJyaW5nQ29tcG9uZW50cygicG9sYXIiKVswXSxhPW8uZmluZEF4aXNNb2RlbCgicmFkaXVzQXhpcyIpLHI9by5maW5kQXhpc01vZGVsKCJhbmdsZUF4aXMiKTtlLmNvb3JkU3lzRGltcz1bInJhZGl1cyIsImFuZ2xlIl0saS5zZXQoInJhZGl1cyIsYSksaS5zZXQoImFuZ2xlIixyKSxycChhKSYmKG4uc2V0KCJyYWRpdXMiLGEpLGUuZmlyc3RDYXRlZ29yeURpbUluZGV4PTApLHJwKHIpJiYobi5zZXQoImFuZ2xlIixyKSxudWxsPT1lLmZpcnN0Q2F0ZWdvcnlEaW1JbmRleCYmKGUuZmlyc3RDYXRlZ29yeURpbUluZGV4PTEpKX0sZ2VvOmZ1bmN0aW9uKHQsZSxpLG4pe2UuY29vcmRTeXNEaW1zPVsibG5nIiwibGF0Il19LHBhcmFsbGVsOmZ1bmN0aW9uKHQsbyxhLHIpe3ZhciBzPXQuZWNNb2RlbCxlPXMuZ2V0Q29tcG9uZW50KCJwYXJhbGxlbCIsdC5nZXQoInBhcmFsbGVsSW5kZXgiKSksbD1vLmNvb3JkU3lzRGltcz1lLmRpbWVuc2lvbnMuc2xpY2UoKTtFKGUucGFyYWxsZWxBeGlzSW5kZXgsZnVuY3Rpb24odCxlKXt2YXIgaT1zLmdldENvbXBvbmVudCgicGFyYWxsZWxBeGlzIix0KSxuPWxbZV07YS5zZXQobixpKSxycChpKSYmbnVsbD09by5maXJzdENhdGVnb3J5RGltSW5kZXgmJihyLnNldChuLGkpLG8uZmlyc3RDYXRlZ29yeURpbUluZGV4PWUpfSl9fTtmdW5jdGlvbiBycCh0KXtyZXR1cm4iY2F0ZWdvcnkiPT09dC5nZXQoInR5cGUiKX1mdW5jdGlvbiBzcCh0LGksZSl7dmFyIG4sbyxhLHIscz0oZT1lfHx7fSkuYnlJbmRleCxsPWUuc3RhY2tlZENvb3JkRGltZW5zaW9uLHU9ISghdHx8IXQuZ2V0KCJzdGFjayIpKTtpZihFKGksZnVuY3Rpb24odCxlKXt6KHQpJiYoaVtlXT10PXtuYW1lOnR9KSx1JiYhdC5pc0V4dHJhQ29vcmQmJihzfHxufHwhdC5vcmRpbmFsTWV0YXx8KG49dCksb3x8Im9yZGluYWwiPT09dC50eXBlfHwidGltZSI9PT10LnR5cGV8fGwmJmwhPT10LmNvb3JkRGltfHwobz10KSl9KSwhb3x8c3x8bnx8KHM9ITApLG8pe2E9Il9fXDBlY3N0YWNrcmVzdWx0IixyPSJfX1wwZWNzdGFja2Vkb3ZlciIsbiYmKG4uY3JlYXRlSW52ZXJ0ZWRJbmRpY2VzPSEwKTt2YXIgaD1vLmNvb3JkRGltLGM9by50eXBlLGQ9MDtFKGksZnVuY3Rpb24odCl7dC5jb29yZERpbT09PWgmJmQrK30pLGkucHVzaCh7bmFtZTphLGNvb3JkRGltOmgsY29vcmREaW1JbmRleDpkLHR5cGU6Yyxpc0V4dHJhQ29vcmQ6ITAsaXNDYWxjdWxhdGlvbkNvb3JkOiEwfSksZCsrLGkucHVzaCh7bmFtZTpyLGNvb3JkRGltOnIsY29vcmREaW1JbmRleDpkLHR5cGU6Yyxpc0V4dHJhQ29vcmQ6ITAsaXNDYWxjdWxhdGlvbkNvb3JkOiEwfSl9cmV0dXJue3N0YWNrZWREaW1lbnNpb246byYmby5uYW1lLHN0YWNrZWRCeURpbWVuc2lvbjpuJiZuLm5hbWUsaXNTdGFja2VkQnlJbmRleDpzLHN0YWNrZWRPdmVyRGltZW5zaW9uOnIsc3RhY2tSZXN1bHREaW1lbnNpb246YX19ZnVuY3Rpb24gbHAodCxlKXtyZXR1cm4hIWUmJmU9PT10LmdldENhbGN1bGF0aW9uSW5mbygic3RhY2tlZERpbWVuc2lvbiIpfWZ1bmN0aW9uIHVwKHQsZSl7cmV0dXJuIGxwKHQsZSk/dC5nZXRDYWxjdWxhdGlvbkluZm8oInN0YWNrUmVzdWx0RGltZW5zaW9uIik6ZX1mdW5jdGlvbiBocCh0LGUsaSl7aT1pfHx7fSxHdS5pc0luc3RhbmNlKHQpfHwodD1HdS5zZXJpZXNEYXRhVG9Tb3VyY2UodCkpO3ZhciBuLG89ZS5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSxhPW5oLmdldChvKSxyPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0KCJjb29yZGluYXRlU3lzdGVtIiksaT1uZXcgb3AoZSksbj1hcFtlXTtpZihuKXJldHVybiBuKHQsaSxpLmF4aXNNYXAsaS5jYXRlZ29yeUF4aXNNYXApLGl9KGUpO3ImJihuPU4oci5jb29yZFN5c0RpbXMsZnVuY3Rpb24odCl7dmFyIGU9e25hbWU6dH0saT1yLmF4aXNNYXAuZ2V0KHQpO2lmKGkpe3ZhciBuPWkuZ2V0KCJ0eXBlIik7ZS50eXBlPUxmKG4pfXJldHVybiBlfSkpLG49bnx8KGEmJihhLmdldERpbWVuc2lvbnNJbmZvP2EuZ2V0RGltZW5zaW9uc0luZm8oKTphLmRpbWVuc2lvbnMuc2xpY2UoKSl8fFsieCIsInkiXSk7dmFyIHMsbCx1PW5wKHQse2Nvb3JkRGltZW5zaW9uczpuLGdlbmVyYXRlQ29vcmQ6aS5nZW5lcmF0ZUNvb3JkLGVuY29kZURlZmF1bHRlcjppLnVzZUVuY29kZURlZmF1bHRlcj9UKFh1LG4sZSk6bnVsbH0pO3ImJkUodSxmdW5jdGlvbih0LGUpe3ZhciBpPXQuY29vcmREaW0sbj1yLmNhdGVnb3J5QXhpc01hcC5nZXQoaSk7biYmKG51bGw9PXMmJihzPWUpLHQub3JkaW5hbE1ldGE9bi5nZXRPcmRpbmFsTWV0YSgpKSxudWxsIT10Lm90aGVyRGltcy5pdGVtTmFtZSYmKGw9ITApfSksbHx8bnVsbD09c3x8KHVbc10ub3RoZXJEaW1zLml0ZW1OYW1lPTApO3ZhciBoPXNwKGUsdSksYz1uZXcgV2YodSxlKTtjLnNldENhbGN1bGF0aW9uSW5mbyhoKTt2YXIgZD1udWxsIT1zJiZmdW5jdGlvbih0KXtpZih0LnNvdXJjZUZvcm1hdD09PVB1KXt2YXIgZT1mdW5jdGlvbih0KXt2YXIgZT0wO2Zvcig7ZTx0Lmxlbmd0aCYmbnVsbD09dFtlXTspZSsrO3JldHVybiB0W2VdfSh0LmRhdGF8fFtdKTtyZXR1cm4gbnVsbCE9ZSYmIWsoQm8oZSkpfX0odCk/ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIG49PT1zP2k6dGhpcy5kZWZhdWx0RGltVmFsdWVHZXR0ZXIodCxlLGksbil9Om51bGw7cmV0dXJuIGMuaGFzSXRlbU9wdGlvbj0hMSxjLmluaXREYXRhKHQsbnVsbCxkKSxjfWZ1bmN0aW9uIGNwKHQpe3RoaXMuX3NldHRpbmc9dHx8e30sdGhpcy5fZXh0ZW50PVsxLzAsLTEvMF0sdGhpcy5faW50ZXJ2YWw9MCx0aGlzLmluaXQmJnRoaXMuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZHAodCl7dGhpcy5jYXRlZ29yaWVzPXQuY2F0ZWdvcmllc3x8W10sdGhpcy5fbmVlZENvbGxlY3Q9dC5uZWVkQ29sbGVjdCx0aGlzLl9kZWR1cGxpY2F0aW9uPXQuZGVkdXBsaWNhdGlvbix0aGlzLl9tYXB9Y3AucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKHQpe3JldHVybiB0fSxjcC5wcm90b3R5cGUuZ2V0U2V0dGluZz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fc2V0dGluZ1t0XX0sY3AucHJvdG90eXBlLmNvbnRhaW49ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZXh0ZW50O3JldHVybiB0Pj1lWzBdJiZ0PD1lWzFdfSxjcC5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2V4dGVudDtyZXR1cm4gZVsxXT09PWVbMF0/LjU6KHQtZVswXSkvKGVbMV0tZVswXSl9LGNwLnByb3RvdHlwZS5zY2FsZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9leHRlbnQ7cmV0dXJuIHQqKGVbMV0tZVswXSkrZVswXX0sY3AucHJvdG90eXBlLnVuaW9uRXh0ZW50PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2V4dGVudDt0WzBdPGVbMF0mJihlWzBdPXRbMF0pLHRbMV0+ZVsxXSYmKGVbMV09dFsxXSl9LGNwLnByb3RvdHlwZS51bmlvbkV4dGVudEZyb21EYXRhPWZ1bmN0aW9uKHQsZSl7dGhpcy51bmlvbkV4dGVudCh0LmdldEFwcHJveGltYXRlRXh0ZW50KGUpKX0sY3AucHJvdG90eXBlLmdldEV4dGVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9leHRlbnQuc2xpY2UoKX0sY3AucHJvdG90eXBlLnNldEV4dGVudD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2V4dGVudDtpc05hTih0KXx8KGlbMF09dCksaXNOYU4oZSl8fChpWzFdPWUpfSxjcC5wcm90b3R5cGUuaXNCbGFuaz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0JsYW5rfSxjcC5wcm90b3R5cGUuc2V0Qmxhbms9ZnVuY3Rpb24odCl7dGhpcy5faXNCbGFuaz10fSxjcC5wcm90b3R5cGUuZ2V0TGFiZWw9bnVsbCx0YShjcCksYWEoY3Ase3JlZ2lzdGVyV2hlbkV4dGVuZDohMH0pLGRwLmNyZWF0ZUJ5QXhpc01vZGVsPWZ1bmN0aW9uKHQpe3ZhciBlPXQub3B0aW9uLGk9ZS5kYXRhLG49aSYmTihpLGdwKTtyZXR1cm4gbmV3IGRwKHtjYXRlZ29yaWVzOm4sbmVlZENvbGxlY3Q6IW4sZGVkdXBsaWNhdGlvbjohMSE9PWUuZGVkcGxpY2F0aW9ufSl9O3ZhciBmcD1kcC5wcm90b3R5cGU7ZnVuY3Rpb24gcHAodCl7cmV0dXJuIHQuX21hcHx8KHQuX21hcD1RKHQuY2F0ZWdvcmllcykpfWZ1bmN0aW9uIGdwKHQpe3JldHVybiBSKHQpJiZudWxsIT10LnZhbHVlP3QudmFsdWU6dCsiIn1mcC5nZXRPcmRpbmFsPWZ1bmN0aW9uKHQpe3JldHVybiBwcCh0aGlzKS5nZXQodCl9LGZwLnBhcnNlQW5kQ29sbGVjdD1mdW5jdGlvbih0KXt2YXIgZSxpPXRoaXMuX25lZWRDb2xsZWN0O2lmKCJzdHJpbmciIT10eXBlb2YgdCYmIWkpcmV0dXJuIHQ7aWYoaSYmIXRoaXMuX2RlZHVwbGljYXRpb24pcmV0dXJuIGU9dGhpcy5jYXRlZ29yaWVzLmxlbmd0aCx0aGlzLmNhdGVnb3JpZXNbZV09dCxlO3ZhciBuPXBwKHRoaXMpO3JldHVybiBudWxsPT0oZT1uLmdldCh0KSkmJihpPyhlPXRoaXMuY2F0ZWdvcmllcy5sZW5ndGgsdGhpcy5jYXRlZ29yaWVzW2VdPXQsbi5zZXQodCxlKSk6ZT1OYU4pLGV9O3ZhciBtcD1jcC5wcm90b3R5cGUsdnA9Y3AuZXh0ZW5kKHt0eXBlOiJvcmRpbmFsIixpbml0OmZ1bmN0aW9uKHQsZSl7dCYmIWsodCl8fCh0PW5ldyBkcCh7Y2F0ZWdvcmllczp0fSkpLHRoaXMuX29yZGluYWxNZXRhPXQsdGhpcy5fZXh0ZW50PWV8fFswLHQuY2F0ZWdvcmllcy5sZW5ndGgtMV19LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD90aGlzLl9vcmRpbmFsTWV0YS5nZXRPcmRpbmFsKHQpOk1hdGgucm91bmQodCl9LGNvbnRhaW46ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy5wYXJzZSh0KSxtcC5jb250YWluLmNhbGwodGhpcyx0KSYmbnVsbCE9dGhpcy5fb3JkaW5hbE1ldGEuY2F0ZWdvcmllc1t0XX0sbm9ybWFsaXplOmZ1bmN0aW9uKHQpe3JldHVybiBtcC5ub3JtYWxpemUuY2FsbCh0aGlzLHRoaXMucGFyc2UodCkpfSxzY2FsZTpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5yb3VuZChtcC5zY2FsZS5jYWxsKHRoaXMsdCkpfSxnZXRUaWNrczpmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPXRoaXMuX2V4dGVudCxpPWVbMF07aTw9ZVsxXTspdC5wdXNoKGkpLGkrKztyZXR1cm4gdH0sZ2V0TGFiZWw6ZnVuY3Rpb24odCl7aWYoIXRoaXMuaXNCbGFuaygpKXJldHVybiB0aGlzLl9vcmRpbmFsTWV0YS5jYXRlZ29yaWVzW3RdfSxjb3VudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9leHRlbnRbMV0tdGhpcy5fZXh0ZW50WzBdKzF9LHVuaW9uRXh0ZW50RnJvbURhdGE6ZnVuY3Rpb24odCxlKXt0aGlzLnVuaW9uRXh0ZW50KHQuZ2V0QXBwcm94aW1hdGVFeHRlbnQoZSkpfSxnZXRPcmRpbmFsTWV0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vcmRpbmFsTWV0YX0sbmljZVRpY2tzOmV0LG5pY2VFeHRlbnQ6ZXR9KTt2cC5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHZwfTt2YXIgeXA9Tmw7ZnVuY3Rpb24geHAodCl7cmV0dXJuIHpsKHQpKzJ9ZnVuY3Rpb24gX3AodCxlLGkpe3RbZV09TWF0aC5tYXgoTWF0aC5taW4odFtlXSxpWzFdKSxpWzBdKX1mdW5jdGlvbiB3cCh0LGUpe2lzRmluaXRlKHRbMF0pfHwodFswXT1lWzBdKSxpc0Zpbml0ZSh0WzFdKXx8KHRbMV09ZVsxXSksX3AodCwwLGUpLF9wKHQsMSxlKSx0WzBdPnRbMV0mJih0WzBdPXRbMV0pfXZhciBicD1ObCxTcD1jcC5leHRlbmQoe3R5cGU6ImludGVydmFsIixfaW50ZXJ2YWw6MCxfaW50ZXJ2YWxQcmVjaXNpb246MixzZXRFeHRlbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9leHRlbnQ7aXNOYU4odCl8fChpWzBdPXBhcnNlRmxvYXQodCkpLGlzTmFOKGUpfHwoaVsxXT1wYXJzZUZsb2F0KGUpKX0sdW5pb25FeHRlbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZXh0ZW50O3RbMF08ZVswXSYmKGVbMF09dFswXSksdFsxXT5lWzFdJiYoZVsxXT10WzFdKSxTcC5wcm90b3R5cGUuc2V0RXh0ZW50LmNhbGwodGhpcyxlWzBdLGVbMV0pfSxnZXRJbnRlcnZhbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnZhbH0sc2V0SW50ZXJ2YWw6ZnVuY3Rpb24odCl7dGhpcy5faW50ZXJ2YWw9dCx0aGlzLl9uaWNlRXh0ZW50PXRoaXMuX2V4dGVudC5zbGljZSgpLHRoaXMuX2ludGVydmFsUHJlY2lzaW9uPXhwKHQpfSxnZXRUaWNrczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9pbnRlcnZhbCxpPXRoaXMuX2V4dGVudCxuPXRoaXMuX25pY2VFeHRlbnQsbz10aGlzLl9pbnRlcnZhbFByZWNpc2lvbixhPVtdO2lmKCFlKXJldHVybiBhO2lbMF08blswXSYmKHQ/YS5wdXNoKGJwKG5bMF0tZSkpOmEucHVzaChpWzBdKSk7Zm9yKHZhciByPW5bMF07cjw9blsxXSYmKGEucHVzaChyKSwocj1icChyK2UsbykpIT09YVthLmxlbmd0aC0xXSk7KWlmKDFlNDxhLmxlbmd0aClyZXR1cm5bXTt2YXIgcz1hLmxlbmd0aD9hW2EubGVuZ3RoLTFdOm5bMV07cmV0dXJuIGlbMV0+cyYmKHQ/YS5wdXNoKHMrZSk6YS5wdXNoKGlbMV0pKSxhfSxnZXRNaW5vclRpY2tzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmdldFRpY2tzKCEwKSxpPVtdLG49dGhpcy5nZXRFeHRlbnQoKSxvPTE7bzxlLmxlbmd0aDtvKyspe2Zvcih2YXIgYT1lW29dLHI9ZVtvLTFdLHM9MCxsPVtdLHU9KGEtcikvdDtzPHQtMTspe3ZhciBoPU5sKHIrKHMrMSkqdSk7aD5uWzBdJiZoPG5bMV0mJmwucHVzaChoKSxzKyt9aS5wdXNoKGwpfXJldHVybiBpfSxnZXRMYWJlbDpmdW5jdGlvbih0LGUpe2lmKG51bGw9PXQpcmV0dXJuIiI7dmFyIGk9ZSYmZS5wcmVjaXNpb247cmV0dXJuIG51bGw9PWk/aT16bCh0KXx8MDoiYXV0byI9PT1pJiYoaT10aGlzLl9pbnRlcnZhbFByZWNpc2lvbiksS2wodD1icCh0LGksITApKX0sbmljZVRpY2tzOmZ1bmN0aW9uKHQsZSxpKXt0PXR8fDU7dmFyIG49dGhpcy5fZXh0ZW50LG89blsxXS1uWzBdO2lmKGlzRmluaXRlKG8pKXtvPDAmJihvPS1vLG4ucmV2ZXJzZSgpKTt2YXIgYT1mdW5jdGlvbih0LGUsaSxuKXt2YXIgbz17fSxhPXRbMV0tdFswXSxyPW8uaW50ZXJ2YWw9WGwoYS9lLCEwKTtudWxsIT1pJiZyPGkmJihyPW8uaW50ZXJ2YWw9aSksbnVsbCE9biYmbjxyJiYocj1vLmludGVydmFsPW4pO3ZhciBzPW8uaW50ZXJ2YWxQcmVjaXNpb249eHAocik7cmV0dXJuIHdwKG8ubmljZVRpY2tFeHRlbnQ9W3lwKE1hdGguY2VpbCh0WzBdL3IpKnIscykseXAoTWF0aC5mbG9vcih0WzFdL3IpKnIscyldLHQpLG99KG4sdCxlLGkpO3RoaXMuX2ludGVydmFsUHJlY2lzaW9uPWEuaW50ZXJ2YWxQcmVjaXNpb24sdGhpcy5faW50ZXJ2YWw9YS5pbnRlcnZhbCx0aGlzLl9uaWNlRXh0ZW50PWEubmljZVRpY2tFeHRlbnR9fSxuaWNlRXh0ZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2V4dGVudDtpZihlWzBdPT09ZVsxXSlpZigwIT09ZVswXSl7dmFyIGk9ZVswXTt0LmZpeE1heHx8KGVbMV0rPWkvMiksZVswXS09aS8yfWVsc2UgZVsxXT0xO3ZhciBuPWVbMV0tZVswXTtpc0Zpbml0ZShuKXx8KGVbMF09MCxlWzFdPTEpLHRoaXMubmljZVRpY2tzKHQuc3BsaXROdW1iZXIsdC5taW5JbnRlcnZhbCx0Lm1heEludGVydmFsKTt2YXIgbz10aGlzLl9pbnRlcnZhbDt0LmZpeE1pbnx8KGVbMF09YnAoTWF0aC5mbG9vcihlWzBdL28pKm8pKSx0LmZpeE1heHx8KGVbMV09YnAoTWF0aC5jZWlsKGVbMV0vbykqbykpfX0pO1NwLmNyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgU3B9O3ZhciBNcD0iX19lY19zdGFja18iLElwPSJ1bmRlZmluZWQiIT10eXBlb2YgRmxvYXQzMkFycmF5P0Zsb2F0MzJBcnJheTpBcnJheTtmdW5jdGlvbiBUcCh0KXtyZXR1cm4gdC5nZXQoInN0YWNrIil8fE1wK3Quc2VyaWVzSW5kZXh9ZnVuY3Rpb24gQXAodCl7cmV0dXJuIHQuZGltK3QuaW5kZXh9ZnVuY3Rpb24gRHAodCxlKXt2YXIgaT1bXTtyZXR1cm4gZS5lYWNoU2VyaWVzQnlUeXBlKHQsZnVuY3Rpb24odCl7T3AodCkmJiFFcCh0KSYmaS5wdXNoKHQpfSksaX1mdW5jdGlvbiBDcCh0KXt2YXIgZz1mdW5jdGlvbih0KXt2YXIgbD17fTtFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5jb29yZGluYXRlU3lzdGVtLmdldEJhc2VBeGlzKCk7aWYoInRpbWUiPT09ZS50eXBlfHwidmFsdWUiPT09ZS50eXBlKWZvcih2YXIgaT10LmdldERhdGEoKSxuPWUuZGltKyJfIitlLmluZGV4LG89aS5tYXBEaW1lbnNpb24oZS5kaW0pLGE9MCxyPWkuY291bnQoKTthPHI7KythKXt2YXIgcz1pLmdldChvLGEpO2xbbl0/bFtuXS5wdXNoKHMpOmxbbl09W3NdfX0pO3ZhciBlPVtdO2Zvcih2YXIgaSBpbiBsKWlmKGwuaGFzT3duUHJvcGVydHkoaSkpe3ZhciBuPWxbaV07aWYobil7bi5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQtZX0pO2Zvcih2YXIgbz1udWxsLGE9MTthPG4ubGVuZ3RoOysrYSl7dmFyIHI9blthXS1uW2EtMV07MDxyJiYobz1udWxsPT09bz9yOk1hdGgubWluKG8scikpfWVbaV09b319cmV0dXJuIGV9KHQpLG09W107cmV0dXJuIEUodCxmdW5jdGlvbih0KXt2YXIgZSxpPXQuY29vcmRpbmF0ZVN5c3RlbS5nZXRCYXNlQXhpcygpLG49aS5nZXRFeHRlbnQoKTtpZigiY2F0ZWdvcnkiPT09aS50eXBlKWU9aS5nZXRCYW5kV2lkdGgoKTtlbHNlIGlmKCJ2YWx1ZSI9PT1pLnR5cGV8fCJ0aW1lIj09PWkudHlwZSl7dmFyIG89aS5kaW0rIl8iK2kuaW5kZXgsYT1nW29dLHI9TWF0aC5hYnMoblsxXS1uWzBdKSxzPWkuc2NhbGUuZ2V0RXh0ZW50KCksbD1NYXRoLmFicyhzWzFdLXNbMF0pO2U9YT9yL2wqYTpyfWVsc2V7dmFyIHU9dC5nZXREYXRhKCk7ZT1NYXRoLmFicyhuWzFdLW5bMF0pL3UuY291bnQoKX12YXIgaD1QbCh0LmdldCgiYmFyV2lkdGgiKSxlKSxjPVBsKHQuZ2V0KCJiYXJNYXhXaWR0aCIpLGUpLGQ9UGwodC5nZXQoImJhck1pbldpZHRoIil8fDEsZSksZj10LmdldCgiYmFyR2FwIikscD10LmdldCgiYmFyQ2F0ZWdvcnlHYXAiKTttLnB1c2goe2JhbmRXaWR0aDplLGJhcldpZHRoOmgsYmFyTWF4V2lkdGg6YyxiYXJNaW5XaWR0aDpkLGJhckdhcDpmLGJhckNhdGVnb3J5R2FwOnAsYXhpc0tleTpBcChpKSxzdGFja0lkOlRwKHQpfSl9KSxMcChtKX1mdW5jdGlvbiBMcCh0KXt2YXIgZD17fTtFKHQsZnVuY3Rpb24odCxlKXt2YXIgaT10LmF4aXNLZXksbj10LmJhbmRXaWR0aCxvPWRbaV18fHtiYW5kV2lkdGg6bixyZW1haW5lZFdpZHRoOm4sYXV0b1dpZHRoQ291bnQ6MCxjYXRlZ29yeUdhcDoiMjAlIixnYXA6IjMwJSIsc3RhY2tzOnt9fSxhPW8uc3RhY2tzO2RbaV09bzt2YXIgcj10LnN0YWNrSWQ7YVtyXXx8by5hdXRvV2lkdGhDb3VudCsrLGFbcl09YVtyXXx8e3dpZHRoOjAsbWF4V2lkdGg6MH07dmFyIHM9dC5iYXJXaWR0aDtzJiYhYVtyXS53aWR0aCYmKGFbcl0ud2lkdGg9cyxzPU1hdGgubWluKG8ucmVtYWluZWRXaWR0aCxzKSxvLnJlbWFpbmVkV2lkdGgtPXMpO3ZhciBsPXQuYmFyTWF4V2lkdGg7bCYmKGFbcl0ubWF4V2lkdGg9bCk7dmFyIHU9dC5iYXJNaW5XaWR0aDt1JiYoYVtyXS5taW5XaWR0aD11KTt2YXIgaD10LmJhckdhcDtudWxsIT1oJiYoby5nYXA9aCk7dmFyIGM9dC5iYXJDYXRlZ29yeUdhcDtudWxsIT1jJiYoby5jYXRlZ29yeUdhcD1jKX0pO3ZhciBmPXt9O3JldHVybiBFKGQsZnVuY3Rpb24odCxpKXtmW2ldPXt9O3ZhciBlPXQuc3RhY2tzLG49dC5iYW5kV2lkdGgsbz1QbCh0LmNhdGVnb3J5R2FwLG4pLGE9UGwodC5nYXAsMSkscj10LnJlbWFpbmVkV2lkdGgscz10LmF1dG9XaWR0aENvdW50LGw9KHItbykvKHMrKHMtMSkqYSk7bD1NYXRoLm1heChsLDApLEUoZSxmdW5jdGlvbih0KXt2YXIgZT10Lm1heFdpZHRoLGk9dC5taW5XaWR0aDtpZih0LndpZHRoKXtuPXQud2lkdGg7ZSYmKG49TWF0aC5taW4obixlKSksaSYmKG49TWF0aC5tYXgobixpKSksdC53aWR0aD1uLHItPW4rYSpuLHMtLX1lbHNle3ZhciBuPWw7ZSYmZTxuJiYobj1NYXRoLm1pbihlLHIpKSxpJiZuPGkmJihuPWkpLG4hPT1sJiYodC53aWR0aD1uLHItPW4rYSpuLHMtLSl9fSksbD0oci1vKS8ocysocy0xKSphKSxsPU1hdGgubWF4KGwsMCk7dmFyIHUsaD0wO0UoZSxmdW5jdGlvbih0LGUpe3Qud2lkdGh8fCh0LndpZHRoPWwpLGgrPSh1PXQpLndpZHRoKigxK2EpfSksdSYmKGgtPXUud2lkdGgqYSk7dmFyIGM9LWgvMjtFKGUsZnVuY3Rpb24odCxlKXtmW2ldW2VdPWZbaV1bZV18fHtiYW5kV2lkdGg6bixvZmZzZXQ6Yyx3aWR0aDp0LndpZHRofSxjKz10LndpZHRoKigxK2EpfSl9KSxmfWZ1bmN0aW9uIGtwKHQsZSxpKXtpZih0JiZlKXt2YXIgbj10W0FwKGUpXTtyZXR1cm4gbnVsbCE9biYmbnVsbCE9aSYmKG49bltUcChpKV0pLG59fWZ1bmN0aW9uIFBwKHQsZSl7dmFyIGk9RHAodCxlKSxUPUNwKGkpLEE9e307RShpLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0RGF0YSgpLGk9dC5jb29yZGluYXRlU3lzdGVtLG49aS5nZXRCYXNlQXhpcygpLG89VHAodCksYT1UW0FwKG4pXVtvXSxyPWEub2Zmc2V0LHM9YS53aWR0aCxsPWkuZ2V0T3RoZXJBeGlzKG4pLHU9dC5nZXQoImJhck1pbkhlaWdodCIpfHwwO0Fbb109QVtvXXx8W10sZS5zZXRMYXlvdXQoe2JhbmRXaWR0aDphLmJhbmRXaWR0aCxvZmZzZXQ6cixzaXplOnN9KTtmb3IodmFyIGg9ZS5tYXBEaW1lbnNpb24obC5kaW0pLGM9ZS5tYXBEaW1lbnNpb24obi5kaW0pLGQ9bHAoZSxoKSxmPWwuaXNIb3Jpem9udGFsKCkscD16cChuLGwsZCksZz0wLG09ZS5jb3VudCgpO2c8bTtnKyspe3ZhciB2PWUuZ2V0KGgsZykseT1lLmdldChjLGcpO2lmKCFpc05hTih2KSYmIWlzTmFOKHkpKXt2YXIgeCxfLHcsYixTLE09MDw9dj8icCI6Im4iLEk9cDtpZihkJiYoQVtvXVt5XXx8KEFbb11beV09e3A6cCxuOnB9KSxJPUFbb11beV1bTV0pLGYpeD1JLF89KFM9aS5kYXRhVG9Qb2ludChbdix5XSkpWzFdK3Isdz1TWzBdLXAsYj1zLE1hdGguYWJzKHcpPHUmJih3PSh3PDA/LTE6MSkqdSksZCYmKEFbb11beV1bTV0rPXcpO2Vsc2UgeD0oUz1pLmRhdGFUb1BvaW50KFt5LHZdKSlbMF0rcixfPUksdz1zLGI9U1sxXS1wLE1hdGguYWJzKGIpPHUmJihiPShiPD0wPy0xOjEpKnUpLGQmJihBW29dW3ldW01dKz1iKTtlLnNldEl0ZW1MYXlvdXQoZyx7eDp4LHk6Xyx3aWR0aDp3LGhlaWdodDpifSl9fX0sdGhpcyl9dmFyIE5wPXtzZXJpZXNUeXBlOiJiYXIiLHBsYW46ZGMoKSxyZXNldDpmdW5jdGlvbih0KXtpZihPcCh0KSYmRXAodCkpe3ZhciBlPXQuZ2V0RGF0YSgpLGg9dC5jb29yZGluYXRlU3lzdGVtLGM9aC5nZXRCYXNlQXhpcygpLGQ9aC5nZXRPdGhlckF4aXMoYyksZj1lLm1hcERpbWVuc2lvbihkLmRpbSkscD1lLm1hcERpbWVuc2lvbihjLmRpbSksZz1kLmlzSG9yaXpvbnRhbCgpLG09Zz8wOjEsdj1rcChDcChbdF0pLGMsdCkud2lkdGg7cmV0dXJuLjU8dnx8KHY9LjUpLHtwcm9ncmVzczpmdW5jdGlvbih0LGUpe3ZhciBpLG49dC5jb3VudCxvPW5ldyBJcCgyKm4pLGE9bmV3IElwKG4pLHI9W10scz1bXSxsPTAsdT0wO2Zvcig7bnVsbCE9KGk9dC5uZXh0KCkpOylzW21dPWUuZ2V0KGYsaSksc1sxLW1dPWUuZ2V0KHAsaSkscj1oLmRhdGFUb1BvaW50KHMsbnVsbCxyKSxvW2wrK109clswXSxvW2wrK109clsxXSxhW3UrK109aTtlLnNldExheW91dCh7bGFyZ2VQb2ludHM6byxsYXJnZURhdGFJbmRpY2VzOmEsYmFyV2lkdGg6dix2YWx1ZUF4aXNTdGFydDp6cChjLGQsITEpLHZhbHVlQXhpc0hvcml6b250YWw6Z30pfX19fX07ZnVuY3Rpb24gT3AodCl7cmV0dXJuIHQuY29vcmRpbmF0ZVN5c3RlbSYmImNhcnRlc2lhbjJkIj09PXQuY29vcmRpbmF0ZVN5c3RlbS50eXBlfWZ1bmN0aW9uIEVwKHQpe3JldHVybiB0LnBpcGVsaW5lQ29udGV4dCYmdC5waXBlbGluZUNvbnRleHQubGFyZ2V9ZnVuY3Rpb24genAodCxlKXtyZXR1cm4gZS50b0dsb2JhbENvb3JkKGUuZGF0YVRvQ29vcmQoImxvZyI9PT1lLnR5cGU/MTowKSl9dmFyIFJwPVNwLnByb3RvdHlwZSxCcD1NYXRoLmNlaWwsVnA9TWF0aC5mbG9vcixHcD0zNmU1LEZwPTg2NGU1LFdwPVNwLmV4dGVuZCh7dHlwZToidGltZSIsZ2V0TGFiZWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fc3RlcEx2bCxpPW5ldyBEYXRlKHQpO3JldHVybiBsdShlWzBdLGksdGhpcy5nZXRTZXR0aW5nKCJ1c2VVVEMiKSl9LG5pY2VFeHRlbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZXh0ZW50O2lmKGVbMF09PT1lWzFdJiYoZVswXS09RnAsZVsxXSs9RnApLGVbMV09PT0tMS8wJiZlWzBdPT09MS8wKXt2YXIgaT1uZXcgRGF0ZTtlWzFdPStuZXcgRGF0ZShpLmdldEZ1bGxZZWFyKCksaS5nZXRNb250aCgpLGkuZ2V0RGF0ZSgpKSxlWzBdPWVbMV0tRnB9dGhpcy5uaWNlVGlja3ModC5zcGxpdE51bWJlcix0Lm1pbkludGVydmFsLHQubWF4SW50ZXJ2YWwpO3ZhciBuPXRoaXMuX2ludGVydmFsO3QuZml4TWlufHwoZVswXT1ObChWcChlWzBdL24pKm4pKSx0LmZpeE1heHx8KGVbMV09TmwoQnAoZVsxXS9uKSpuKSl9LG5pY2VUaWNrczpmdW5jdGlvbih0LGUsaSl7dD10fHwxMDt2YXIgbj10aGlzLl9leHRlbnQsbz1uWzFdLW5bMF0sYT1vL3Q7bnVsbCE9ZSYmYTxlJiYoYT1lKSxudWxsIT1pJiZpPGEmJihhPWkpO3ZhciByPUhwLmxlbmd0aCxzPWZ1bmN0aW9uKHQsZSxpLG4pe2Zvcig7aTxuOyl7dmFyIG89aStuPj4+MTt0W29dWzFdPGU/aT0xK286bj1vfXJldHVybiBpfShIcCxhLDAsciksbD1IcFtNYXRoLm1pbihzLHItMSldLHU9bFsxXTsieWVhciI9PT1sWzBdJiYodSo9WGwoby91L3QsITApKTt2YXIgaD10aGlzLmdldFNldHRpbmcoInVzZVVUQyIpPzA6NjAqbmV3IERhdGUoK25bMF18fCtuWzFdKS5nZXRUaW1lem9uZU9mZnNldCgpKjFlMyxjPVtNYXRoLnJvdW5kKEJwKChuWzBdLWgpL3UpKnUraCksTWF0aC5yb3VuZChWcCgoblsxXS1oKS91KSp1K2gpXTt3cChjLG4pLHRoaXMuX3N0ZXBMdmw9bCx0aGlzLl9pbnRlcnZhbD11LHRoaXMuX25pY2VFeHRlbnQ9Y30scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuK0hsKHQpfX0pO0UoWyJjb250YWluIiwibm9ybWFsaXplIl0sZnVuY3Rpb24oZSl7V3AucHJvdG90eXBlW2VdPWZ1bmN0aW9uKHQpe3JldHVybiBScFtlXS5jYWxsKHRoaXMsdGhpcy5wYXJzZSh0KSl9fSk7dmFyIEhwPVtbImhoOm1tOnNzIiwxZTNdLFsiaGg6bW06c3MiLDVlM10sWyJoaDptbTpzcyIsMWU0XSxbImhoOm1tOnNzIiwxNWUzXSxbImhoOm1tOnNzIiwzZTRdLFsiaGg6bW1cbk1NLWRkIiw2ZTRdLFsiaGg6bW1cbk1NLWRkIiwzZTVdLFsiaGg6bW1cbk1NLWRkIiw2ZTVdLFsiaGg6bW1cbk1NLWRkIiw5ZTVdLFsiaGg6bW1cbk1NLWRkIiwxOGU1XSxbImhoOm1tXG5NTS1kZCIsR3BdLFsiaGg6bW1cbk1NLWRkIiw3MmU1XSxbImhoOm1tXG5NTS1kZCIsNipHcF0sWyJoaDptbVxuTU0tZGQiLDQzMmU1XSxbIk1NLWRkXG55eXl5IixGcF0sWyJNTS1kZFxueXl5eSIsMipGcF0sWyJNTS1kZFxueXl5eSIsMypGcF0sWyJNTS1kZFxueXl5eSIsNCpGcF0sWyJNTS1kZFxueXl5eSIsNSpGcF0sWyJNTS1kZFxueXl5eSIsNipGcF0sWyJ3ZWVrIiw3KkZwXSxbIk1NLWRkXG55eXl5Iiw4NjRlNl0sWyJ3ZWVrIiwxNCpGcF0sWyJ3ZWVrIiwyMSpGcF0sWyJtb250aCIsMzEqRnBdLFsid2VlayIsNDIqRnBdLFsibW9udGgiLDYyKkZwXSxbIndlZWsiLDcwKkZwXSxbInF1YXJ0ZXIiLDk1KkZwXSxbIm1vbnRoIiwzMSpGcCo0XSxbIm1vbnRoIiwxMzM5MmU2XSxbImhhbGYteWVhciIsMTY0MTZlNl0sWyJtb250aCIsMzEqRnAqOF0sWyJtb250aCIsMjY3ODRlNl0sWyJ5ZWFyIiwzODAqRnBdXTtXcC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBXcCh7dXNlVVRDOnQuZWNNb2RlbC5nZXQoInVzZVVUQyIpfSl9O3ZhciBacD1jcC5wcm90b3R5cGUsVXA9U3AucHJvdG90eXBlLFhwPXpsLFlwPU5sLGpwPU1hdGguZmxvb3IscXA9TWF0aC5jZWlsLEtwPU1hdGgucG93LCRwPU1hdGgubG9nLEpwPWNwLmV4dGVuZCh7dHlwZToibG9nIixiYXNlOjEwLCRjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe2NwLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9vcmlnaW5hbFNjYWxlPW5ldyBTcH0sZ2V0VGlja3M6ZnVuY3Rpb24odCl7dmFyIGk9dGhpcy5fb3JpZ2luYWxTY2FsZSxuPXRoaXMuX2V4dGVudCxvPWkuZ2V0RXh0ZW50KCk7cmV0dXJuIE4oVXAuZ2V0VGlja3MuY2FsbCh0aGlzLHQpLGZ1bmN0aW9uKHQpe3ZhciBlPU5sKEtwKHRoaXMuYmFzZSx0KSk7cmV0dXJuIGU9dD09PW5bMF0mJmkuX19maXhNaW4/UXAoZSxvWzBdKTplLGU9dD09PW5bMV0mJmkuX19maXhNYXg/UXAoZSxvWzFdKTplfSx0aGlzKX0sZ2V0TWlub3JUaWNrczpVcC5nZXRNaW5vclRpY2tzLGdldExhYmVsOlVwLmdldExhYmVsLHNjYWxlOmZ1bmN0aW9uKHQpe3JldHVybiB0PVpwLnNjYWxlLmNhbGwodGhpcyx0KSxLcCh0aGlzLmJhc2UsdCl9LHNldEV4dGVudDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuYmFzZTt0PSRwKHQpLyRwKGkpLGU9JHAoZSkvJHAoaSksVXAuc2V0RXh0ZW50LmNhbGwodGhpcyx0LGUpfSxnZXRFeHRlbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmJhc2UsZT1acC5nZXRFeHRlbnQuY2FsbCh0aGlzKTtlWzBdPUtwKHQsZVswXSksZVsxXT1LcCh0LGVbMV0pO3ZhciBpPXRoaXMuX29yaWdpbmFsU2NhbGUsbj1pLmdldEV4dGVudCgpO3JldHVybiBpLl9fZml4TWluJiYoZVswXT1RcChlWzBdLG5bMF0pKSxpLl9fZml4TWF4JiYoZVsxXT1RcChlWzFdLG5bMV0pKSxlfSx1bmlvbkV4dGVudDpmdW5jdGlvbih0KXt0aGlzLl9vcmlnaW5hbFNjYWxlLnVuaW9uRXh0ZW50KHQpO3ZhciBlPXRoaXMuYmFzZTt0WzBdPSRwKHRbMF0pLyRwKGUpLHRbMV09JHAodFsxXSkvJHAoZSksWnAudW5pb25FeHRlbnQuY2FsbCh0aGlzLHQpfSx1bmlvbkV4dGVudEZyb21EYXRhOmZ1bmN0aW9uKHQsZSl7dGhpcy51bmlvbkV4dGVudCh0LmdldEFwcHJveGltYXRlRXh0ZW50KGUpKX0sbmljZVRpY2tzOmZ1bmN0aW9uKHQpe3Q9dHx8MTA7dmFyIGU9dGhpcy5fZXh0ZW50LGk9ZVsxXS1lWzBdO2lmKCEoaT09MS8wfHxpPD0wKSl7dmFyIG49WmwoaSk7Zm9yKHQvaSpuPD0uNSYmKG4qPTEwKTshaXNOYU4obikmJk1hdGguYWJzKG4pPDEmJjA8TWF0aC5hYnMobik7KW4qPTEwO3ZhciBvPVtObChxcChlWzBdL24pKm4pLE5sKGpwKGVbMV0vbikqbildO3RoaXMuX2ludGVydmFsPW4sdGhpcy5fbmljZUV4dGVudD1vfX0sbmljZUV4dGVudDpmdW5jdGlvbih0KXtVcC5uaWNlRXh0ZW50LmNhbGwodGhpcyx0KTt2YXIgZT10aGlzLl9vcmlnaW5hbFNjYWxlO2UuX19maXhNaW49dC5maXhNaW4sZS5fX2ZpeE1heD10LmZpeE1heH19KTtmdW5jdGlvbiBRcCh0LGUpe3JldHVybiBZcCh0LFhwKGUpKX1mdW5jdGlvbiB0Zyh0LGUpe3ZhciBpLG4sbyxhPXQudHlwZSxyPWUuZ2V0TWluKCkscz1lLmdldE1heCgpLGw9bnVsbCE9cix1PW51bGwhPXMsaD10LmdldEV4dGVudCgpOyJvcmRpbmFsIj09PWE/aT1lLmdldENhdGVnb3JpZXMoKS5sZW5ndGg6KGsobj1lLmdldCgiYm91bmRhcnlHYXAiKSl8fChuPVtufHwwLG58fDBdKSwiYm9vbGVhbiI9PXR5cGVvZiBuWzBdJiYobj1bMCwwXSksblswXT1QbChuWzBdLDEpLG5bMV09UGwoblsxXSwxKSxvPWhbMV0taFswXXx8TWF0aC5hYnMoaFswXSkpLG51bGw9PXImJihyPSJvcmRpbmFsIj09PWE/aT8wOk5hTjpoWzBdLW5bMF0qbyksbnVsbD09cyYmKHM9Im9yZGluYWwiPT09YT9pP2ktMTpOYU46aFsxXStuWzFdKm8pLCJkYXRhTWluIj09PXI/cj1oWzBdOiJmdW5jdGlvbiI9PXR5cGVvZiByJiYocj1yKHttaW46aFswXSxtYXg6aFsxXX0pKSwiZGF0YU1heCI9PT1zP3M9aFsxXToiZnVuY3Rpb24iPT10eXBlb2YgcyYmKHM9cyh7bWluOmhbMF0sbWF4OmhbMV19KSksbnVsbCE9ciYmaXNGaW5pdGUocil8fChyPU5hTiksbnVsbCE9cyYmaXNGaW5pdGUocyl8fChzPU5hTiksdC5zZXRCbGFuayhGKHIpfHxGKHMpfHwib3JkaW5hbCI9PT1hJiYhdC5nZXRPcmRpbmFsTWV0YSgpLmNhdGVnb3JpZXMubGVuZ3RoKSxlLmdldE5lZWRDcm9zc1plcm8oKSYmKDA8ciYmMDxzJiYhbCYmKHI9MCkscjwwJiZzPDAmJiF1JiYocz0wKSk7dmFyIGM9ZS5lY01vZGVsO2lmKGMmJiJ0aW1lIj09PWEpe3ZhciBkLGY9RHAoImJhciIsYyk7aWYoRShmLGZ1bmN0aW9uKHQpe2R8PXQuZ2V0QmFzZUF4aXMoKT09PWUuYXhpc30pLGQpe3ZhciBwPUNwKGYpLGc9ZnVuY3Rpb24odCxlLGksbil7dmFyIG89aS5heGlzLmdldEV4dGVudCgpLGE9b1sxXS1vWzBdLHI9a3AobixpLmF4aXMpO2lmKHZvaWQgMD09PXIpcmV0dXJue21pbjp0LG1heDplfTt2YXIgcz0xLzA7RShyLGZ1bmN0aW9uKHQpe3M9TWF0aC5taW4odC5vZmZzZXQscyl9KTt2YXIgbD0tMS8wO0UocixmdW5jdGlvbih0KXtsPU1hdGgubWF4KHQub2Zmc2V0K3Qud2lkdGgsbCl9KSxzPU1hdGguYWJzKHMpLGw9TWF0aC5hYnMobCk7dmFyIHU9cytsLGg9ZS10LGM9aC8oMS0ocytsKS9hKS1oO3JldHVybnttaW46dC09cy91KmMsbWF4OmUrPWwvdSpjfX0ocixzLGUscCk7cj1nLm1pbixzPWcubWF4fX1yZXR1cm5bcixzXX1mdW5jdGlvbiBlZyh0LGUpe3ZhciBpPXRnKHQsZSksbj1udWxsIT1lLmdldE1pbigpLG89bnVsbCE9ZS5nZXRNYXgoKSxhPWUuZ2V0KCJzcGxpdE51bWJlciIpOyJsb2ciPT09dC50eXBlJiYodC5iYXNlPWUuZ2V0KCJsb2dCYXNlIikpO3ZhciByPXQudHlwZTt0LnNldEV4dGVudChpWzBdLGlbMV0pLHQubmljZUV4dGVudCh7c3BsaXROdW1iZXI6YSxmaXhNaW46bixmaXhNYXg6byxtaW5JbnRlcnZhbDoiaW50ZXJ2YWwiPT09cnx8InRpbWUiPT09cj9lLmdldCgibWluSW50ZXJ2YWwiKTpudWxsLG1heEludGVydmFsOiJpbnRlcnZhbCI9PT1yfHwidGltZSI9PT1yP2UuZ2V0KCJtYXhJbnRlcnZhbCIpOm51bGx9KTt2YXIgcz1lLmdldCgiaW50ZXJ2YWwiKTtudWxsIT1zJiZ0LnNldEludGVydmFsJiZ0LnNldEludGVydmFsKHMpfWZ1bmN0aW9uIGlnKHQsZSl7aWYoZT1lfHx0LmdldCgidHlwZSIpKXN3aXRjaChlKXtjYXNlImNhdGVnb3J5IjpyZXR1cm4gbmV3IHZwKHQuZ2V0T3JkaW5hbE1ldGE/dC5nZXRPcmRpbmFsTWV0YSgpOnQuZ2V0Q2F0ZWdvcmllcygpLFsxLzAsLTEvMF0pO2Nhc2UidmFsdWUiOnJldHVybiBuZXcgU3A7ZGVmYXVsdDpyZXR1cm4oY3AuZ2V0Q2xhc3MoZSl8fFNwKS5jcmVhdGUodCl9fWZ1bmN0aW9uIG5nKGkpe3ZhciBlLG49aS5nZXRMYWJlbE1vZGVsKCkuZ2V0KCJmb3JtYXR0ZXIiKSxvPSJjYXRlZ29yeSI9PT1pLnR5cGU/aS5zY2FsZS5nZXRFeHRlbnQoKVswXTpudWxsO3JldHVybiJzdHJpbmciPT10eXBlb2Ygbj8oZT1uLG49ZnVuY3Rpb24odCl7cmV0dXJuIHQ9aS5zY2FsZS5nZXRMYWJlbCh0KSxlLnJlcGxhY2UoInt2YWx1ZX0iLG51bGwhPXQ/dDoiIil9KToiZnVuY3Rpb24iPT10eXBlb2Ygbj9mdW5jdGlvbih0LGUpe3JldHVybiBudWxsIT1vJiYoZT10LW8pLG4ob2coaSx0KSxlKX06ZnVuY3Rpb24odCl7cmV0dXJuIGkuc2NhbGUuZ2V0TGFiZWwodCl9fWZ1bmN0aW9uIG9nKHQsZSl7cmV0dXJuImNhdGVnb3J5Ij09PXQudHlwZT90LnNjYWxlLmdldExhYmVsKGUpOmV9ZnVuY3Rpb24gYWcodCl7dmFyIGU9dC5nZXQoImludGVydmFsIik7cmV0dXJuIG51bGw9PWU/ImF1dG8iOmV9ZnVuY3Rpb24gcmcodCl7cmV0dXJuImNhdGVnb3J5Ij09PXQudHlwZSYmMD09PWFnKHQuZ2V0TGFiZWxNb2RlbCgpKX1FKFsiY29udGFpbiIsIm5vcm1hbGl6ZSJdLGZ1bmN0aW9uKGUpe0pwLnByb3RvdHlwZVtlXT1mdW5jdGlvbih0KXtyZXR1cm4gdD0kcCh0KS8kcCh0aGlzLmJhc2UpLFpwW2VdLmNhbGwodGhpcyx0KX19KSxKcC5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEpwfTt2YXIgc2c9e2dldE1pbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbixpPXR8fG51bGw9PWUucmFuZ2VTdGFydD9lLm1pbjplLnJhbmdlU3RhcnQ7cmV0dXJuIHRoaXMuYXhpcyYmbnVsbCE9aSYmImRhdGFNaW4iIT09aSYmImZ1bmN0aW9uIiE9dHlwZW9mIGkmJiFGKGkpJiYoaT10aGlzLmF4aXMuc2NhbGUucGFyc2UoaSkpLGl9LGdldE1heDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbixpPXR8fG51bGw9PWUucmFuZ2VFbmQ/ZS5tYXg6ZS5yYW5nZUVuZDtyZXR1cm4gdGhpcy5heGlzJiZudWxsIT1pJiYiZGF0YU1heCIhPT1pJiYiZnVuY3Rpb24iIT10eXBlb2YgaSYmIUYoaSkmJihpPXRoaXMuYXhpcy5zY2FsZS5wYXJzZShpKSksaX0sZ2V0TmVlZENyb3NzWmVybzpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uO3JldHVybiBudWxsPT10LnJhbmdlU3RhcnQmJm51bGw9PXQucmFuZ2VFbmQmJiF0LnNjYWxlfSxnZXRDb29yZFN5c01vZGVsOmV0LHNldFJhbmdlOmZ1bmN0aW9uKHQsZSl7dGhpcy5vcHRpb24ucmFuZ2VTdGFydD10LHRoaXMub3B0aW9uLnJhbmdlRW5kPWV9LHJlc2V0UmFuZ2U6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbi5yYW5nZVN0YXJ0PXRoaXMub3B0aW9uLnJhbmdlRW5kPW51bGx9fSxsZz1Jcyh7dHlwZToidHJpYW5nbGUiLHNoYXBlOntjeDowLGN5OjAsd2lkdGg6MCxoZWlnaHQ6MH0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5jeCxuPWUuY3ksbz1lLndpZHRoLzIsYT1lLmhlaWdodC8yO3QubW92ZVRvKGksbi1hKSx0LmxpbmVUbyhpK28sbithKSx0LmxpbmVUbyhpLW8sbithKSx0LmNsb3NlUGF0aCgpfX0pLHVnPUlzKHt0eXBlOiJkaWFtb25kIixzaGFwZTp7Y3g6MCxjeTowLHdpZHRoOjAsaGVpZ2h0OjB9LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUuY3gsbj1lLmN5LG89ZS53aWR0aC8yLGE9ZS5oZWlnaHQvMjt0Lm1vdmVUbyhpLG4tYSksdC5saW5lVG8oaStvLG4pLHQubGluZVRvKGksbithKSx0LmxpbmVUbyhpLW8sbiksdC5jbG9zZVBhdGgoKX19KSxoZz1Jcyh7dHlwZToicGluIixzaGFwZTp7eDowLHk6MCx3aWR0aDowLGhlaWdodDowfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLngsbj1lLnksbz1lLndpZHRoLzUqMyxhPU1hdGgubWF4KG8sZS5oZWlnaHQpLHI9by8yLHM9cipyLyhhLXIpLGw9bi1hK3Ircyx1PU1hdGguYXNpbihzL3IpLGg9TWF0aC5jb3ModSkqcixjPU1hdGguc2luKHUpLGQ9TWF0aC5jb3ModSksZj0uNipyLHA9Ljcqcjt0Lm1vdmVUbyhpLWgsbCtzKSx0LmFyYyhpLGwscixNYXRoLlBJLXUsMipNYXRoLlBJK3UpLHQuYmV6aWVyQ3VydmVUbyhpK2gtYypmLGwrcytkKmYsaSxuLXAsaSxuKSx0LmJlemllckN1cnZlVG8oaSxuLXAsaS1oK2MqZixsK3MrZCpmLGktaCxsK3MpLHQuY2xvc2VQYXRoKCl9fSksY2c9SXMoe3R5cGU6ImFycm93IixzaGFwZTp7eDowLHk6MCx3aWR0aDowLGhlaWdodDowfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmhlaWdodCxuPWUud2lkdGgsbz1lLngsYT1lLnkscj1uLzMqMjt0Lm1vdmVUbyhvLGEpLHQubGluZVRvKG8rcixhK2kpLHQubGluZVRvKG8sYStpLzQqMyksdC5saW5lVG8oby1yLGEraSksdC5saW5lVG8obyxhKSx0LmNsb3NlUGF0aCgpfX0pLGRnPXtsaW5lOmZ1bmN0aW9uKHQsZSxpLG4sbyl7by54MT10LG8ueTE9ZStuLzIsby54Mj10K2ksby55Mj1lK24vMn0scmVjdDpmdW5jdGlvbih0LGUsaSxuLG8pe28ueD10LG8ueT1lLG8ud2lkdGg9aSxvLmhlaWdodD1ufSxyb3VuZFJlY3Q6ZnVuY3Rpb24odCxlLGksbixvKXtvLng9dCxvLnk9ZSxvLndpZHRoPWksby5oZWlnaHQ9bixvLnI9TWF0aC5taW4oaSxuKS80fSxzcXVhcmU6ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1NYXRoLm1pbihpLG4pO28ueD10LG8ueT1lLG8ud2lkdGg9YSxvLmhlaWdodD1hfSxjaXJjbGU6ZnVuY3Rpb24odCxlLGksbixvKXtvLmN4PXQraS8yLG8uY3k9ZStuLzIsby5yPU1hdGgubWluKGksbikvMn0sZGlhbW9uZDpmdW5jdGlvbih0LGUsaSxuLG8pe28uY3g9dCtpLzIsby5jeT1lK24vMixvLndpZHRoPWksby5oZWlnaHQ9bn0scGluOmZ1bmN0aW9uKHQsZSxpLG4sbyl7by54PXQraS8yLG8ueT1lK24vMixvLndpZHRoPWksby5oZWlnaHQ9bn0sYXJyb3c6ZnVuY3Rpb24odCxlLGksbixvKXtvLng9dCtpLzIsby55PWUrbi8yLG8ud2lkdGg9aSxvLmhlaWdodD1ufSx0cmlhbmdsZTpmdW5jdGlvbih0LGUsaSxuLG8pe28uY3g9dCtpLzIsby5jeT1lK24vMixvLndpZHRoPWksby5oZWlnaHQ9bn19LGZnPXt9O0Uoe2xpbmU6b3MscmVjdDppcyxyb3VuZFJlY3Q6aXMsc3F1YXJlOmlzLGNpcmNsZTpIcixkaWFtb25kOnVnLHBpbjpoZyxhcnJvdzpjZyx0cmlhbmdsZTpsZ30sZnVuY3Rpb24odCxlKXtmZ1tlXT1uZXcgdH0pO3ZhciBwZz1Jcyh7dHlwZToic3ltYm9sIixzaGFwZTp7c3ltYm9sVHlwZToiIix4OjAseTowLHdpZHRoOjAsaGVpZ2h0OjB9LGNhbGN1bGF0ZVRleHRQb3NpdGlvbjpmdW5jdGlvbih0LGUsaSl7dmFyIG49cG4odCxlLGkpLG89dGhpcy5zaGFwZTtyZXR1cm4gbyYmInBpbiI9PT1vLnN5bWJvbFR5cGUmJiJpbnNpZGUiPT09ZS50ZXh0UG9zaXRpb24mJihuLnk9aS55Ky40KmkuaGVpZ2h0KSxufSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPWUuc3ltYm9sVHlwZTtpZigibm9uZSIhPT1uKXt2YXIgbz1mZ1tuXTtvPW98fGZnW249InJlY3QiXSxkZ1tuXShlLngsZS55LGUud2lkdGgsZS5oZWlnaHQsby5zaGFwZSksby5idWlsZFBhdGgodCxvLnNoYXBlLGkpfX19KTtmdW5jdGlvbiBnZyh0LGUpe2lmKCJpbWFnZSIhPT10aGlzLnR5cGUpe3ZhciBpPXRoaXMuc3R5bGUsbj10aGlzLnNoYXBlO24mJiJsaW5lIj09PW4uc3ltYm9sVHlwZT9pLnN0cm9rZT10OnRoaXMuX19pc0VtcHR5QnJ1c2g/KGkuc3Ryb2tlPXQsaS5maWxsPWV8fCIjZmZmIik6KGkuZmlsbCYmKGkuZmlsbD10KSxpLnN0cm9rZSYmKGkuc3Ryb2tlPXQpKSx0aGlzLmRpcnR5KCExKX19ZnVuY3Rpb24gbWcodCxlLGksbixvLGEscil7dmFyIHMsbD0wPT09dC5pbmRleE9mKCJlbXB0eSIpO3JldHVybiBsJiYodD10LnN1YnN0cig1LDEpLnRvTG93ZXJDYXNlKCkrdC5zdWJzdHIoNikpLChzPTA9PT10LmluZGV4T2YoImltYWdlOi8vIik/Q3ModC5zbGljZSg4KSxuZXcgTWkoZSxpLG4sbykscj8iY2VudGVyIjoiY292ZXIiKTowPT09dC5pbmRleE9mKCJwYXRoOi8vIik/RHModC5zbGljZSg3KSx7fSxuZXcgTWkoZSxpLG4sbykscj8iY2VudGVyIjoiY292ZXIiKTpuZXcgcGcoe3NoYXBlOntzeW1ib2xUeXBlOnQseDplLHk6aSx3aWR0aDpuLGhlaWdodDpvfX0pKS5fX2lzRW1wdHlCcnVzaD1sLHMuc2V0Q29sb3I9Z2cscy5zZXRDb2xvcihhKSxzfXZhciB2Zz17aXNEaW1lbnNpb25TdGFja2VkOmxwLGVuYWJsZURhdGFTdGFjazpzcCxnZXRTdGFja2VkRGltZW5zaW9uOnVwfTt2YXIgeWc9KE9iamVjdC5mcmVlemV8fE9iamVjdCkoe2NyZWF0ZUxpc3Q6ZnVuY3Rpb24odCl7cmV0dXJuIGhwKHQuZ2V0U291cmNlKCksdCl9LGdldExheW91dFJlY3Q6dnUsZGF0YVN0YWNrOnZnLGNyZWF0ZVNjYWxlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZTtJbC5pc0luc3RhbmNlKGUpfHxiKGk9bmV3IElsKGUpLHNnKTt2YXIgbj1pZyhpKTtyZXR1cm4gbi5zZXRFeHRlbnQodFswXSx0WzFdKSxlZyhuLGkpLG59LG1peGluQXhpc01vZGVsQ29tbW9uTWV0aG9kczpmdW5jdGlvbih0KXtiKHQsc2cpfSxjb21wbGV0ZURpbWVuc2lvbnM6ZXAsY3JlYXRlRGltZW5zaW9uczpucCxjcmVhdGVTeW1ib2w6bWd9KSx4Zz0xZS04O2Z1bmN0aW9uIF9nKHQsZSl7cmV0dXJuIE1hdGguYWJzKHQtZSk8eGd9ZnVuY3Rpb24gd2codCxlLGkpe3ZhciBuPTAsbz10WzBdO2lmKCFvKXJldHVybiExO2Zvcih2YXIgYT0xO2E8dC5sZW5ndGg7YSsrKXt2YXIgcj10W2FdO24rPWhyKG9bMF0sb1sxXSxyWzBdLHJbMV0sZSxpKSxvPXJ9dmFyIHM9dFswXTtyZXR1cm4gX2cob1swXSxzWzBdKSYmX2cob1sxXSxzWzFdKXx8KG4rPWhyKG9bMF0sb1sxXSxzWzBdLHNbMV0sZSxpKSksMCE9PW59ZnVuY3Rpb24gYmcodCxlLGkpe2lmKHRoaXMubmFtZT10LHRoaXMuZ2VvbWV0cmllcz1lLGkpaT1baVswXSxpWzFdXTtlbHNle3ZhciBuPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCk7aT1bbi54K24ud2lkdGgvMixuLnkrbi5oZWlnaHQvMl19dGhpcy5jZW50ZXI9aX1mdW5jdGlvbiBTZyh0LGUsaSl7Zm9yKHZhciBuPVtdLG89ZVswXSxhPWVbMV0scj0wO3I8dC5sZW5ndGg7cis9Mil7dmFyIHM9dC5jaGFyQ29kZUF0KHIpLTY0LGw9dC5jaGFyQ29kZUF0KHIrMSktNjQ7cz1zPj4xXi0oMSZzKSxsPWw+PjFeLSgxJmwpLG89cys9byxhPWwrPWEsbi5wdXNoKFtzL2ksbC9pXSl9cmV0dXJuIG59YmcucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpiZyxwcm9wZXJ0aWVzOm51bGwsZ2V0Qm91bmRpbmdSZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcmVjdDtpZih0KXJldHVybiB0O2Zvcih2YXIgZT1OdW1iZXIuTUFYX1ZBTFVFLGk9W2UsZV0sbj1bLWUsLWVdLG89W10sYT1bXSxyPXRoaXMuZ2VvbWV0cmllcyxzPTA7czxyLmxlbmd0aDtzKyspe2lmKCJwb2x5Z29uIj09PXJbc10udHlwZSlCYShyW3NdLmV4dGVyaW9yLG8sYSksU3QoaSxpLG8pLE10KG4sbixhKX1yZXR1cm4gMD09PXMmJihpWzBdPWlbMV09blswXT1uWzFdPTApLHRoaXMuX3JlY3Q9bmV3IE1pKGlbMF0saVsxXSxuWzBdLWlbMF0sblsxXS1pWzFdKX0sY29udGFpbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldEJvdW5kaW5nUmVjdCgpLGk9dGhpcy5nZW9tZXRyaWVzO2lmKCFlLmNvbnRhaW4odFswXSx0WzFdKSlyZXR1cm4hMTt0OmZvcih2YXIgbj0wLG89aS5sZW5ndGg7bjxvO24rKylpZigicG9seWdvbiI9PT1pW25dLnR5cGUpe3ZhciBhPWlbbl0uZXh0ZXJpb3Iscj1pW25dLmludGVyaW9ycztpZih3ZyhhLHRbMF0sdFsxXSkpe2Zvcih2YXIgcz0wO3M8KHI/ci5sZW5ndGg6MCk7cysrKWlmKHdnKHJbc10pKWNvbnRpbnVlIHQ7cmV0dXJuITB9fXJldHVybiExfSx0cmFuc2Zvcm1UbzpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10aGlzLmdldEJvdW5kaW5nUmVjdCgpLGE9by53aWR0aC9vLmhlaWdodDtpP249bnx8aS9hOmk9YSpuO2Zvcih2YXIgcj1uZXcgTWkodCxlLGksbikscz1vLmNhbGN1bGF0ZVRyYW5zZm9ybShyKSxsPXRoaXMuZ2VvbWV0cmllcyx1PTA7dTxsLmxlbmd0aDt1KyspaWYoInBvbHlnb24iPT09bFt1XS50eXBlKXtmb3IodmFyIGg9bFt1XS5leHRlcmlvcixjPWxbdV0uaW50ZXJpb3JzLGQ9MDtkPGgubGVuZ3RoO2QrKylidChoW2RdLGhbZF0scyk7Zm9yKHZhciBmPTA7ZjwoYz9jLmxlbmd0aDowKTtmKyspZm9yKGQ9MDtkPGNbZl0ubGVuZ3RoO2QrKylidChjW2ZdW2RdLGNbZl1bZF0scyl9KG89dGhpcy5fcmVjdCkuY29weShyKSx0aGlzLmNlbnRlcj1bby54K28ud2lkdGgvMixvLnkrby5oZWlnaHQvMl19LGNsb25lU2hhbGxvdzpmdW5jdGlvbih0KXtudWxsPT10JiYodD10aGlzLm5hbWUpO3ZhciBlPW5ldyBiZyh0LHRoaXMuZ2VvbWV0cmllcyx0aGlzLmNlbnRlcik7cmV0dXJuIGUuX3JlY3Q9dGhpcy5fcmVjdCxlLnRyYW5zZm9ybVRvPW51bGwsZX19O2Z1bmN0aW9uIE1nKHQpe3JldHVybiBmdW5jdGlvbih0KXtpZighdC5VVEY4RW5jb2RpbmcpcmV0dXJuO3ZhciBlPXQuVVRGOFNjYWxlO251bGw9PWUmJihlPTEwMjQpO2Zvcih2YXIgaT10LmZlYXR1cmVzLG49MDtuPGkubGVuZ3RoO24rKylmb3IodmFyIG89aVtuXS5nZW9tZXRyeSxhPW8uY29vcmRpbmF0ZXMscj1vLmVuY29kZU9mZnNldHMscz0wO3M8YS5sZW5ndGg7cysrKXt2YXIgbD1hW3NdO2lmKCJQb2x5Z29uIj09PW8udHlwZSlhW3NdPVNnKGwscltzXSxlKTtlbHNlIGlmKCJNdWx0aVBvbHlnb24iPT09by50eXBlKWZvcih2YXIgdT0wO3U8bC5sZW5ndGg7dSsrKXt2YXIgaD1sW3VdO2xbdV09U2coaCxyW3NdW3VdLGUpfX10LlVURjhFbmNvZGluZz0hMX0odCksTihNKHQuZmVhdHVyZXMsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2VvbWV0cnkmJnQucHJvcGVydGllcyYmMDx0Lmdlb21ldHJ5LmNvb3JkaW5hdGVzLmxlbmd0aH0pLGZ1bmN0aW9uKHQpe3ZhciBlPXQucHJvcGVydGllcyxpPXQuZ2VvbWV0cnksbj1pLmNvb3JkaW5hdGVzLG89W107IlBvbHlnb24iPT09aS50eXBlJiZvLnB1c2goe3R5cGU6InBvbHlnb24iLGV4dGVyaW9yOm5bMF0saW50ZXJpb3JzOm4uc2xpY2UoMSl9KSwiTXVsdGlQb2x5Z29uIj09PWkudHlwZSYmRShuLGZ1bmN0aW9uKHQpe3RbMF0mJm8ucHVzaCh7dHlwZToicG9seWdvbiIsZXh0ZXJpb3I6dFswXSxpbnRlcmlvcnM6dC5zbGljZSgxKX0pfSk7dmFyIGE9bmV3IGJnKGUubmFtZSxvLGUuY3ApO3JldHVybiBhLnByb3BlcnRpZXM9ZSxhfSl9dmFyIElnPVpvKCk7ZnVuY3Rpb24gVGcodCl7cmV0dXJuImNhdGVnb3J5Ij09PXQudHlwZT9mdW5jdGlvbih0KXt2YXIgZT10LmdldExhYmVsTW9kZWwoKSxpPURnKHQsZSk7cmV0dXJuIWUuZ2V0KCJzaG93Iil8fHQuc2NhbGUuaXNCbGFuaygpP3tsYWJlbHM6W10sbGFiZWxDYXRlZ29yeUludGVydmFsOmkubGFiZWxDYXRlZ29yeUludGVydmFsfTppfSh0KTpmdW5jdGlvbihpKXt2YXIgdD1pLnNjYWxlLmdldFRpY2tzKCksbj1uZyhpKTtyZXR1cm57bGFiZWxzOk4odCxmdW5jdGlvbih0LGUpe3JldHVybntmb3JtYXR0ZWRMYWJlbDpuKHQsZSkscmF3TGFiZWw6aS5zY2FsZS5nZXRMYWJlbCh0KSx0aWNrVmFsdWU6dH19KX19KHQpfWZ1bmN0aW9uIEFnKHQsZSl7cmV0dXJuImNhdGVnb3J5Ij09PXQudHlwZT9mdW5jdGlvbih0LGUpe3ZhciBpLG4sbz1DZyh0LCJ0aWNrcyIpLGE9YWcoZSkscj1MZyhvLGEpO2lmKHIpcmV0dXJuIHI7ZS5nZXQoInNob3ciKSYmIXQuc2NhbGUuaXNCbGFuaygpfHwoaT1bXSk7aWYoTyhhKSlpPU5nKHQsYSwhMCk7ZWxzZSBpZigiYXV0byI9PT1hKXt2YXIgcz1EZyh0LHQuZ2V0TGFiZWxNb2RlbCgpKTtuPXMubGFiZWxDYXRlZ29yeUludGVydmFsLGk9TihzLmxhYmVscyxmdW5jdGlvbih0KXtyZXR1cm4gdC50aWNrVmFsdWV9KX1lbHNlIGk9UGcodCxuPWEsITApO3JldHVybiBrZyhvLGEse3RpY2tzOmksdGlja0NhdGVnb3J5SW50ZXJ2YWw6bn0pfSh0LGUpOnt0aWNrczp0LnNjYWxlLmdldFRpY2tzKCl9fWZ1bmN0aW9uIERnKHQsZSl7dmFyIGksbj1DZyh0LCJsYWJlbHMiKSxvPWFnKGUpLGE9TGcobixvKTtyZXR1cm4gYXx8a2cobixvLHtsYWJlbHM6TyhvKT9OZyh0LG8pOlBnKHQsaT0iYXV0byI9PT1vP2Z1bmN0aW9uKHQpe3ZhciBlPUlnKHQpLmF1dG9JbnRlcnZhbDtyZXR1cm4gbnVsbCE9ZT9lOklnKHQpLmF1dG9JbnRlcnZhbD10LmNhbGN1bGF0ZUNhdGVnb3J5SW50ZXJ2YWwoKX0odCk6byksbGFiZWxDYXRlZ29yeUludGVydmFsOml9KX1mdW5jdGlvbiBDZyh0LGUpe3JldHVybiBJZyh0KVtlXXx8KElnKHQpW2VdPVtdKX1mdW5jdGlvbiBMZyh0LGUpe2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0ua2V5PT09ZSlyZXR1cm4gdFtpXS52YWx1ZX1mdW5jdGlvbiBrZyh0LGUsaSl7cmV0dXJuIHQucHVzaCh7a2V5OmUsdmFsdWU6aX0pLGl9ZnVuY3Rpb24gUGcodCxlLGkpe3ZhciBuPW5nKHQpLG89dC5zY2FsZSxhPW8uZ2V0RXh0ZW50KCkscj10LmdldExhYmVsTW9kZWwoKSxzPVtdLGw9TWF0aC5tYXgoKGV8fDApKzEsMSksdT1hWzBdLGg9by5jb3VudCgpOzAhPT11JiYxPGwmJjI8aC9sJiYodT1NYXRoLnJvdW5kKE1hdGguY2VpbCh1L2wpKmwpKTt2YXIgYz1yZyh0KSxkPXIuZ2V0KCJzaG93TWluTGFiZWwiKXx8YyxmPXIuZ2V0KCJzaG93TWF4TGFiZWwiKXx8YztkJiZ1IT09YVswXSYmZyhhWzBdKTtmb3IodmFyIHA9dTtwPD1hWzFdO3ArPWwpZyhwKTtmdW5jdGlvbiBnKHQpe3MucHVzaChpP3Q6e2Zvcm1hdHRlZExhYmVsOm4odCkscmF3TGFiZWw6by5nZXRMYWJlbCh0KSx0aWNrVmFsdWU6dH0pfXJldHVybiBmJiZwLWwhPT1hWzFdJiZnKGFbMV0pLHN9ZnVuY3Rpb24gTmcodCxpLG4pe3ZhciBvPXQuc2NhbGUsYT1uZyh0KSxyPVtdO3JldHVybiBFKG8uZ2V0VGlja3MoKSxmdW5jdGlvbih0KXt2YXIgZT1vLmdldExhYmVsKHQpO2kodCxlKSYmci5wdXNoKG4/dDp7Zm9ybWF0dGVkTGFiZWw6YSh0KSxyYXdMYWJlbDplLHRpY2tWYWx1ZTp0fSl9KSxyfXZhciBPZz1bMCwxXSxFZz1mdW5jdGlvbih0LGUsaSl7dGhpcy5kaW09dCx0aGlzLnNjYWxlPWUsdGhpcy5fZXh0ZW50PWl8fFswLDBdLHRoaXMuaW52ZXJzZT0hMSx0aGlzLm9uQmFuZD0hMX07ZnVuY3Rpb24gemcodCxlKXt2YXIgaT0odFsxXS10WzBdKS9lLzI7dFswXSs9aSx0WzFdLT1pfUVnLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RWcsY29udGFpbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9leHRlbnQsaT1NYXRoLm1pbihlWzBdLGVbMV0pLG49TWF0aC5tYXgoZVswXSxlWzFdKTtyZXR1cm4gaTw9dCYmdDw9bn0sY29udGFpbkRhdGE6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2NhbGUuY29udGFpbih0KX0sZ2V0RXh0ZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V4dGVudC5zbGljZSgpfSxnZXRQaXhlbFByZWNpc2lvbjpmdW5jdGlvbih0KXtyZXR1cm4gUmwodHx8dGhpcy5zY2FsZS5nZXRFeHRlbnQoKSx0aGlzLl9leHRlbnQpfSxzZXRFeHRlbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9leHRlbnQ7aVswXT10LGlbMV09ZX0sZGF0YVRvQ29vcmQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9leHRlbnQsbj10aGlzLnNjYWxlO3JldHVybiB0PW4ubm9ybWFsaXplKHQpLHRoaXMub25CYW5kJiYib3JkaW5hbCI9PT1uLnR5cGUmJnpnKGk9aS5zbGljZSgpLG4uY291bnQoKSksa2wodCxPZyxpLGUpfSxjb29yZFRvRGF0YTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2V4dGVudCxuPXRoaXMuc2NhbGU7dGhpcy5vbkJhbmQmJiJvcmRpbmFsIj09PW4udHlwZSYmemcoaT1pLnNsaWNlKCksbi5jb3VudCgpKTt2YXIgbz1rbCh0LGksT2csZSk7cmV0dXJuIHRoaXMuc2NhbGUuc2NhbGUobyl9LHBvaW50VG9EYXRhOmZ1bmN0aW9uKHQsZSl7fSxnZXRUaWNrc0Nvb3JkczpmdW5jdGlvbih0KXt2YXIgZT0odD10fHx7fSkudGlja01vZGVsfHx0aGlzLmdldFRpY2tNb2RlbCgpLGk9TihBZyh0aGlzLGUpLnRpY2tzLGZ1bmN0aW9uKHQpe3JldHVybntjb29yZDp0aGlzLmRhdGFUb0Nvb3JkKHQpLHRpY2tWYWx1ZTp0fX0sdGhpcyk7cmV0dXJuIGZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPWUubGVuZ3RoO2lmKCF0Lm9uQmFuZHx8aXx8IW8pcmV0dXJuO3ZhciBhLHIscz10LmdldEV4dGVudCgpO2lmKDE9PT1vKWVbMF0uY29vcmQ9c1swXSxhPWVbMV09e2Nvb3JkOnNbMF19O2Vsc2V7dmFyIGw9ZVtvLTFdLnRpY2tWYWx1ZS1lWzBdLnRpY2tWYWx1ZSx1PShlW28tMV0uY29vcmQtZVswXS5jb29yZCkvbDtFKGUsZnVuY3Rpb24odCl7dC5jb29yZC09dS8yfSk7dmFyIGg9dC5zY2FsZS5nZXRFeHRlbnQoKTtyPTEraFsxXS1lW28tMV0udGlja1ZhbHVlLGE9e2Nvb3JkOmVbby0xXS5jb29yZCt1KnJ9LGUucHVzaChhKX12YXIgYz1zWzBdPnNbMV07ZChlWzBdLmNvb3JkLHNbMF0pJiYobj9lWzBdLmNvb3JkPXNbMF06ZS5zaGlmdCgpKTtuJiZkKHNbMF0sZVswXS5jb29yZCkmJmUudW5zaGlmdCh7Y29vcmQ6c1swXX0pO2Qoc1sxXSxhLmNvb3JkKSYmKG4/YS5jb29yZD1zWzFdOmUucG9wKCkpO24mJmQoYS5jb29yZCxzWzFdKSYmZS5wdXNoKHtjb29yZDpzWzFdfSk7ZnVuY3Rpb24gZCh0LGUpe3JldHVybiB0PU5sKHQpLGU9TmwoZSksYz9lPHQ6dDxlfX0odGhpcyxpLGUuZ2V0KCJhbGlnbldpdGhMYWJlbCIpLHQuY2xhbXApLGl9LGdldE1pbm9yVGlja3NDb29yZHM6ZnVuY3Rpb24oKXtpZigib3JkaW5hbCI9PT10aGlzLnNjYWxlLnR5cGUpcmV0dXJuW107dmFyIHQ9dGhpcy5tb2RlbC5nZXRNb2RlbCgibWlub3JUaWNrIikuZ2V0KCJzcGxpdE51bWJlciIpO3JldHVybiAwPHQmJnQ8MTAwfHwodD01KSxOKHRoaXMuc2NhbGUuZ2V0TWlub3JUaWNrcyh0KSxmdW5jdGlvbih0KXtyZXR1cm4gTih0LGZ1bmN0aW9uKHQpe3JldHVybntjb29yZDp0aGlzLmRhdGFUb0Nvb3JkKHQpLHRpY2tWYWx1ZTp0fX0sdGhpcyl9LHRoaXMpfSxnZXRWaWV3TGFiZWxzOmZ1bmN0aW9uKCl7cmV0dXJuIFRnKHRoaXMpLmxhYmVsc30sZ2V0TGFiZWxNb2RlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmdldE1vZGVsKCJheGlzTGFiZWwiKX0sZ2V0VGlja01vZGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW9kZWwuZ2V0TW9kZWwoImF4aXNUaWNrIil9LGdldEJhbmRXaWR0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2V4dGVudCxlPXRoaXMuc2NhbGUuZ2V0RXh0ZW50KCksaT1lWzFdLWVbMF0rKHRoaXMub25CYW5kPzE6MCk7MD09PWkmJihpPTEpO3ZhciBuPU1hdGguYWJzKHRbMV0tdFswXSk7cmV0dXJuIE1hdGguYWJzKG4pL2l9LGlzSG9yaXpvbnRhbDpudWxsLGdldFJvdGF0ZTpudWxsLGNhbGN1bGF0ZUNhdGVnb3J5SW50ZXJ2YWw6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRMYWJlbE1vZGVsKCk7cmV0dXJue2F4aXNSb3RhdGU6dC5nZXRSb3RhdGU/dC5nZXRSb3RhdGUoKTp0LmlzSG9yaXpvbnRhbCYmIXQuaXNIb3Jpem9udGFsKCk/OTA6MCxsYWJlbFJvdGF0ZTplLmdldCgicm90YXRlIil8fDAsZm9udDplLmdldEZvbnQoKX19KHQpLGk9bmcodCksbj0oZS5heGlzUm90YXRlLWUubGFiZWxSb3RhdGUpLzE4MCpNYXRoLlBJLG89dC5zY2FsZSxhPW8uZ2V0RXh0ZW50KCkscj1vLmNvdW50KCk7aWYoYVsxXS1hWzBdPDEpcmV0dXJuIDA7dmFyIHM9MTs0MDxyJiYocz1NYXRoLm1heCgxLE1hdGguZmxvb3Ioci80MCkpKTtmb3IodmFyIGw9YVswXSx1PXQuZGF0YVRvQ29vcmQobCsxKS10LmRhdGFUb0Nvb3JkKGwpLGg9TWF0aC5hYnModSpNYXRoLmNvcyhuKSksYz1NYXRoLmFicyh1Kk1hdGguc2luKG4pKSxkPTAsZj0wO2w8PWFbMV07bCs9cyl7dmFyIHAsZyxtPWNuKGkobCksZS5mb250LCJjZW50ZXIiLCJ0b3AiKTtwPTEuMyptLndpZHRoLGc9MS4zKm0uaGVpZ2h0LGQ9TWF0aC5tYXgoZCxwLDcpLGY9TWF0aC5tYXgoZixnLDcpfXZhciB2PWQvaCx5PWYvYztpc05hTih2KSYmKHY9MS8wKSxpc05hTih5KSYmKHk9MS8wKTt2YXIgeD1NYXRoLm1heCgwLE1hdGguZmxvb3IoTWF0aC5taW4odix5KSkpLF89SWcodC5tb2RlbCksdz10LmdldEV4dGVudCgpLGI9Xy5sYXN0QXV0b0ludGVydmFsLFM9Xy5sYXN0VGlja0NvdW50O3JldHVybiBudWxsIT1iJiZudWxsIT1TJiZNYXRoLmFicyhiLXgpPD0xJiZNYXRoLmFicyhTLXIpPD0xJiZ4PGImJl8uYXhpc0V4dGVuZDA9PT13WzBdJiZfLmF4aXNFeHRlbmQxPT09d1sxXT94PWI6KF8ubGFzdFRpY2tDb3VudD1yLF8ubGFzdEF1dG9JbnRlcnZhbD14LF8uYXhpc0V4dGVuZDA9d1swXSxfLmF4aXNFeHRlbmQxPXdbMV0pLHh9KHRoaXMpfX07dmFyIFJnPU1nLEJnPXt9O0UoWyJtYXAiLCJlYWNoIiwiZmlsdGVyIiwiaW5kZXhPZiIsImluaGVyaXRzIiwicmVkdWNlIiwiZmlsdGVyIiwiYmluZCIsImN1cnJ5IiwiaXNBcnJheSIsImlzU3RyaW5nIiwiaXNPYmplY3QiLCJpc0Z1bmN0aW9uIiwiZXh0ZW5kIiwiZGVmYXVsdHMiLCJjbG9uZSIsIm1lcmdlIl0sZnVuY3Rpb24odCl7QmdbdF09aXRbdF19KTt2YXIgVmc9e307ZnVuY3Rpb24gR2codCxlKXt2YXIgaT10Lm1hcERpbWVuc2lvbigiZGVmYXVsdGVkTGFiZWwiLCEwKSxuPWkubGVuZ3RoO2lmKDE9PT1uKXJldHVybiBCaCh0LGUsaVswXSk7aWYobil7Zm9yKHZhciBvPVtdLGE9MDthPGkubGVuZ3RoO2ErKyl7dmFyIHI9QmgodCxlLGlbYV0pO28ucHVzaChyKX1yZXR1cm4gby5qb2luKCIgIil9fWZ1bmN0aW9uIEZnKHQsZSxpKXtJaS5jYWxsKHRoaXMpLHRoaXMudXBkYXRlRGF0YSh0LGUsaSl9RShbImV4dGVuZFNoYXBlIiwiZXh0ZW5kUGF0aCIsIm1ha2VQYXRoIiwibWFrZUltYWdlIiwibWVyZ2VQYXRoIiwicmVzaXplUGF0aCIsImNyZWF0ZUljb24iLCJzZXRIb3ZlclN0eWxlIiwic2V0TGFiZWxTdHlsZSIsInNldFRleHRTdHlsZSIsInNldFRleHQiLCJnZXRGb250IiwidXBkYXRlUHJvcHMiLCJpbml0UHJvcHMiLCJnZXRUcmFuc2Zvcm0iLCJjbGlwUG9pbnRzQnlSZWN0IiwiY2xpcFJlY3RCeVJlY3QiLCJyZWdpc3RlclNoYXBlIiwiZ2V0U2hhcGVDbGFzcyIsIkdyb3VwIiwiSW1hZ2UiLCJUZXh0IiwiQ2lyY2xlIiwiU2VjdG9yIiwiUmluZyIsIlBvbHlnb24iLCJQb2x5bGluZSIsIlJlY3QiLCJMaW5lIiwiQmV6aWVyQ3VydmUiLCJBcmMiLCJJbmNyZW1lbnRhbERpc3BsYXlhYmxlIiwiQ29tcG91bmRQYXRoIiwiTGluZWFyR3JhZGllbnQiLCJSYWRpYWxHcmFkaWVudCIsIkJvdW5kaW5nUmVjdCJdLGZ1bmN0aW9uKHQpe1ZnW3RdPXlsW3RdfSksaWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMubGluZSIsZGVwZW5kZW5jaWVzOlsiZ3JpZCIsInBvbGFyIl0sZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gaHAodGhpcy5nZXRTb3VyY2UoKSx0aGlzLHt1c2VFbmNvZGVEZWZhdWx0ZXI6ITB9KX0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06ImNhcnRlc2lhbjJkIixsZWdlbmRIb3Zlckxpbms6ITAsaG92ZXJBbmltYXRpb246ITAsY2xpcDohMCxsYWJlbDp7cG9zaXRpb246InRvcCJ9LGxpbmVTdHlsZTp7d2lkdGg6Mix0eXBlOiJzb2xpZCJ9LHN0ZXA6ITEsc21vb3RoOiExLHNtb290aE1vbm90b25lOm51bGwsc3ltYm9sOiJlbXB0eUNpcmNsZSIsc3ltYm9sU2l6ZTo0LHN5bWJvbFJvdGF0ZTpudWxsLHNob3dTeW1ib2w6ITAsc2hvd0FsbFN5bWJvbDoiYXV0byIsY29ubmVjdE51bGxzOiExLHNhbXBsaW5nOiJub25lIixhbmltYXRpb25FYXNpbmc6ImxpbmVhciIscHJvZ3Jlc3NpdmU6MCxob3ZlckxheWVyVGhyZXNob2xkOjEvMH19KTt2YXIgV2c9RmcucHJvdG90eXBlLEhnPUZnLmdldFN5bWJvbFNpemU9ZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEl0ZW1WaXN1YWwoZSwic3ltYm9sU2l6ZSIpO3JldHVybiBpIGluc3RhbmNlb2YgQXJyYXk/aS5zbGljZSgpOlsraSwraV19O2Z1bmN0aW9uIFpnKHQpe3JldHVyblt0WzBdLzIsdFsxXS8yXX1mdW5jdGlvbiBVZyh0LGUpe3RoaXMucGFyZW50LmRyaWZ0KHQsZSl9V2cuX2NyZWF0ZVN5bWJvbD1mdW5jdGlvbih0LGUsaSxuLG8pe3RoaXMucmVtb3ZlQWxsKCk7dmFyIGE9bWcodCwtMSwtMSwyLDIsZS5nZXRJdGVtVmlzdWFsKGksImNvbG9yIiksbyk7YS5hdHRyKHt6MjoxMDAsY3VsbGluZzohMCxzY2FsZTpaZyhuKX0pLGEuZHJpZnQ9VWcsdGhpcy5fc3ltYm9sVHlwZT10LHRoaXMuYWRkKGEpfSxXZy5zdG9wU3ltYm9sQW5pbWF0aW9uPWZ1bmN0aW9uKHQpe3RoaXMuY2hpbGRBdCgwKS5zdG9wQW5pbWF0aW9uKHQpfSxXZy5nZXRTeW1ib2xQYXRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2hpbGRBdCgwKX0sV2cuZ2V0U2NhbGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGlsZEF0KDApLnNjYWxlfSxXZy5oaWdobGlnaHQ9ZnVuY3Rpb24oKXt0aGlzLmNoaWxkQXQoMCkudHJpZ2dlcigiZW1waGFzaXMiKX0sV2cuZG93bnBsYXk9ZnVuY3Rpb24oKXt0aGlzLmNoaWxkQXQoMCkudHJpZ2dlcigibm9ybWFsIil9LFdnLnNldFo9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmNoaWxkQXQoMCk7aS56bGV2ZWw9dCxpLno9ZX0sV2cuc2V0RHJhZ2dhYmxlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hpbGRBdCgwKTtlLmRyYWdnYWJsZT10LGUuY3Vyc29yPXQ/Im1vdmUiOmUuY3Vyc29yfSxXZy51cGRhdGVEYXRhPWZ1bmN0aW9uKHQsZSxpKXt0aGlzLnNpbGVudD0hMTt2YXIgbj10LmdldEl0ZW1WaXN1YWwoZSwic3ltYm9sIil8fCJjaXJjbGUiLG89dC5ob3N0TW9kZWwsYT1IZyh0LGUpLHI9biE9PXRoaXMuX3N5bWJvbFR5cGU7aWYocil7dmFyIHM9dC5nZXRJdGVtVmlzdWFsKGUsInN5bWJvbEtlZXBBc3BlY3QiKTt0aGlzLl9jcmVhdGVTeW1ib2wobix0LGUsYSxzKX1lbHNleyhsPXRoaXMuY2hpbGRBdCgwKSkuc2lsZW50PSExLHNsKGwse3NjYWxlOlpnKGEpfSxvLGUpfWlmKHRoaXMuX3VwZGF0ZUNvbW1vbih0LGUsYSxpKSxyKXt2YXIgbD10aGlzLmNoaWxkQXQoMCksdT1pJiZpLmZhZGVJbixoPXtzY2FsZTpsLnNjYWxlLnNsaWNlKCl9O3UmJihoLnN0eWxlPXtvcGFjaXR5Omwuc3R5bGUub3BhY2l0eX0pLGwuc2NhbGU9WzAsMF0sdSYmKGwuc3R5bGUub3BhY2l0eT0wKSxsbChsLGgsbyxlKX10aGlzLl9zZXJpZXNNb2RlbD1vfTt2YXIgWGc9WyJpdGVtU3R5bGUiXSxZZz1bImVtcGhhc2lzIiwiaXRlbVN0eWxlIl0samc9WyJsYWJlbCJdLHFnPVsiZW1waGFzaXMiLCJsYWJlbCJdO2Z1bmN0aW9uIEtnKHQsZSl7aWYoIXRoaXMuaW5jcmVtZW50YWwmJiF0aGlzLnVzZUhvdmVyTGF5ZXIpaWYoImVtcGhhc2lzIj09PWUpe3ZhciBpPXRoaXMuX19zeW1ib2xPcmlnaW5hbFNjYWxlLG49aVsxXS9pWzBdLG89e3NjYWxlOltNYXRoLm1heCgxLjEqaVswXSxpWzBdKzMpLE1hdGgubWF4KDEuMSppWzFdLGlbMV0rMypuKV19O3RoaXMuYW5pbWF0ZVRvKG8sNDAwLCJlbGFzdGljT3V0Iil9ZWxzZSJub3JtYWwiPT09ZSYmdGhpcy5hbmltYXRlVG8oe3NjYWxlOnRoaXMuX19zeW1ib2xPcmlnaW5hbFNjYWxlfSw0MDAsImVsYXN0aWNPdXQiKX1mdW5jdGlvbiAkZyh0KXt0aGlzLmdyb3VwPW5ldyBJaSx0aGlzLl9zeW1ib2xDdG9yPXR8fEZnfVdnLl91cGRhdGVDb21tb249ZnVuY3Rpb24oaSx0LGUsbil7dmFyIG89dGhpcy5jaGlsZEF0KDApLGE9aS5ob3N0TW9kZWwscj1pLmdldEl0ZW1WaXN1YWwodCwiY29sb3IiKTsiaW1hZ2UiIT09by50eXBlP28udXNlU3R5bGUoe3N0cm9rZU5vU2NhbGU6ITB9KTpvLnNldFN0eWxlKHtvcGFjaXR5Om51bGwsc2hhZG93Qmx1cjpudWxsLHNoYWRvd09mZnNldFg6bnVsbCxzaGFkb3dPZmZzZXRZOm51bGwsc2hhZG93Q29sb3I6bnVsbH0pO3ZhciBzPW4mJm4uaXRlbVN0eWxlLGw9biYmbi5ob3Zlckl0ZW1TdHlsZSx1PW4mJm4uc3ltYm9sUm90YXRlLGg9biYmbi5zeW1ib2xPZmZzZXQsYz1uJiZuLmxhYmVsTW9kZWwsZD1uJiZuLmhvdmVyTGFiZWxNb2RlbCxmPW4mJm4uaG92ZXJBbmltYXRpb24scD1uJiZuLmN1cnNvclN0eWxlO2lmKCFufHxpLmhhc0l0ZW1PcHRpb24pe3ZhciBnPW4mJm4uaXRlbU1vZGVsP24uaXRlbU1vZGVsOmkuZ2V0SXRlbU1vZGVsKHQpO3M9Zy5nZXRNb2RlbChYZykuZ2V0SXRlbVN0eWxlKFsiY29sb3IiXSksbD1nLmdldE1vZGVsKFlnKS5nZXRJdGVtU3R5bGUoKSx1PWcuZ2V0U2hhbGxvdygic3ltYm9sUm90YXRlIiksaD1nLmdldFNoYWxsb3coInN5bWJvbE9mZnNldCIpLGM9Zy5nZXRNb2RlbChqZyksZD1nLmdldE1vZGVsKHFnKSxmPWcuZ2V0U2hhbGxvdygiaG92ZXJBbmltYXRpb24iKSxwPWcuZ2V0U2hhbGxvdygiY3Vyc29yIil9ZWxzZSBsPUwoe30sbCk7dmFyIG09by5zdHlsZTtvLmF0dHIoInJvdGF0aW9uIiwodXx8MCkqTWF0aC5QSS8xODB8fDApLGgmJm8uYXR0cigicG9zaXRpb24iLFtQbChoWzBdLGVbMF0pLFBsKGhbMV0sZVsxXSldKSxwJiZvLmF0dHIoImN1cnNvciIscCksby5zZXRDb2xvcihyLG4mJm4uc3ltYm9sSW5uZXJDb2xvciksby5zZXRTdHlsZShzKTt2YXIgdj1pLmdldEl0ZW1WaXN1YWwodCwib3BhY2l0eSIpO251bGwhPXYmJihtLm9wYWNpdHk9dik7dmFyIHk9aS5nZXRJdGVtVmlzdWFsKHQsImxpZnRaIikseD1vLl9fejJPcmlnaW47bnVsbCE9eT9udWxsPT14JiYoby5fX3oyT3JpZ2luPW8uejIsby56Mis9eSk6bnVsbCE9eCYmKG8uejI9eCxvLl9fejJPcmlnaW49bnVsbCk7dmFyIF89biYmbi51c2VOYW1lTGFiZWw7JHMobSxsLGMsZCx7bGFiZWxGZXRjaGVyOmEsbGFiZWxEYXRhSW5kZXg6dCxkZWZhdWx0VGV4dDpmdW5jdGlvbih0LGUpe3JldHVybiBfP2kuZ2V0TmFtZSh0KTpHZyhpLHQpfSxpc1JlY3RUZXh0OiEwLGF1dG9Db2xvcjpyfSksby5fX3N5bWJvbE9yaWdpbmFsU2NhbGU9WmcoZSksby5ob3ZlclN0eWxlPWwsby5oaWdoRG93bk9uVXBkYXRlPWYmJmEuaXNBbmltYXRpb25FbmFibGVkKCk/S2c6bnVsbCxZcyhvKX0sV2cuZmFkZU91dD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuY2hpbGRBdCgwKTt0aGlzLnNpbGVudD1pLnNpbGVudD0hMCxlJiZlLmtlZXBMYWJlbHx8KGkuc3R5bGUudGV4dD1udWxsKSxzbChpLHtzdHlsZTp7b3BhY2l0eTowfSxzY2FsZTpbMCwwXX0sdGhpcy5fc2VyaWVzTW9kZWwsdGhpcy5kYXRhSW5kZXgsdCl9LHcoRmcsSWkpO3ZhciBKZz0kZy5wcm90b3R5cGU7ZnVuY3Rpb24gUWcodCxlLGksbil7cmV0dXJuIGUmJiFpc05hTihlWzBdKSYmIWlzTmFOKGVbMV0pJiYhKG4uaXNJZ25vcmUmJm4uaXNJZ25vcmUoaSkpJiYhKG4uY2xpcFNoYXBlJiYhbi5jbGlwU2hhcGUuY29udGFpbihlWzBdLGVbMV0pKSYmIm5vbmUiIT09dC5nZXRJdGVtVmlzdWFsKGksInN5bWJvbCIpfWZ1bmN0aW9uIHRtKHQpe3JldHVybiBudWxsPT10fHxSKHQpfHwodD17aXNJZ25vcmU6dH0pLHR8fHt9fWZ1bmN0aW9uIGVtKHQpe3ZhciBlPXQuaG9zdE1vZGVsO3JldHVybntpdGVtU3R5bGU6ZS5nZXRNb2RlbCgiaXRlbVN0eWxlIikuZ2V0SXRlbVN0eWxlKFsiY29sb3IiXSksaG92ZXJJdGVtU3R5bGU6ZS5nZXRNb2RlbCgiZW1waGFzaXMuaXRlbVN0eWxlIikuZ2V0SXRlbVN0eWxlKCksc3ltYm9sUm90YXRlOmUuZ2V0KCJzeW1ib2xSb3RhdGUiKSxzeW1ib2xPZmZzZXQ6ZS5nZXQoInN5bWJvbE9mZnNldCIpLGhvdmVyQW5pbWF0aW9uOmUuZ2V0KCJob3ZlckFuaW1hdGlvbiIpLGxhYmVsTW9kZWw6ZS5nZXRNb2RlbCgibGFiZWwiKSxob3ZlckxhYmVsTW9kZWw6ZS5nZXRNb2RlbCgiZW1waGFzaXMubGFiZWwiKSxjdXJzb3JTdHlsZTplLmdldCgiY3Vyc29yIil9fWZ1bmN0aW9uIGltKHQsZSxpKXt2YXIgbixvPXQuZ2V0QmFzZUF4aXMoKSxhPXQuZ2V0T3RoZXJBeGlzKG8pLHI9ZnVuY3Rpb24odCxlKXt2YXIgaT0wLG49dC5zY2FsZS5nZXRFeHRlbnQoKTsic3RhcnQiPT09ZT9pPW5bMF06ImVuZCI9PT1lP2k9blsxXTowPG5bMF0/aT1uWzBdOm5bMV08MCYmKGk9blsxXSk7cmV0dXJuIGl9KGEsaSkscz1vLmRpbSxsPWEuZGltLHU9ZS5tYXBEaW1lbnNpb24obCksaD1lLm1hcERpbWVuc2lvbihzKSxjPSJ4Ij09PWx8fCJyYWRpdXMiPT09bD8xOjAsZD1OKHQuZGltZW5zaW9ucyxmdW5jdGlvbih0KXtyZXR1cm4gZS5tYXBEaW1lbnNpb24odCl9KSxmPWUuZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja1Jlc3VsdERpbWVuc2lvbiIpO3JldHVybihufD1scChlLGRbMF0pKSYmKGRbMF09ZiksKG58PWxwKGUsZFsxXSkpJiYoZFsxXT1mKSx7ZGF0YURpbXNGb3JQb2ludDpkLHZhbHVlU3RhcnQ6cix2YWx1ZUF4aXNEaW06bCxiYXNlQXhpc0RpbTpzLHN0YWNrZWQ6ISFuLHZhbHVlRGltOnUsYmFzZURpbTpoLGJhc2VEYXRhT2Zmc2V0OmMsc3RhY2tlZE92ZXJEaW1lbnNpb246ZS5nZXRDYWxjdWxhdGlvbkluZm8oInN0YWNrZWRPdmVyRGltZW5zaW9uIil9fWZ1bmN0aW9uIG5tKHQsZSxpLG4pe3ZhciBvPU5hTjt0LnN0YWNrZWQmJihvPWkuZ2V0KGkuZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja2VkT3ZlckRpbWVuc2lvbiIpLG4pKSxpc05hTihvKSYmKG89dC52YWx1ZVN0YXJ0KTt2YXIgYT10LmJhc2VEYXRhT2Zmc2V0LHI9W107cmV0dXJuIHJbYV09aS5nZXQodC5iYXNlRGltLG4pLHJbMS1hXT1vLGUuZGF0YVRvUG9pbnQocil9SmcudXBkYXRlRGF0YT1mdW5jdGlvbihvLGEpe2E9dG0oYSk7dmFyIHI9dGhpcy5ncm91cCxzPW8uaG9zdE1vZGVsLGw9dGhpcy5fZGF0YSx1PXRoaXMuX3N5bWJvbEN0b3IsaD1lbShvKTtsfHxyLnJlbW92ZUFsbCgpLG8uZGlmZihsKS5hZGQoZnVuY3Rpb24odCl7dmFyIGU9by5nZXRJdGVtTGF5b3V0KHQpO2lmKFFnKG8sZSx0LGEpKXt2YXIgaT1uZXcgdShvLHQsaCk7aS5hdHRyKCJwb3NpdGlvbiIsZSksby5zZXRJdGVtR3JhcGhpY0VsKHQsaSksci5hZGQoaSl9fSkudXBkYXRlKGZ1bmN0aW9uKHQsZSl7dmFyIGk9bC5nZXRJdGVtR3JhcGhpY0VsKGUpLG49by5nZXRJdGVtTGF5b3V0KHQpO1FnKG8sbix0LGEpPyhpPyhpLnVwZGF0ZURhdGEobyx0LGgpLHNsKGkse3Bvc2l0aW9uOm59LHMpKTooaT1uZXcgdShvLHQpKS5hdHRyKCJwb3NpdGlvbiIsbiksci5hZGQoaSksby5zZXRJdGVtR3JhcGhpY0VsKHQsaSkpOnIucmVtb3ZlKGkpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0SXRlbUdyYXBoaWNFbCh0KTtlJiZlLmZhZGVPdXQoZnVuY3Rpb24oKXtyLnJlbW92ZShlKX0pfSkuZXhlY3V0ZSgpLHRoaXMuX2RhdGE9b30sSmcuaXNQZXJzaXN0ZW50PWZ1bmN0aW9uKCl7cmV0dXJuITB9LEpnLnVwZGF0ZUxheW91dD1mdW5jdGlvbigpe3ZhciBuPXRoaXMuX2RhdGE7biYmbi5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0LGUpe3ZhciBpPW4uZ2V0SXRlbUxheW91dChlKTt0LmF0dHIoInBvc2l0aW9uIixpKX0pfSxKZy5pbmNyZW1lbnRhbFByZXBhcmVVcGRhdGU9ZnVuY3Rpb24odCl7dGhpcy5fc2VyaWVzU2NvcGU9ZW0odCksdGhpcy5fZGF0YT1udWxsLHRoaXMuZ3JvdXAucmVtb3ZlQWxsKCl9LEpnLmluY3JlbWVudGFsVXBkYXRlPWZ1bmN0aW9uKHQsZSxpKXtmdW5jdGlvbiBuKHQpe3QuaXNHcm91cHx8KHQuaW5jcmVtZW50YWw9dC51c2VIb3ZlckxheWVyPSEwKX1pPXRtKGkpO2Zvcih2YXIgbz10LnN0YXJ0O288dC5lbmQ7bysrKXt2YXIgYT1lLmdldEl0ZW1MYXlvdXQobyk7aWYoUWcoZSxhLG8saSkpe3ZhciByPW5ldyB0aGlzLl9zeW1ib2xDdG9yKGUsbyx0aGlzLl9zZXJpZXNTY29wZSk7ci50cmF2ZXJzZShuKSxyLmF0dHIoInBvc2l0aW9uIixhKSx0aGlzLmdyb3VwLmFkZChyKSxlLnNldEl0ZW1HcmFwaGljRWwobyxyKX19fSxKZy5yZW1vdmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5ncm91cCxpPXRoaXMuX2RhdGE7aSYmdD9pLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQpe3QuZmFkZU91dChmdW5jdGlvbigpe2UucmVtb3ZlKHQpfSl9KTplLnJlbW92ZUFsbCgpfTt2YXIgb209U3QsYW09TXQscm09dXQsc209YXQsbG09W10sdW09W10saG09W107ZnVuY3Rpb24gY20odCl7cmV0dXJuIGlzTmFOKHRbMF0pfHxpc05hTih0WzFdKX1mdW5jdGlvbiBkbSh0LGUsaSxuLG8sYSxyLHMsbCx1KXtyZXR1cm4ibm9uZSIhPT11JiZ1P2Z1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyxsLHUsaCl7Zm9yKHZhciBjPTAsZD1pLGY9MDtmPG47ZisrKXt2YXIgcD1lW2RdO2lmKG88PWR8fGQ8MClicmVhaztpZihjbShwKSl7aWYoaCl7ZCs9YTtjb250aW51ZX1icmVha31pZihkPT09aSl0WzA8YT8ibW92ZVRvIjoibGluZVRvIl0ocFswXSxwWzFdKTtlbHNlIGlmKDA8bCl7dmFyIGc9ZVtjXSxtPSJ5Ij09PXU/MTowLHY9KHBbbV0tZ1ttXSkqbDtzbSh1bSxnKSx1bVttXT1nW21dK3Ysc20oaG0scCksaG1bbV09cFttXS12LHQuYmV6aWVyQ3VydmVUbyh1bVswXSx1bVsxXSxobVswXSxobVsxXSxwWzBdLHBbMV0pfWVsc2UgdC5saW5lVG8ocFswXSxwWzFdKTtjPWQsZCs9YX1yZXR1cm4gZn0uYXBwbHkodGhpcyxhcmd1bWVudHMpOmZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyxsLHUsaCl7Zm9yKHZhciBjPTAsZD1pLGY9MDtmPG47ZisrKXt2YXIgcD1lW2RdO2lmKG88PWR8fGQ8MClicmVhaztpZihjbShwKSl7aWYoaCl7ZCs9YTtjb250aW51ZX1icmVha31pZihkPT09aSl0WzA8YT8ibW92ZVRvIjoibGluZVRvIl0ocFswXSxwWzFdKSxzbSh1bSxwKTtlbHNlIGlmKDA8bCl7dmFyIGc9ZCthLG09ZVtnXTtpZihoKWZvcig7bSYmY20oZVtnXSk7KW09ZVtnKz1hXTt2YXIgdj0uNSx5PWVbY107aWYoIShtPWVbZ10pfHxjbShtKSlzbShobSxwKTtlbHNle3ZhciB4LF87aWYoY20obSkmJiFoJiYobT1wKSxodChsbSxtLHkpLCJ4Ij09PXV8fCJ5Ij09PXUpe3ZhciB3PSJ4Ij09PXU/MDoxO3g9TWF0aC5hYnMocFt3XS15W3ddKSxfPU1hdGguYWJzKHBbd10tbVt3XSl9ZWxzZSB4PXl0KHAseSksXz15dChwLG0pO3JtKGhtLHAsbG0sLWwqKDEtKHY9Xy8oXyt4KSkpKX1vbSh1bSx1bSxzKSxhbSh1bSx1bSxyKSxvbShobSxobSxzKSxhbShobSxobSxyKSx0LmJlemllckN1cnZlVG8odW1bMF0sdW1bMV0saG1bMF0saG1bMV0scFswXSxwWzFdKSxybSh1bSxwLGxtLGwqdil9ZWxzZSB0LmxpbmVUbyhwWzBdLHBbMV0pO2M9ZCxkKz1hfXJldHVybiBmfS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZm0odCxlKXt2YXIgaT1bMS8wLDEvMF0sbj1bLTEvMCwtMS8wXTtpZihlKWZvcih2YXIgbz0wO288dC5sZW5ndGg7bysrKXt2YXIgYT10W29dO2FbMF08aVswXSYmKGlbMF09YVswXSksYVsxXTxpWzFdJiYoaVsxXT1hWzFdKSxhWzBdPm5bMF0mJihuWzBdPWFbMF0pLGFbMV0+blsxXSYmKG5bMV09YVsxXSl9cmV0dXJue21pbjplP2k6bixtYXg6ZT9uOml9fXZhciBwbT1Tci5leHRlbmQoe3R5cGU6ImVjLXBvbHlsaW5lIixzaGFwZTp7cG9pbnRzOltdLHNtb290aDowLHNtb290aENvbnN0cmFpbnQ6ITAsc21vb3RoTW9ub3RvbmU6bnVsbCxjb25uZWN0TnVsbHM6ITF9LHN0eWxlOntmaWxsOm51bGwsc3Ryb2tlOiIjMDAwIn0sYnJ1c2g6V3IoU3IucHJvdG90eXBlLmJydXNoKSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLnBvaW50cyxuPTAsbz1pLmxlbmd0aCxhPWZtKGksZS5zbW9vdGhDb25zdHJhaW50KTtpZihlLmNvbm5lY3ROdWxscyl7Zm9yKDswPG8mJmNtKGlbby0xXSk7by0tKTtmb3IoO248byYmY20oaVtuXSk7bisrKTt9Zm9yKDtuPG87KW4rPWRtKHQsaSxuLG8sbywxLGEubWluLGEubWF4LGUuc21vb3RoLGUuc21vb3RoTW9ub3RvbmUsZS5jb25uZWN0TnVsbHMpKzF9fSksZ209U3IuZXh0ZW5kKHt0eXBlOiJlYy1wb2x5Z29uIixzaGFwZTp7cG9pbnRzOltdLHN0YWNrZWRPblBvaW50czpbXSxzbW9vdGg6MCxzdGFja2VkT25TbW9vdGg6MCxzbW9vdGhDb25zdHJhaW50OiEwLHNtb290aE1vbm90b25lOm51bGwsY29ubmVjdE51bGxzOiExfSxicnVzaDpXcihTci5wcm90b3R5cGUuYnJ1c2gpLGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUucG9pbnRzLG49ZS5zdGFja2VkT25Qb2ludHMsbz0wLGE9aS5sZW5ndGgscj1lLnNtb290aE1vbm90b25lLHM9Zm0oaSxlLnNtb290aENvbnN0cmFpbnQpLGw9Zm0obixlLnNtb290aENvbnN0cmFpbnQpO2lmKGUuY29ubmVjdE51bGxzKXtmb3IoOzA8YSYmY20oaVthLTFdKTthLS0pO2Zvcig7bzxhJiZjbShpW29dKTtvKyspO31mb3IoO288YTspe3ZhciB1PWRtKHQsaSxvLGEsYSwxLHMubWluLHMubWF4LGUuc21vb3RoLHIsZS5jb25uZWN0TnVsbHMpO2RtKHQsbixvK3UtMSx1LGEsLTEsbC5taW4sbC5tYXgsZS5zdGFja2VkT25TbW9vdGgscixlLmNvbm5lY3ROdWxscyksbys9dSsxLHQuY2xvc2VQYXRoKCl9fX0pO2Z1bmN0aW9uIG1tKHQsZSxpKXt2YXIgbj10LmdldEFyZWEoKSxvPXQuZ2V0QmFzZUF4aXMoKS5pc0hvcml6b250YWwoKSxhPW4ueCxyPW4ueSxzPW4ud2lkdGgsbD1uLmhlaWdodCx1PWkuZ2V0KCJsaW5lU3R5bGUud2lkdGgiKXx8MixoPW5ldyBpcyh7c2hhcGU6e3g6YS09dS8yLHk6ci09dS8yLHdpZHRoOnMrPXUsaGVpZ2h0OmwrPXV9fSk7cmV0dXJuIGUmJihoLnNoYXBlW28/IndpZHRoIjoiaGVpZ2h0Il09MCxsbChoLHtzaGFwZTp7d2lkdGg6cyxoZWlnaHQ6bH19LGkpKSxofWZ1bmN0aW9uIHZtKHQsZSxpKXt2YXIgbj10LmdldEFyZWEoKSxvPW5ldyBVcih7c2hhcGU6e2N4Ok5sKHQuY3gsMSksY3k6TmwodC5jeSwxKSxyMDpObChuLnIwLDEpLHI6Tmwobi5yLDEpLHN0YXJ0QW5nbGU6bi5zdGFydEFuZ2xlLGVuZEFuZ2xlOm4uZW5kQW5nbGUsY2xvY2t3aXNlOm4uY2xvY2t3aXNlfX0pO3JldHVybiBlJiYoby5zaGFwZS5lbmRBbmdsZT1uLnN0YXJ0QW5nbGUsbGwobyx7c2hhcGU6e2VuZEFuZ2xlOm4uZW5kQW5nbGV9fSxpKSksb31mdW5jdGlvbiB5bSh0LGUsaSl7cmV0dXJuIHQ/InBvbGFyIj09PXQudHlwZT92bSh0LGUsaSk6ImNhcnRlc2lhbjJkIj09PXQudHlwZT9tbSh0LGUsaSk6bnVsbDpudWxsfWZ1bmN0aW9uIHhtKHQsZSl7aWYodC5sZW5ndGg9PT1lLmxlbmd0aCl7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciBuPXRbaV0sbz1lW2ldO2lmKG5bMF0hPT1vWzBdfHxuWzFdIT09b1sxXSlyZXR1cm59cmV0dXJuITB9fWZ1bmN0aW9uIF9tKHQpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdD90OnQ/LjU6MH1mdW5jdGlvbiB3bSh0LGUsaSl7Zm9yKHZhciBuPWUuZ2V0QmFzZUF4aXMoKSxvPSJ4Ij09PW4uZGltfHwicmFkaXVzIj09PW4uZGltPzA6MSxhPVtdLHI9MDtyPHQubGVuZ3RoLTE7cisrKXt2YXIgcz10W3IrMV0sbD10W3JdO2EucHVzaChsKTt2YXIgdT1bXTtzd2l0Y2goaSl7Y2FzZSJlbmQiOnVbb109c1tvXSx1WzEtb109bFsxLW9dLGEucHVzaCh1KTticmVhaztjYXNlIm1pZGRsZSI6dmFyIGg9KGxbb10rc1tvXSkvMixjPVtdO3Vbb109Y1tvXT1oLHVbMS1vXT1sWzEtb10sY1sxLW9dPXNbMS1vXSxhLnB1c2godSksYS5wdXNoKGMpO2JyZWFrO2RlZmF1bHQ6dVtvXT1sW29dLHVbMS1vXT1zWzEtb10sYS5wdXNoKHUpfX1yZXR1cm4gdFtyXSYmYS5wdXNoKHRbcl0pLGF9ZnVuY3Rpb24gYm0odCxlLGkpe3ZhciBuPXQuZ2V0KCJzaG93QWxsU3ltYm9sIiksbz0iYXV0byI9PT1uO2lmKCFufHxvKXt2YXIgYT1pLmdldEF4ZXNCeVNjYWxlKCJvcmRpbmFsIilbMF07aWYoYSYmKCFvfHwhZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEV4dGVudCgpLG49TWF0aC5hYnMoaVsxXS1pWzBdKS90LnNjYWxlLmNvdW50KCk7aXNOYU4obikmJihuPTApO2Zvcih2YXIgbz1lLmNvdW50KCksYT1NYXRoLm1heCgxLE1hdGgucm91bmQoby81KSkscj0wO3I8bztyKz1hKWlmKDEuNSpGZy5nZXRTeW1ib2xTaXplKGUscilbdC5pc0hvcml6b250YWwoKT8xOjBdPm4pcmV0dXJuITE7cmV0dXJuITB9KGEsZSkpKXt2YXIgcj1lLm1hcERpbWVuc2lvbihhLmRpbSkscz17fTtyZXR1cm4gRShhLmdldFZpZXdMYWJlbHMoKSxmdW5jdGlvbih0KXtzW3QudGlja1ZhbHVlXT0xfSksZnVuY3Rpb24odCl7cmV0dXJuIXMuaGFzT3duUHJvcGVydHkoZS5nZXQocix0KSl9fX19ZnVuY3Rpb24gU20odCxlLGkpe2lmKCJjYXJ0ZXNpYW4yZCIhPT10LnR5cGUpcmV0dXJuIHZtKHQsZSxpKTt2YXIgbj10LmdldEJhc2VBeGlzKCkuaXNIb3Jpem9udGFsKCksbz1tbSh0LGUsaSk7aWYoIWkuZ2V0KCJjbGlwIiwhMCkpe3ZhciBhPW8uc2hhcGUscj1NYXRoLm1heChhLndpZHRoLGEuaGVpZ2h0KTtuPyhhLnktPXIsYS5oZWlnaHQrPTIqcik6KGEueC09cixhLndpZHRoKz0yKnIpfXJldHVybiBvfWdjLmV4dGVuZCh7dHlwZToibGluZSIsaW5pdDpmdW5jdGlvbigpe3ZhciB0PW5ldyBJaSxlPW5ldyAkZzt0aGlzLmdyb3VwLmFkZChlLmdyb3VwKSx0aGlzLl9zeW1ib2xEcmF3PWUsdGhpcy5fbGluZUdyb3VwPXR9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5jb29yZGluYXRlU3lzdGVtLG89dGhpcy5ncm91cCxhPXQuZ2V0RGF0YSgpLHI9dC5nZXRNb2RlbCgibGluZVN0eWxlIikscz10LmdldE1vZGVsKCJhcmVhU3R5bGUiKSxsPWEubWFwQXJyYXkoYS5nZXRJdGVtTGF5b3V0KSx1PSJwb2xhciI9PT1uLnR5cGUsaD10aGlzLl9jb29yZFN5cyxjPXRoaXMuX3N5bWJvbERyYXcsZD10aGlzLl9wb2x5bGluZSxmPXRoaXMuX3BvbHlnb24scD10aGlzLl9saW5lR3JvdXAsZz10LmdldCgiYW5pbWF0aW9uIiksbT0hcy5pc0VtcHR5KCksdj1zLmdldCgib3JpZ2luIikseT1mdW5jdGlvbih0LGUsaSl7aWYoIWkudmFsdWVEaW0pcmV0dXJuW107Zm9yKHZhciBuPVtdLG89MCxhPWUuY291bnQoKTtvPGE7bysrKW4ucHVzaChubShpLHQsZSxvKSk7cmV0dXJuIG59KG4sYSxpbShuLGEsdikpLHg9dC5nZXQoInNob3dTeW1ib2wiKSxfPXgmJiF1JiZibSh0LGEsbiksdz10aGlzLl9kYXRhO3cmJncuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxlKXt0Ll9fdGVtcCYmKG8ucmVtb3ZlKHQpLHcuc2V0SXRlbUdyYXBoaWNFbChlLG51bGwpKX0pLHh8fGMucmVtb3ZlKCksby5hZGQocCk7dmFyIGIsUz0hdSYmdC5nZXQoInN0ZXAiKTtuJiZuLmdldEFyZWEmJnQuZ2V0KCJjbGlwIiwhMCkmJihudWxsIT0oYj1uLmdldEFyZWEoKSkud2lkdGg/KGIueC09LjEsYi55LT0uMSxiLndpZHRoKz0uMixiLmhlaWdodCs9LjIpOmIucjAmJihiLnIwLT0uNSxiLnIxKz0uNSkpLHRoaXMuX2NsaXBTaGFwZUZvclN5bWJvbD1iLGQmJmgudHlwZT09PW4udHlwZSYmUz09PXRoaXMuX3N0ZXA/KG0mJiFmP2Y9dGhpcy5fbmV3UG9seWdvbihsLHksbixnKTpmJiYhbSYmKHAucmVtb3ZlKGYpLGY9dGhpcy5fcG9seWdvbj1udWxsKSxwLnNldENsaXBQYXRoKFNtKG4sITEsdCkpLHgmJmMudXBkYXRlRGF0YShhLHtpc0lnbm9yZTpfLGNsaXBTaGFwZTpifSksYS5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0KXt0LnN0b3BBbmltYXRpb24oITApfSkseG0odGhpcy5fc3RhY2tlZE9uUG9pbnRzLHkpJiZ4bSh0aGlzLl9wb2ludHMsbCl8fChnP3RoaXMuX3VwZGF0ZUFuaW1hdGlvbihhLHksbixpLFMsdik6KFMmJihsPXdtKGwsbixTKSx5PXdtKHksbixTKSksZC5zZXRTaGFwZSh7cG9pbnRzOmx9KSxmJiZmLnNldFNoYXBlKHtwb2ludHM6bCxzdGFja2VkT25Qb2ludHM6eX0pKSkpOih4JiZjLnVwZGF0ZURhdGEoYSx7aXNJZ25vcmU6XyxjbGlwU2hhcGU6Yn0pLFMmJihsPXdtKGwsbixTKSx5PXdtKHksbixTKSksZD10aGlzLl9uZXdQb2x5bGluZShsLG4sZyksbSYmKGY9dGhpcy5fbmV3UG9seWdvbihsLHksbixnKSkscC5zZXRDbGlwUGF0aChTbShuLCEwLHQpKSk7dmFyIE09ZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldFZpc3VhbCgidmlzdWFsTWV0YSIpO2lmKGkmJmkubGVuZ3RoJiZ0LmNvdW50KCkmJiJjYXJ0ZXNpYW4yZCI9PT1lLnR5cGUpe2Zvcih2YXIgbixvLGE9aS5sZW5ndGgtMTswPD1hO2EtLSl7dmFyIHI9aVthXS5kaW1lbnNpb24scz10LmRpbWVuc2lvbnNbcl0sbD10LmdldERpbWVuc2lvbkluZm8ocyk7aWYoIngiPT09KG49bCYmbC5jb29yZERpbSl8fCJ5Ij09PW4pe289aVthXTticmVha319aWYobyl7dmFyIHU9ZS5nZXRBeGlzKG4pLGg9TihvLnN0b3BzLGZ1bmN0aW9uKHQpe3JldHVybntjb29yZDp1LnRvR2xvYmFsQ29vcmQodS5kYXRhVG9Db29yZCh0LnZhbHVlKSksY29sb3I6dC5jb2xvcn19KSxjPWgubGVuZ3RoLGQ9by5vdXRlckNvbG9ycy5zbGljZSgpO2MmJmhbMF0uY29vcmQ+aFtjLTFdLmNvb3JkJiYoaC5yZXZlcnNlKCksZC5yZXZlcnNlKCkpO3ZhciBmPWhbMF0uY29vcmQtMTAscD1oW2MtMV0uY29vcmQrMTAsZz1wLWY7aWYoZzwuMDAxKXJldHVybiJ0cmFuc3BhcmVudCI7RShoLGZ1bmN0aW9uKHQpe3Qub2Zmc2V0PSh0LmNvb3JkLWYpL2d9KSxoLnB1c2goe29mZnNldDpjP2hbYy0xXS5vZmZzZXQ6LjUsY29sb3I6ZFsxXXx8InRyYW5zcGFyZW50In0pLGgudW5zaGlmdCh7b2Zmc2V0OmM/aFswXS5vZmZzZXQ6LjUsY29sb3I6ZFswXXx8InRyYW5zcGFyZW50In0pO3ZhciBtPW5ldyBjcygwLDAsMCwwLGgsITApO3JldHVybiBtW25dPWYsbVtuKyIyIl09cCxtfX19KGEsbil8fGEuZ2V0VmlzdWFsKCJjb2xvciIpO2QudXNlU3R5bGUoQyhyLmdldExpbmVTdHlsZSgpLHtmaWxsOiJub25lIixzdHJva2U6TSxsaW5lSm9pbjoiYmV2ZWwifSkpO3ZhciBJPXQuZ2V0KCJzbW9vdGgiKTtpZihJPV9tKHQuZ2V0KCJzbW9vdGgiKSksZC5zZXRTaGFwZSh7c21vb3RoOkksc21vb3RoTW9ub3RvbmU6dC5nZXQoInNtb290aE1vbm90b25lIiksY29ubmVjdE51bGxzOnQuZ2V0KCJjb25uZWN0TnVsbHMiKX0pLGYpe3ZhciBUPWEuZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja2VkT25TZXJpZXMiKSxBPTA7Zi51c2VTdHlsZShDKHMuZ2V0QXJlYVN0eWxlKCkse2ZpbGw6TSxvcGFjaXR5Oi43LGxpbmVKb2luOiJiZXZlbCJ9KSksVCYmKEE9X20oVC5nZXQoInNtb290aCIpKSksZi5zZXRTaGFwZSh7c21vb3RoOkksc3RhY2tlZE9uU21vb3RoOkEsc21vb3RoTW9ub3RvbmU6dC5nZXQoInNtb290aE1vbm90b25lIiksY29ubmVjdE51bGxzOnQuZ2V0KCJjb25uZWN0TnVsbHMiKX0pfXRoaXMuX2RhdGE9YSx0aGlzLl9jb29yZFN5cz1uLHRoaXMuX3N0YWNrZWRPblBvaW50cz15LHRoaXMuX3BvaW50cz1sLHRoaXMuX3N0ZXA9Uyx0aGlzLl92YWx1ZU9yaWdpbj12fSxkaXNwb3NlOmZ1bmN0aW9uKCl7fSxoaWdobGlnaHQ6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dC5nZXREYXRhKCksYT1IbyhvLG4pO2lmKCEoYSBpbnN0YW5jZW9mIEFycmF5KSYmbnVsbCE9YSYmMDw9YSl7dmFyIHI9by5nZXRJdGVtR3JhcGhpY0VsKGEpO2lmKCFyKXt2YXIgcz1vLmdldEl0ZW1MYXlvdXQoYSk7aWYoIXMpcmV0dXJuO2lmKHRoaXMuX2NsaXBTaGFwZUZvclN5bWJvbCYmIXRoaXMuX2NsaXBTaGFwZUZvclN5bWJvbC5jb250YWluKHNbMF0sc1sxXSkpcmV0dXJuOyhyPW5ldyBGZyhvLGEpKS5wb3NpdGlvbj1zLHIuc2V0Wih0LmdldCgiemxldmVsIiksdC5nZXQoInoiKSksci5pZ25vcmU9aXNOYU4oc1swXSl8fGlzTmFOKHNbMV0pLHIuX190ZW1wPSEwLG8uc2V0SXRlbUdyYXBoaWNFbChhLHIpLHIuc3RvcFN5bWJvbEFuaW1hdGlvbighMCksdGhpcy5ncm91cC5hZGQocil9ci5oaWdobGlnaHQoKX1lbHNlIGdjLnByb3RvdHlwZS5oaWdobGlnaHQuY2FsbCh0aGlzLHQsZSxpLG4pfSxkb3ducGxheTpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10LmdldERhdGEoKSxhPUhvKG8sbik7aWYobnVsbCE9YSYmMDw9YSl7dmFyIHI9by5nZXRJdGVtR3JhcGhpY0VsKGEpO3ImJihyLl9fdGVtcD8oby5zZXRJdGVtR3JhcGhpY0VsKGEsbnVsbCksdGhpcy5ncm91cC5yZW1vdmUocikpOnIuZG93bnBsYXkoKSl9ZWxzZSBnYy5wcm90b3R5cGUuZG93bnBsYXkuY2FsbCh0aGlzLHQsZSxpLG4pfSxfbmV3UG9seWxpbmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcG9seWxpbmU7cmV0dXJuIGUmJnRoaXMuX2xpbmVHcm91cC5yZW1vdmUoZSksZT1uZXcgcG0oe3NoYXBlOntwb2ludHM6dH0sc2lsZW50OiEwLHoyOjEwfSksdGhpcy5fbGluZUdyb3VwLmFkZChlKSx0aGlzLl9wb2x5bGluZT1lfSxfbmV3UG9seWdvbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX3BvbHlnb247cmV0dXJuIGkmJnRoaXMuX2xpbmVHcm91cC5yZW1vdmUoaSksaT1uZXcgZ20oe3NoYXBlOntwb2ludHM6dCxzdGFja2VkT25Qb2ludHM6ZX0sc2lsZW50OiEwfSksdGhpcy5fbGluZUdyb3VwLmFkZChpKSx0aGlzLl9wb2x5Z29uPWl9LF91cGRhdGVBbmltYXRpb246ZnVuY3Rpb24odCxlLGksbixvLGEpe3ZhciByPXRoaXMuX3BvbHlsaW5lLHM9dGhpcy5fcG9seWdvbixsPXQuaG9zdE1vZGVsLHU9ZnVuY3Rpb24odCxlLGksbixvLGEscixzKXtmb3IodmFyIGw9ZnVuY3Rpb24odCxlKXt2YXIgaT1bXTtyZXR1cm4gZS5kaWZmKHQpLmFkZChmdW5jdGlvbih0KXtpLnB1c2goe2NtZDoiKyIsaWR4OnR9KX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe2kucHVzaCh7Y21kOiI9IixpZHg6ZSxpZHgxOnR9KX0pLnJlbW92ZShmdW5jdGlvbih0KXtpLnB1c2goe2NtZDoiLSIsaWR4OnR9KX0pLmV4ZWN1dGUoKSxpfSh0LGUpLHU9W10saD1bXSxjPVtdLGQ9W10sZj1bXSxwPVtdLGc9W10sbT1pbShvLGUsciksdj1pbShhLHQscykseT0wO3k8bC5sZW5ndGg7eSsrKXt2YXIgeD1sW3ldLF89ITA7c3dpdGNoKHguY21kKXtjYXNlIj0iOnZhciB3PXQuZ2V0SXRlbUxheW91dCh4LmlkeCksYj1lLmdldEl0ZW1MYXlvdXQoeC5pZHgxKTsoaXNOYU4od1swXSl8fGlzTmFOKHdbMV0pKSYmKHc9Yi5zbGljZSgpKSx1LnB1c2godyksaC5wdXNoKGIpLGMucHVzaChpW3guaWR4XSksZC5wdXNoKG5beC5pZHgxXSksZy5wdXNoKGUuZ2V0UmF3SW5kZXgoeC5pZHgxKSk7YnJlYWs7Y2FzZSIrIjp2YXIgUz14LmlkeDt1LnB1c2goby5kYXRhVG9Qb2ludChbZS5nZXQobS5kYXRhRGltc0ZvclBvaW50WzBdLFMpLGUuZ2V0KG0uZGF0YURpbXNGb3JQb2ludFsxXSxTKV0pKSxoLnB1c2goZS5nZXRJdGVtTGF5b3V0KFMpLnNsaWNlKCkpLGMucHVzaChubShtLG8sZSxTKSksZC5wdXNoKG5bU10pLGcucHVzaChlLmdldFJhd0luZGV4KFMpKTticmVhaztjYXNlIi0iOlM9eC5pZHg7dmFyIE09dC5nZXRSYXdJbmRleChTKTtNIT09Uz8odS5wdXNoKHQuZ2V0SXRlbUxheW91dChTKSksaC5wdXNoKGEuZGF0YVRvUG9pbnQoW3QuZ2V0KHYuZGF0YURpbXNGb3JQb2ludFswXSxTKSx0LmdldCh2LmRhdGFEaW1zRm9yUG9pbnRbMV0sUyldKSksYy5wdXNoKGlbU10pLGQucHVzaChubSh2LGEsdCxTKSksZy5wdXNoKE0pKTpfPSExfV8mJihmLnB1c2goeCkscC5wdXNoKHAubGVuZ3RoKSl9cC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGdbdF0tZ1tlXX0pO3ZhciBJPVtdLFQ9W10sQT1bXSxEPVtdLEM9W107Zm9yKHk9MDt5PHAubGVuZ3RoO3krKyl7Uz1wW3ldO0lbeV09dVtTXSxUW3ldPWhbU10sQVt5XT1jW1NdLERbeV09ZFtTXSxDW3ldPWZbU119cmV0dXJue2N1cnJlbnQ6SSxuZXh0OlQsc3RhY2tlZE9uQ3VycmVudDpBLHN0YWNrZWRPbk5leHQ6RCxzdGF0dXM6Q319KHRoaXMuX2RhdGEsdCx0aGlzLl9zdGFja2VkT25Qb2ludHMsZSx0aGlzLl9jb29yZFN5cyxpLHRoaXMuX3ZhbHVlT3JpZ2luLGEpLGg9dS5jdXJyZW50LGM9dS5zdGFja2VkT25DdXJyZW50LGQ9dS5uZXh0LGY9dS5zdGFja2VkT25OZXh0O28mJihoPXdtKHUuY3VycmVudCxpLG8pLGM9d20odS5zdGFja2VkT25DdXJyZW50LGksbyksZD13bSh1Lm5leHQsaSxvKSxmPXdtKHUuc3RhY2tlZE9uTmV4dCxpLG8pKSxyLnNoYXBlLl9fcG9pbnRzPXUuY3VycmVudCxyLnNoYXBlLnBvaW50cz1oLHNsKHIse3NoYXBlOntwb2ludHM6ZH19LGwpLHMmJihzLnNldFNoYXBlKHtwb2ludHM6aCxzdGFja2VkT25Qb2ludHM6Y30pLHNsKHMse3NoYXBlOntwb2ludHM6ZCxzdGFja2VkT25Qb2ludHM6Zn19LGwpKTtmb3IodmFyIHA9W10sZz11LnN0YXR1cyxtPTA7bTxnLmxlbmd0aDttKyspe2lmKCI9Ij09PWdbbV0uY21kKXt2YXIgdj10LmdldEl0ZW1HcmFwaGljRWwoZ1ttXS5pZHgxKTt2JiZwLnB1c2goe2VsOnYscHRJZHg6bX0pfX1yLmFuaW1hdG9ycyYmci5hbmltYXRvcnMubGVuZ3RoJiZyLmFuaW1hdG9yc1swXS5kdXJpbmcoZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PHAubGVuZ3RoO3QrKyl7cFt0XS5lbC5hdHRyKCJwb3NpdGlvbiIsci5zaGFwZS5fX3BvaW50c1twW3RdLnB0SWR4XSl9fSl9LHJlbW92ZTpmdW5jdGlvbih0KXt2YXIgaT10aGlzLmdyb3VwLG49dGhpcy5fZGF0YTt0aGlzLl9saW5lR3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fc3ltYm9sRHJhdy5yZW1vdmUoITApLG4mJm4uZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxlKXt0Ll9fdGVtcCYmKGkucmVtb3ZlKHQpLG4uc2V0SXRlbUdyYXBoaWNFbChlLG51bGwpKX0pLHRoaXMuX3BvbHlsaW5lPXRoaXMuX3BvbHlnb249dGhpcy5fY29vcmRTeXM9dGhpcy5fcG9pbnRzPXRoaXMuX3N0YWNrZWRPblBvaW50cz10aGlzLl9kYXRhPW51bGx9fSk7ZnVuY3Rpb24gTW0odCxyLHMpe3JldHVybntzZXJpZXNUeXBlOnQscGVyZm9ybVJhd1NlcmllczohMCxyZXNldDpmdW5jdGlvbihsLHQsZSl7dmFyIGk9bC5nZXREYXRhKCksdT1sLmdldCgic3ltYm9sIiksaD1sLmdldCgic3ltYm9sU2l6ZSIpLG49bC5nZXQoInN5bWJvbEtlZXBBc3BlY3QiKSxjPU8odSksZD1PKGgpLGY9Y3x8ZCxvPSFjJiZ1P3U6cixhPWQ/bnVsbDpoO2lmKGkuc2V0VmlzdWFsKHtsZWdlbmRTeW1ib2w6c3x8byxzeW1ib2w6byxzeW1ib2xTaXplOmEsc3ltYm9sS2VlcEFzcGVjdDpufSksIXQuaXNTZXJpZXNGaWx0ZXJlZChsKSlyZXR1cm57ZGF0YUVhY2g6aS5oYXNJdGVtT3B0aW9ufHxmP2Z1bmN0aW9uKHQsZSl7aWYoZil7dmFyIGk9bC5nZXRSYXdWYWx1ZShlKSxuPWwuZ2V0RGF0YVBhcmFtcyhlKTtjJiZ0LnNldEl0ZW1WaXN1YWwoZSwic3ltYm9sIix1KGksbikpLGQmJnQuc2V0SXRlbVZpc3VhbChlLCJzeW1ib2xTaXplIixoKGksbikpfWlmKHQuaGFzSXRlbU9wdGlvbil7dmFyIG89dC5nZXRJdGVtTW9kZWwoZSksYT1vLmdldFNoYWxsb3coInN5bWJvbCIsITApLHI9by5nZXRTaGFsbG93KCJzeW1ib2xTaXplIiwhMCkscz1vLmdldFNoYWxsb3coInN5bWJvbEtlZXBBc3BlY3QiLCEwKTtudWxsIT1hJiZ0LnNldEl0ZW1WaXN1YWwoZSwic3ltYm9sIixhKSxudWxsIT1yJiZ0LnNldEl0ZW1WaXN1YWwoZSwic3ltYm9sU2l6ZSIsciksbnVsbCE9cyYmdC5zZXRJdGVtVmlzdWFsKGUsInN5bWJvbEtlZXBBc3BlY3QiLHMpfX06bnVsbH19fX1mdW5jdGlvbiBJbSh0KXtyZXR1cm57c2VyaWVzVHlwZTp0LHBsYW46ZGMoKSxyZXNldDpmdW5jdGlvbih0KXt2YXIgZT10LmdldERhdGEoKSxjPXQuY29vcmRpbmF0ZVN5c3RlbSxkPXQucGlwZWxpbmVDb250ZXh0LmxhcmdlO2lmKGMpe3ZhciBmPU4oYy5kaW1lbnNpb25zLGZ1bmN0aW9uKHQpe3JldHVybiBlLm1hcERpbWVuc2lvbih0KX0pLnNsaWNlKDAsMikscD1mLmxlbmd0aCxpPWUuZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja1Jlc3VsdERpbWVuc2lvbiIpO3JldHVybiBscChlLGZbMF0pJiYoZlswXT1pKSxscChlLGZbMV0pJiYoZlsxXT1pKSxwJiZ7cHJvZ3Jlc3M6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dC5lbmQtdC5zdGFydCxuPWQmJm5ldyBGbG9hdDMyQXJyYXkoaSpwKSxvPXQuc3RhcnQsYT0wLHI9W10scz1bXTtvPHQuZW5kO28rKyl7dmFyIGw7aWYoMT09PXApe3ZhciB1PWUuZ2V0KGZbMF0sbyk7bD0haXNOYU4odSkmJmMuZGF0YVRvUG9pbnQodSxudWxsLHMpfWVsc2V7dT1yWzBdPWUuZ2V0KGZbMF0sbyk7dmFyIGg9clsxXT1lLmdldChmWzFdLG8pO2w9IWlzTmFOKHUpJiYhaXNOYU4oaCkmJmMuZGF0YVRvUG9pbnQocixudWxsLHMpfWQ/KG5bYSsrXT1sP2xbMF06TmFOLG5bYSsrXT1sP2xbMV06TmFOKTplLnNldEl0ZW1MYXlvdXQobyxsJiZsLnNsaWNlKCl8fFtOYU4sTmFOXSl9ZCYmZS5zZXRMYXlvdXQoInN5bWJvbFBvaW50cyIsbil9fX19fX1mdW5jdGlvbiBUbSh0LGUpe3JldHVybiBNYXRoLnJvdW5kKHQubGVuZ3RoLzIpfXZhciBBbT17YXZlcmFnZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxpPTAsbj0wO248dC5sZW5ndGg7bisrKWlzTmFOKHRbbl0pfHwoZSs9dFtuXSxpKyspO3JldHVybiAwPT09aT9OYU46ZS9pfSxzdW06ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsaT0wO2k8dC5sZW5ndGg7aSsrKWUrPXRbaV18fDA7cmV0dXJuIGV9LG1heDpmdW5jdGlvbih0KXtmb3IodmFyIGU9LTEvMCxpPTA7aTx0Lmxlbmd0aDtpKyspdFtpXT5lJiYoZT10W2ldKTtyZXR1cm4gaXNGaW5pdGUoZSk/ZTpOYU59LG1pbjpmdW5jdGlvbih0KXtmb3IodmFyIGU9MS8wLGk9MDtpPHQubGVuZ3RoO2krKyl0W2ldPGUmJihlPXRbaV0pO3JldHVybiBpc0Zpbml0ZShlKT9lOk5hTn0sbmVhcmVzdDpmdW5jdGlvbih0KXtyZXR1cm4gdFswXX19O2Z1bmN0aW9uIERtKHQpe3JldHVybiB0aGlzLl9heGVzW3RdfWZ1bmN0aW9uIENtKHQpe3RoaXMuX2F4ZXM9e30sdGhpcy5fZGltTGlzdD1bXSx0aGlzLm5hbWU9dHx8IiJ9ZnVuY3Rpb24gTG0odCl7Q20uY2FsbCh0aGlzLHQpfUNtLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Q20sdHlwZToiY2FydGVzaWFuIixnZXRBeGlzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9heGVzW3RdfSxnZXRBeGVzOmZ1bmN0aW9uKCl7cmV0dXJuIE4odGhpcy5fZGltTGlzdCxEbSx0aGlzKX0sZ2V0QXhlc0J5U2NhbGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZS50b0xvd2VyQ2FzZSgpLE0odGhpcy5nZXRBeGVzKCksZnVuY3Rpb24odCl7cmV0dXJuIHQuc2NhbGUudHlwZT09PWV9KX0sYWRkQXhpczpmdW5jdGlvbih0KXt2YXIgZT10LmRpbTt0aGlzLl9heGVzW2VdPXQsdGhpcy5fZGltTGlzdC5wdXNoKGUpfSxkYXRhVG9Db29yZDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZGF0YUNvb3JkQ29udmVydCh0LCJkYXRhVG9Db29yZCIpfSxjb29yZFRvRGF0YTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZGF0YUNvb3JkQ29udmVydCh0LCJjb29yZFRvRGF0YSIpfSxfZGF0YUNvb3JkQ29udmVydDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLl9kaW1MaXN0LG49dCBpbnN0YW5jZW9mIEFycmF5P1tdOnt9LG89MDtvPGkubGVuZ3RoO28rKyl7dmFyIGE9aVtvXSxyPXRoaXMuX2F4ZXNbYV07blthXT1yW2VdKHRbYV0pfXJldHVybiBufX0sTG0ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpMbSx0eXBlOiJjYXJ0ZXNpYW4yZCIsZGltZW5zaW9uczpbIngiLCJ5Il0sZ2V0QmFzZUF4aXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRBeGVzQnlTY2FsZSgib3JkaW5hbCIpWzBdfHx0aGlzLmdldEF4ZXNCeVNjYWxlKCJ0aW1lIilbMF18fHRoaXMuZ2V0QXhpcygieCIpfSxjb250YWluUG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRBeGlzKCJ4IiksaT10aGlzLmdldEF4aXMoInkiKTtyZXR1cm4gZS5jb250YWluKGUudG9Mb2NhbENvb3JkKHRbMF0pKSYmaS5jb250YWluKGkudG9Mb2NhbENvb3JkKHRbMV0pKX0sY29udGFpbkRhdGE6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0QXhpcygieCIpLmNvbnRhaW5EYXRhKHRbMF0pJiZ0aGlzLmdldEF4aXMoInkiKS5jb250YWluRGF0YSh0WzFdKX0sZGF0YVRvUG9pbnQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuZ2V0QXhpcygieCIpLG89dGhpcy5nZXRBeGlzKCJ5Iik7cmV0dXJuKGk9aXx8W10pWzBdPW4udG9HbG9iYWxDb29yZChuLmRhdGFUb0Nvb3JkKHRbMF0pKSxpWzFdPW8udG9HbG9iYWxDb29yZChvLmRhdGFUb0Nvb3JkKHRbMV0pKSxpfSxjbGFtcERhdGE6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmdldEF4aXMoIngiKS5zY2FsZSxuPXRoaXMuZ2V0QXhpcygieSIpLnNjYWxlLG89aS5nZXRFeHRlbnQoKSxhPW4uZ2V0RXh0ZW50KCkscj1pLnBhcnNlKHRbMF0pLHM9bi5wYXJzZSh0WzFdKTtyZXR1cm4oZT1lfHxbXSlbMF09TWF0aC5taW4oTWF0aC5tYXgoTWF0aC5taW4ob1swXSxvWzFdKSxyKSxNYXRoLm1heChvWzBdLG9bMV0pKSxlWzFdPU1hdGgubWluKE1hdGgubWF4KE1hdGgubWluKGFbMF0sYVsxXSkscyksTWF0aC5tYXgoYVswXSxhWzFdKSksZX0scG9pbnRUb0RhdGE6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmdldEF4aXMoIngiKSxuPXRoaXMuZ2V0QXhpcygieSIpO3JldHVybihlPWV8fFtdKVswXT1pLmNvb3JkVG9EYXRhKGkudG9Mb2NhbENvb3JkKHRbMF0pKSxlWzFdPW4uY29vcmRUb0RhdGEobi50b0xvY2FsQ29vcmQodFsxXSkpLGV9LGdldE90aGVyQXhpczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRBeGlzKCJ4Ij09PXQuZGltPyJ5IjoieCIpfSxnZXRBcmVhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRBeGlzKCJ4IikuZ2V0R2xvYmFsRXh0ZW50KCksZT10aGlzLmdldEF4aXMoInkiKS5nZXRHbG9iYWxFeHRlbnQoKSxpPU1hdGgubWluKHRbMF0sdFsxXSksbj1NYXRoLm1pbihlWzBdLGVbMV0pO3JldHVybiBuZXcgTWkoaSxuLE1hdGgubWF4KHRbMF0sdFsxXSktaSxNYXRoLm1heChlWzBdLGVbMV0pLW4pfX0sdyhMbSxDbSk7ZnVuY3Rpb24ga20odCxlLGksbixvKXtFZy5jYWxsKHRoaXMsdCxlLGkpLHRoaXMudHlwZT1ufHwidmFsdWUiLHRoaXMucG9zaXRpb249b3x8ImJvdHRvbSJ9a20ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjprbSxpbmRleDowLGdldEF4ZXNPblplcm9PZjpudWxsLG1vZGVsOm51bGwsaXNIb3Jpem9udGFsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wb3NpdGlvbjtyZXR1cm4idG9wIj09PXR8fCJib3R0b20iPT09dH0sZ2V0R2xvYmFsRXh0ZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RXh0ZW50KCk7cmV0dXJuIGVbMF09dGhpcy50b0dsb2JhbENvb3JkKGVbMF0pLGVbMV09dGhpcy50b0dsb2JhbENvb3JkKGVbMV0pLHQmJmVbMF0+ZVsxXSYmZS5yZXZlcnNlKCksZX0sZ2V0T3RoZXJBeGlzOmZ1bmN0aW9uKCl7dGhpcy5ncmlkLmdldE90aGVyQXhpcygpfSxwb2ludFRvRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNvb3JkVG9EYXRhKHRoaXMudG9Mb2NhbENvb3JkKHRbIngiPT09dGhpcy5kaW0/MDoxXSksZSl9LHRvTG9jYWxDb29yZDpudWxsLHRvR2xvYmFsQ29vcmQ6bnVsbH0sdyhrbSxFZyk7dmFyIFBtPXtzaG93OiEwLHpsZXZlbDowLHo6MCxpbnZlcnNlOiExLG5hbWU6IiIsbmFtZUxvY2F0aW9uOiJlbmQiLG5hbWVSb3RhdGU6bnVsbCxuYW1lVHJ1bmNhdGU6e21heFdpZHRoOm51bGwsZWxsaXBzaXM6Ii4uLiIscGxhY2Vob2xkZXI6Ii4ifSxuYW1lVGV4dFN0eWxlOnt9LG5hbWVHYXA6MTUsc2lsZW50OiExLHRyaWdnZXJFdmVudDohMSx0b29sdGlwOntzaG93OiExfSxheGlzUG9pbnRlcjp7fSxheGlzTGluZTp7c2hvdzohMCxvblplcm86ITAsb25aZXJvQXhpc0luZGV4Om51bGwsbGluZVN0eWxlOntjb2xvcjoiIzMzMyIsd2lkdGg6MSx0eXBlOiJzb2xpZCJ9LHN5bWJvbDpbIm5vbmUiLCJub25lIl0sc3ltYm9sU2l6ZTpbMTAsMTVdfSxheGlzVGljazp7c2hvdzohMCxpbnNpZGU6ITEsbGVuZ3RoOjUsbGluZVN0eWxlOnt3aWR0aDoxfX0sYXhpc0xhYmVsOntzaG93OiEwLGluc2lkZTohMSxyb3RhdGU6MCxzaG93TWluTGFiZWw6bnVsbCxzaG93TWF4TGFiZWw6bnVsbCxtYXJnaW46OCxmb250U2l6ZToxMn0sc3BsaXRMaW5lOntzaG93OiEwLGxpbmVTdHlsZTp7Y29sb3I6WyIjY2NjIl0sd2lkdGg6MSx0eXBlOiJzb2xpZCJ9fSxzcGxpdEFyZWE6e3Nob3c6ITEsYXJlYVN0eWxlOntjb2xvcjpbInJnYmEoMjUwLDI1MCwyNTAsMC4zKSIsInJnYmEoMjAwLDIwMCwyMDAsMC4zKSJdfX19LE5tPXt9O05tLmNhdGVnb3J5QXhpcz1tKHtib3VuZGFyeUdhcDohMCxkZWR1cGxpY2F0aW9uOm51bGwsc3BsaXRMaW5lOntzaG93OiExfSxheGlzVGljazp7YWxpZ25XaXRoTGFiZWw6ITEsaW50ZXJ2YWw6ImF1dG8ifSxheGlzTGFiZWw6e2ludGVydmFsOiJhdXRvIn19LFBtKSxObS52YWx1ZUF4aXM9bSh7Ym91bmRhcnlHYXA6WzAsMF0sc3BsaXROdW1iZXI6NSxtaW5vclRpY2s6e3Nob3c6ITEsc3BsaXROdW1iZXI6NSxsZW5ndGg6MyxsaW5lU3R5bGU6e319LG1pbm9yU3BsaXRMaW5lOntzaG93OiExLGxpbmVTdHlsZTp7Y29sb3I6IiNlZWUiLHdpZHRoOjF9fX0sUG0pLE5tLnRpbWVBeGlzPUMoe3NjYWxlOiEwLG1pbjoiZGF0YU1pbiIsbWF4OiJkYXRhTWF4In0sTm0udmFsdWVBeGlzKSxObS5sb2dBeGlzPUMoe3NjYWxlOiEwLGxvZ0Jhc2U6MTB9LE5tLnZhbHVlQXhpcyk7ZnVuY3Rpb24gT20oYSx0LHIsZSl7RShFbSxmdW5jdGlvbihvKXt0LmV4dGVuZCh7dHlwZTphKyJBeGlzLiIrbyxtZXJnZURlZmF1bHRBbmRUaGVtZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMubGF5b3V0TW9kZSxuPWk/X3UodCk6e307bSh0LGUuZ2V0VGhlbWUoKS5nZXQobysiQXhpcyIpKSxtKHQsdGhpcy5nZXREZWZhdWx0T3B0aW9uKCkpLHQudHlwZT1yKGEsdCksaSYmeHUodCxuLGkpfSxvcHRpb25VcGRhdGVkOmZ1bmN0aW9uKCl7ImNhdGVnb3J5Ij09PXRoaXMub3B0aW9uLnR5cGUmJih0aGlzLl9fb3JkaW5hbE1ldGE9ZHAuY3JlYXRlQnlBeGlzTW9kZWwodGhpcykpfSxnZXRDYXRlZ29yaWVzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9uO2lmKCJjYXRlZ29yeSI9PT1lLnR5cGUpcmV0dXJuIHQ/ZS5kYXRhOnRoaXMuX19vcmRpbmFsTWV0YS5jYXRlZ29yaWVzfSxnZXRPcmRpbmFsTWV0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9fb3JkaW5hbE1ldGF9LGRlZmF1bHRPcHRpb246cChbe30sTm1bbysiQXhpcyJdLGVdLCEwKX0pfSksVHUucmVnaXN0ZXJTdWJUeXBlRGVmYXVsdGVyKGErIkF4aXMiLFQocixhKSl9dmFyIEVtPVsidmFsdWUiLCJjYXRlZ29yeSIsInRpbWUiLCJsb2ciXSx6bT1UdS5leHRlbmQoe3R5cGU6ImNhcnRlc2lhbjJkQXhpcyIsYXhpczpudWxsLGluaXQ6ZnVuY3Rpb24oKXt6bS5zdXBlckFwcGx5KHRoaXMsImluaXQiLGFyZ3VtZW50cyksdGhpcy5yZXNldFJhbmdlKCl9LG1lcmdlT3B0aW9uOmZ1bmN0aW9uKCl7em0uc3VwZXJBcHBseSh0aGlzLCJtZXJnZU9wdGlvbiIsYXJndW1lbnRzKSx0aGlzLnJlc2V0UmFuZ2UoKX0scmVzdG9yZURhdGE6ZnVuY3Rpb24oKXt6bS5zdXBlckFwcGx5KHRoaXMsInJlc3RvcmVEYXRhIixhcmd1bWVudHMpLHRoaXMucmVzZXRSYW5nZSgpfSxnZXRDb29yZFN5c01vZGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWNNb2RlbC5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJncmlkIixpbmRleDp0aGlzLm9wdGlvbi5ncmlkSW5kZXgsaWQ6dGhpcy5vcHRpb24uZ3JpZElkfSlbMF19fSk7ZnVuY3Rpb24gUm0odCxlKXtyZXR1cm4gZS50eXBlfHwoZS5kYXRhPyJjYXRlZ29yeSI6InZhbHVlIil9bSh6bS5wcm90b3R5cGUsc2cpO3ZhciBCbT17b2Zmc2V0OjB9O2Z1bmN0aW9uIFZtKHQsZSl7cmV0dXJuIHQuZ2V0Q29vcmRTeXNNb2RlbCgpPT09ZX1mdW5jdGlvbiBHbSh0LGUsaSl7dGhpcy5fY29vcmRzTWFwPXt9LHRoaXMuX2Nvb3Jkc0xpc3Q9W10sdGhpcy5fYXhlc01hcD17fSx0aGlzLl9heGVzTGlzdD1bXSx0aGlzLl9pbml0Q2FydGVzaWFuKHQsZSxpKSx0aGlzLm1vZGVsPXR9T20oIngiLHptLFJtLEJtKSxPbSgieSIsem0sUm0sQm0pLFR1LmV4dGVuZCh7dHlwZToiZ3JpZCIsZGVwZW5kZW5jaWVzOlsieEF4aXMiLCJ5QXhpcyJdLGxheW91dE1vZGU6ImJveCIsY29vcmRpbmF0ZVN5c3RlbTpudWxsLGRlZmF1bHRPcHRpb246e3Nob3c6ITEsemxldmVsOjAsejowLGxlZnQ6IjEwJSIsdG9wOjYwLHJpZ2h0OiIxMCUiLGJvdHRvbTo2MCxjb250YWluTGFiZWw6ITEsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIixib3JkZXJXaWR0aDoxLGJvcmRlckNvbG9yOiIjY2NjIn19KTt2YXIgRm09R20ucHJvdG90eXBlO2Z1bmN0aW9uIFdtKHQsZSxpLG4pe2kuZ2V0QXhlc09uWmVyb09mPWZ1bmN0aW9uKCl7cmV0dXJuIG8/W29dOltdfTt2YXIgbyxhPXRbZV0scj1pLm1vZGVsLHM9ci5nZXQoImF4aXNMaW5lLm9uWmVybyIpLGw9ci5nZXQoImF4aXNMaW5lLm9uWmVyb0F4aXNJbmRleCIpO2lmKHMpe2lmKG51bGwhPWwpSG0oYVtsXSkmJihvPWFbbF0pO2Vsc2UgZm9yKHZhciB1IGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eSh1KSYmSG0oYVt1XSkmJiFuW2goYVt1XSldKXtvPWFbdV07YnJlYWt9byYmKG5baChvKV09ITApfWZ1bmN0aW9uIGgodCl7cmV0dXJuIHQuZGltKyJfIit0LmluZGV4fX1mdW5jdGlvbiBIbSh0KXtyZXR1cm4gdCYmImNhdGVnb3J5IiE9PXQudHlwZSYmInRpbWUiIT09dC50eXBlJiZmdW5jdGlvbih0KXt2YXIgZT10LnNjYWxlLmdldEV4dGVudCgpLGk9ZVswXSxuPWVbMV07cmV0dXJuISgwPGkmJjA8bnx8aTwwJiZuPDApfSh0KX1GbS50eXBlPSJncmlkIixGbS5heGlzUG9pbnRlckVuYWJsZWQ9ITAsRm0uZ2V0UmVjdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWN0fSxGbS51cGRhdGU9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9heGVzTWFwO3RoaXMuX3VwZGF0ZVNjYWxlKHQsdGhpcy5tb2RlbCksRShpLngsZnVuY3Rpb24odCl7ZWcodC5zY2FsZSx0Lm1vZGVsKX0pLEUoaS55LGZ1bmN0aW9uKHQpe2VnKHQuc2NhbGUsdC5tb2RlbCl9KTt2YXIgbj17fTtFKGkueCxmdW5jdGlvbih0KXtXbShpLCJ5Iix0LG4pfSksRShpLnksZnVuY3Rpb24odCl7V20oaSwieCIsdCxuKX0pLHRoaXMucmVzaXplKHRoaXMubW9kZWwsZSl9LEZtLnJlc2l6ZT1mdW5jdGlvbih0LGUsaSl7dmFyIG89dnUodC5nZXRCb3hMYXlvdXRQYXJhbXMoKSx7d2lkdGg6ZS5nZXRXaWR0aCgpLGhlaWdodDplLmdldEhlaWdodCgpfSk7dGhpcy5fcmVjdD1vO3ZhciBuPXRoaXMuX2F4ZXNMaXN0O2Z1bmN0aW9uIGEoKXtFKG4sZnVuY3Rpb24odCl7dmFyIGU9dC5pc0hvcml6b250YWwoKSxpPWU/WzAsby53aWR0aF06WzAsby5oZWlnaHRdLG49dC5pbnZlcnNlPzE6MDt0LnNldEV4dGVudChpW25dLGlbMS1uXSksZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEV4dGVudCgpLG49aVswXStpWzFdO3QudG9HbG9iYWxDb29yZD0ieCI9PT10LmRpbT9mdW5jdGlvbih0KXtyZXR1cm4gdCtlfTpmdW5jdGlvbih0KXtyZXR1cm4gbi10K2V9LHQudG9Mb2NhbENvb3JkPSJ4Ij09PXQuZGltP2Z1bmN0aW9uKHQpe3JldHVybiB0LWV9OmZ1bmN0aW9uKHQpe3JldHVybiBuLXQrZX19KHQsZT9vLng6by55KX0pfWEoKSwhaSYmdC5nZXQoImNvbnRhaW5MYWJlbCIpJiYoRShuLGZ1bmN0aW9uKHQpe2lmKCF0Lm1vZGVsLmdldCgiYXhpc0xhYmVsLmluc2lkZSIpKXt2YXIgZT1mdW5jdGlvbih0KXt2YXIgZT10Lm1vZGVsLGk9dC5zY2FsZTtpZihlLmdldCgiYXhpc0xhYmVsLnNob3ciKSYmIWkuaXNCbGFuaygpKXt2YXIgbixvLGE9ImNhdGVnb3J5Ij09PXQudHlwZSxyPWkuZ2V0RXh0ZW50KCk7bz1hP2kuY291bnQoKToobj1pLmdldFRpY2tzKCkpLmxlbmd0aDt2YXIgcyxsLHUsaCxjLGQsZixwLGcsbT10LmdldExhYmVsTW9kZWwoKSx2PW5nKHQpLHk9MTs0MDxvJiYoeT1NYXRoLmNlaWwoby80MCkpO2Zvcih2YXIgeD0wO3g8bzt4Kz15KXt2YXIgXz12KG4/blt4XTpyWzBdK3gpLHc9bS5nZXRUZXh0UmVjdChfKSxiPShsPXcsdT1tLmdldCgicm90YXRlIil8fDAsdm9pZCAwLGg9dSpNYXRoLlBJLzE4MCxjPWwucGxhaW4oKSxkPWMud2lkdGgsZj1jLmhlaWdodCxwPWQqTWF0aC5jb3MoaCkrZipNYXRoLnNpbihoKSxnPWQqTWF0aC5zaW4oaCkrZipNYXRoLmNvcyhoKSxuZXcgTWkoYy54LGMueSxwLGcpKTtzP3MudW5pb24oYik6cz1ifXJldHVybiBzfX0odCk7aWYoZSl7dmFyIGk9dC5pc0hvcml6b250YWwoKT8iaGVpZ2h0Ijoid2lkdGgiLG49dC5tb2RlbC5nZXQoImF4aXNMYWJlbC5tYXJnaW4iKTtvW2ldLT1lW2ldK24sInRvcCI9PT10LnBvc2l0aW9uP28ueSs9ZS5oZWlnaHQrbjoibGVmdCI9PT10LnBvc2l0aW9uJiYoby54Kz1lLndpZHRoK24pfX19KSxhKCkpfSxGbS5nZXRBeGlzPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fYXhlc01hcFt0XTtpZihudWxsIT1pKXtpZihudWxsPT1lKWZvcih2YXIgbiBpbiBpKWlmKGkuaGFzT3duUHJvcGVydHkobikpcmV0dXJuIGlbbl07cmV0dXJuIGlbZV19fSxGbS5nZXRBeGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2F4ZXNMaXN0LnNsaWNlKCl9LEZtLmdldENhcnRlc2lhbj1mdW5jdGlvbih0LGUpe2lmKG51bGwhPXQmJm51bGwhPWUpe3ZhciBpPSJ4Iit0KyJ5IitlO3JldHVybiB0aGlzLl9jb29yZHNNYXBbaV19Uih0KSYmKGU9dC55QXhpc0luZGV4LHQ9dC54QXhpc0luZGV4KTtmb3IodmFyIG49MCxvPXRoaXMuX2Nvb3Jkc0xpc3Q7bjxvLmxlbmd0aDtuKyspaWYob1tuXS5nZXRBeGlzKCJ4IikuaW5kZXg9PT10fHxvW25dLmdldEF4aXMoInkiKS5pbmRleD09PWUpcmV0dXJuIG9bbl19LEZtLmdldENhcnRlc2lhbnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29vcmRzTGlzdC5zbGljZSgpfSxGbS5jb252ZXJ0VG9QaXhlbD1mdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5fZmluZENvbnZlcnRUYXJnZXQodCxlKTtyZXR1cm4gbi5jYXJ0ZXNpYW4/bi5jYXJ0ZXNpYW4uZGF0YVRvUG9pbnQoaSk6bi5heGlzP24uYXhpcy50b0dsb2JhbENvb3JkKG4uYXhpcy5kYXRhVG9Db29yZChpKSk6bnVsbH0sRm0uY29udmVydEZyb21QaXhlbD1mdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5fZmluZENvbnZlcnRUYXJnZXQodCxlKTtyZXR1cm4gbi5jYXJ0ZXNpYW4/bi5jYXJ0ZXNpYW4ucG9pbnRUb0RhdGEoaSk6bi5heGlzP24uYXhpcy5jb29yZFRvRGF0YShuLmF4aXMudG9Mb2NhbENvb3JkKGkpKTpudWxsfSxGbS5fZmluZENvbnZlcnRUYXJnZXQ9ZnVuY3Rpb24odCxlKXt2YXIgaSxuLG89ZS5zZXJpZXNNb2RlbCxhPWUueEF4aXNNb2RlbHx8byYmby5nZXRSZWZlcnJpbmdDb21wb25lbnRzKCJ4QXhpcyIpWzBdLHI9ZS55QXhpc01vZGVsfHxvJiZvLmdldFJlZmVycmluZ0NvbXBvbmVudHMoInlBeGlzIilbMF0scz1lLmdyaWRNb2RlbCxsPXRoaXMuX2Nvb3Jkc0xpc3Q7aWYobylfKGwsaT1vLmNvb3JkaW5hdGVTeXN0ZW0pPDAmJihpPW51bGwpO2Vsc2UgaWYoYSYmcilpPXRoaXMuZ2V0Q2FydGVzaWFuKGEuY29tcG9uZW50SW5kZXgsci5jb21wb25lbnRJbmRleCk7ZWxzZSBpZihhKW49dGhpcy5nZXRBeGlzKCJ4IixhLmNvbXBvbmVudEluZGV4KTtlbHNlIGlmKHIpbj10aGlzLmdldEF4aXMoInkiLHIuY29tcG9uZW50SW5kZXgpO2Vsc2UgaWYocyl7cy5jb29yZGluYXRlU3lzdGVtPT09dGhpcyYmKGk9dGhpcy5fY29vcmRzTGlzdFswXSl9cmV0dXJue2NhcnRlc2lhbjppLGF4aXM6bn19LEZtLmNvbnRhaW5Qb2ludD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jb29yZHNMaXN0WzBdO2lmKGUpcmV0dXJuIGUuY29udGFpblBvaW50KHQpfSxGbS5faW5pdENhcnRlc2lhbj1mdW5jdGlvbihyLHQsZSl7dmFyIHM9e2xlZnQ6ITEscmlnaHQ6ITEsdG9wOiExLGJvdHRvbTohMX0sbD17eDp7fSx5Ont9fSx1PXt4OjAseTowfTtpZih0LmVhY2hDb21wb25lbnQoInhBeGlzIixpKCJ4IiksdGhpcyksdC5lYWNoQ29tcG9uZW50KCJ5QXhpcyIsaSgieSIpLHRoaXMpLCF1Lnh8fCF1LnkpcmV0dXJuIHRoaXMuX2F4ZXNNYXA9e30sdm9pZCh0aGlzLl9heGVzTGlzdD1bXSk7ZnVuY3Rpb24gaShhKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihWbSh0LHIpKXt2YXIgaT10LmdldCgicG9zaXRpb24iKTsieCI9PT1hPyJ0b3AiIT09aSYmImJvdHRvbSIhPT1pJiYoaT1zLmJvdHRvbT8idG9wIjoiYm90dG9tIik6ImxlZnQiIT09aSYmInJpZ2h0IiE9PWkmJihpPXMubGVmdD8icmlnaHQiOiJsZWZ0Iiksc1tpXT0hMDt2YXIgbj1uZXcga20oYSxpZyh0KSxbMCwwXSx0LmdldCgidHlwZSIpLGkpLG89ImNhdGVnb3J5Ij09PW4udHlwZTtuLm9uQmFuZD1vJiZ0LmdldCgiYm91bmRhcnlHYXAiKSxuLmludmVyc2U9dC5nZXQoImludmVyc2UiKSwodC5heGlzPW4pLm1vZGVsPXQsbi5ncmlkPXRoaXMsbi5pbmRleD1lLHRoaXMuX2F4ZXNMaXN0LnB1c2gobiksbFthXVtlXT1uLHVbYV0rK319fUUoKHRoaXMuX2F4ZXNNYXA9bCkueCxmdW5jdGlvbihvLGEpe0UobC55LGZ1bmN0aW9uKHQsZSl7dmFyIGk9IngiK2ErInkiK2Usbj1uZXcgTG0oaSk7bi5ncmlkPXRoaXMsbi5tb2RlbD1yLHRoaXMuX2Nvb3Jkc01hcFtpXT1uLHRoaXMuX2Nvb3Jkc0xpc3QucHVzaChuKSxuLmFkZEF4aXMobyksbi5hZGRBeGlzKHQpfSx0aGlzKX0sdGhpcyl9LEZtLl91cGRhdGVTY2FsZT1mdW5jdGlvbihsLHUpe2Z1bmN0aW9uIGgoZSxpKXtFKGUubWFwRGltZW5zaW9uKGkuZGltLCEwKSxmdW5jdGlvbih0KXtpLnNjYWxlLnVuaW9uRXh0ZW50RnJvbURhdGEoZSx1cChlLHQpKX0pfUUodGhpcy5fYXhlc0xpc3QsZnVuY3Rpb24odCl7dC5zY2FsZS5zZXRFeHRlbnQoMS8wLC0xLzApfSksbC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQpe2lmKFhtKHQpKXt2YXIgZT1VbSh0LGwpLGk9ZVswXSxuPWVbMV07aWYoIVZtKGksdSl8fCFWbShuLHUpKXJldHVybjt2YXIgbz10aGlzLmdldENhcnRlc2lhbihpLmNvbXBvbmVudEluZGV4LG4uY29tcG9uZW50SW5kZXgpLGE9dC5nZXREYXRhKCkscj1vLmdldEF4aXMoIngiKSxzPW8uZ2V0QXhpcygieSIpOyJsaXN0Ij09PWEudHlwZSYmKGgoYSxyLHQpLGgoYSxzLHQpKX19LHRoaXMpfSxGbS5nZXRUb29sdGlwQXhlcz1mdW5jdGlvbihuKXt2YXIgbz1bXSxhPVtdO3JldHVybiBFKHRoaXMuZ2V0Q2FydGVzaWFucygpLGZ1bmN0aW9uKHQpe3ZhciBlPW51bGwhPW4mJiJhdXRvIiE9PW4/dC5nZXRBeGlzKG4pOnQuZ2V0QmFzZUF4aXMoKSxpPXQuZ2V0T3RoZXJBeGlzKGUpO18obyxlKTwwJiZvLnB1c2goZSksXyhhLGkpPDAmJmEucHVzaChpKX0pLHtiYXNlQXhlczpvLG90aGVyQXhlczphfX07dmFyIFptPVsieEF4aXMiLCJ5QXhpcyJdO2Z1bmN0aW9uIFVtKGUpe3JldHVybiBOKFptLGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldFJlZmVycmluZ0NvbXBvbmVudHModClbMF19KX1mdW5jdGlvbiBYbSh0KXtyZXR1cm4iY2FydGVzaWFuMmQiPT09dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKX1HbS5jcmVhdGU9ZnVuY3Rpb24obixvKXt2YXIgYT1bXTtyZXR1cm4gbi5lYWNoQ29tcG9uZW50KCJncmlkIixmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBHbSh0LG4sbyk7aS5uYW1lPSJncmlkXyIrZSxpLnJlc2l6ZSh0LG8sITApLHQuY29vcmRpbmF0ZVN5c3RlbT1pLGEucHVzaChpKX0pLG4uZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZihYbSh0KSl7dmFyIGU9VW0odCksaT1lWzBdLG49ZVsxXSxvPWkuZ2V0Q29vcmRTeXNNb2RlbCgpLmNvb3JkaW5hdGVTeXN0ZW07dC5jb29yZGluYXRlU3lzdGVtPW8uZ2V0Q2FydGVzaWFuKGkuY29tcG9uZW50SW5kZXgsbi5jb21wb25lbnRJbmRleCl9fSksYX0sR20uZGltZW5zaW9ucz1HbS5wcm90b3R5cGUuZGltZW5zaW9ucz1MbS5wcm90b3R5cGUuZGltZW5zaW9ucyxuaC5yZWdpc3RlcigiY2FydGVzaWFuMmQiLEdtKTtmdW5jdGlvbiBZbSh0LGUpe3RoaXMub3B0PWUsdGhpcy5heGlzTW9kZWw9dCxDKGUse2xhYmVsT2Zmc2V0OjAsbmFtZURpcmVjdGlvbjoxLHRpY2tEaXJlY3Rpb246MSxsYWJlbERpcmVjdGlvbjoxLHNpbGVudDohMH0pLHRoaXMuZ3JvdXA9bmV3IElpO3ZhciBpPW5ldyBJaSh7cG9zaXRpb246ZS5wb3NpdGlvbi5zbGljZSgpLHJvdGF0aW9uOmUucm90YXRpb259KTtpLnVwZGF0ZVRyYW5zZm9ybSgpLHRoaXMuX3RyYW5zZm9ybT1pLnRyYW5zZm9ybSx0aGlzLl9kdW1iR3JvdXA9aX12YXIgam09TWF0aC5QSTtZbS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlltLGhhc0J1aWxkZXI6ZnVuY3Rpb24odCl7cmV0dXJuISFxbVt0XX0sYWRkOmZ1bmN0aW9uKHQpe3FtW3RdLmNhbGwodGhpcyl9LGdldEdyb3VwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ3JvdXB9fTt2YXIgcW09e2F4aXNMaW5lOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcHQsdD10aGlzLmF4aXNNb2RlbDtpZih0LmdldCgiYXhpc0xpbmUuc2hvdyIpKXt2YXIgZT10aGlzLmF4aXNNb2RlbC5heGlzLmdldEV4dGVudCgpLGk9dGhpcy5fdHJhbnNmb3JtLHI9W2VbMF0sMF0sbj1bZVsxXSwwXTtpJiYoYnQocixyLGkpLGJ0KG4sbixpKSk7dmFyIHM9TCh7bGluZUNhcDoicm91bmQifSx0LmdldE1vZGVsKCJheGlzTGluZS5saW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSk7dGhpcy5ncm91cC5hZGQobmV3IG9zKHthbmlkOiJsaW5lIixzdWJQaXhlbE9wdGltaXplOiEwLHNoYXBlOnt4MTpyWzBdLHkxOnJbMV0seDI6blswXSx5MjpuWzFdfSxzdHlsZTpzLHN0cm9rZUNvbnRhaW5UaHJlc2hvbGQ6YS5zdHJva2VDb250YWluVGhyZXNob2xkfHw1LHNpbGVudDohMCx6MjoxfSkpO3ZhciBsPXQuZ2V0KCJheGlzTGluZS5zeW1ib2wiKSxvPXQuZ2V0KCJheGlzTGluZS5zeW1ib2xTaXplIiksdT10LmdldCgiYXhpc0xpbmUuc3ltYm9sT2Zmc2V0Iil8fDA7aWYoIm51bWJlciI9PXR5cGVvZiB1JiYodT1bdSx1XSksbnVsbCE9bCl7InN0cmluZyI9PXR5cGVvZiBsJiYobD1bbCxsXSksInN0cmluZyIhPXR5cGVvZiBvJiYibnVtYmVyIiE9dHlwZW9mIG98fChvPVtvLG9dKTt2YXIgaD1vWzBdLGM9b1sxXTtFKFt7cm90YXRlOmEucm90YXRpb24rTWF0aC5QSS8yLG9mZnNldDp1WzBdLHI6MH0se3JvdGF0ZTphLnJvdGF0aW9uLU1hdGguUEkvMixvZmZzZXQ6dVsxXSxyOk1hdGguc3FydCgoclswXS1uWzBdKSooclswXS1uWzBdKSsoclsxXS1uWzFdKSooclsxXS1uWzFdKSl9XSxmdW5jdGlvbih0LGUpe2lmKCJub25lIiE9PWxbZV0mJm51bGwhPWxbZV0pe3ZhciBpPW1nKGxbZV0sLWgvMiwtYy8yLGgsYyxzLnN0cm9rZSwhMCksbj10LnIrdC5vZmZzZXQsbz1bclswXStuKk1hdGguY29zKGEucm90YXRpb24pLHJbMV0tbipNYXRoLnNpbihhLnJvdGF0aW9uKV07aS5hdHRyKHtyb3RhdGlvbjp0LnJvdGF0ZSxwb3NpdGlvbjpvLHNpbGVudDohMCx6MjoxMX0pLHRoaXMuZ3JvdXAuYWRkKGkpfX0sdGhpcyl9fX0sYXhpc1RpY2tMYWJlbDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuYXhpc01vZGVsLGU9dGhpcy5vcHQsaT1mdW5jdGlvbih0LGUsaSl7dmFyIG49ZS5heGlzLG89ZS5nZXRNb2RlbCgiYXhpc1RpY2siKTtpZighby5nZXQoInNob3ciKXx8bi5zY2FsZS5pc0JsYW5rKCkpcmV0dXJuO2Zvcih2YXIgYT1vLmdldE1vZGVsKCJsaW5lU3R5bGUiKSxyPWkudGlja0RpcmVjdGlvbipvLmdldCgibGVuZ3RoIikscz1pdihuLmdldFRpY2tzQ29vcmRzKCksdC5fdHJhbnNmb3JtLHIsQyhhLmdldExpbmVTdHlsZSgpLHtzdHJva2U6ZS5nZXQoImF4aXNMaW5lLmxpbmVTdHlsZS5jb2xvciIpfSksInRpY2tzIiksbD0wO2w8cy5sZW5ndGg7bCsrKXQuZ3JvdXAuYWRkKHNbbF0pO3JldHVybiBzfSh0aGlzLHQsZSk7IWZ1bmN0aW9uKHQsZSxpKXtpZihyZyh0LmF4aXMpKXJldHVybjt2YXIgbj10LmdldCgiYXhpc0xhYmVsLnNob3dNaW5MYWJlbCIpLG89dC5nZXQoImF4aXNMYWJlbC5zaG93TWF4TGFiZWwiKTtpPWl8fFtdO3ZhciBhPShlPWV8fFtdKVswXSxyPWVbMV0scz1lW2UubGVuZ3RoLTFdLGw9ZVtlLmxlbmd0aC0yXSx1PWlbMF0saD1pWzFdLGM9aVtpLmxlbmd0aC0xXSxkPWlbaS5sZW5ndGgtMl07ITE9PT1uPyhRbShhKSxRbSh1KSk6dHYoYSxyKSYmKG4/KFFtKHIpLFFtKGgpKTooUW0oYSksUW0odSkpKTshMT09PW8/KFFtKHMpLFFtKGMpKTp0dihsLHMpJiYobz8oUW0obCksUW0oZCkpOihRbShzKSxRbShjKSkpfSh0LGZ1bmN0aW9uKHUsaCxjKXt2YXIgZD1oLmF4aXM7aWYoIVcoYy5heGlzTGFiZWxTaG93LGguZ2V0KCJheGlzTGFiZWwuc2hvdyIpKXx8ZC5zY2FsZS5pc0JsYW5rKCkpcmV0dXJuO3ZhciBmPWguZ2V0TW9kZWwoImF4aXNMYWJlbCIpLHA9Zi5nZXQoIm1hcmdpbiIpLHQ9ZC5nZXRWaWV3TGFiZWxzKCksZT0oVyhjLmxhYmVsUm90YXRlLGYuZ2V0KCJyb3RhdGUiKSl8fDApKmptLzE4MCxnPSRtKGMucm90YXRpb24sZSxjLmxhYmVsRGlyZWN0aW9uKSxtPWguZ2V0Q2F0ZWdvcmllcyYmaC5nZXRDYXRlZ29yaWVzKCEwKSx2PVtdLHk9Sm0oaCkseD1oLmdldCgidHJpZ2dlckV2ZW50Iik7cmV0dXJuIEUodCxmdW5jdGlvbih0LGUpe3ZhciBpPXQudGlja1ZhbHVlLG49dC5mb3JtYXR0ZWRMYWJlbCxvPXQucmF3TGFiZWwsYT1mO20mJm1baV0mJm1baV0udGV4dFN0eWxlJiYoYT1uZXcgSWwobVtpXS50ZXh0U3R5bGUsZixoLmVjTW9kZWwpKTt2YXIgcj1hLmdldFRleHRDb2xvcigpfHxoLmdldCgiYXhpc0xpbmUubGluZVN0eWxlLmNvbG9yIikscz1bZC5kYXRhVG9Db29yZChpKSxjLmxhYmVsT2Zmc2V0K2MubGFiZWxEaXJlY3Rpb24qcF0sbD1uZXcgRnIoe2FuaWQ6ImxhYmVsXyIraSxwb3NpdGlvbjpzLHJvdGF0aW9uOmcucm90YXRpb24sc2lsZW50OnksejI6MTB9KTtRcyhsLnN0eWxlLGEse3RleHQ6bix0ZXh0QWxpZ246YS5nZXRTaGFsbG93KCJhbGlnbiIsITApfHxnLnRleHRBbGlnbix0ZXh0VmVydGljYWxBbGlnbjphLmdldFNoYWxsb3coInZlcnRpY2FsQWxpZ24iLCEwKXx8YS5nZXRTaGFsbG93KCJiYXNlbGluZSIsITApfHxnLnRleHRWZXJ0aWNhbEFsaWduLHRleHRGaWxsOiJmdW5jdGlvbiI9PXR5cGVvZiByP3IoImNhdGVnb3J5Ij09PWQudHlwZT9vOiJ2YWx1ZSI9PT1kLnR5cGU/aSsiIjppLGUpOnJ9KSx4JiYobC5ldmVudERhdGE9S20oaCksbC5ldmVudERhdGEudGFyZ2V0VHlwZT0iYXhpc0xhYmVsIixsLmV2ZW50RGF0YS52YWx1ZT1vKSx1Ll9kdW1iR3JvdXAuYWRkKGwpLGwudXBkYXRlVHJhbnNmb3JtKCksdi5wdXNoKGwpLHUuZ3JvdXAuYWRkKGwpLGwuZGVjb21wb3NlVHJhbnNmb3JtKCl9KSx2fSh0aGlzLHQsZSksaSksZnVuY3Rpb24odCxlLGkpe3ZhciBuPWUuYXhpcyxvPWUuZ2V0TW9kZWwoIm1pbm9yVGljayIpO2lmKCFvLmdldCgic2hvdyIpfHxuLnNjYWxlLmlzQmxhbmsoKSlyZXR1cm47dmFyIGE9bi5nZXRNaW5vclRpY2tzQ29vcmRzKCk7aWYoIWEubGVuZ3RoKXJldHVybjtmb3IodmFyIHI9by5nZXRNb2RlbCgibGluZVN0eWxlIikscz1pLnRpY2tEaXJlY3Rpb24qby5nZXQoImxlbmd0aCIpLGw9QyhyLmdldExpbmVTdHlsZSgpLEMoZS5nZXRNb2RlbCgiYXhpc1RpY2siKS5nZXRMaW5lU3R5bGUoKSx7c3Ryb2tlOmUuZ2V0KCJheGlzTGluZS5saW5lU3R5bGUuY29sb3IiKX0pKSx1PTA7dTxhLmxlbmd0aDt1KyspZm9yKHZhciBoPWl2KGFbdV0sdC5fdHJhbnNmb3JtLHMsbCwibWlub3J0aWNrc18iK3UpLGM9MDtjPGgubGVuZ3RoO2MrKyl0Lmdyb3VwLmFkZChoW2NdKX0odGhpcyx0LGUpfSxheGlzTmFtZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0LGU9dGhpcy5heGlzTW9kZWwsaT1XKHQuYXhpc05hbWUsZS5nZXQoIm5hbWUiKSk7aWYoaSl7dmFyIG4sbyxhPWUuZ2V0KCJuYW1lTG9jYXRpb24iKSxyPXQubmFtZURpcmVjdGlvbixzPWUuZ2V0TW9kZWwoIm5hbWVUZXh0U3R5bGUiKSxsPWUuZ2V0KCJuYW1lR2FwIil8fDAsdT10aGlzLmF4aXNNb2RlbC5heGlzLmdldEV4dGVudCgpLGg9dVswXT51WzFdPy0xOjEsYz1bInN0YXJ0Ij09PWE/dVswXS1oKmw6ImVuZCI9PT1hP3VbMV0raCpsOih1WzBdK3VbMV0pLzIsZXYoYSk/dC5sYWJlbE9mZnNldCtyKmw6MF0sZD1lLmdldCgibmFtZVJvdGF0ZSIpO251bGwhPWQmJihkPWQqam0vMTgwKSxldihhKT9uPSRtKHQucm90YXRpb24sbnVsbCE9ZD9kOnQucm90YXRpb24scik6KG49ZnVuY3Rpb24odCxlLGksbil7dmFyIG8sYSxyPUdsKGktdC5yb3RhdGlvbikscz1uWzBdPm5bMV0sbD0ic3RhcnQiPT09ZSYmIXN8fCJzdGFydCIhPT1lJiZzO289Rmwoci1qbS8yKT8oYT1sPyJib3R0b20iOiJ0b3AiLCJjZW50ZXIiKTpGbChyLTEuNSpqbSk/KGE9bD8idG9wIjoiYm90dG9tIiwiY2VudGVyIik6KGE9Im1pZGRsZSIscjwxLjUqam0mJmptLzI8cj9sPyJsZWZ0IjoicmlnaHQiOmw/InJpZ2h0IjoibGVmdCIpO3JldHVybntyb3RhdGlvbjpyLHRleHRBbGlnbjpvLHRleHRWZXJ0aWNhbEFsaWduOmF9fSh0LGEsZHx8MCx1KSxudWxsIT0obz10LmF4aXNOYW1lQXZhaWxhYmxlV2lkdGgpJiYobz1NYXRoLmFicyhvL01hdGguc2luKG4ucm90YXRpb24pKSxpc0Zpbml0ZShvKXx8KG89bnVsbCkpKTt2YXIgZj1zLmdldEZvbnQoKSxwPWUuZ2V0KCJuYW1lVHJ1bmNhdGUiLCEwKXx8e30sZz1wLmVsbGlwc2lzLG09Vyh0Lm5hbWVUcnVuY2F0ZU1heFdpZHRoLHAubWF4V2lkdGgsbyksdj1udWxsIT1nJiZudWxsIT1tP2h1KGksbSxmLGcse21pbkNoYXI6MixwbGFjZWhvbGRlcjpwLnBsYWNlaG9sZGVyfSk6aSx5PWUuZ2V0KCJ0b29sdGlwIiwhMCkseD1lLm1haW5UeXBlLF89e2NvbXBvbmVudFR5cGU6eCxuYW1lOmksJHZhcnM6WyJuYW1lIl19O19beCsiSW5kZXgiXT1lLmNvbXBvbmVudEluZGV4O3ZhciB3PW5ldyBGcih7YW5pZDoibmFtZSIsX19mdWxsVGV4dDppLF9fdHJ1bmNhdGVkVGV4dDp2LHBvc2l0aW9uOmMscm90YXRpb246bi5yb3RhdGlvbixzaWxlbnQ6Sm0oZSksejI6MSx0b29sdGlwOnkmJnkuc2hvdz9MKHtjb250ZW50OmksZm9ybWF0dGVyOmZ1bmN0aW9uKCl7cmV0dXJuIGl9LGZvcm1hdHRlclBhcmFtczpffSx5KTpudWxsfSk7UXMody5zdHlsZSxzLHt0ZXh0OnYsdGV4dEZvbnQ6Zix0ZXh0RmlsbDpzLmdldFRleHRDb2xvcigpfHxlLmdldCgiYXhpc0xpbmUubGluZVN0eWxlLmNvbG9yIiksdGV4dEFsaWduOnMuZ2V0KCJhbGlnbiIpfHxuLnRleHRBbGlnbix0ZXh0VmVydGljYWxBbGlnbjpzLmdldCgidmVydGljYWxBbGlnbiIpfHxuLnRleHRWZXJ0aWNhbEFsaWdufSksZS5nZXQoInRyaWdnZXJFdmVudCIpJiYody5ldmVudERhdGE9S20oZSksdy5ldmVudERhdGEudGFyZ2V0VHlwZT0iYXhpc05hbWUiLHcuZXZlbnREYXRhLm5hbWU9aSksdGhpcy5fZHVtYkdyb3VwLmFkZCh3KSx3LnVwZGF0ZVRyYW5zZm9ybSgpLHRoaXMuZ3JvdXAuYWRkKHcpLHcuZGVjb21wb3NlVHJhbnNmb3JtKCl9fX0sS209WW0ubWFrZUF4aXNFdmVudERhdGFCYXNlPWZ1bmN0aW9uKHQpe3ZhciBlPXtjb21wb25lbnRUeXBlOnQubWFpblR5cGUsY29tcG9uZW50SW5kZXg6dC5jb21wb25lbnRJbmRleH07cmV0dXJuIGVbdC5tYWluVHlwZSsiSW5kZXgiXT10LmNvbXBvbmVudEluZGV4LGV9LCRtPVltLmlubmVyVGV4dExheW91dD1mdW5jdGlvbih0LGUsaSl7dmFyIG4sbz1HbChlLXQpO3JldHVybntyb3RhdGlvbjpvLHRleHRBbGlnbjpGbChvKT8obj0wPGk/InRvcCI6ImJvdHRvbSIsImNlbnRlciIpOkZsKG8tam0pPyhuPTA8aT8iYm90dG9tIjoidG9wIiwiY2VudGVyIik6KG49Im1pZGRsZSIsMDxvJiZvPGptPzA8aT8icmlnaHQiOiJsZWZ0IjowPGk/ImxlZnQiOiJyaWdodCIpLHRleHRWZXJ0aWNhbEFsaWduOm59fTt2YXIgSm09WW0uaXNMYWJlbFNpbGVudD1mdW5jdGlvbih0KXt2YXIgZT10LmdldCgidG9vbHRpcCIpO3JldHVybiB0LmdldCgic2lsZW50Iil8fCEodC5nZXQoInRyaWdnZXJFdmVudCIpfHxlJiZlLnNob3cpfTtmdW5jdGlvbiBRbSh0KXt0JiYodC5pZ25vcmU9ITApfWZ1bmN0aW9uIHR2KHQsZSl7dmFyIGk9dCYmdC5nZXRCb3VuZGluZ1JlY3QoKS5jbG9uZSgpLG49ZSYmZS5nZXRCb3VuZGluZ1JlY3QoKS5jbG9uZSgpO2lmKGkmJm4pe3ZhciBvPWllKFtdKTtyZXR1cm4gcmUobyxvLC10LnJvdGF0aW9uKSxpLmFwcGx5VHJhbnNmb3JtKG9lKFtdLG8sdC5nZXRMb2NhbFRyYW5zZm9ybSgpKSksbi5hcHBseVRyYW5zZm9ybShvZShbXSxvLGUuZ2V0TG9jYWxUcmFuc2Zvcm0oKSkpLGkuaW50ZXJzZWN0KG4pfX1mdW5jdGlvbiBldih0KXtyZXR1cm4ibWlkZGxlIj09PXR8fCJjZW50ZXIiPT09dH1mdW5jdGlvbiBpdih0LGUsaSxuLG8pe2Zvcih2YXIgYT1bXSxyPVtdLHM9W10sbD0wO2w8dC5sZW5ndGg7bCsrKXt2YXIgdT10W2xdLmNvb3JkO3JbMF09dSxzW3JbMV09MF09dSxzWzFdPWksZSYmKGJ0KHIscixlKSxidChzLHMsZSkpO3ZhciBoPW5ldyBvcyh7YW5pZDpvKyJfIit0W2xdLnRpY2tWYWx1ZSxzdWJQaXhlbE9wdGltaXplOiEwLHNoYXBlOnt4MTpyWzBdLHkxOnJbMV0seDI6c1swXSx5MjpzWzFdfSxzdHlsZTpuLHoyOjIsc2lsZW50OiEwfSk7YS5wdXNoKGgpfXJldHVybiBhfXZhciBudj1FLG92PVQ7ZnVuY3Rpb24gYXYodCxlKXt2YXIgaT17YXhlc0luZm86e30sc2VyaWVzSW52b2x2ZWQ6ITEsY29vcmRTeXNBeGVzSW5mbzp7fSxjb29yZFN5c01hcDp7fX07cmV0dXJuIGZ1bmN0aW9uKHAsZyx0KXt2YXIgYT1nLmdldENvbXBvbmVudCgidG9vbHRpcCIpLG09Zy5nZXRDb21wb25lbnQoImF4aXNQb2ludGVyIiksdj1tLmdldCgibGluayIsITApfHxbXSx5PVtdO252KHQuZ2V0Q29vcmRpbmF0ZVN5c3RlbXMoKSxmdW5jdGlvbihjKXtpZihjLmF4aXNQb2ludGVyRW5hYmxlZCl7dmFyIHQ9dXYoYy5tb2RlbCksZD1wLmNvb3JkU3lzQXhlc0luZm9bdF09e30sZj0ocC5jb29yZFN5c01hcFt0XT1jKS5tb2RlbC5nZXRNb2RlbCgidG9vbHRpcCIsYSk7aWYobnYoYy5nZXRBeGVzKCksb3YobywhMSxudWxsKSksYy5nZXRUb29sdGlwQXhlcyYmYSYmZi5nZXQoInNob3ciKSl7dmFyIGU9ImF4aXMiPT09Zi5nZXQoInRyaWdnZXIiKSxpPSJjcm9zcyI9PT1mLmdldCgiYXhpc1BvaW50ZXIudHlwZSIpLG49Yy5nZXRUb29sdGlwQXhlcyhmLmdldCgiYXhpc1BvaW50ZXIuYXhpcyIpKTsoZXx8aSkmJm52KG4uYmFzZUF4ZXMsb3YobywhaXx8ImNyb3NzIixlKSksaSYmbnYobi5vdGhlckF4ZXMsb3YobywiY3Jvc3MiLCExKSl9fWZ1bmN0aW9uIG8odCxlLGkpe3ZhciBuPWkubW9kZWwuZ2V0TW9kZWwoImF4aXNQb2ludGVyIixtKSxvPW4uZ2V0KCJzaG93Iik7aWYobyYmKCJhdXRvIiE9PW98fHR8fGx2KG4pKSl7bnVsbD09ZSYmKGU9bi5nZXQoInRyaWdnZXJUb29sdGlwIikpO3ZhciBhPShuPXQ/ZnVuY3Rpb24odCxlLGksbixvLGEpe3ZhciByPWUuZ2V0TW9kZWwoImF4aXNQb2ludGVyIikscz17fTtudihbInR5cGUiLCJzbmFwIiwibGluZVN0eWxlIiwic2hhZG93U3R5bGUiLCJsYWJlbCIsImFuaW1hdGlvbiIsImFuaW1hdGlvbkR1cmF0aW9uVXBkYXRlIiwiYW5pbWF0aW9uRWFzaW5nVXBkYXRlIiwieiJdLGZ1bmN0aW9uKHQpe3NbdF09RChyLmdldCh0KSl9KSxzLnNuYXA9ImNhdGVnb3J5IiE9PXQudHlwZSYmISFhLCJjcm9zcyI9PT1yLmdldCgidHlwZSIpJiYocy50eXBlPSJsaW5lIik7dmFyIGw9cy5sYWJlbHx8KHMubGFiZWw9e30pO2lmKG51bGw9PWwuc2hvdyYmKGwuc2hvdz0hMSksImNyb3NzIj09PW8pe3ZhciB1PXIuZ2V0KCJsYWJlbC5zaG93Iik7aWYobC5zaG93PW51bGw9PXV8fHUsIWEpe3ZhciBoPXMubGluZVN0eWxlPXIuZ2V0KCJjcm9zc1N0eWxlIik7aCYmQyhsLGgudGV4dFN0eWxlKX19cmV0dXJuIHQubW9kZWwuZ2V0TW9kZWwoImF4aXNQb2ludGVyIixuZXcgSWwocyxpLG4pKX0oaSxmLG0sZyx0LGUpOm4pLmdldCgic25hcCIpLHI9dXYoaS5tb2RlbCkscz1lfHxhfHwiY2F0ZWdvcnkiPT09aS50eXBlLGw9cC5heGVzSW5mb1tyXT17a2V5OnIsYXhpczppLGNvb3JkU3lzOmMsYXhpc1BvaW50ZXJNb2RlbDpuLHRyaWdnZXJUb29sdGlwOmUsaW52b2x2ZVNlcmllczpzLHNuYXA6YSx1c2VIYW5kbGU6bHYobiksc2VyaWVzTW9kZWxzOltdfTtkW3JdPWwscC5zZXJpZXNJbnZvbHZlZHw9czt2YXIgdT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1lLm1vZGVsLG49ZS5kaW0sbz0wO288dC5sZW5ndGg7bysrKXt2YXIgYT10W29dfHx7fTtpZihydihhW24rIkF4aXNJZCJdLGkuaWQpfHxydihhW24rIkF4aXNJbmRleCJdLGkuY29tcG9uZW50SW5kZXgpfHxydihhW24rIkF4aXNOYW1lIl0saS5uYW1lKSlyZXR1cm4gb319KHYsaSk7aWYobnVsbCE9dSl7dmFyIGg9eVt1XXx8KHlbdV09e2F4ZXNJbmZvOnt9fSk7aC5heGVzSW5mb1tyXT1sLGgubWFwcGVyPXZbdV0ubWFwcGVyLGwubGlua0dyb3VwPWh9fX19KX0oaSx0LGUpLGkuc2VyaWVzSW52b2x2ZWQmJmZ1bmN0aW9uKG8sdCl7dC5lYWNoU2VyaWVzKGZ1bmN0aW9uKGkpe3ZhciBuPWkuY29vcmRpbmF0ZVN5c3RlbSx0PWkuZ2V0KCJ0b29sdGlwLnRyaWdnZXIiLCEwKSxlPWkuZ2V0KCJ0b29sdGlwLnNob3ciLCEwKTtuJiYibm9uZSIhPT10JiYhMSE9PXQmJiJpdGVtIiE9PXQmJiExIT09ZSYmITEhPT1pLmdldCgiYXhpc1BvaW50ZXIuc2hvdyIsITApJiZudihvLmNvb3JkU3lzQXhlc0luZm9bdXYobi5tb2RlbCldLGZ1bmN0aW9uKHQpe3ZhciBlPXQuYXhpcztuLmdldEF4aXMoZS5kaW0pPT09ZSYmKHQuc2VyaWVzTW9kZWxzLnB1c2goaSksbnVsbD09dC5zZXJpZXNEYXRhQ291bnQmJih0LnNlcmllc0RhdGFDb3VudD0wKSx0LnNlcmllc0RhdGFDb3VudCs9aS5nZXREYXRhKCkuY291bnQoKSl9KX0sdGhpcyl9KGksdCksaX1mdW5jdGlvbiBydih0LGUpe3JldHVybiJhbGwiPT09dHx8ayh0KSYmMDw9Xyh0LGUpfHx0PT09ZX1mdW5jdGlvbiBzdih0KXt2YXIgZT0odC5lY01vZGVsLmdldENvbXBvbmVudCgiYXhpc1BvaW50ZXIiKXx8e30pLmNvb3JkU3lzQXhlc0luZm87cmV0dXJuIGUmJmUuYXhlc0luZm9bdXYodCldfWZ1bmN0aW9uIGx2KHQpe3JldHVybiEhdC5nZXQoImhhbmRsZS5zaG93Iil9ZnVuY3Rpb24gdXYodCl7cmV0dXJuIHQudHlwZSsifHwiK3QuaWR9dmFyIGh2PWJmKHt0eXBlOiJheGlzIixfYXhpc1BvaW50ZXI6bnVsbCxheGlzUG9pbnRlckNsYXNzOm51bGwscmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuYXhpc1BvaW50ZXJDbGFzcyYmZnVuY3Rpb24odCl7dmFyIGU9c3YodCk7aWYoZSl7dmFyIGk9ZS5heGlzUG9pbnRlck1vZGVsLG49ZS5heGlzLnNjYWxlLG89aS5vcHRpb24sYT1pLmdldCgic3RhdHVzIikscj1pLmdldCgidmFsdWUiKTtudWxsIT1yJiYocj1uLnBhcnNlKHIpKTt2YXIgcz1sdihpKTtudWxsPT1hJiYoby5zdGF0dXM9cz8ic2hvdyI6ImhpZGUiKTt2YXIgbD1uLmdldEV4dGVudCgpLnNsaWNlKCk7bFswXT5sWzFdJiZsLnJldmVyc2UoKSwobnVsbD09cnx8cj5sWzFdKSYmKHI9bFsxXSkscjxsWzBdJiYocj1sWzBdKSxvLnZhbHVlPXIscyYmKG8uc3RhdHVzPWUuYXhpcy5zY2FsZS5pc0JsYW5rKCk/ImhpZGUiOiJzaG93Iil9fSh0KSxodi5zdXBlckFwcGx5KHRoaXMsInJlbmRlciIsYXJndW1lbnRzKSxjdih0aGlzLHQsZSxpLG4sITApfSx1cGRhdGVBeGlzUG9pbnRlcjpmdW5jdGlvbih0LGUsaSxuLG8pe2N2KHRoaXMsdCxlLGksbiwhMSl9LHJlbW92ZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2F4aXNQb2ludGVyO2kmJmkucmVtb3ZlKGUpLGh2LnN1cGVyQXBwbHkodGhpcywicmVtb3ZlIixhcmd1bWVudHMpfSxkaXNwb3NlOmZ1bmN0aW9uKHQsZSl7ZHYodGhpcyxlKSxodi5zdXBlckFwcGx5KHRoaXMsImRpc3Bvc2UiLGFyZ3VtZW50cyl9fSk7ZnVuY3Rpb24gY3YodCxlLGksbixvLGEpe3ZhciByPWh2LmdldEF4aXNQb2ludGVyQ2xhc3ModC5heGlzUG9pbnRlckNsYXNzKTtpZihyKXt2YXIgcz1mdW5jdGlvbih0KXt2YXIgZT1zdih0KTtyZXR1cm4gZSYmZS5heGlzUG9pbnRlck1vZGVsfShlKTtzPyh0Ll9heGlzUG9pbnRlcnx8KHQuX2F4aXNQb2ludGVyPW5ldyByKSkucmVuZGVyKGUscyxuLGEpOmR2KHQsbil9fWZ1bmN0aW9uIGR2KHQsZSxpKXt2YXIgbj10Ll9heGlzUG9pbnRlcjtuJiZuLmRpc3Bvc2UoZSxpKSx0Ll9heGlzUG9pbnRlcj1udWxsfXZhciBmdj1bXTtmdW5jdGlvbiBwdih0LGUsaSl7aT1pfHx7fTt2YXIgbj10LmNvb3JkaW5hdGVTeXN0ZW0sbz1lLmF4aXMsYT17fSxyPW8uZ2V0QXhlc09uWmVyb09mKClbMF0scz1vLnBvc2l0aW9uLGw9cj8ib25aZXJvIjpzLHU9by5kaW0saD1uLmdldFJlY3QoKSxjPVtoLngsaC54K2gud2lkdGgsaC55LGgueStoLmhlaWdodF0sZD17bGVmdDowLHJpZ2h0OjEsdG9wOjAsYm90dG9tOjEsb25aZXJvOjJ9LGY9ZS5nZXQoIm9mZnNldCIpfHwwLHA9IngiPT09dT9bY1syXS1mLGNbM10rZl06W2NbMF0tZixjWzFdK2ZdO2lmKHIpe3ZhciBnPXIudG9HbG9iYWxDb29yZChyLmRhdGFUb0Nvb3JkKDApKTtwW2Qub25aZXJvXT1NYXRoLm1heChNYXRoLm1pbihnLHBbMV0pLHBbMF0pfWEucG9zaXRpb249WyJ5Ij09PXU/cFtkW2xdXTpjWzBdLCJ4Ij09PXU/cFtkW2xdXTpjWzNdXSxhLnJvdGF0aW9uPU1hdGguUEkvMiooIngiPT09dT8wOjEpO2EubGFiZWxEaXJlY3Rpb249YS50aWNrRGlyZWN0aW9uPWEubmFtZURpcmVjdGlvbj17dG9wOi0xLGJvdHRvbToxLGxlZnQ6LTEscmlnaHQ6MX1bc10sYS5sYWJlbE9mZnNldD1yP3BbZFtzXV0tcFtkLm9uWmVyb106MCxlLmdldCgiYXhpc1RpY2suaW5zaWRlIikmJihhLnRpY2tEaXJlY3Rpb249LWEudGlja0RpcmVjdGlvbiksVyhpLmxhYmVsSW5zaWRlLGUuZ2V0KCJheGlzTGFiZWwuaW5zaWRlIikpJiYoYS5sYWJlbERpcmVjdGlvbj0tYS5sYWJlbERpcmVjdGlvbik7dmFyIG09ZS5nZXQoImF4aXNMYWJlbC5yb3RhdGUiKTtyZXR1cm4gYS5sYWJlbFJvdGF0ZT0idG9wIj09PWw/LW06bSxhLnoyPTEsYX1odi5yZWdpc3RlckF4aXNQb2ludGVyQ2xhc3M9ZnVuY3Rpb24odCxlKXtmdlt0XT1lfSxodi5nZXRBeGlzUG9pbnRlckNsYXNzPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZmdlt0XX07dmFyIGd2PVsiYXhpc0xpbmUiLCJheGlzVGlja0xhYmVsIiwiYXhpc05hbWUiXSxtdj1bInNwbGl0QXJlYSIsInNwbGl0TGluZSIsIm1pbm9yU3BsaXRMaW5lIl0sdnY9aHYuZXh0ZW5kKHt0eXBlOiJjYXJ0ZXNpYW5BeGlzIixheGlzUG9pbnRlckNsYXNzOiJDYXJ0ZXNpYW5BeGlzUG9pbnRlciIscmVuZGVyOmZ1bmN0aW9uKGUsdCxpLG4pe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCk7dmFyIG89dGhpcy5fYXhpc0dyb3VwO2lmKHRoaXMuX2F4aXNHcm91cD1uZXcgSWksdGhpcy5ncm91cC5hZGQodGhpcy5fYXhpc0dyb3VwKSxlLmdldCgic2hvdyIpKXt2YXIgYT1lLmdldENvb3JkU3lzTW9kZWwoKSxyPXB2KGEsZSkscz1uZXcgWW0oZSxyKTtFKGd2LHMuYWRkLHMpLHRoaXMuX2F4aXNHcm91cC5hZGQocy5nZXRHcm91cCgpKSxFKG12LGZ1bmN0aW9uKHQpe2UuZ2V0KHQrIi5zaG93IikmJnRoaXNbIl8iK3RdKGUsYSl9LHRoaXMpLGRsKG8sdGhpcy5fYXhpc0dyb3VwLGUpLHZ2LnN1cGVyQ2FsbCh0aGlzLCJyZW5kZXIiLGUsdCxpLG4pfX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5fc3BsaXRBcmVhQ29sb3JzPW51bGx9LF9zcGxpdExpbmU6ZnVuY3Rpb24odCxlKXt2YXIgaT10LmF4aXM7aWYoIWkuc2NhbGUuaXNCbGFuaygpKXt2YXIgbj10LmdldE1vZGVsKCJzcGxpdExpbmUiKSxvPW4uZ2V0TW9kZWwoImxpbmVTdHlsZSIpLGE9by5nZXQoImNvbG9yIik7YT1rKGEpP2E6W2FdO2Zvcih2YXIgcj1lLmNvb3JkaW5hdGVTeXN0ZW0uZ2V0UmVjdCgpLHM9aS5pc0hvcml6b250YWwoKSxsPTAsdT1pLmdldFRpY2tzQ29vcmRzKHt0aWNrTW9kZWw6bn0pLGg9W10sYz1bXSxkPW8uZ2V0TGluZVN0eWxlKCksZj0wO2Y8dS5sZW5ndGg7ZisrKXt2YXIgcD1pLnRvR2xvYmFsQ29vcmQodVtmXS5jb29yZCk7cz8oaFswXT1wLGhbMV09ci55LGNbMF09cCxjWzFdPXIueStyLmhlaWdodCk6KGhbMF09ci54LGhbMV09cCxjWzBdPXIueCtyLndpZHRoLGNbMV09cCk7dmFyIGc9bCsrJWEubGVuZ3RoLG09dVtmXS50aWNrVmFsdWU7dGhpcy5fYXhpc0dyb3VwLmFkZChuZXcgb3Moe2FuaWQ6bnVsbCE9bT8ibGluZV8iK3VbZl0udGlja1ZhbHVlOm51bGwsc3ViUGl4ZWxPcHRpbWl6ZTohMCxzaGFwZTp7eDE6aFswXSx5MTpoWzFdLHgyOmNbMF0seTI6Y1sxXX0sc3R5bGU6Qyh7c3Ryb2tlOmFbZ119LGQpLHNpbGVudDohMH0pKX19fSxfbWlub3JTcGxpdExpbmU6ZnVuY3Rpb24odCxlKXt2YXIgaT10LmF4aXMsbj10LmdldE1vZGVsKCJtaW5vclNwbGl0TGluZSIpLmdldE1vZGVsKCJsaW5lU3R5bGUiKSxvPWUuY29vcmRpbmF0ZVN5c3RlbS5nZXRSZWN0KCksYT1pLmlzSG9yaXpvbnRhbCgpLHI9aS5nZXRNaW5vclRpY2tzQ29vcmRzKCk7aWYoci5sZW5ndGgpZm9yKHZhciBzPVtdLGw9W10sdT1uLmdldExpbmVTdHlsZSgpLGg9MDtoPHIubGVuZ3RoO2grKylmb3IodmFyIGM9MDtjPHJbaF0ubGVuZ3RoO2MrKyl7dmFyIGQ9aS50b0dsb2JhbENvb3JkKHJbaF1bY10uY29vcmQpO2E/KHNbMF09ZCxzWzFdPW8ueSxsWzBdPWQsbFsxXT1vLnkrby5oZWlnaHQpOihzWzBdPW8ueCxzWzFdPWQsbFswXT1vLngrby53aWR0aCxsWzFdPWQpLHRoaXMuX2F4aXNHcm91cC5hZGQobmV3IG9zKHthbmlkOiJtaW5vcl9saW5lXyIrcltoXVtjXS50aWNrVmFsdWUsc3ViUGl4ZWxPcHRpbWl6ZTohMCxzaGFwZTp7eDE6c1swXSx5MTpzWzFdLHgyOmxbMF0seTI6bFsxXX0sc3R5bGU6dSxzaWxlbnQ6ITB9KSl9fSxfc3BsaXRBcmVhOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5heGlzO2lmKCFpLnNjYWxlLmlzQmxhbmsoKSl7dmFyIG49dC5nZXRNb2RlbCgic3BsaXRBcmVhIiksbz1uLmdldE1vZGVsKCJhcmVhU3R5bGUiKSxhPW8uZ2V0KCJjb2xvciIpLHI9ZS5jb29yZGluYXRlU3lzdGVtLmdldFJlY3QoKSxzPWkuZ2V0VGlja3NDb29yZHMoe3RpY2tNb2RlbDpuLGNsYW1wOiEwfSk7aWYocy5sZW5ndGgpe3ZhciBsPWEubGVuZ3RoLHU9dGhpcy5fc3BsaXRBcmVhQ29sb3JzLGg9USgpLGM9MDtpZih1KWZvcih2YXIgZD0wO2Q8cy5sZW5ndGg7ZCsrKXt2YXIgZj11LmdldChzW2RdLnRpY2tWYWx1ZSk7aWYobnVsbCE9Zil7Yz0oZisobC0xKSpkKSVsO2JyZWFrfX12YXIgcD1pLnRvR2xvYmFsQ29vcmQoc1swXS5jb29yZCksZz1vLmdldEFyZWFTdHlsZSgpO2E9ayhhKT9hOlthXTtmb3IoZD0xO2Q8cy5sZW5ndGg7ZCsrKXt2YXIgbSx2LHkseCxfPWkudG9HbG9iYWxDb29yZChzW2RdLmNvb3JkKTtwPWkuaXNIb3Jpem9udGFsKCk/KG09cCx2PXIueSx5PV8tbSx4PXIuaGVpZ2h0LG0reSk6KG09ci54LHY9cCx5PXIud2lkdGgsdisoeD1fLXYpKTt2YXIgdz1zW2QtMV0udGlja1ZhbHVlO251bGwhPXcmJmguc2V0KHcsYyksdGhpcy5fYXhpc0dyb3VwLmFkZChuZXcgaXMoe2FuaWQ6bnVsbCE9dz8iYXJlYV8iK3c6bnVsbCxzaGFwZTp7eDptLHk6dix3aWR0aDp5LGhlaWdodDp4fSxzdHlsZTpDKHtmaWxsOmFbY119LGcpLHNpbGVudDohMH0pKSxjPShjKzEpJWx9dGhpcy5fc3BsaXRBcmVhQ29sb3JzPWh9fX19KTt2di5leHRlbmQoe3R5cGU6InhBeGlzIn0pLHZ2LmV4dGVuZCh7dHlwZToieUF4aXMifSksYmYoe3R5cGU6ImdyaWQiLHJlbmRlcjpmdW5jdGlvbih0LGUpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCksdC5nZXQoInNob3ciKSYmdGhpcy5ncm91cC5hZGQobmV3IGlzKHtzaGFwZTp0LmNvb3JkaW5hdGVTeXN0ZW0uZ2V0UmVjdCgpLHN0eWxlOkMoe2ZpbGw6dC5nZXQoImJhY2tncm91bmRDb2xvciIpfSx0LmdldEl0ZW1TdHlsZSgpKSxzaWxlbnQ6ITAsejI6LTF9KSl9fSksZmYoZnVuY3Rpb24odCl7dC54QXhpcyYmdC55QXhpcyYmIXQuZ3JpZCYmKHQuZ3JpZD17fSl9KSx5ZihNbSgibGluZSIsImNpcmNsZSIsImxpbmUiKSksdmYoSW0oImxpbmUiKSkscGYoSWQuUFJPQ0VTU09SLlNUQVRJU1RJQyx7c2VyaWVzVHlwZToibGluZSIsbW9kaWZ5T3V0cHV0RW5kOiEwLHJlc2V0OmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKSxvPXQuZ2V0KCJzYW1wbGluZyIpLGE9dC5jb29yZGluYXRlU3lzdGVtO2lmKCJjYXJ0ZXNpYW4yZCI9PT1hLnR5cGUmJm8pe3ZhciByLHM9YS5nZXRCYXNlQXhpcygpLGw9YS5nZXRPdGhlckF4aXMocyksdT1zLmdldEV4dGVudCgpLGg9dVsxXS11WzBdLGM9TWF0aC5yb3VuZChuLmNvdW50KCkvaCk7MTxjJiYoInN0cmluZyI9PXR5cGVvZiBvP3I9QW1bb106ImZ1bmN0aW9uIj09dHlwZW9mIG8mJihyPW8pLHImJnQuc2V0RGF0YShuLmRvd25TYW1wbGUobi5tYXBEaW1lbnNpb24obC5kaW0pLDEvYyxyLFRtKSkpfX19KTt2YXIgeXY9aWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuX19iYXNlX2Jhcl9fIixnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBocCh0aGlzLmdldFNvdXJjZSgpLHRoaXMse3VzZUVuY29kZURlZmF1bHRlcjohMH0pfSxnZXRNYXJrZXJQb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNvb3JkaW5hdGVTeXN0ZW07aWYoZSl7dmFyIGk9ZS5kYXRhVG9Qb2ludChlLmNsYW1wRGF0YSh0KSksbj10aGlzLmdldERhdGEoKSxvPW4uZ2V0TGF5b3V0KCJvZmZzZXQiKSxhPW4uZ2V0TGF5b3V0KCJzaXplIik7cmV0dXJuIGlbZS5nZXRCYXNlQXhpcygpLmlzSG9yaXpvbnRhbCgpPzA6MV0rPW8rYS8yLGl9cmV0dXJuW05hTixOYU5dfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjIsY29vcmRpbmF0ZVN5c3RlbToiY2FydGVzaWFuMmQiLGxlZ2VuZEhvdmVyTGluazohMCxiYXJNaW5IZWlnaHQ6MCxiYXJNaW5BbmdsZTowLGxhcmdlOiExLGxhcmdlVGhyZXNob2xkOjQwMCxwcm9ncmVzc2l2ZTozZTMscHJvZ3Jlc3NpdmVDaHVua01vZGU6Im1vZCIsaXRlbVN0eWxlOnt9LGVtcGhhc2lzOnt9fX0pO2Z1bmN0aW9uIHh2KHQsZSxpLG4sbyxhKXskcyh0LGUsaS5nZXRNb2RlbCgibGFiZWwiKSxpLmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbCIpLHtsYWJlbEZldGNoZXI6byxsYWJlbERhdGFJbmRleDphLGRlZmF1bHRUZXh0OkdnKG8uZ2V0RGF0YSgpLGEpLGlzUmVjdFRleHQ6ITAsYXV0b0NvbG9yOm59KSxfdih0KSxfdihlKX1mdW5jdGlvbiBfdih0LGUpeyJvdXRzaWRlIj09PXQudGV4dFBvc2l0aW9uJiYodC50ZXh0UG9zaXRpb249ZSl9eXYuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuYmFyIixkZXBlbmRlbmNpZXM6WyJncmlkIiwicG9sYXIiXSxicnVzaFNlbGVjdG9yOiJyZWN0IixnZXRQcm9ncmVzc2l2ZTpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5nZXQoImxhcmdlIikmJnRoaXMuZ2V0KCJwcm9ncmVzc2l2ZSIpfSxnZXRQcm9ncmVzc2l2ZVRocmVzaG9sZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KCJwcm9ncmVzc2l2ZVRocmVzaG9sZCIpLGU9dGhpcy5nZXQoImxhcmdlVGhyZXNob2xkIik7cmV0dXJuIHQ8ZSYmKHQ9ZSksdH0sZGVmYXVsdE9wdGlvbjp7Y2xpcDohMCxyb3VuZENhcDohMX19KTt2YXIgd3Y9cmEoW1siZmlsbCIsImNvbG9yIl0sWyJzdHJva2UiLCJib3JkZXJDb2xvciJdLFsibGluZVdpZHRoIiwiYm9yZGVyV2lkdGgiXSxbInN0cm9rZSIsImJhckJvcmRlckNvbG9yIl0sWyJsaW5lV2lkdGgiLCJiYXJCb3JkZXJXaWR0aCJdLFsib3BhY2l0eSJdLFsic2hhZG93Qmx1ciJdLFsic2hhZG93T2Zmc2V0WCJdLFsic2hhZG93T2Zmc2V0WSJdLFsic2hhZG93Q29sb3IiXV0pLGJ2PXtnZXRCYXJJdGVtU3R5bGU6ZnVuY3Rpb24odCl7dmFyIGU9d3YodGhpcyx0KTtpZih0aGlzLmdldEJvcmRlckxpbmVEYXNoKXt2YXIgaT10aGlzLmdldEJvcmRlckxpbmVEYXNoKCk7aSYmKGUubGluZURhc2g9aSl9cmV0dXJuIGV9fSxTdj1Jcyh7dHlwZToic2F1c2FnZSIsc2hhcGU6e2N4OjAsY3k6MCxyMDowLHI6MCxzdGFydEFuZ2xlOjAsZW5kQW5nbGU6MipNYXRoLlBJLGNsb2Nrd2lzZTohMH0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5jeCxuPWUuY3ksbz1NYXRoLm1heChlLnIwfHwwLDApLGE9TWF0aC5tYXgoZS5yLDApLHI9LjUqKGEtbykscz1vK3IsbD1lLnN0YXJ0QW5nbGUsdT1lLmVuZEFuZ2xlLGg9ZS5jbG9ja3dpc2UsYz1NYXRoLmNvcyhsKSxkPU1hdGguc2luKGwpLGY9TWF0aC5jb3ModSkscD1NYXRoLnNpbih1KTsoaD91LWw8MipNYXRoLlBJOmwtdTwyKk1hdGguUEkpJiYodC5tb3ZlVG8oYypvK2ksZCpvK24pLHQuYXJjKGMqcytpLGQqcytuLHIsLU1hdGguUEkrbCxsLCFoKSksdC5hcmMoaSxuLGEsbCx1LCFoKSx0Lm1vdmVUbyhmKmEraSxwKmErbiksdC5hcmMoZipzK2kscCpzK24scix1LTIqTWF0aC5QSSx1LU1hdGguUEksIWgpLDAhPT1vJiYodC5hcmMoaSxuLG8sdSxsLGgpLHQubW92ZVRvKGMqbytpLHAqbytuKSksdC5jbG9zZVBhdGgoKX19KSxNdj1bIml0ZW1TdHlsZSIsImJhckJvcmRlcldpZHRoIl0sSXY9WzAsMF07TChJbC5wcm90b3R5cGUsYnYpLE1mKHt0eXBlOiJiYXIiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dGhpcy5fdXBkYXRlRHJhd01vZGUodCk7dmFyIG49dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKTtyZXR1cm4iY2FydGVzaWFuMmQiIT09biYmInBvbGFyIiE9PW58fCh0aGlzLl9pc0xhcmdlRHJhdz90aGlzLl9yZW5kZXJMYXJnZSh0LGUsaSk6dGhpcy5fcmVuZGVyTm9ybWFsKHQsZSxpKSksdGhpcy5ncm91cH0saW5jcmVtZW50YWxQcmVwYXJlUmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9jbGVhcigpLHRoaXMuX3VwZGF0ZURyYXdNb2RlKHQpfSxpbmNyZW1lbnRhbFJlbmRlcjpmdW5jdGlvbih0LGUsaSxuKXt0aGlzLl9pbmNyZW1lbnRhbFJlbmRlckxhcmdlKHQsZSl9LF91cGRhdGVEcmF3TW9kZTpmdW5jdGlvbih0KXt2YXIgZT10LnBpcGVsaW5lQ29udGV4dC5sYXJnZTsobnVsbD09dGhpcy5faXNMYXJnZURyYXd8fGVedGhpcy5faXNMYXJnZURyYXcpJiYodGhpcy5faXNMYXJnZURyYXc9ZSx0aGlzLl9jbGVhcigpKX0sX3JlbmRlck5vcm1hbDpmdW5jdGlvbihhLHQsZSl7dmFyIHIscz10aGlzLmdyb3VwLGw9YS5nZXREYXRhKCksdT10aGlzLl9kYXRhLGg9YS5jb29yZGluYXRlU3lzdGVtLGk9aC5nZXRCYXNlQXhpcygpOyJjYXJ0ZXNpYW4yZCI9PT1oLnR5cGU/cj1pLmlzSG9yaXpvbnRhbCgpOiJwb2xhciI9PT1oLnR5cGUmJihyPSJhbmdsZSI9PT1pLmRpbSk7dmFyIGM9YS5pc0FuaW1hdGlvbkVuYWJsZWQoKT9hOm51bGwsZD1hLmdldCgiY2xpcCIsITApLGY9ZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEFyZWEmJnQuZ2V0QXJlYSgpO2lmKCJjYXJ0ZXNpYW4yZCI9PT10LnR5cGUpe3ZhciBuPXQuZ2V0QmFzZUF4aXMoKTtpZigiY2F0ZWdvcnkiIT09bi50eXBlfHwhbi5vbkJhbmQpe3ZhciBvPWUuZ2V0TGF5b3V0KCJiYW5kV2lkdGgiKTtuLmlzSG9yaXpvbnRhbCgpPyhpLngtPW8saS53aWR0aCs9MipvKTooaS55LT1vLGkuaGVpZ2h0Kz0yKm8pfX1yZXR1cm4gaX0oaCxsKTtzLnJlbW92ZUNsaXBQYXRoKCk7dmFyIHA9YS5nZXQoInJvdW5kQ2FwIiwhMCk7bC5kaWZmKHUpLmFkZChmdW5jdGlvbih0KXtpZihsLmhhc1ZhbHVlKHQpKXt2YXIgZT1sLmdldEl0ZW1Nb2RlbCh0KSxpPVB2W2gudHlwZV0obCx0LGUpO2lmKGQpaWYoRHZbaC50eXBlXShmLGkpKXJldHVybiB2b2lkIHMucmVtb3ZlKG4pO3ZhciBuPUN2W2gudHlwZV0odCxpLHIsYywhMSxwKTtsLnNldEl0ZW1HcmFwaGljRWwodCxuKSxzLmFkZChuKSxPdihuLGwsdCxlLGksYSxyLCJwb2xhciI9PT1oLnR5cGUpfX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPXUuZ2V0SXRlbUdyYXBoaWNFbChlKTtpZihsLmhhc1ZhbHVlKHQpKXt2YXIgbj1sLmdldEl0ZW1Nb2RlbCh0KSxvPVB2W2gudHlwZV0obCx0LG4pO2lmKGQpaWYoRHZbaC50eXBlXShmLG8pKXJldHVybiB2b2lkIHMucmVtb3ZlKGkpO2k/c2woaSx7c2hhcGU6b30sYyx0KTppPUN2W2gudHlwZV0odCxvLHIsYywhMCxwKSxsLnNldEl0ZW1HcmFwaGljRWwodCxpKSxzLmFkZChpKSxPdihpLGwsdCxuLG8sYSxyLCJwb2xhciI9PT1oLnR5cGUpfWVsc2Ugcy5yZW1vdmUoaSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7dmFyIGU9dS5nZXRJdGVtR3JhcGhpY0VsKHQpOyJjYXJ0ZXNpYW4yZCI9PT1oLnR5cGU/ZSYmTHYodCxjLGUpOmUmJmt2KHQsYyxlKX0pLmV4ZWN1dGUoKSx0aGlzLl9kYXRhPWx9LF9yZW5kZXJMYXJnZTpmdW5jdGlvbih0LGUsaSl7dGhpcy5fY2xlYXIoKSx6dih0LHRoaXMuZ3JvdXApO3ZhciBuPXQuZ2V0KCJjbGlwIiwhMCk/eW0odC5jb29yZGluYXRlU3lzdGVtLCExLHQpOm51bGw7bj90aGlzLmdyb3VwLnNldENsaXBQYXRoKG4pOnRoaXMuZ3JvdXAucmVtb3ZlQ2xpcFBhdGgoKX0sX2luY3JlbWVudGFsUmVuZGVyTGFyZ2U6ZnVuY3Rpb24odCxlKXt6dihlLHRoaXMuZ3JvdXAsITApfSxkaXNwb3NlOmV0LHJlbW92ZTpmdW5jdGlvbih0KXt0aGlzLl9jbGVhcih0KX0sX2NsZWFyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZ3JvdXAsaT10aGlzLl9kYXRhO2UmJmUuZ2V0KCJhbmltYXRpb24iKSYmaSYmIXRoaXMuX2lzTGFyZ2VEcmF3P2kuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCl7InNlY3RvciI9PT10LnR5cGU/a3YodC5kYXRhSW5kZXgsZSx0KTpMdih0LmRhdGFJbmRleCxlLHQpfSk6dC5yZW1vdmVBbGwoKSx0aGlzLl9kYXRhPW51bGx9fSk7dmFyIFR2PU1hdGgubWF4LEF2PU1hdGgubWluLER2PXtjYXJ0ZXNpYW4yZDpmdW5jdGlvbih0LGUpe3ZhciBpPWUud2lkdGg8MD8tMToxLG49ZS5oZWlnaHQ8MD8tMToxO2k8MCYmKGUueCs9ZS53aWR0aCxlLndpZHRoPS1lLndpZHRoKSxuPDAmJihlLnkrPWUuaGVpZ2h0LGUuaGVpZ2h0PS1lLmhlaWdodCk7dmFyIG89VHYoZS54LHQueCksYT1BdihlLngrZS53aWR0aCx0LngrdC53aWR0aCkscj1UdihlLnksdC55KSxzPUF2KGUueStlLmhlaWdodCx0LnkrdC5oZWlnaHQpO2UueD1vLGUueT1yLGUud2lkdGg9YS1vLGUuaGVpZ2h0PXMtcjt2YXIgbD1lLndpZHRoPDB8fGUuaGVpZ2h0PDA7cmV0dXJuIGk8MCYmKGUueCs9ZS53aWR0aCxlLndpZHRoPS1lLndpZHRoKSxuPDAmJihlLnkrPWUuaGVpZ2h0LGUuaGVpZ2h0PS1lLmhlaWdodCksbH0scG9sYXI6ZnVuY3Rpb24odCl7cmV0dXJuITF9fSxDdj17Y2FydGVzaWFuMmQ6ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1uZXcgaXMoe3NoYXBlOkwoe30sZSl9KTtpZihuKXt2YXIgcj1pPyJoZWlnaHQiOiJ3aWR0aCIscz17fTthLnNoYXBlW3JdPTAsc1tyXT1lW3JdLHlsW28/InVwZGF0ZVByb3BzIjoiaW5pdFByb3BzIl0oYSx7c2hhcGU6c30sbix0KX1yZXR1cm4gYX0scG9sYXI6ZnVuY3Rpb24odCxlLGksbixvLGEpe3ZhciByPWUuc3RhcnRBbmdsZTxlLmVuZEFuZ2xlLHM9bmV3KCFpJiZhP1N2OlVyKSh7c2hhcGU6Qyh7Y2xvY2t3aXNlOnJ9LGUpfSk7aWYobil7dmFyIGw9aT8iciI6ImVuZEFuZ2xlIix1PXt9O3Muc2hhcGVbbF09aT8wOmUuc3RhcnRBbmdsZSx1W2xdPWVbbF0seWxbbz8idXBkYXRlUHJvcHMiOiJpbml0UHJvcHMiXShzLHtzaGFwZTp1fSxuLHQpfXJldHVybiBzfX07ZnVuY3Rpb24gTHYodCxlLGkpe2kuc3R5bGUudGV4dD1udWxsLHNsKGkse3NoYXBlOnt3aWR0aDowfX0sZSx0LGZ1bmN0aW9uKCl7aS5wYXJlbnQmJmkucGFyZW50LnJlbW92ZShpKX0pfWZ1bmN0aW9uIGt2KHQsZSxpKXtpLnN0eWxlLnRleHQ9bnVsbCxzbChpLHtzaGFwZTp7cjppLnNoYXBlLnIwfX0sZSx0LGZ1bmN0aW9uKCl7aS5wYXJlbnQmJmkucGFyZW50LnJlbW92ZShpKX0pfXZhciBQdj17Y2FydGVzaWFuMmQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuZ2V0SXRlbUxheW91dChlKSxvPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXQoTXYpfHwwO3JldHVybiBNYXRoLm1pbihpLE1hdGguYWJzKGUud2lkdGgpLE1hdGguYWJzKGUuaGVpZ2h0KSl9KGksbiksYT0wPG4ud2lkdGg/MTotMSxyPTA8bi5oZWlnaHQ/MTotMTtyZXR1cm57eDpuLngrYSpvLzIseTpuLnkrcipvLzIsd2lkdGg6bi53aWR0aC1hKm8saGVpZ2h0Om4uaGVpZ2h0LXIqb319LHBvbGFyOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldEl0ZW1MYXlvdXQoZSk7cmV0dXJue2N4Om4uY3gsY3k6bi5jeSxyMDpuLnIwLHI6bi5yLHN0YXJ0QW5nbGU6bi5zdGFydEFuZ2xlLGVuZEFuZ2xlOm4uZW5kQW5nbGV9fX07ZnVuY3Rpb24gTnYodCl7cmV0dXJuIG51bGwhPXQuc3RhcnRBbmdsZSYmbnVsbCE9dC5lbmRBbmdsZSYmdC5zdGFydEFuZ2xlPT09dC5lbmRBbmdsZX1mdW5jdGlvbiBPdih0LGUsaSxuLG8sYSxyLHMpe3ZhciBsPWUuZ2V0SXRlbVZpc3VhbChpLCJjb2xvciIpLHU9ZS5nZXRJdGVtVmlzdWFsKGksIm9wYWNpdHkiKSxoPWUuZ2V0VmlzdWFsKCJib3JkZXJDb2xvciIpLGM9bi5nZXRNb2RlbCgiaXRlbVN0eWxlIiksZD1uLmdldE1vZGVsKCJlbXBoYXNpcy5pdGVtU3R5bGUiKS5nZXRCYXJJdGVtU3R5bGUoKTtzfHx0LnNldFNoYXBlKCJyIixjLmdldCgiYmFyQm9yZGVyUmFkaXVzIil8fDApLHQudXNlU3R5bGUoQyh7c3Ryb2tlOk52KG8pPyJub25lIjpoLGZpbGw6TnYobyk/Im5vbmUiOmwsb3BhY2l0eTp1fSxjLmdldEJhckl0ZW1TdHlsZSgpKSk7dmFyIGY9bi5nZXRTaGFsbG93KCJjdXJzb3IiKTtmJiZ0LmF0dHIoImN1cnNvciIsZik7cj9vLmhlaWdodDpvLndpZHRoO3N8fHh2KHQuc3R5bGUsZCxuLGwsYSxpKSxOdihvKSYmKGQuZmlsbD1kLnN0cm9rZT0ibm9uZSIpLFlzKHQsZCl9dmFyIEV2PVNyLmV4dGVuZCh7dHlwZToibGFyZ2VCYXIiLHNoYXBlOntwb2ludHM6W119LGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1lLnBvaW50cyxuPXRoaXMuX19zdGFydFBvaW50LG89dGhpcy5fX2Jhc2VEaW1JZHgsYT0wO2E8aS5sZW5ndGg7YSs9MiluW29dPWlbYStvXSx0Lm1vdmVUbyhuWzBdLG5bMV0pLHQubGluZVRvKGlbYV0saVthKzFdKX19KTtmdW5jdGlvbiB6dih0LGUsaSl7dmFyIG49dC5nZXREYXRhKCksbz1bXSxhPW4uZ2V0TGF5b3V0KCJ2YWx1ZUF4aXNIb3Jpem9udGFsIik/MTowO29bMS1hXT1uLmdldExheW91dCgidmFsdWVBeGlzU3RhcnQiKTt2YXIgcj1uZXcgRXYoe3NoYXBlOntwb2ludHM6bi5nZXRMYXlvdXQoImxhcmdlUG9pbnRzIil9LGluY3JlbWVudGFsOiEhaSxfX3N0YXJ0UG9pbnQ6byxfX2Jhc2VEaW1JZHg6YSxfX2xhcmdlRGF0YUluZGljZXM6bi5nZXRMYXlvdXQoImxhcmdlRGF0YUluZGljZXMiKSxfX2JhcldpZHRoOm4uZ2V0TGF5b3V0KCJiYXJXaWR0aCIpfSk7ZS5hZGQociksZnVuY3Rpb24odCxlLGkpe3ZhciBuPWkuZ2V0VmlzdWFsKCJib3JkZXJDb2xvciIpfHxpLmdldFZpc3VhbCgiY29sb3IiKSxvPWUuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZShbImNvbG9yIiwiYm9yZGVyQ29sb3IiXSk7dC51c2VTdHlsZShvKSx0LnN0eWxlLmZpbGw9bnVsbCx0LnN0eWxlLnN0cm9rZT1uLHQuc3R5bGUubGluZVdpZHRoPWkuZ2V0TGF5b3V0KCJiYXJXaWR0aCIpfShyLHQsbiksci5zZXJpZXNJbmRleD10LnNlcmllc0luZGV4LHQuZ2V0KCJzaWxlbnQiKXx8KHIub24oIm1vdXNlZG93biIsUnYpLHIub24oIm1vdXNlbW92ZSIsUnYpKX12YXIgUnY9SWMoZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuX19iYXNlRGltSWR4LG89MS1uLGE9dC5zaGFwZS5wb2ludHMscj10Ll9fbGFyZ2VEYXRhSW5kaWNlcyxzPU1hdGguYWJzKHQuX19iYXJXaWR0aC8yKSxsPXQuX19zdGFydFBvaW50W29dO0l2WzBdPWUsSXZbMV09aTtmb3IodmFyIHU9SXZbbl0saD1JdlsxLW5dLGM9dS1zLGQ9dStzLGY9MCxwPWEubGVuZ3RoLzI7ZjxwO2YrKyl7dmFyIGc9MipmLG09YVtnK25dLHY9YVtnK29dO2lmKGM8PW0mJm08PWQmJihsPD12P2w8PWgmJmg8PXY6djw9aCYmaDw9bCkpcmV0dXJuIHJbZl19cmV0dXJuLTF9KHRoaXMsdC5vZmZzZXRYLHQub2Zmc2V0WSk7dGhpcy5kYXRhSW5kZXg9MDw9ZT9lOm51bGx9LDMwLCExKTt2ZihJZC5WSVNVQUwuTEFZT1VULFQoUHAsImJhciIpKSx2ZihJZC5WSVNVQUwuUFJPR1JFU1NJVkVfTEFZT1VULE5wKSx5Zih7c2VyaWVzVHlwZToiYmFyIixyZXNldDpmdW5jdGlvbih0KXt0LmdldERhdGEoKS5zZXRWaXN1YWwoImxlZ2VuZFN5bWJvbCIsInJvdW5kUmVjdCIpfX0pO2Z1bmN0aW9uIEJ2KHQsZSxpKXtlPWsoZSkmJntjb29yZERpbWVuc2lvbnM6ZX18fEwoe30sZSk7dmFyIG49dC5nZXRTb3VyY2UoKSxvPW5wKG4sZSksYT1uZXcgV2Yobyx0KTtyZXR1cm4gYS5pbml0RGF0YShuLGkpLGF9dmFyIFZ2PXt1cGRhdGVTZWxlY3RlZE1hcDpmdW5jdGlvbih0KXt0aGlzLl90YXJnZXRMaXN0PWsodCk/dC5zbGljZSgpOltdLHRoaXMuX3NlbGVjdFRhcmdldE1hcD1TKHR8fFtdLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuc2V0KGUubmFtZSxlKSx0fSxRKCkpfSxzZWxlY3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT1udWxsIT1lP3RoaXMuX3RhcmdldExpc3RbZV06dGhpcy5fc2VsZWN0VGFyZ2V0TWFwLmdldCh0KTsic2luZ2xlIj09PXRoaXMuZ2V0KCJzZWxlY3RlZE1vZGUiKSYmdGhpcy5fc2VsZWN0VGFyZ2V0TWFwLmVhY2goZnVuY3Rpb24odCl7dC5zZWxlY3RlZD0hMX0pLGkmJihpLnNlbGVjdGVkPSEwKX0sdW5TZWxlY3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT1udWxsIT1lP3RoaXMuX3RhcmdldExpc3RbZV06dGhpcy5fc2VsZWN0VGFyZ2V0TWFwLmdldCh0KTtpJiYoaS5zZWxlY3RlZD0hMSl9LHRvZ2dsZVNlbGVjdGVkOmZ1bmN0aW9uKHQsZSl7dmFyIGk9bnVsbCE9ZT90aGlzLl90YXJnZXRMaXN0W2VdOnRoaXMuX3NlbGVjdFRhcmdldE1hcC5nZXQodCk7aWYobnVsbCE9aSlyZXR1cm4gdGhpc1tpLnNlbGVjdGVkPyJ1blNlbGVjdCI6InNlbGVjdCJdKHQsZSksaS5zZWxlY3RlZH0saXNTZWxlY3RlZDpmdW5jdGlvbih0LGUpe3ZhciBpPW51bGwhPWU/dGhpcy5fdGFyZ2V0TGlzdFtlXTp0aGlzLl9zZWxlY3RUYXJnZXRNYXAuZ2V0KHQpO3JldHVybiBpJiZpLnNlbGVjdGVkfX07ZnVuY3Rpb24gR3YoaSxlKXt0aGlzLmdldEFsbE5hbWVzPWZ1bmN0aW9uKCl7dmFyIHQ9ZSgpO3JldHVybiB0Lm1hcEFycmF5KHQuZ2V0TmFtZSl9LHRoaXMuY29udGFpbk5hbWU9ZnVuY3Rpb24odCl7cmV0dXJuIDA8PWUoKS5pbmRleE9mTmFtZSh0KX0sdGhpcy5pbmRleE9mTmFtZT1mdW5jdGlvbih0KXtyZXR1cm4gaSgpLmluZGV4T2ZOYW1lKHQpfSx0aGlzLmdldEl0ZW1WaXN1YWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaSgpLmdldEl0ZW1WaXN1YWwodCxlKX19dmFyIEZ2PVNmKHt0eXBlOiJzZXJpZXMucGllIixpbml0OmZ1bmN0aW9uKHQpe0Z2LnN1cGVyQXBwbHkodGhpcywiaW5pdCIsYXJndW1lbnRzKSx0aGlzLmxlZ2VuZFZpc3VhbFByb3ZpZGVyPW5ldyBHdihBKHRoaXMuZ2V0RGF0YSx0aGlzKSxBKHRoaXMuZ2V0UmF3RGF0YSx0aGlzKSksdGhpcy51cGRhdGVTZWxlY3RlZE1hcCh0aGlzLl9jcmVhdGVTZWxlY3RhYmxlTGlzdCgpKSx0aGlzLl9kZWZhdWx0TGFiZWxMaW5lKHQpfSxtZXJnZU9wdGlvbjpmdW5jdGlvbih0KXtGdi5zdXBlckNhbGwodGhpcywibWVyZ2VPcHRpb24iLHQpLHRoaXMudXBkYXRlU2VsZWN0ZWRNYXAodGhpcy5fY3JlYXRlU2VsZWN0YWJsZUxpc3QoKSl9LGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEJ2KHRoaXMse2Nvb3JkRGltZW5zaW9uczpbInZhbHVlIl0sZW5jb2RlRGVmYXVsdGVyOlQoWXUsdGhpcyl9KX0sX2NyZWF0ZVNlbGVjdGFibGVMaXN0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZ2V0UmF3RGF0YSgpLGU9dC5tYXBEaW1lbnNpb24oInZhbHVlIiksaT1bXSxuPTAsbz10LmNvdW50KCk7bjxvO24rKylpLnB1c2goe25hbWU6dC5nZXROYW1lKG4pLHZhbHVlOnQuZ2V0KGUsbiksc2VsZWN0ZWQ6VmgodCxuLCJzZWxlY3RlZCIpfSk7cmV0dXJuIGl9LGdldERhdGFQYXJhbXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXREYXRhKCksaT1Gdi5zdXBlckNhbGwodGhpcywiZ2V0RGF0YVBhcmFtcyIsdCksbj1bXTtyZXR1cm4gZS5lYWNoKGUubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLGZ1bmN0aW9uKHQpe24ucHVzaCh0KX0pLGkucGVyY2VudD1CbChuLHQsZS5ob3N0TW9kZWwuZ2V0KCJwZXJjZW50UHJlY2lzaW9uIikpLGkuJHZhcnMucHVzaCgicGVyY2VudCIpLGl9LF9kZWZhdWx0TGFiZWxMaW5lOmZ1bmN0aW9uKHQpe3pvKHQsImxhYmVsTGluZSIsWyJzaG93Il0pO3ZhciBlPXQubGFiZWxMaW5lLGk9dC5lbXBoYXNpcy5sYWJlbExpbmU7ZS5zaG93PWUuc2hvdyYmdC5sYWJlbC5zaG93LGkuc2hvdz1pLnNob3cmJnQuZW1waGFzaXMubGFiZWwuc2hvd30sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGxlZ2VuZEhvdmVyTGluazohMCxob3ZlckFuaW1hdGlvbjohMCxjZW50ZXI6WyI1MCUiLCI1MCUiXSxyYWRpdXM6WzAsIjc1JSJdLGNsb2Nrd2lzZTohMCxzdGFydEFuZ2xlOjkwLG1pbkFuZ2xlOjAsbWluU2hvd0xhYmVsQW5nbGU6MCxzZWxlY3RlZE9mZnNldDoxMCxob3Zlck9mZnNldDoxMCxhdm9pZExhYmVsT3ZlcmxhcDohMCxwZXJjZW50UHJlY2lzaW9uOjIsc3RpbGxTaG93WmVyb1N1bTohMCxsZWZ0OjAsdG9wOjAscmlnaHQ6MCxib3R0b206MCx3aWR0aDpudWxsLGhlaWdodDpudWxsLGxhYmVsOntyb3RhdGU6ITEsc2hvdzohMCxwb3NpdGlvbjoib3V0ZXIiLGFsaWduVG86Im5vbmUiLG1hcmdpbjoiMjUlIixibGVlZE1hcmdpbjoxMCxkaXN0YW5jZVRvTGFiZWxMaW5lOjV9LGxhYmVsTGluZTp7c2hvdzohMCxsZW5ndGg6MTUsbGVuZ3RoMjoxNSxzbW9vdGg6ITEsbGluZVN0eWxlOnt3aWR0aDoxLHR5cGU6InNvbGlkIn19LGl0ZW1TdHlsZTp7Ym9yZGVyV2lkdGg6MX0sYW5pbWF0aW9uVHlwZToiZXhwYW5zaW9uIixhbmltYXRpb25UeXBlVXBkYXRlOiJ0cmFuc2l0aW9uIixhbmltYXRpb25FYXNpbmc6ImN1YmljT3V0In19KTtmdW5jdGlvbiBXdih0LGUsaSxuKXt2YXIgbz1lLmdldERhdGEoKSxhPXRoaXMuZGF0YUluZGV4LHI9by5nZXROYW1lKGEpLHM9ZS5nZXQoInNlbGVjdGVkT2Zmc2V0Iik7bi5kaXNwYXRjaEFjdGlvbih7dHlwZToicGllVG9nZ2xlU2VsZWN0Iixmcm9tOnQsbmFtZTpyLHNlcmllc0lkOmUuaWR9KSxvLmVhY2goZnVuY3Rpb24odCl7SHYoby5nZXRJdGVtR3JhcGhpY0VsKHQpLG8uZ2V0SXRlbUxheW91dCh0KSxlLmlzU2VsZWN0ZWQoby5nZXROYW1lKHQpKSxzLGkpfSl9ZnVuY3Rpb24gSHYodCxlLGksbixvKXt2YXIgYT0oZS5zdGFydEFuZ2xlK2UuZW5kQW5nbGUpLzIscj1pP246MCxzPVtNYXRoLmNvcyhhKSpyLE1hdGguc2luKGEpKnJdO28/dC5hbmltYXRlKCkud2hlbigyMDAse3Bvc2l0aW9uOnN9KS5zdGFydCgiYm91bmNlT3V0Iik6dC5hdHRyKCJwb3NpdGlvbiIscyl9ZnVuY3Rpb24gWnYodCxlKXtJaS5jYWxsKHRoaXMpO3ZhciBpPW5ldyBVcih7ejI6Mn0pLG49bmV3IEtyLG89bmV3IEZyO3RoaXMuYWRkKGkpLHRoaXMuYWRkKG4pLHRoaXMuYWRkKG8pLHRoaXMudXBkYXRlRGF0YSh0LGUsITApfWIoRnYsVnYpO3ZhciBVdj1adi5wcm90b3R5cGU7VXYudXBkYXRlRGF0YT1mdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5jaGlsZEF0KDApLG89dGhpcy5jaGlsZEF0KDEpLGE9dGhpcy5jaGlsZEF0KDIpLHI9dC5ob3N0TW9kZWwscz10LmdldEl0ZW1Nb2RlbChlKSxsPXQuZ2V0SXRlbUxheW91dChlKSx1PUwoe30sbCk7dS5sYWJlbD1udWxsO3ZhciBoPXIuZ2V0U2hhbGxvdygiYW5pbWF0aW9uVHlwZVVwZGF0ZSIpO2k/KG4uc2V0U2hhcGUodSksInNjYWxlIj09PXIuZ2V0U2hhbGxvdygiYW5pbWF0aW9uVHlwZSIpPyhuLnNoYXBlLnI9bC5yMCxsbChuLHtzaGFwZTp7cjpsLnJ9fSxyLGUpKToobi5zaGFwZS5lbmRBbmdsZT1sLnN0YXJ0QW5nbGUsc2wobix7c2hhcGU6e2VuZEFuZ2xlOmwuZW5kQW5nbGV9fSxyLGUpKSk6ImV4cGFuc2lvbiI9PT1oP24uc2V0U2hhcGUodSk6c2wobix7c2hhcGU6dX0scixlKTt2YXIgYz10LmdldEl0ZW1WaXN1YWwoZSwiY29sb3IiKTtuLnVzZVN0eWxlKEMoe2xpbmVKb2luOiJiZXZlbCIsZmlsbDpjfSxzLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSkpLG4uaG92ZXJTdHlsZT1zLmdldE1vZGVsKCJlbXBoYXNpcy5pdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKTt2YXIgZD1zLmdldFNoYWxsb3coImN1cnNvciIpO2QmJm4uYXR0cigiY3Vyc29yIixkKSxIdih0aGlzLHQuZ2V0SXRlbUxheW91dChlKSxyLmlzU2VsZWN0ZWQobnVsbCxlKSxyLmdldCgic2VsZWN0ZWRPZmZzZXQiKSxyLmdldCgiYW5pbWF0aW9uIikpO3ZhciBmPSFpJiYidHJhbnNpdGlvbiI9PT1oO3RoaXMuX3VwZGF0ZUxhYmVsKHQsZSxmKSx0aGlzLmhpZ2hEb3duT25VcGRhdGU9cy5nZXQoImhvdmVyQW5pbWF0aW9uIikmJnIuaXNBbmltYXRpb25FbmFibGVkKCk/ZnVuY3Rpb24odCxlKXsiZW1waGFzaXMiPT09ZT8oby5pZ25vcmU9by5ob3Zlcklnbm9yZSxhLmlnbm9yZT1hLmhvdmVySWdub3JlLG4uc3RvcEFuaW1hdGlvbighMCksbi5hbmltYXRlVG8oe3NoYXBlOntyOmwucityLmdldCgiaG92ZXJPZmZzZXQiKX19LDMwMCwiZWxhc3RpY091dCIpKTooby5pZ25vcmU9by5ub3JtYWxJZ25vcmUsYS5pZ25vcmU9YS5ub3JtYWxJZ25vcmUsbi5zdG9wQW5pbWF0aW9uKCEwKSxuLmFuaW1hdGVUbyh7c2hhcGU6e3I6bC5yfX0sMzAwLCJlbGFzdGljT3V0IikpfTpudWxsLFlzKHRoaXMpfSxVdi5fdXBkYXRlTGFiZWw9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuY2hpbGRBdCgxKSxvPXRoaXMuY2hpbGRBdCgyKSxhPXQuaG9zdE1vZGVsLHI9dC5nZXRJdGVtTW9kZWwoZSkscz10LmdldEl0ZW1MYXlvdXQoZSkubGFiZWwsbD10LmdldEl0ZW1WaXN1YWwoZSwiY29sb3IiKTtpZighc3x8aXNOYU4ocy54KXx8aXNOYU4ocy55KSlvLmlnbm9yZT1vLm5vcm1hbElnbm9yZT1vLmhvdmVySWdub3JlPW4uaWdub3JlPW4ubm9ybWFsSWdub3JlPW4uaG92ZXJJZ25vcmU9ITA7ZWxzZXt2YXIgdT17cG9pbnRzOnMubGluZVBvaW50c3x8W1tzLngscy55XSxbcy54LHMueV0sW3MueCxzLnldXX0saD17eDpzLngseTpzLnl9O2k/KHNsKG4se3NoYXBlOnV9LGEsZSksc2wobyx7c3R5bGU6aH0sYSxlKSk6KG4uYXR0cih7c2hhcGU6dX0pLG8uYXR0cih7c3R5bGU6aH0pKSxvLmF0dHIoe3JvdGF0aW9uOnMucm90YXRpb24sb3JpZ2luOltzLngscy55XSx6MjoxMH0pO3ZhciBjPXIuZ2V0TW9kZWwoImxhYmVsIiksZD1yLmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbCIpLGY9ci5nZXRNb2RlbCgibGFiZWxMaW5lIikscD1yLmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbExpbmUiKTtsPXQuZ2V0SXRlbVZpc3VhbChlLCJjb2xvciIpOyRzKG8uc3R5bGUsby5ob3ZlclN0eWxlPXt9LGMsZCx7bGFiZWxGZXRjaGVyOnQuaG9zdE1vZGVsLGxhYmVsRGF0YUluZGV4OmUsZGVmYXVsdFRleHQ6cy50ZXh0LGF1dG9Db2xvcjpsLHVzZUluc2lkZVN0eWxlOiEhcy5pbnNpZGV9LHt0ZXh0QWxpZ246cy50ZXh0QWxpZ24sdGV4dFZlcnRpY2FsQWxpZ246cy52ZXJ0aWNhbEFsaWduLG9wYWNpdHk6dC5nZXRJdGVtVmlzdWFsKGUsIm9wYWNpdHkiKX0pLG8uaWdub3JlPW8ubm9ybWFsSWdub3JlPSFjLmdldCgic2hvdyIpLG8uaG92ZXJJZ25vcmU9IWQuZ2V0KCJzaG93Iiksbi5pZ25vcmU9bi5ub3JtYWxJZ25vcmU9IWYuZ2V0KCJzaG93Iiksbi5ob3Zlcklnbm9yZT0hcC5nZXQoInNob3ciKSxuLnNldFN0eWxlKHtzdHJva2U6bCxvcGFjaXR5OnQuZ2V0SXRlbVZpc3VhbChlLCJvcGFjaXR5Iil9KSxuLnNldFN0eWxlKGYuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLmdldExpbmVTdHlsZSgpKSxuLmhvdmVyU3R5bGU9cC5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCk7dmFyIGc9Zi5nZXQoInNtb290aCIpO2cmJiEwPT09ZyYmKGc9LjQpLG4uc2V0U2hhcGUoe3Ntb290aDpnfSl9fSx3KFp2LElpKTtmdW5jdGlvbiBYdihpLHQpe0UodCxmdW5jdGlvbihhKXthLnVwZGF0ZT0idXBkYXRlVmlldyIsZ2YoYSxmdW5jdGlvbih0LGUpe3ZhciBvPXt9O3JldHVybiBlLmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJzZXJpZXMiLHN1YlR5cGU6aSxxdWVyeTp0fSxmdW5jdGlvbihpKXtpW2EubWV0aG9kXSYmaVthLm1ldGhvZF0odC5uYW1lLHQuZGF0YUluZGV4KTt2YXIgbj1pLmdldERhdGEoKTtuLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9bi5nZXROYW1lKHQpO29bZV09aS5pc1NlbGVjdGVkKGUpfHwhMX0pfSkse25hbWU6dC5uYW1lLHNlbGVjdGVkOm8sc2VyaWVzSWQ6dC5zZXJpZXNJZH19KX0pfWZ1bmN0aW9uIFl2KG4pe3JldHVybntnZXRUYXJnZXRTZXJpZXM6ZnVuY3Rpb24odCl7dmFyIGU9e30saT1RKCk7cmV0dXJuIHQuZWFjaFNlcmllc0J5VHlwZShuLGZ1bmN0aW9uKHQpe3QuX19wYWxldHRlU2NvcGU9ZSxpLnNldCh0LnVpZCx0KX0pLGl9LHJlc2V0OmZ1bmN0aW9uKHMsdCl7dmFyIGw9cy5nZXRSYXdEYXRhKCksdT17fSxoPXMuZ2V0RGF0YSgpO2guZWFjaChmdW5jdGlvbih0KXt2YXIgZT1oLmdldFJhd0luZGV4KHQpO3VbZV09dH0pLGwuZWFjaChmdW5jdGlvbih0KXt2YXIgZSxpPXVbdF0sbj1udWxsIT1pJiZoLmdldEl0ZW1WaXN1YWwoaSwiY29sb3IiLCEwKSxvPW51bGwhPWkmJmguZ2V0SXRlbVZpc3VhbChpLCJib3JkZXJDb2xvciIsITApO2lmKG4mJm98fChlPWwuZ2V0SXRlbU1vZGVsKHQpKSwhbil7dmFyIGE9ZS5nZXQoIml0ZW1TdHlsZS5jb2xvciIpfHxzLmdldENvbG9yRnJvbVBhbGV0dGUobC5nZXROYW1lKHQpfHx0KyIiLHMuX19wYWxldHRlU2NvcGUsbC5jb3VudCgpKTtudWxsIT1pJiZoLnNldEl0ZW1WaXN1YWwoaSwiY29sb3IiLGEpfWlmKCFvKXt2YXIgcj1lLmdldCgiaXRlbVN0eWxlLmJvcmRlckNvbG9yIik7bnVsbCE9aSYmaC5zZXRJdGVtVmlzdWFsKGksImJvcmRlckNvbG9yIixyKX19KX19fWdjLmV4dGVuZCh7dHlwZToicGllIixpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IElpO3RoaXMuX3NlY3Rvckdyb3VwPXR9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSxuKXtpZighbnx8bi5mcm9tIT09dGhpcy51aWQpe3ZhciBvPXQuZ2V0RGF0YSgpLGE9dGhpcy5fZGF0YSxyPXRoaXMuZ3JvdXAscz1lLmdldCgiYW5pbWF0aW9uIiksbD0hYSx1PXQuZ2V0KCJhbmltYXRpb25UeXBlIiksaD10LmdldCgiYW5pbWF0aW9uVHlwZVVwZGF0ZSIpLGM9VChXdix0aGlzLnVpZCx0LHMsaSksZD10LmdldCgic2VsZWN0ZWRNb2RlIik7aWYoby5kaWZmKGEpLmFkZChmdW5jdGlvbih0KXt2YXIgZT1uZXcgWnYobyx0KTtsJiYic2NhbGUiIT09dSYmZS5lYWNoQ2hpbGQoZnVuY3Rpb24odCl7dC5zdG9wQW5pbWF0aW9uKCEwKX0pLGQmJmUub24oImNsaWNrIixjKSxvLnNldEl0ZW1HcmFwaGljRWwodCxlKSxyLmFkZChlKX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPWEuZ2V0SXRlbUdyYXBoaWNFbChlKTtsfHwidHJhbnNpdGlvbiI9PT1ofHxpLmVhY2hDaGlsZChmdW5jdGlvbih0KXt0LnN0b3BBbmltYXRpb24oITApfSksaS51cGRhdGVEYXRhKG8sdCksaS5vZmYoImNsaWNrIiksZCYmaS5vbigiY2xpY2siLGMpLHIuYWRkKGkpLG8uc2V0SXRlbUdyYXBoaWNFbCh0LGkpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPWEuZ2V0SXRlbUdyYXBoaWNFbCh0KTtyLnJlbW92ZShlKX0pLmV4ZWN1dGUoKSxzJiYwPG8uY291bnQoKSYmKGw/InNjYWxlIiE9PXU6InRyYW5zaXRpb24iIT09aCkpe2Zvcih2YXIgZj1vLmdldEl0ZW1MYXlvdXQoMCkscD0xO2lzTmFOKGYuc3RhcnRBbmdsZSkmJnA8by5jb3VudCgpOysrcClmPW8uZ2V0SXRlbUxheW91dChwKTt2YXIgZz1NYXRoLm1heChpLmdldFdpZHRoKCksaS5nZXRIZWlnaHQoKSkvMixtPUEoci5yZW1vdmVDbGlwUGF0aCxyKTtyLnNldENsaXBQYXRoKHRoaXMuX2NyZWF0ZUNsaXBQYXRoKGYuY3gsZi5jeSxnLGYuc3RhcnRBbmdsZSxmLmNsb2Nrd2lzZSxtLHQsbCkpfWVsc2Ugci5yZW1vdmVDbGlwUGF0aCgpO3RoaXMuX2RhdGE9b319LGRpc3Bvc2U6ZnVuY3Rpb24oKXt9LF9jcmVhdGVDbGlwUGF0aDpmdW5jdGlvbih0LGUsaSxuLG8sYSxyLHMpe3ZhciBsPW5ldyBVcih7c2hhcGU6e2N4OnQsY3k6ZSxyMDowLHI6aSxzdGFydEFuZ2xlOm4sZW5kQW5nbGU6bixjbG9ja3dpc2U6b319KTtyZXR1cm4ocz9sbDpzbCkobCx7c2hhcGU6e2VuZEFuZ2xlOm4rKG8/MTotMSkqTWF0aC5QSSoyfX0scixhKSxsfSxjb250YWluUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmdldERhdGEoKS5nZXRJdGVtTGF5b3V0KDApO2lmKGkpe3ZhciBuPXRbMF0taS5jeCxvPXRbMV0taS5jeSxhPU1hdGguc3FydChuKm4rbypvKTtyZXR1cm4gYTw9aS5yJiZhPj1pLnIwfX19KTt2YXIganY9TWF0aC5QSS8xODA7ZnVuY3Rpb24gcXYobyx0LGUsaSxuLGEscixzLGwsdSl7ZnVuY3Rpb24gaCh0LGUsaSl7Zm9yKHZhciBuPXQ7bjxlJiYhKG9bbl0ueStpPmwrcik7bisrKWlmKG9bbl0ueSs9aSx0PG4mJm4rMTxlJiZvW24rMV0ueT5vW25dLnkrb1tuXS5oZWlnaHQpcmV0dXJuIHZvaWQgYyhuLGkvMik7YyhlLTEsaS8yKX1mdW5jdGlvbiBjKHQsZSl7Zm9yKHZhciBpPXQ7MDw9aSYmIShvW2ldLnktZTxsKSYmKG9baV0ueS09ZSwhKDA8aSYmb1tpXS55Pm9baS0xXS55K29baS0xXS5oZWlnaHQpKTtpLS0pO31mdW5jdGlvbiBkKHQsZSxpLG4sbyxhKXtmb3IodmFyIHI9ZT9OdW1iZXIuTUFYX1ZBTFVFOjAscz0wLGw9dC5sZW5ndGg7czxsO3MrKylpZigibm9uZSI9PT10W3NdLmxhYmVsQWxpZ25Ubyl7dmFyIHU9TWF0aC5hYnModFtzXS55LW4pLGg9dFtzXS5sZW4sYz10W3NdLmxlbjIsZD11PG8raD9NYXRoLnNxcnQoKG8raCtjKSoobytoK2MpLXUqdSk6TWF0aC5hYnModFtzXS54LWkpO2UmJnI8PWQmJihkPXItMTApLCFlJiZkPD1yJiYoZD1yKzEwKSx0W3NdLng9aStkKmEscj1kfX1vLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC55LWUueX0pO2Zvcih2YXIgZixwPTAsZz1vLmxlbmd0aCxtPVtdLHY9W10seT0wO3k8Zzt5Kyspe2lmKCJvdXRlciI9PT1vW3ldLnBvc2l0aW9uJiYibGFiZWxMaW5lIj09PW9beV0ubGFiZWxBbGlnblRvKXt2YXIgeD1vW3ldLngtdTtvW3ldLmxpbmVQb2ludHNbMV1bMF0rPXgsb1t5XS54PXV9KGY9b1t5XS55LXApPDAmJmgoeSxnLC1mKSxwPW9beV0ueStvW3ldLmhlaWdodH1yLXA8MCYmYyhnLTEscC1yKTtmb3IoeT0wO3k8Zzt5Kyspb1t5XS55Pj1lP3YucHVzaChvW3ldKTptLnB1c2gob1t5XSk7ZChtLCExLHQsZSxpLG4pLGQodiwhMCx0LGUsaSxuKX1mdW5jdGlvbiBLdih0KXtyZXR1cm4iY2VudGVyIj09PXQucG9zaXRpb259ZnVuY3Rpb24gJHYoTCxrLFAsdCxOLGUpe3ZhciBPLEUsej1MLmdldERhdGEoKSxSPVtdLEI9ITEsVj0oTC5nZXQoIm1pblNob3dMYWJlbEFuZ2xlIil8fDApKmp2O3ouZWFjaChmdW5jdGlvbih0KXt2YXIgZT16LmdldEl0ZW1MYXlvdXQodCksaT16LmdldEl0ZW1Nb2RlbCh0KSxuPWkuZ2V0TW9kZWwoImxhYmVsIiksbz1uLmdldCgicG9zaXRpb24iKXx8aS5nZXQoImVtcGhhc2lzLmxhYmVsLnBvc2l0aW9uIiksYT1uLmdldCgiZGlzdGFuY2VUb0xhYmVsTGluZSIpLHI9bi5nZXQoImFsaWduVG8iKSxzPVBsKG4uZ2V0KCJtYXJnaW4iKSxQKSxsPW4uZ2V0KCJibGVlZE1hcmdpbiIpLHU9bi5nZXRGb250KCksaD1pLmdldE1vZGVsKCJsYWJlbExpbmUiKSxjPWguZ2V0KCJsZW5ndGgiKTtjPVBsKGMsUCk7dmFyIGQ9aC5nZXQoImxlbmd0aDIiKTtpZihkPVBsKGQsUCksIShlLmFuZ2xlPFYpKXt2YXIgZixwLGcsbSx2PShlLnN0YXJ0QW5nbGUrZS5lbmRBbmdsZSkvMix5PU1hdGguY29zKHYpLHg9TWF0aC5zaW4odik7Tz1lLmN4LEU9ZS5jeTt2YXIgXyx3PUwuZ2V0Rm9ybWF0dGVkTGFiZWwodCwibm9ybWFsIil8fHouZ2V0TmFtZSh0KSxiPWNuKHcsdSxtLCJ0b3AiKSxTPSJpbnNpZGUiPT09b3x8ImlubmVyIj09PW87aWYoImNlbnRlciI9PT1vKWY9ZS5jeCxwPWUuY3ksbT0iY2VudGVyIjtlbHNle3ZhciBNPShTPyhlLnIrZS5yMCkvMip5OmUucip5KStPLEk9KFM/KGUucitlLnIwKS8yKng6ZS5yKngpK0U7aWYoZj1NKzMqeSxwPUkrMyp4LCFTKXt2YXIgVD1NK3kqKGMray1lLnIpLEE9SSt4KihjK2stZS5yKSxEPVQrKHk8MD8tMToxKSpkO2Y9ImVkZ2UiPT09cj95PDA/TitzOk4rUC1zOkQrKHk8MD8tYTphKSxnPVtbTSxJXSxbVCxBXSxbRCxwPUFdXX1tPVM/ImNlbnRlciI6ImVkZ2UiPT09cj8wPHk/InJpZ2h0IjoibGVmdCI6MDx5PyJsZWZ0IjoicmlnaHQifXZhciBDPW4uZ2V0KCJyb3RhdGUiKTtfPSJudW1iZXIiPT10eXBlb2YgQz9DKihNYXRoLlBJLzE4MCk6Qz95PDA/LXYrTWF0aC5QSTotdjowLEI9ISFfLGUubGFiZWw9e3g6Zix5OnAscG9zaXRpb246byxoZWlnaHQ6Yi5oZWlnaHQsbGVuOmMsbGVuMjpkLGxpbmVQb2ludHM6Zyx0ZXh0QWxpZ246bSx2ZXJ0aWNhbEFsaWduOiJtaWRkbGUiLHJvdGF0aW9uOl8saW5zaWRlOlMsbGFiZWxEaXN0YW5jZTphLGxhYmVsQWxpZ25UbzpyLGxhYmVsTWFyZ2luOnMsYmxlZWRNYXJnaW46bCx0ZXh0UmVjdDpiLHRleHQ6dyxmb250OnV9LFN8fFIucHVzaChlLmxhYmVsKX19KSwhQiYmTC5nZXQoImF2b2lkTGFiZWxPdmVybGFwIikmJmZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyl7Zm9yKHZhciBsPVtdLHU9W10saD1OdW1iZXIuTUFYX1ZBTFVFLGM9LU51bWJlci5NQVhfVkFMVUUsZD0wO2Q8dC5sZW5ndGg7ZCsrKUt2KHRbZF0pfHwodFtkXS54PGU/KGg9TWF0aC5taW4oaCx0W2RdLngpLGwucHVzaCh0W2RdKSk6KGM9TWF0aC5tYXgoYyx0W2RdLngpLHUucHVzaCh0W2RdKSkpO2Zvcihxdih1LGUsaSxuLDEsMCxhLDAscyxjKSxxdihsLGUsaSxuLC0xLDAsYSwwLHMsaCksZD0wO2Q8dC5sZW5ndGg7ZCsrKXt2YXIgZj10W2RdO2lmKCFLdihmKSl7dmFyIHA9Zi5saW5lUG9pbnRzO2lmKHApe3ZhciBnLG09ImVkZ2UiPT09Zi5sYWJlbEFsaWduVG8sdj1mLnRleHRSZWN0LndpZHRoOyhnPW0/Zi54PGU/cFsyXVswXS1mLmxhYmVsRGlzdGFuY2Utci1mLmxhYmVsTWFyZ2luOnIrby1mLmxhYmVsTWFyZ2luLXBbMl1bMF0tZi5sYWJlbERpc3RhbmNlOmYueDxlP2YueC1yLWYuYmxlZWRNYXJnaW46citvLWYueC1mLmJsZWVkTWFyZ2luKTxmLnRleHRSZWN0LndpZHRoJiYoZi50ZXh0PWduKGYudGV4dCxnLGYuZm9udCksImVkZ2UiPT09Zi5sYWJlbEFsaWduVG8mJih2PWhuKGYudGV4dCxmLmZvbnQpKSk7dmFyIHk9cFsxXVswXS1wWzJdWzBdO20/Zi54PGU/cFsyXVswXT1yK2YubGFiZWxNYXJnaW4rditmLmxhYmVsRGlzdGFuY2U6cFsyXVswXT1yK28tZi5sYWJlbE1hcmdpbi12LWYubGFiZWxEaXN0YW5jZTooZi54PGU/cFsyXVswXT1mLngrZi5sYWJlbERpc3RhbmNlOnBbMl1bMF09Zi54LWYubGFiZWxEaXN0YW5jZSxwWzFdWzBdPXBbMl1bMF0reSkscFsxXVsxXT1wWzJdWzFdPWYueX19fX0oUixPLEUsayxQLHQsTixlKX12YXIgSnY9MipNYXRoLlBJLFF2PU1hdGguUEkvMTgwO2Z1bmN0aW9uIHR5KHQpe3JldHVybntzZXJpZXNUeXBlOnQscmVzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmZpbmRDb21wb25lbnRzKHttYWluVHlwZToibGVnZW5kIn0pO2lmKG4mJm4ubGVuZ3RoKXt2YXIgbz10LmdldERhdGEoKTtvLmZpbHRlclNlbGYoZnVuY3Rpb24odCl7Zm9yKHZhciBlPW8uZ2V0TmFtZSh0KSxpPTA7aTxuLmxlbmd0aDtpKyspaWYoIW5baV0uaXNTZWxlY3RlZChlKSlyZXR1cm4hMTtyZXR1cm4hMH0pfX19fVh2KCJwaWUiLFt7dHlwZToicGllVG9nZ2xlU2VsZWN0IixldmVudDoicGllc2VsZWN0Y2hhbmdlZCIsbWV0aG9kOiJ0b2dnbGVTZWxlY3RlZCJ9LHt0eXBlOiJwaWVTZWxlY3QiLGV2ZW50OiJwaWVzZWxlY3RlZCIsbWV0aG9kOiJzZWxlY3QifSx7dHlwZToicGllVW5TZWxlY3QiLGV2ZW50OiJwaWV1bnNlbGVjdGVkIixtZXRob2Q6InVuU2VsZWN0In1dKSx5ZihZdigicGllIikpLHZmKFQoZnVuY3Rpb24odCxlLEEsaSl7ZS5lYWNoU2VyaWVzQnlUeXBlKHQsZnVuY3Rpb24odCl7dmFyIG89dC5nZXREYXRhKCksZT1vLm1hcERpbWVuc2lvbigidmFsdWUiKSxhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZ1KHQuZ2V0Qm94TGF5b3V0UGFyYW1zKCkse3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0pfSh0LEEpLGk9dC5nZXQoImNlbnRlciIpLG49dC5nZXQoInJhZGl1cyIpO2sobil8fChuPVswLG5dKSxrKGkpfHwoaT1baSxpXSk7dmFyIHI9UGwoYS53aWR0aCxBLmdldFdpZHRoKCkpLHM9UGwoYS5oZWlnaHQsQS5nZXRIZWlnaHQoKSksbD1NYXRoLm1pbihyLHMpLHU9UGwoaVswXSxyKSthLngsaD1QbChpWzFdLHMpK2EueSxjPVBsKG5bMF0sbC8yKSxkPVBsKG5bMV0sbC8yKSxmPS10LmdldCgic3RhcnRBbmdsZSIpKlF2LHA9dC5nZXQoIm1pbkFuZ2xlIikqUXYsZz0wO28uZWFjaChlLGZ1bmN0aW9uKHQpe2lzTmFOKHQpfHxnKyt9KTt2YXIgbT1vLmdldFN1bShlKSx2PU1hdGguUEkvKG18fGcpKjIseT10LmdldCgiY2xvY2t3aXNlIikseD10LmdldCgicm9zZVR5cGUiKSxfPXQuZ2V0KCJzdGlsbFNob3daZXJvU3VtIiksdz1vLmdldERhdGFFeHRlbnQoZSk7d1swXT0wO3ZhciBiPUp2LFM9MCxNPWYsST15PzE6LTE7aWYoby5lYWNoKGUsZnVuY3Rpb24odCxlKXt2YXIgaTtpZihpc05hTih0KSlvLnNldEl0ZW1MYXlvdXQoZSx7YW5nbGU6TmFOLHN0YXJ0QW5nbGU6TmFOLGVuZEFuZ2xlOk5hTixjbG9ja3dpc2U6eSxjeDp1LGN5OmgscjA6YyxyOng/TmFOOmQsdmlld1JlY3Q6YX0pO2Vsc2V7KGk9ImFyZWEiIT09eD8wPT09bSYmXz92OnQqdjpKdi9nKTxwP2ItPWk9cDpTKz10O3ZhciBuPU0rSSppO28uc2V0SXRlbUxheW91dChlLHthbmdsZTppLHN0YXJ0QW5nbGU6TSxlbmRBbmdsZTpuLGNsb2Nrd2lzZTp5LGN4OnUsY3k6aCxyMDpjLHI6eD9rbCh0LHcsW2MsZF0pOmQsdmlld1JlY3Q6YX0pLE09bn19KSxiPEp2JiZnKWlmKGI8PS4wMDEpe3ZhciBUPUp2L2c7by5lYWNoKGUsZnVuY3Rpb24odCxlKXtpZighaXNOYU4odCkpe3ZhciBpPW8uZ2V0SXRlbUxheW91dChlKTtpLmFuZ2xlPVQsaS5zdGFydEFuZ2xlPWYrSSplKlQsaS5lbmRBbmdsZT1mK0kqKGUrMSkqVH19KX1lbHNlIHY9Yi9TLE09ZixvLmVhY2goZSxmdW5jdGlvbih0LGUpe2lmKCFpc05hTih0KSl7dmFyIGk9by5nZXRJdGVtTGF5b3V0KGUpLG49aS5hbmdsZT09PXA/cDp0KnY7aS5zdGFydEFuZ2xlPU0saS5lbmRBbmdsZT1NK0kqbixNKz1JKm59fSk7JHYodCxkLGEud2lkdGgsYS5oZWlnaHQsYS54LGEueSl9KX0sInBpZSIpKSxwZih0eSgicGllIikpLGljLmV4dGVuZCh7dHlwZToic2VyaWVzLnNjYXR0ZXIiLGRlcGVuZGVuY2llczpbImdyaWQiLCJwb2xhciIsImdlbyIsInNpbmdsZUF4aXMiLCJjYWxlbmRhciJdLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGhwKHRoaXMuZ2V0U291cmNlKCksdGhpcyx7dXNlRW5jb2RlRGVmYXVsdGVyOiEwfSl9LGJydXNoU2VsZWN0b3I6InBvaW50IixnZXRQcm9ncmVzc2l2ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uLnByb2dyZXNzaXZlO3JldHVybiBudWxsPT10P3RoaXMub3B0aW9uLmxhcmdlPzVlMzp0aGlzLmdldCgicHJvZ3Jlc3NpdmUiKTp0fSxnZXRQcm9ncmVzc2l2ZVRocmVzaG9sZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uLnByb2dyZXNzaXZlVGhyZXNob2xkO3JldHVybiBudWxsPT10P3RoaXMub3B0aW9uLmxhcmdlPzFlNDp0aGlzLmdldCgicHJvZ3Jlc3NpdmVUaHJlc2hvbGQiKTp0fSxkZWZhdWx0T3B0aW9uOntjb29yZGluYXRlU3lzdGVtOiJjYXJ0ZXNpYW4yZCIsemxldmVsOjAsejoyLGxlZ2VuZEhvdmVyTGluazohMCxob3ZlckFuaW1hdGlvbjohMCxzeW1ib2xTaXplOjEwLGxhcmdlOiExLGxhcmdlVGhyZXNob2xkOjJlMyxpdGVtU3R5bGU6e29wYWNpdHk6Ljh9LGNsaXA6ITB9fSk7dmFyIGV5PUlzKHtzaGFwZTp7cG9pbnRzOm51bGx9LHN5bWJvbFByb3h5Om51bGwsc29mdENsaXBTaGFwZTpudWxsLGJ1aWxkUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBpPWUucG9pbnRzLG49ZS5zaXplLG89dGhpcy5zeW1ib2xQcm94eSxhPW8uc2hhcGU7aWYoISgodC5nZXRDb250ZXh0P3QuZ2V0Q29udGV4dCgpOnQpJiZuWzBdPDQpKWZvcih2YXIgcj0wO3I8aS5sZW5ndGg7KXt2YXIgcz1pW3IrK10sbD1pW3IrK107aXNOYU4ocyl8fGlzTmFOKGwpfHx0aGlzLnNvZnRDbGlwU2hhcGUmJiF0aGlzLnNvZnRDbGlwU2hhcGUuY29udGFpbihzLGwpfHwoYS54PXMtblswXS8yLGEueT1sLW5bMV0vMixhLndpZHRoPW5bMF0sYS5oZWlnaHQ9blsxXSxvLmJ1aWxkUGF0aCh0LGEsITApKX19LGFmdGVyQnJ1c2g6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5zaGFwZSxpPWUucG9pbnRzLG49ZS5zaXplO2lmKG5bMF08NCl7dGhpcy5zZXRUcmFuc2Zvcm0odCk7Zm9yKHZhciBvPTA7bzxpLmxlbmd0aDspe3ZhciBhPWlbbysrXSxyPWlbbysrXTtpc05hTihhKXx8aXNOYU4ocil8fHRoaXMuc29mdENsaXBTaGFwZSYmIXRoaXMuc29mdENsaXBTaGFwZS5jb250YWluKGEscil8fHQuZmlsbFJlY3QoYS1uWzBdLzIsci1uWzFdLzIsblswXSxuWzFdKX10aGlzLnJlc3RvcmVUcmFuc2Zvcm0odCl9fSxmaW5kRGF0YUluZGV4OmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMuc2hhcGUsbj1pLnBvaW50cyxvPWkuc2l6ZSxhPU1hdGgubWF4KG9bMF0sNCkscj1NYXRoLm1heChvWzFdLDQpLHM9bi5sZW5ndGgvMi0xOzA8PXM7cy0tKXt2YXIgbD0yKnMsdT1uW2xdLWEvMixoPW5bMStsXS1yLzI7aWYodTw9dCYmaDw9ZSYmdDw9dSthJiZlPD1oK3IpcmV0dXJuIHN9cmV0dXJuLTF9fSk7ZnVuY3Rpb24gaXkoKXt0aGlzLmdyb3VwPW5ldyBJaX12YXIgbnk9aXkucHJvdG90eXBlO2Z1bmN0aW9uIG95KHQsZSxpKXtFZy5jYWxsKHRoaXMsdCxlLGkpLHRoaXMudHlwZT0idmFsdWUiLHRoaXMuYW5nbGU9MCx0aGlzLm5hbWU9IiIsdGhpcy5tb2RlbH1mdW5jdGlvbiBheSh0LGUsaSl7dGhpcy5fbW9kZWw9dCx0aGlzLmRpbWVuc2lvbnM9W10sdGhpcy5faW5kaWNhdG9yQXhlcz1OKHQuZ2V0SW5kaWNhdG9yTW9kZWxzKCksZnVuY3Rpb24odCxlKXt2YXIgaT0iaW5kaWNhdG9yXyIrZSxuPW5ldyBveShpLCJsb2ciPT09dC5nZXQoImF4aXNUeXBlIik/bmV3IEpwOm5ldyBTcCk7cmV0dXJuIG4ubmFtZT10LmdldCgibmFtZSIpLChuLm1vZGVsPXQpLmF4aXM9bix0aGlzLmRpbWVuc2lvbnMucHVzaChpKSxufSx0aGlzKSx0aGlzLnJlc2l6ZSh0LGkpLHRoaXMuY3gsdGhpcy5jeSx0aGlzLnIsdGhpcy5yMCx0aGlzLnN0YXJ0QW5nbGV9bnkuaXNQZXJzaXN0ZW50PWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2luY3JlbWVudGFsfSxueS51cGRhdGVEYXRhPWZ1bmN0aW9uKHQsZSl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKTt2YXIgaT1uZXcgZXkoe3JlY3RIb3ZlcjohMCxjdXJzb3I6ImRlZmF1bHQifSk7aS5zZXRTaGFwZSh7cG9pbnRzOnQuZ2V0TGF5b3V0KCJzeW1ib2xQb2ludHMiKX0pLHRoaXMuX3NldENvbW1vbihpLHQsITEsZSksdGhpcy5ncm91cC5hZGQoaSksdGhpcy5faW5jcmVtZW50YWw9bnVsbH0sbnkudXBkYXRlTGF5b3V0PWZ1bmN0aW9uKHQpe2lmKCF0aGlzLl9pbmNyZW1lbnRhbCl7dmFyIG49dC5nZXRMYXlvdXQoInN5bWJvbFBvaW50cyIpO3RoaXMuZ3JvdXAuZWFjaENoaWxkKGZ1bmN0aW9uKHQpe2lmKG51bGwhPXQuc3RhcnRJbmRleCl7dmFyIGU9MioodC5lbmRJbmRleC10LnN0YXJ0SW5kZXgpLGk9NCp0LnN0YXJ0SW5kZXgqMjtuPW5ldyBGbG9hdDMyQXJyYXkobi5idWZmZXIsaSxlKX10LnNldFNoYXBlKCJwb2ludHMiLG4pfSl9fSxueS5pbmNyZW1lbnRhbFByZXBhcmVVcGRhdGU9ZnVuY3Rpb24odCl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKSx0aGlzLl9jbGVhckluY3JlbWVudGFsKCksMmU2PHQuY291bnQoKT8odGhpcy5faW5jcmVtZW50YWx8fCh0aGlzLl9pbmNyZW1lbnRhbD1uZXcgZnMoe3NpbGVudDohMH0pKSx0aGlzLmdyb3VwLmFkZCh0aGlzLl9pbmNyZW1lbnRhbCkpOnRoaXMuX2luY3JlbWVudGFsPW51bGx9LG55LmluY3JlbWVudGFsVXBkYXRlPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbjt0aGlzLl9pbmNyZW1lbnRhbD8obj1uZXcgZXksdGhpcy5faW5jcmVtZW50YWwuYWRkRGlzcGxheWFibGUobiwhMCkpOigobj1uZXcgZXkoe3JlY3RIb3ZlcjohMCxjdXJzb3I6ImRlZmF1bHQiLHN0YXJ0SW5kZXg6dC5zdGFydCxlbmRJbmRleDp0LmVuZH0pKS5pbmNyZW1lbnRhbD0hMCx0aGlzLmdyb3VwLmFkZChuKSksbi5zZXRTaGFwZSh7cG9pbnRzOmUuZ2V0TGF5b3V0KCJzeW1ib2xQb2ludHMiKX0pLHRoaXMuX3NldENvbW1vbihuLGUsISF0aGlzLl9pbmNyZW1lbnRhbCxpKX0sbnkuX3NldENvbW1vbj1mdW5jdGlvbihpLHQsZSxuKXt2YXIgbz10Lmhvc3RNb2RlbDtuPW58fHt9O3ZhciBhPXQuZ2V0VmlzdWFsKCJzeW1ib2xTaXplIik7aS5zZXRTaGFwZSgic2l6ZSIsYSBpbnN0YW5jZW9mIEFycmF5P2E6W2EsYV0pLGkuc29mdENsaXBTaGFwZT1uLmNsaXBTaGFwZXx8bnVsbCxpLnN5bWJvbFByb3h5PW1nKHQuZ2V0VmlzdWFsKCJzeW1ib2wiKSwwLDAsMCwwKSxpLnNldENvbG9yPWkuc3ltYm9sUHJveHkuc2V0Q29sb3I7dmFyIHI9aS5zaGFwZS5zaXplWzBdPDQ7aS51c2VTdHlsZShvLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUocj9bImNvbG9yIiwic2hhZG93Qmx1ciIsInNoYWRvd0NvbG9yIl06WyJjb2xvciJdKSk7dmFyIHM9dC5nZXRWaXN1YWwoImNvbG9yIik7cyYmaS5zZXRDb2xvcihzKSxlfHwoaS5zZXJpZXNJbmRleD1vLnNlcmllc0luZGV4LGkub24oIm1vdXNlbW92ZSIsZnVuY3Rpb24odCl7aS5kYXRhSW5kZXg9bnVsbDt2YXIgZT1pLmZpbmREYXRhSW5kZXgodC5vZmZzZXRYLHQub2Zmc2V0WSk7MDw9ZSYmKGkuZGF0YUluZGV4PWUrKGkuc3RhcnRJbmRleHx8MCkpfSkpfSxueS5yZW1vdmU9ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckluY3JlbWVudGFsKCksdGhpcy5faW5jcmVtZW50YWw9bnVsbCx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpfSxueS5fY2xlYXJJbmNyZW1lbnRhbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2luY3JlbWVudGFsO3QmJnQuY2xlYXJEaXNwbGF5YmxlcygpfSxNZih7dHlwZToic2NhdHRlciIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKTt0aGlzLl91cGRhdGVTeW1ib2xEcmF3KG4sdCkudXBkYXRlRGF0YShuLHtjbGlwU2hhcGU6dGhpcy5fZ2V0Q2xpcFNoYXBlKHQpfSksdGhpcy5fZmluaXNoZWQ9ITB9LGluY3JlbWVudGFsUHJlcGFyZVJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5nZXREYXRhKCk7dGhpcy5fdXBkYXRlU3ltYm9sRHJhdyhuLHQpLmluY3JlbWVudGFsUHJlcGFyZVVwZGF0ZShuKSx0aGlzLl9maW5pc2hlZD0hMX0saW5jcmVtZW50YWxSZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuX3N5bWJvbERyYXcuaW5jcmVtZW50YWxVcGRhdGUodCxlLmdldERhdGEoKSx7Y2xpcFNoYXBlOnRoaXMuX2dldENsaXBTaGFwZShlKX0pLHRoaXMuX2ZpbmlzaGVkPXQuZW5kPT09ZS5nZXREYXRhKCkuY291bnQoKX0sdXBkYXRlVHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKTtpZih0aGlzLmdyb3VwLmRpcnR5KCksIXRoaXMuX2ZpbmlzaGVkfHwxZTQ8bi5jb3VudCgpfHwhdGhpcy5fc3ltYm9sRHJhdy5pc1BlcnNpc3RlbnQoKSlyZXR1cm57dXBkYXRlOiEwfTt2YXIgbz1JbSgpLnJlc2V0KHQpO28ucHJvZ3Jlc3MmJm8ucHJvZ3Jlc3Moe3N0YXJ0OjAsZW5kOm4uY291bnQoKX0sbiksdGhpcy5fc3ltYm9sRHJhdy51cGRhdGVMYXlvdXQobil9LF9nZXRDbGlwU2hhcGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5jb29yZGluYXRlU3lzdGVtLGk9ZSYmZS5nZXRBcmVhJiZlLmdldEFyZWEoKTtyZXR1cm4gdC5nZXQoImNsaXAiLCEwKT9pOm51bGx9LF91cGRhdGVTeW1ib2xEcmF3OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fc3ltYm9sRHJhdyxuPWUucGlwZWxpbmVDb250ZXh0LmxhcmdlO3JldHVybiBpJiZuPT09dGhpcy5faXNMYXJnZURyYXd8fChpJiZpLnJlbW92ZSgpLGk9dGhpcy5fc3ltYm9sRHJhdz1uP25ldyBpeTpuZXcgJGcsdGhpcy5faXNMYXJnZURyYXc9bix0aGlzLmdyb3VwLnJlbW92ZUFsbCgpKSx0aGlzLmdyb3VwLmFkZChpLmdyb3VwKSxpfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt0aGlzLl9zeW1ib2xEcmF3JiZ0aGlzLl9zeW1ib2xEcmF3LnJlbW92ZSghMCksdGhpcy5fc3ltYm9sRHJhdz1udWxsfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fX0pLHlmKE1tKCJzY2F0dGVyIiwiY2lyY2xlIikpLHZmKEltKCJzY2F0dGVyIikpLHcob3ksRWcpLGF5LnByb3RvdHlwZS5nZXRJbmRpY2F0b3JBeGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2luZGljYXRvckF4ZXN9LGF5LnByb3RvdHlwZS5kYXRhVG9Qb2ludD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2luZGljYXRvckF4ZXNbZV07cmV0dXJuIHRoaXMuY29vcmRUb1BvaW50KGkuZGF0YVRvQ29vcmQodCksZSl9LGF5LnByb3RvdHlwZS5jb29yZFRvUG9pbnQ9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9pbmRpY2F0b3JBeGVzW2VdLmFuZ2xlO3JldHVyblt0aGlzLmN4K3QqTWF0aC5jb3MoaSksdGhpcy5jeS10Kk1hdGguc2luKGkpXX0sYXkucHJvdG90eXBlLnBvaW50VG9EYXRhPWZ1bmN0aW9uKHQpe3ZhciBlPXRbMF0tdGhpcy5jeCxpPXRbMV0tdGhpcy5jeSxuPU1hdGguc3FydChlKmUraSppKTtlLz1uLGkvPW47Zm9yKHZhciBvLGE9TWF0aC5hdGFuMigtaSxlKSxyPTEvMCxzPS0xLGw9MDtsPHRoaXMuX2luZGljYXRvckF4ZXMubGVuZ3RoO2wrKyl7dmFyIHU9dGhpcy5faW5kaWNhdG9yQXhlc1tsXSxoPU1hdGguYWJzKGEtdS5hbmdsZSk7aDxyJiYobz11LHM9bCxyPWgpfXJldHVybltzLCsobyYmby5jb29yZFRvRGF0YShuKSldfSxheS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXQoImNlbnRlciIpLG49ZS5nZXRXaWR0aCgpLG89ZS5nZXRIZWlnaHQoKSxhPU1hdGgubWluKG4sbykvMjt0aGlzLmN4PVBsKGlbMF0sbiksdGhpcy5jeT1QbChpWzFdLG8pLHRoaXMuc3RhcnRBbmdsZT10LmdldCgic3RhcnRBbmdsZSIpKk1hdGguUEkvMTgwO3ZhciByPXQuZ2V0KCJyYWRpdXMiKTsic3RyaW5nIiE9dHlwZW9mIHImJiJudW1iZXIiIT10eXBlb2Ygcnx8KHI9WzAscl0pLHRoaXMucjA9UGwoclswXSxhKSx0aGlzLnI9UGwoclsxXSxhKSxFKHRoaXMuX2luZGljYXRvckF4ZXMsZnVuY3Rpb24odCxlKXt0LnNldEV4dGVudCh0aGlzLnIwLHRoaXMucik7dmFyIGk9dGhpcy5zdGFydEFuZ2xlK2UqTWF0aC5QSSoyL3RoaXMuX2luZGljYXRvckF4ZXMubGVuZ3RoO2k9TWF0aC5hdGFuMihNYXRoLnNpbihpKSxNYXRoLmNvcyhpKSksdC5hbmdsZT1pfSx0aGlzKX0sYXkucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihuLHQpe3ZhciBvPXRoaXMuX2luZGljYXRvckF4ZXMsYT10aGlzLl9tb2RlbDtFKG8sZnVuY3Rpb24odCl7dC5zY2FsZS5zZXRFeHRlbnQoMS8wLC0xLzApfSksbi5lYWNoU2VyaWVzQnlUeXBlKCJyYWRhciIsZnVuY3Rpb24odCxlKXtpZigicmFkYXIiPT09dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSYmbi5nZXRDb21wb25lbnQoInJhZGFyIix0LmdldCgicmFkYXJJbmRleCIpKT09PWEpe3ZhciBpPXQuZ2V0RGF0YSgpO0UobyxmdW5jdGlvbih0KXt0LnNjYWxlLnVuaW9uRXh0ZW50RnJvbURhdGEoaSxpLm1hcERpbWVuc2lvbih0LmRpbSkpfSl9fSx0aGlzKTt2YXIgZj1hLmdldCgic3BsaXROdW1iZXIiKTtmdW5jdGlvbiBwKHQpe3ZhciBlPU1hdGgucG93KDEwLE1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjEwKSksaT10L2U7cmV0dXJuIDI9PT1pP2k9NTppKj0yLGkqZX1FKG8sZnVuY3Rpb24odCxlKXt2YXIgaT10Zyh0LnNjYWxlLHQubW9kZWwpO2VnKHQuc2NhbGUsdC5tb2RlbCk7dmFyIG49dC5tb2RlbCxvPXQuc2NhbGUsYT1uLmdldE1pbigpLHI9bi5nZXRNYXgoKSxzPW8uZ2V0SW50ZXJ2YWwoKTtpZihudWxsIT1hJiZudWxsIT1yKW8uc2V0RXh0ZW50KCthLCtyKSxvLnNldEludGVydmFsKChyLWEpL2YpO2Vsc2UgaWYobnVsbCE9YSlmb3IodmFyIGw7bD1hK3MqZixvLnNldEV4dGVudCgrYSxsKSxvLnNldEludGVydmFsKHMpLHM9cChzKSxsPGlbMV0mJmlzRmluaXRlKGwpJiZpc0Zpbml0ZShpWzFdKTspO2Vsc2UgaWYobnVsbCE9cilmb3IodmFyIHU7dT1yLXMqZixvLnNldEV4dGVudCh1LCtyKSxvLnNldEludGVydmFsKHMpLHM9cChzKSx1PmlbMF0mJmlzRmluaXRlKHUpJiZpc0Zpbml0ZShpWzBdKTspO2Vsc2V7dmFyIGg9by5nZXRUaWNrcygpLmxlbmd0aC0xO2Y8aCYmKHM9cChzKSk7dmFyIGM9TWF0aC5yb3VuZCgoaVswXStpWzFdKS8yL3MpKnMsZD1NYXRoLnJvdW5kKGYvMik7by5zZXRFeHRlbnQoTmwoYy1kKnMpLE5sKGMrKGYtZCkqcykpLG8uc2V0SW50ZXJ2YWwocyl9fSl9LGF5LmRpbWVuc2lvbnM9W10sYXkuY3JlYXRlPWZ1bmN0aW9uKGksbil7dmFyIG89W107cmV0dXJuIGkuZWFjaENvbXBvbmVudCgicmFkYXIiLGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBheSh0LGksbik7by5wdXNoKGUpLHQuY29vcmRpbmF0ZVN5c3RlbT1lfSksaS5lYWNoU2VyaWVzQnlUeXBlKCJyYWRhciIsZnVuY3Rpb24odCl7InJhZGFyIj09PXQuZ2V0KCJjb29yZGluYXRlU3lzdGVtIikmJih0LmNvb3JkaW5hdGVTeXN0ZW09b1t0LmdldCgicmFkYXJJbmRleCIpfHwwXSl9KSxvfSxuaC5yZWdpc3RlcigicmFkYXIiLGF5KTt2YXIgcnk9Tm0udmFsdWVBeGlzO2Z1bmN0aW9uIHN5KHQsZSl7cmV0dXJuIEMoe3Nob3c6ZX0sdCl9d2Yoe3R5cGU6InJhZGFyIixvcHRpb25VcGRhdGVkOmZ1bmN0aW9uKCl7dmFyIG89dGhpcy5nZXQoImJvdW5kYXJ5R2FwIiksYT10aGlzLmdldCgic3BsaXROdW1iZXIiKSxyPXRoaXMuZ2V0KCJzY2FsZSIpLHM9dGhpcy5nZXQoImF4aXNMaW5lIiksbD10aGlzLmdldCgiYXhpc1RpY2siKSx1PXRoaXMuZ2V0KCJheGlzVHlwZSIpLGg9dGhpcy5nZXQoImF4aXNMYWJlbCIpLGM9dGhpcy5nZXQoIm5hbWUiKSxkPXRoaXMuZ2V0KCJuYW1lLnNob3ciKSxmPXRoaXMuZ2V0KCJuYW1lLmZvcm1hdHRlciIpLHA9dGhpcy5nZXQoIm5hbWVHYXAiKSxnPXRoaXMuZ2V0KCJ0cmlnZ2VyRXZlbnQiKSx0PU4odGhpcy5nZXQoImluZGljYXRvciIpfHxbXSxmdW5jdGlvbih0KXtudWxsIT10Lm1heCYmMDx0Lm1heCYmIXQubWluP3QubWluPTA6bnVsbCE9dC5taW4mJnQubWluPDAmJiF0Lm1heCYmKHQubWF4PTApO3ZhciBlPWM7aWYobnVsbCE9dC5jb2xvciYmKGU9Qyh7Y29sb3I6dC5jb2xvcn0sYykpLHQ9bShEKHQpLHtib3VuZGFyeUdhcDpvLHNwbGl0TnVtYmVyOmEsc2NhbGU6cixheGlzTGluZTpzLGF4aXNUaWNrOmwsYXhpc1R5cGU6dSxheGlzTGFiZWw6aCxuYW1lOnQudGV4dCxuYW1lTG9jYXRpb246ImVuZCIsbmFtZUdhcDpwLG5hbWVUZXh0U3R5bGU6ZSx0cmlnZ2VyRXZlbnQ6Z30sITEpLGR8fCh0Lm5hbWU9IiIpLCJzdHJpbmciPT10eXBlb2YgZil7dmFyIGk9dC5uYW1lO3QubmFtZT1mLnJlcGxhY2UoInt2YWx1ZX0iLG51bGwhPWk/aToiIil9ZWxzZSJmdW5jdGlvbiI9PXR5cGVvZiBmJiYodC5uYW1lPWYodC5uYW1lLHQpKTt2YXIgbj1MKG5ldyBJbCh0LG51bGwsdGhpcy5lY01vZGVsKSxzZyk7cmV0dXJuIG4ubWFpblR5cGU9InJhZGFyIixuLmNvbXBvbmVudEluZGV4PXRoaXMuY29tcG9uZW50SW5kZXgsbn0sdGhpcyk7dGhpcy5nZXRJbmRpY2F0b3JNb2RlbHM9ZnVuY3Rpb24oKXtyZXR1cm4gdH19LGRlZmF1bHRPcHRpb246e3psZXZlbDowLHo6MCxjZW50ZXI6WyI1MCUiLCI1MCUiXSxyYWRpdXM6Ijc1JSIsc3RhcnRBbmdsZTo5MCxuYW1lOntzaG93OiEwfSxib3VuZGFyeUdhcDpbMCwwXSxzcGxpdE51bWJlcjo1LG5hbWVHYXA6MTUsc2NhbGU6ITEsc2hhcGU6InBvbHlnb24iLGF4aXNMaW5lOm0oe2xpbmVTdHlsZTp7Y29sb3I6IiNiYmIifX0scnkuYXhpc0xpbmUpLGF4aXNMYWJlbDpzeShyeS5heGlzTGFiZWwsITEpLGF4aXNUaWNrOnN5KHJ5LmF4aXNUaWNrLCExKSxheGlzVHlwZToiaW50ZXJ2YWwiLHNwbGl0TGluZTpzeShyeS5zcGxpdExpbmUsITApLHNwbGl0QXJlYTpzeShyeS5zcGxpdEFyZWEsITApLGluZGljYXRvcjpbXX19KTt2YXIgbHk9WyJheGlzTGluZSIsImF4aXNUaWNrTGFiZWwiLCJheGlzTmFtZSJdO2JmKHt0eXBlOiJyYWRhciIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLmdyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX2J1aWxkQXhlcyh0KSx0aGlzLl9idWlsZFNwbGl0TGluZUFuZEFyZWEodCl9LF9idWlsZEF4ZXM6ZnVuY3Rpb24odCl7dmFyIGU9dC5jb29yZGluYXRlU3lzdGVtO0UoTihlLmdldEluZGljYXRvckF4ZXMoKSxmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFltKHQubW9kZWwse3Bvc2l0aW9uOltlLmN4LGUuY3ldLHJvdGF0aW9uOnQuYW5nbGUsbGFiZWxEaXJlY3Rpb246LTEsdGlja0RpcmVjdGlvbjotMSxuYW1lRGlyZWN0aW9uOjF9KX0pLGZ1bmN0aW9uKHQpe0UobHksdC5hZGQsdCksdGhpcy5ncm91cC5hZGQodC5nZXRHcm91cCgpKX0sdGhpcyl9LF9idWlsZFNwbGl0TGluZUFuZEFyZWE6ZnVuY3Rpb24odCl7dmFyIG49dC5jb29yZGluYXRlU3lzdGVtLGU9bi5nZXRJbmRpY2F0b3JBeGVzKCk7aWYoZS5sZW5ndGgpe3ZhciBpPXQuZ2V0KCJzaGFwZSIpLG89dC5nZXRNb2RlbCgic3BsaXRMaW5lIiksYT10LmdldE1vZGVsKCJzcGxpdEFyZWEiKSxyPW8uZ2V0TW9kZWwoImxpbmVTdHlsZSIpLHM9YS5nZXRNb2RlbCgiYXJlYVN0eWxlIiksbD1vLmdldCgic2hvdyIpLHU9YS5nZXQoInNob3ciKSxoPXIuZ2V0KCJjb2xvciIpLGM9cy5nZXQoImNvbG9yIik7aD1rKGgpP2g6W2hdLGM9ayhjKT9jOltjXTt2YXIgZD1bXSxmPVtdO2lmKCJjaXJjbGUiPT09aSlmb3IodmFyIHA9ZVswXS5nZXRUaWNrc0Nvb3JkcygpLGc9bi5jeCxtPW4uY3ksdj0wO3Y8cC5sZW5ndGg7disrKXtpZihsKWRbSShkLGgsdildLnB1c2gobmV3IEhyKHtzaGFwZTp7Y3g6ZyxjeTptLHI6cFt2XS5jb29yZH19KSk7aWYodSYmdjxwLmxlbmd0aC0xKWZbSShmLGMsdildLnB1c2gobmV3IFhyKHtzaGFwZTp7Y3g6ZyxjeTptLHIwOnBbdl0uY29vcmQscjpwW3YrMV0uY29vcmR9fSkpfWVsc2V7dmFyIHkseD1OKGUsZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldFRpY2tzQ29vcmRzKCk7cmV0dXJuIHk9bnVsbD09eT9pLmxlbmd0aC0xOk1hdGgubWluKGkubGVuZ3RoLTEseSksTihpLGZ1bmN0aW9uKHQpe3JldHVybiBuLmNvb3JkVG9Qb2ludCh0LmNvb3JkLGUpfSl9KSxfPVtdO2Zvcih2PTA7djw9eTt2Kyspe2Zvcih2YXIgdz1bXSxiPTA7YjxlLmxlbmd0aDtiKyspdy5wdXNoKHhbYl1bdl0pO2lmKHdbMF0mJncucHVzaCh3WzBdLnNsaWNlKCkpLGwpZFtJKGQsaCx2KV0ucHVzaChuZXcgS3Ioe3NoYXBlOntwb2ludHM6d319KSk7aWYodSYmXylmW0koZixjLHYtMSldLnB1c2gobmV3IHFyKHtzaGFwZTp7cG9pbnRzOncuY29uY2F0KF8pfX0pKTtfPXcuc2xpY2UoKS5yZXZlcnNlKCl9fXZhciBTPXIuZ2V0TGluZVN0eWxlKCksTT1zLmdldEFyZWFTdHlsZSgpO0UoZixmdW5jdGlvbih0LGUpe3RoaXMuZ3JvdXAuYWRkKGtzKHQse3N0eWxlOkMoe3N0cm9rZToibm9uZSIsZmlsbDpjW2UlYy5sZW5ndGhdfSxNKSxzaWxlbnQ6ITB9KSl9LHRoaXMpLEUoZCxmdW5jdGlvbih0LGUpe3RoaXMuZ3JvdXAuYWRkKGtzKHQse3N0eWxlOkMoe2ZpbGw6Im5vbmUiLHN0cm9rZTpoW2UlaC5sZW5ndGhdfSxTKSxzaWxlbnQ6ITB9KSl9LHRoaXMpfWZ1bmN0aW9uIEkodCxlLGkpe3ZhciBuPWklZS5sZW5ndGg7cmV0dXJuIHRbbl09dFtuXXx8W10sbn19fSk7dmFyIHV5PWljLmV4dGVuZCh7dHlwZToic2VyaWVzLnJhZGFyIixkZXBlbmRlbmNpZXM6WyJyYWRhciJdLGluaXQ6ZnVuY3Rpb24odCl7dXkuc3VwZXJBcHBseSh0aGlzLCJpbml0Iixhcmd1bWVudHMpLHRoaXMubGVnZW5kVmlzdWFsUHJvdmlkZXI9bmV3IEd2KEEodGhpcy5nZXREYXRhLHRoaXMpLEEodGhpcy5nZXRSYXdEYXRhLHRoaXMpKX0sZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gQnYodGhpcyx7Z2VuZXJhdGVDb29yZDoiaW5kaWNhdG9yXyIsZ2VuZXJhdGVDb29yZENvdW50OjEvMH0pfSxmb3JtYXRUb29sdGlwOmZ1bmN0aW9uKG4pe3ZhciBvPXRoaXMuZ2V0RGF0YSgpLHQ9dGhpcy5jb29yZGluYXRlU3lzdGVtLmdldEluZGljYXRvckF4ZXMoKSxlPXRoaXMuZ2V0RGF0YSgpLmdldE5hbWUobik7cmV0dXJuIGV1KCIiPT09ZT90aGlzLm5hbWU6ZSkrIjxici8+IitOKHQsZnVuY3Rpb24odCxlKXt2YXIgaT1vLmdldChvLm1hcERpbWVuc2lvbih0LmRpbSksbik7cmV0dXJuIGV1KHQubmFtZSsiIDogIitpKX0pLmpvaW4oIjxiciAvPiIpfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjIsY29vcmRpbmF0ZVN5c3RlbToicmFkYXIiLGxlZ2VuZEhvdmVyTGluazohMCxyYWRhckluZGV4OjAsbGluZVN0eWxlOnt3aWR0aDoyLHR5cGU6InNvbGlkIn0sbGFiZWw6e3Bvc2l0aW9uOiJ0b3AifSxzeW1ib2w6ImVtcHR5Q2lyY2xlIixzeW1ib2xTaXplOjR9fSk7TWYoe3R5cGU6InJhZGFyIixyZW5kZXI6ZnVuY3Rpb24obCx0LGUpe3ZhciBpPWwuY29vcmRpbmF0ZVN5c3RlbSxnPXRoaXMuZ3JvdXAsbT1sLmdldERhdGEoKSxzPXRoaXMuX2RhdGE7ZnVuY3Rpb24gdSh0LGUpe3ZhciBpPXQuZ2V0SXRlbVZpc3VhbChlLCJzeW1ib2wiKXx8ImNpcmNsZSIsbj10LmdldEl0ZW1WaXN1YWwoZSwiY29sb3IiKTtpZigibm9uZSIhPT1pKXt2YXIgbz1mdW5jdGlvbih0KXtyZXR1cm4gayh0KXx8KHQ9Wyt0LCt0XSksdH0odC5nZXRJdGVtVmlzdWFsKGUsInN5bWJvbFNpemUiKSksYT1tZyhpLC0xLC0xLDIsMixuKTtyZXR1cm4gYS5hdHRyKHtzdHlsZTp7c3Ryb2tlTm9TY2FsZTohMH0sejI6MTAwLHNjYWxlOltvWzBdLzIsb1sxXS8yXX0pLGF9fWZ1bmN0aW9uIGgodCxlLGksbixvLGEpe2kucmVtb3ZlQWxsKCk7Zm9yKHZhciByPTA7cjxlLmxlbmd0aC0xO3IrKyl7dmFyIHM9dShuLG8pO3MmJih0W3MuX19kaW1JZHg9cl0/KHMuYXR0cigicG9zaXRpb24iLHRbcl0pLHlsW2E/ImluaXRQcm9wcyI6InVwZGF0ZVByb3BzIl0ocyx7cG9zaXRpb246ZVtyXX0sbCxvKSk6cy5hdHRyKCJwb3NpdGlvbiIsZVtyXSksaS5hZGQocykpfX1mdW5jdGlvbiBjKHQpe3JldHVybiBOKHQsZnVuY3Rpb24odCl7cmV0dXJuW2kuY3gsaS5jeV19KX1tLmRpZmYocykuYWRkKGZ1bmN0aW9uKHQpe3ZhciBlPW0uZ2V0SXRlbUxheW91dCh0KTtpZihlKXt2YXIgaT1uZXcgcXIsbj1uZXcgS3Isbz17c2hhcGU6e3BvaW50czplfX07aS5zaGFwZS5wb2ludHM9YyhlKSxuLnNoYXBlLnBvaW50cz1jKGUpLGxsKGksbyxsLHQpLGxsKG4sbyxsLHQpO3ZhciBhPW5ldyBJaSxyPW5ldyBJaTthLmFkZChuKSxhLmFkZChpKSxhLmFkZChyKSxoKG4uc2hhcGUucG9pbnRzLGUscixtLHQsITApLG0uc2V0SXRlbUdyYXBoaWNFbCh0LGEpfX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPXMuZ2V0SXRlbUdyYXBoaWNFbChlKSxuPWkuY2hpbGRBdCgwKSxvPWkuY2hpbGRBdCgxKSxhPWkuY2hpbGRBdCgyKSxyPXtzaGFwZTp7cG9pbnRzOm0uZ2V0SXRlbUxheW91dCh0KX19O3Iuc2hhcGUucG9pbnRzJiYoaChuLnNoYXBlLnBvaW50cyxyLnNoYXBlLnBvaW50cyxhLG0sdCwhMSksc2wobixyLGwpLHNsKG8scixsKSxtLnNldEl0ZW1HcmFwaGljRWwodCxpKSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7Zy5yZW1vdmUocy5nZXRJdGVtR3JhcGhpY0VsKHQpKX0pLmV4ZWN1dGUoKSxtLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQsaSl7dmFyIGU9bS5nZXRJdGVtTW9kZWwoaSksbj10LmNoaWxkQXQoMCksbz10LmNoaWxkQXQoMSksYT10LmNoaWxkQXQoMikscj1tLmdldEl0ZW1WaXN1YWwoaSwiY29sb3IiKTtnLmFkZCh0KSxuLnVzZVN0eWxlKEMoZS5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCkse2ZpbGw6Im5vbmUiLHN0cm9rZTpyfSkpLG4uaG92ZXJTdHlsZT1lLmdldE1vZGVsKCJlbXBoYXNpcy5saW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKTt2YXIgcz1lLmdldE1vZGVsKCJhcmVhU3R5bGUiKSxsPWUuZ2V0TW9kZWwoImVtcGhhc2lzLmFyZWFTdHlsZSIpLHU9cy5pc0VtcHR5KCkmJnMucGFyZW50TW9kZWwuaXNFbXB0eSgpLGg9bC5pc0VtcHR5KCkmJmwucGFyZW50TW9kZWwuaXNFbXB0eSgpO2g9aCYmdSxvLmlnbm9yZT11LG8udXNlU3R5bGUoQyhzLmdldEFyZWFTdHlsZSgpLHtmaWxsOnIsb3BhY2l0eTouN30pKSxvLmhvdmVyU3R5bGU9bC5nZXRBcmVhU3R5bGUoKTt2YXIgYz1lLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoWyJjb2xvciJdKSxkPWUuZ2V0TW9kZWwoImVtcGhhc2lzLml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZSgpLGY9ZS5nZXRNb2RlbCgibGFiZWwiKSxwPWUuZ2V0TW9kZWwoImVtcGhhc2lzLmxhYmVsIik7YS5lYWNoQ2hpbGQoZnVuY3Rpb24odCl7dC5zZXRTdHlsZShjKSx0LmhvdmVyU3R5bGU9RChkKTt2YXIgZT1tLmdldChtLmRpbWVuc2lvbnNbdC5fX2RpbUlkeF0saSk7bnVsbCE9ZSYmIWlzTmFOKGUpfHwoZT0iIiksJHModC5zdHlsZSx0LmhvdmVyU3R5bGUsZixwLHtsYWJlbEZldGNoZXI6bS5ob3N0TW9kZWwsbGFiZWxEYXRhSW5kZXg6aSxsYWJlbERpbUluZGV4OnQuX19kaW1JZHgsZGVmYXVsdFRleHQ6ZSxhdXRvQ29sb3I6cixpc1JlY3RUZXh0OiEwfSl9KSx0LmhpZ2hEb3duT25VcGRhdGU9ZnVuY3Rpb24odCxlKXtvLmF0dHIoImlnbm9yZSIsImVtcGhhc2lzIj09PWU/aDp1KX0sWXModCl9KSx0aGlzLl9kYXRhPW19LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fZGF0YT1udWxsfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fX0pO2Z1bmN0aW9uIGh5KHQpe3JldHVybiFpc05hTih0WzBdKSYmIWlzTmFOKHRbMV0pfWZ1bmN0aW9uIGN5KHQpe3JldHVyblt0LmN4LHQuY3ldfXlmKFl2KCJyYWRhciIpKSx5ZihNbSgicmFkYXIiLCJjaXJjbGUiKSksdmYoZnVuY3Rpb24odCl7dC5lYWNoU2VyaWVzQnlUeXBlKCJyYWRhciIsZnVuY3Rpb24odCl7dmFyIGk9dC5nZXREYXRhKCksbz1bXSxhPXQuY29vcmRpbmF0ZVN5c3RlbTtpZihhKXt2YXIgZT1hLmdldEluZGljYXRvckF4ZXMoKTtFKGUsZnVuY3Rpb24odCxuKXtpLmVhY2goaS5tYXBEaW1lbnNpb24oZVtuXS5kaW0pLGZ1bmN0aW9uKHQsZSl7b1tlXT1vW2VdfHxbXTt2YXIgaT1hLmRhdGFUb1BvaW50KHQsbik7b1tlXVtuXT1oeShpKT9pOmN5KGEpfSl9KSxpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9SShvW3RdLGZ1bmN0aW9uKHQpe3JldHVybiBoeSh0KX0pfHxjeShhKTtvW3RdLnB1c2goZS5zbGljZSgpKSxpLnNldEl0ZW1MYXlvdXQodCxvW3RdKX0pfX0pfSkscGYodHkoInJhZGFyIikpLGZmKGZ1bmN0aW9uKGkpe3ZhciB0PWkucG9sYXI7aWYodCl7ayh0KXx8KHQ9W3RdKTt2YXIgbj1bXTtFKHQsZnVuY3Rpb24odCxlKXt0LmluZGljYXRvcj8odC50eXBlJiYhdC5zaGFwZSYmKHQuc2hhcGU9dC50eXBlKSxpLnJhZGFyPWkucmFkYXJ8fFtdLGsoaS5yYWRhcil8fChpLnJhZGFyPVtpLnJhZGFyXSksaS5yYWRhci5wdXNoKHQpKTpuLnB1c2godCl9KSxpLnBvbGFyPW59RShpLnNlcmllcyxmdW5jdGlvbih0KXt0JiYicmFkYXIiPT09dC50eXBlJiZ0LnBvbGFySW5kZXgmJih0LnJhZGFySW5kZXg9dC5wb2xhckluZGV4KX0pfSk7Zm9yKHZhciBkeT1bMTI2LDI1XSxmeT1bW1swLDMuNV0sWzcsMTEuMl0sWzE1LDExLjldLFszMCw3XSxbNDIsLjddLFs1MiwuN10sWzU2LDcuN10sWzU5LC43XSxbNjQsLjddLFs2NCwwXSxbNSwwXSxbMCwzLjVdXSxbWzEzLDE2LjFdLFsxOSwxNC43XSxbMTYsMjEuN10sWzExLDIzLjFdLFsxMywxNi4xXV0sW1sxMiwzMi4yXSxbMTQsMzguNV0sWzE1LDM4LjVdLFsxMywzMi4yXSxbMTIsMzIuMl1dLFtbMTYsNDcuNl0sWzEyLDUzLjJdLFsxMyw1My4yXSxbMTgsNDcuNl0sWzE2LDQ3LjZdXSxbWzYsNjQuNF0sWzgsNzBdLFs5LDcwXSxbOCw2NC40XSxbNiw2NC40XV0sW1syMyw4Mi42XSxbMjksNzkuOF0sWzMwLDc5LjhdLFsyNSw4Mi42XSxbMjMsODIuNl1dLFtbMzcsNzAuN10sWzQzLDYyLjNdLFs0NCw2Mi4zXSxbMzksNzAuN10sWzM3LDcwLjddXSxbWzQ4LDUxLjFdLFs1MSw0NS41XSxbNTMsNDUuNV0sWzUwLDUxLjFdLFs0OCw1MS4xXV0sW1s1MSwzNV0sWzUxLDI4LjddLFs1MywyOC43XSxbNTMsMzVdLFs1MSwzNV1dLFtbNTIsMjIuNF0sWzU1LDE3LjVdLFs1NiwxNy41XSxbNTMsMjIuNF0sWzUyLDIyLjRdXSxbWzU4LDEyLjZdLFs2Miw3XSxbNjMsN10sWzYwLDEyLjZdLFs1OCwxMi42XV0sW1swLDMuNV0sWzAsOTMuMV0sWzY0LDkzLjFdLFs2NCwwXSxbNjMsMF0sWzYzLDkyLjRdLFsxLDkyLjRdLFsxLDMuNV0sWzAsMy41XV1dLHB5PTA7cHk8ZnkubGVuZ3RoO3B5KyspZm9yKHZhciBneT0wO2d5PGZ5W3B5XS5sZW5ndGg7Z3krKylmeVtweV1bZ3ldWzBdLz0xMC41LGZ5W3B5XVtneV1bMV0vPS0xNCxmeVtweV1bZ3ldWzBdKz1keVswXSxmeVtweV1bZ3ldWzFdKz1keVsxXTt2YXIgbXk9eyLljZfmtbfor7jlspsiOlszMiw4MF0sIuW5v+S4nCI6WzAsLTEwXSwi6aaZ5rivIjpbMTAsNV0sIua+s+mXqCI6Wy0xMCwxMF0sIuWkqea0pSI6WzUsNV19LHZ5PXtSdXNzaWE6WzEwMCw2MF0sIlVuaXRlZCBTdGF0ZXMiOlstOTksMzhdLCJVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EiOlstOTksMzhdfSx5eT1bW1sxMjMuNDUxNjUyNTI2ODU1NDcsMjUuNzM1MjcxNjQ0MDIyNjFdLFsxMjMuNDk3MzE0NDUzMTI0OTksMjUuNzM1MjcxNjQ0MDIyNjFdLFsxMjMuNDk3MzE0NDUzMTI0OTksMjUuNzUwNzM0MDY0NjAwODg0XSxbMTIzLjQ1MTY1MjUyNjg1NTQ3LDI1Ljc1MDczNDA2NDYwMDg4NF0sWzEyMy40NTE2NTI1MjY4NTU0NywyNS43MzUyNzE2NDQwMjI2MV1dXSx4eT1abygpLF95PXtsb2FkOmZ1bmN0aW9uKG4sdCl7dmFyIGU9eHkodCkucGFyc2VkO2lmKGUpcmV0dXJuIGU7dmFyIGksbz10LnNwZWNpYWxBcmVhc3x8e30sYT10Lmdlb0pTT047dHJ5e2k9YT9NZyhhKTpbXX1jYXRjaCh0KXt0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgZ2VvSnNvbiBmb3JtYXRcbiIrdC5tZXNzYWdlKX1yZXR1cm4gZnVuY3Rpb24odCxlKXsiY2hpbmEiPT09dCYmZS5wdXNoKG5ldyBiZygi5Y2X5rW36K+45bKbIixOKGZ5LGZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOiJwb2x5Z29uIixleHRlcmlvcjp0fX0pLGR5KSl9KG4saSksRShpLGZ1bmN0aW9uKHQpe3ZhciBlPXQubmFtZTshZnVuY3Rpb24odCxlKXtpZigiY2hpbmEiPT09dCl7dmFyIGk9bXlbZS5uYW1lXTtpZihpKXt2YXIgbj1lLmNlbnRlcjtuWzBdKz1pWzBdLzEwLjUsblsxXSs9LWlbMV0vMTR9fX0obix0KSxmdW5jdGlvbih0LGUpe2lmKCJ3b3JsZCI9PT10KXt2YXIgaT12eVtlLm5hbWVdO2lmKGkpe3ZhciBuPWUuY2VudGVyO25bMF09aVswXSxuWzFdPWlbMV19fX0obix0KSxmdW5jdGlvbih0LGUpeyJjaGluYSI9PT10JiYi5Y+w5rm+Ij09PWUubmFtZSYmZS5nZW9tZXRyaWVzLnB1c2goe3R5cGU6InBvbHlnb24iLGV4dGVyaW9yOnl5WzBdfSl9KG4sdCk7dmFyIGk9b1tlXTtpJiZ0LnRyYW5zZm9ybVRvKGkubGVmdCxpLnRvcCxpLndpZHRoLGkuaGVpZ2h0KX0pLHh5KHQpLnBhcnNlZD17cmVnaW9uczppLGJvdW5kaW5nUmVjdDpmdW5jdGlvbih0KXtmb3IodmFyIGUsaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbj10W2ldLmdldEJvdW5kaW5nUmVjdCgpOyhlPWV8fG4uY2xvbmUoKSkudW5pb24obil9cmV0dXJuIGV9KGkpfX19O3ZhciB3eT1abygpO2Z1bmN0aW9uIGJ5KHQsZSl7dmFyIGksbixvPXQuc3ZnWE1MO3RyeXtZKG51bGwhPShuPShpPW8mJmZ1bmN0aW9uKHQsZSl7cmV0dXJuKG5ldyBhZCkucGFyc2UodCxlKX0obyx7aWdub3JlVmlld0JveDohMCxpZ25vcmVSb290Q2xpcDohMH0pfHx7fSkucm9vdCkpfWNhdGNoKHQpe3Rocm93IG5ldyBFcnJvcigiSW52YWxpZCBzdmcgZm9ybWF0XG4iK3QubWVzc2FnZSl9dmFyIGE9aS53aWR0aCxyPWkuaGVpZ2h0LHM9aS52aWV3Qm94UmVjdDtpZihlfHwoZT1udWxsPT1hfHxudWxsPT1yP24uZ2V0Qm91bmRpbmdSZWN0KCk6bmV3IE1pKDAsMCwwLDApLG51bGwhPWEmJihlLndpZHRoPWEpLG51bGwhPXImJihlLmhlaWdodD1yKSkscyl7dmFyIGw9bWQocyxlLndpZHRoLGUuaGVpZ2h0KSx1PW47KG49bmV3IElpKS5hZGQodSksdS5zY2FsZT1sLnNjYWxlLHUucG9zaXRpb249bC5wb3NpdGlvbn1yZXR1cm4gbi5zZXRDbGlwUGF0aChuZXcgaXMoe3NoYXBlOmUucGxhaW4oKX0pKSx7cm9vdDpuLGJvdW5kaW5nUmVjdDplfX12YXIgU3k9e2dlb0pTT046X3ksc3ZnOntsb2FkOmZ1bmN0aW9uKHQsZSl7dmFyIGk9d3koZSkub3JpZ2luUm9vdDtpZihpKXJldHVybntyb290OmksYm91bmRpbmdSZWN0Ond5KGUpLmJvdW5kaW5nUmVjdH07dmFyIG49YnkoZSk7cmV0dXJuIHd5KGUpLm9yaWdpblJvb3Q9bi5yb290LHd5KGUpLmJvdW5kaW5nUmVjdD1uLmJvdW5kaW5nUmVjdCxufSxtYWtlR3JhcGhpYzpmdW5jdGlvbih0LGUsaSl7dmFyIG49d3koZSksbz1uLnJvb3RNYXB8fChuLnJvb3RNYXA9USgpKSxhPW8uZ2V0KGkpO2lmKGEpcmV0dXJuIGE7dmFyIHI9bi5vcmlnaW5Sb290LHM9bi5ib3VuZGluZ1JlY3Q7cmV0dXJuIGE9bi5vcmlnaW5Sb290SG9zdEtleT9ieShlLHMpLnJvb3Q6KG4ub3JpZ2luUm9vdEhvc3RLZXk9aSxyKSxvLnNldChpLGEpfSxyZW1vdmVHcmFwaGljOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj13eShlKSxvPW4ucm9vdE1hcDtvJiZvLnJlbW92ZUtleShpKSxpPT09bi5vcmlnaW5Sb290SG9zdEtleSYmKG4ub3JpZ2luUm9vdEhvc3RLZXk9bnVsbCl9fX0sTXk9e2xvYWQ6ZnVuY3Rpb24obixvKXt2YXIgYSxyPVtdLHM9USgpLGw9USgpO3JldHVybiBFKFR5KG4pLGZ1bmN0aW9uKHQpe3ZhciBlPVN5W3QudHlwZV0ubG9hZChuLHQpO0UoZS5yZWdpb25zLGZ1bmN0aW9uKHQpe3ZhciBlPXQubmFtZTtvJiZvLmhhc093blByb3BlcnR5KGUpJiYodD10LmNsb25lU2hhbGxvdyhlPW9bZV0pKSxyLnB1c2godCkscy5zZXQoZSx0KSxsLnNldChlLHQuY2VudGVyKX0pO3ZhciBpPWUuYm91bmRpbmdSZWN0O2kmJihhP2EudW5pb24oaSk6YT1pLmNsb25lKCkpfSkse3JlZ2lvbnM6cixyZWdpb25zTWFwOnMsbmFtZUNvb3JkTWFwOmwsYm91bmRpbmdSZWN0OmF8fG5ldyBNaSgwLDAsMCwwKX19LG1ha2VHcmFwaGljOkl5KCJtYWtlR3JhcGhpYyIpLHJlbW92ZUdyYXBoaWM6SXkoInJlbW92ZUdyYXBoaWMiKX07ZnVuY3Rpb24gSXkoYSl7cmV0dXJuIGZ1bmN0aW9uKGksbil7dmFyIHQ9VHkoaSksbz1bXTtyZXR1cm4gRSh0LGZ1bmN0aW9uKHQpe3ZhciBlPVN5W3QudHlwZV1bYV07ZSYmby5wdXNoKGUoaSx0LG4pKX0pLG99fWZ1bmN0aW9uIFR5KHQpe3JldHVybiB5ZC5yZXRyaWV2ZU1hcCh0KXx8W119YihpYy5leHRlbmQoe3R5cGU6InNlcmllcy5tYXAiLGRlcGVuZGVuY2llczpbImdlbyJdLGxheW91dE1vZGU6ImJveCIsbmVlZHNEcmF3TWFwOiExLHNlcmllc0dyb3VwOltdLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1Cdih0aGlzLHtjb29yZERpbWVuc2lvbnM6WyJ2YWx1ZSJdLGVuY29kZURlZmF1bHRlcjpUKFl1LHRoaXMpfSksaT1lLm1hcERpbWVuc2lvbigidmFsdWUiKSxuPVEoKSxvPVtdLGE9W10scj0wLHM9ZS5jb3VudCgpO3I8cztyKyspe3ZhciBsPWUuZ2V0TmFtZShyKTtuLnNldChsLCEwKSxvLnB1c2goe25hbWU6bCx2YWx1ZTplLmdldChpLHIpLHNlbGVjdGVkOlZoKGUsciwic2VsZWN0ZWQiKX0pfXJldHVybiBFKE15LmxvYWQodGhpcy5nZXRNYXBUeXBlKCksdGhpcy5vcHRpb24ubmFtZU1hcCkucmVnaW9ucyxmdW5jdGlvbih0KXt2YXIgZT10Lm5hbWU7bi5nZXQoZSl8fChvLnB1c2goe25hbWU6ZX0pLGEucHVzaChlKSl9KSx0aGlzLnVwZGF0ZVNlbGVjdGVkTWFwKG8pLGUuYXBwZW5kVmFsdWVzKFtdLGEpLGV9LGdldEhvc3RHZW9Nb2RlbDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uLmdlb0luZGV4O3JldHVybiBudWxsIT10P3RoaXMuZGVwZW5kZW50TW9kZWxzLmdlb1t0XTpudWxsfSxnZXRNYXBUeXBlOmZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMuZ2V0SG9zdEdlb01vZGVsKCl8fHRoaXMpLm9wdGlvbi5tYXB9LGdldFJhd1ZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RGF0YSgpO3JldHVybiBlLmdldChlLm1hcERpbWVuc2lvbigidmFsdWUiKSx0KX0sZ2V0UmVnaW9uTW9kZWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXREYXRhKCk7cmV0dXJuIGUuZ2V0SXRlbU1vZGVsKGUuaW5kZXhPZk5hbWUodCkpfSxmb3JtYXRUb29sdGlwOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmdldERhdGEoKSxpPUtsKHRoaXMuZ2V0UmF3VmFsdWUodCkpLG49ZS5nZXROYW1lKHQpLG89dGhpcy5zZXJpZXNHcm91cCxhPVtdLHI9MDtyPG8ubGVuZ3RoO3IrKyl7dmFyIHM9b1tyXS5vcmlnaW5hbERhdGEuaW5kZXhPZk5hbWUobiksbD1lLm1hcERpbWVuc2lvbigidmFsdWUiKTtpc05hTihvW3JdLm9yaWdpbmFsRGF0YS5nZXQobCxzKSl8fGEucHVzaChldShvW3JdLm5hbWUpKX1yZXR1cm4gYS5qb2luKCIsICIpKyI8YnIgLz4iK2V1KG4rIiA6ICIraSl9LGdldFRvb2x0aXBQb3NpdGlvbjpmdW5jdGlvbih0KXtpZihudWxsIT10KXt2YXIgZT10aGlzLmdldERhdGEoKS5nZXROYW1lKHQpLGk9dGhpcy5jb29yZGluYXRlU3lzdGVtLG49aS5nZXRSZWdpb24oZSk7cmV0dXJuIG4mJmkuZGF0YVRvUG9pbnQobi5jZW50ZXIpfX0sc2V0Wm9vbTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbi56b29tPXR9LHNldENlbnRlcjpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbi5jZW50ZXI9dH0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06ImdlbyIsbWFwOiIiLGxlZnQ6ImNlbnRlciIsdG9wOiJjZW50ZXIiLGFzcGVjdFNjYWxlOi43NSxzaG93TGVnZW5kU3ltYm9sOiEwLGRhdGFSYW5nZUhvdmVyTGluazohMCxib3VuZGluZ0Nvb3JkczpudWxsLGNlbnRlcjpudWxsLHpvb206MSxzY2FsZUxpbWl0Om51bGwsbGFiZWw6e3Nob3c6ITEsY29sb3I6IiMwMDAifSxpdGVtU3R5bGU6e2JvcmRlcldpZHRoOi41LGJvcmRlckNvbG9yOiIjNDQ0IixhcmVhQ29sb3I6IiNlZWUifSxlbXBoYXNpczp7bGFiZWw6e3Nob3c6ITAsY29sb3I6InJnYigxMDAsMCwwKSJ9LGl0ZW1TdHlsZTp7YXJlYUNvbG9yOiJyZ2JhKDI1NSwyMTUsMCwwLjgpIn19fX0pLFZ2KTt2YXIgQXk9IlwwX2VjX2ludGVyYWN0aW9uX211dGV4IjtmdW5jdGlvbiBEeSh0LGUpe3JldHVybiEhQ3kodClbZV19ZnVuY3Rpb24gQ3kodCl7cmV0dXJuIHRbQXldfHwodFtBeV09e30pfWZ1bmN0aW9uIEx5KGkpe3RoaXMucG9pbnRlckNoZWNrZXIsdGhpcy5fenI9aSx0aGlzLl9vcHQ9e307dmFyIHQ9QSxuPXQoa3ksdGhpcyksbz10KFB5LHRoaXMpLGE9dChOeSx0aGlzKSxyPXQoT3ksdGhpcykscz10KEV5LHRoaXMpO0N0LmNhbGwodGhpcyksdGhpcy5zZXRQb2ludGVyQ2hlY2tlcj1mdW5jdGlvbih0KXt0aGlzLnBvaW50ZXJDaGVja2VyPXR9LHRoaXMuZW5hYmxlPWZ1bmN0aW9uKHQsZSl7dGhpcy5kaXNhYmxlKCksdGhpcy5fb3B0PUMoRChlKXx8e30se3pvb21Pbk1vdXNlV2hlZWw6ITAsbW92ZU9uTW91c2VNb3ZlOiEwLG1vdmVPbk1vdXNlV2hlZWw6ITEscHJldmVudERlZmF1bHRNb3VzZU1vdmU6ITB9KSxudWxsPT10JiYodD0hMCksITAhPT10JiYibW92ZSIhPT10JiYicGFuIiE9PXR8fChpLm9uKCJtb3VzZWRvd24iLG4pLGkub24oIm1vdXNlbW92ZSIsbyksaS5vbigibW91c2V1cCIsYSkpLCEwIT09dCYmInNjYWxlIiE9PXQmJiJ6b29tIiE9PXR8fChpLm9uKCJtb3VzZXdoZWVsIixyKSxpLm9uKCJwaW5jaCIscykpfSx0aGlzLmRpc2FibGU9ZnVuY3Rpb24oKXtpLm9mZigibW91c2Vkb3duIixuKSxpLm9mZigibW91c2Vtb3ZlIixvKSxpLm9mZigibW91c2V1cCIsYSksaS5vZmYoIm1vdXNld2hlZWwiLHIpLGkub2ZmKCJwaW5jaCIscyl9LHRoaXMuZGlzcG9zZT10aGlzLmRpc2FibGUsdGhpcy5pc0RyYWdnaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RyYWdnaW5nfSx0aGlzLmlzUGluY2hpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGluY2hpbmd9fWZ1bmN0aW9uIGt5KHQpe2lmKCEoSHQodCl8fHQudGFyZ2V0JiZ0LnRhcmdldC5kcmFnZ2FibGUpKXt2YXIgZT10Lm9mZnNldFgsaT10Lm9mZnNldFk7dGhpcy5wb2ludGVyQ2hlY2tlciYmdGhpcy5wb2ludGVyQ2hlY2tlcih0LGUsaSkmJih0aGlzLl94PWUsdGhpcy5feT1pLHRoaXMuX2RyYWdnaW5nPSEwKX19ZnVuY3Rpb24gUHkodCl7aWYodGhpcy5fZHJhZ2dpbmcmJkJ5KCJtb3ZlT25Nb3VzZU1vdmUiLHQsdGhpcy5fb3B0KSYmInBpbmNoIiE9PXQuZ2VzdHVyZUV2ZW50JiYhRHkodGhpcy5fenIsImdsb2JhbFBhbiIpKXt2YXIgZT10Lm9mZnNldFgsaT10Lm9mZnNldFksbj10aGlzLl94LG89dGhpcy5feSxhPWUtbixyPWktbzt0aGlzLl94PWUsdGhpcy5feT1pLHRoaXMuX29wdC5wcmV2ZW50RGVmYXVsdE1vdXNlTW92ZSYmV3QodC5ldmVudCksUnkodGhpcywicGFuIiwibW92ZU9uTW91c2VNb3ZlIix0LHtkeDphLGR5OnIsb2xkWDpuLG9sZFk6byxuZXdYOmUsbmV3WTppfSl9fWZ1bmN0aW9uIE55KHQpe0h0KHQpfHwodGhpcy5fZHJhZ2dpbmc9ITEpfWZ1bmN0aW9uIE95KHQpe3ZhciBlPUJ5KCJ6b29tT25Nb3VzZVdoZWVsIix0LHRoaXMuX29wdCksaT1CeSgibW92ZU9uTW91c2VXaGVlbCIsdCx0aGlzLl9vcHQpLG49dC53aGVlbERlbHRhLG89TWF0aC5hYnMobiksYT10Lm9mZnNldFgscj10Lm9mZnNldFk7aWYoMCE9PW4mJihlfHxpKSl7aWYoZSl7dmFyIHM9MzxvPzEuNDoxPG8/MS4yOjEuMTt6eSh0aGlzLCJ6b29tIiwiem9vbU9uTW91c2VXaGVlbCIsdCx7c2NhbGU6MDxuP3M6MS9zLG9yaWdpblg6YSxvcmlnaW5ZOnJ9KX1pZihpKXt2YXIgbD1NYXRoLmFicyhuKTt6eSh0aGlzLCJzY3JvbGxNb3ZlIiwibW92ZU9uTW91c2VXaGVlbCIsdCx7c2Nyb2xsRGVsdGE6KDA8bj8xOi0xKSooMzxsPy40OjE8bD8uMTU6LjA1KSxvcmlnaW5YOmEsb3JpZ2luWTpyfSl9fX1mdW5jdGlvbiBFeSh0KXtEeSh0aGlzLl96ciwiZ2xvYmFsUGFuIil8fHp5KHRoaXMsInpvb20iLG51bGwsdCx7c2NhbGU6MTx0LnBpbmNoU2NhbGU/MS4xOjEvMS4xLG9yaWdpblg6dC5waW5jaFgsb3JpZ2luWTp0LnBpbmNoWX0pfWZ1bmN0aW9uIHp5KHQsZSxpLG4sbyl7dC5wb2ludGVyQ2hlY2tlciYmdC5wb2ludGVyQ2hlY2tlcihuLG8ub3JpZ2luWCxvLm9yaWdpblkpJiYoV3Qobi5ldmVudCksUnkodCxlLGksbixvKSl9ZnVuY3Rpb24gUnkodCxlLGksbixvKXtvLmlzQXZhaWxhYmxlQmVoYXZpb3I9QShCeSxudWxsLGksbiksdC50cmlnZ2VyKGUsbyl9ZnVuY3Rpb24gQnkodCxlLGkpe3ZhciBuPWlbdF07cmV0dXJuIXR8fG4mJigheihuKXx8ZS5ldmVudFtuKyJLZXkiXSl9ZnVuY3Rpb24gVnkodCxlLGkpe3ZhciBuPXQudGFyZ2V0LG89bi5wb3NpdGlvbjtvWzBdKz1lLG9bMV0rPWksbi5kaXJ0eSgpfWZ1bmN0aW9uIEd5KHQsZSxpLG4pe3ZhciBvPXQudGFyZ2V0LGE9dC56b29tTGltaXQscj1vLnBvc2l0aW9uLHM9by5zY2FsZSxsPXQuem9vbT10Lnpvb218fDE7aWYobCo9ZSxhKXt2YXIgdT1hLm1pbnx8MCxoPWEubWF4fHwxLzA7bD1NYXRoLm1heChNYXRoLm1pbihoLGwpLHUpfXZhciBjPWwvdC56b29tO3Quem9vbT1sLHJbMF0tPShpLXJbMF0pKihjLTEpLHJbMV0tPShuLXJbMV0pKihjLTEpLHNbMF0qPWMsc1sxXSo9YyxvLmRpcnR5KCl9Z2Yoe3R5cGU6InRha2VHbG9iYWxDdXJzb3IiLGV2ZW50OiJnbG9iYWxDdXJzb3JUYWtlbiIsdXBkYXRlOiJ1cGRhdGUifSxmdW5jdGlvbigpe30pLGIoTHksQ3QpO3ZhciBGeT17YXhpc1BvaW50ZXI6MSx0b29sdGlwOjEsYnJ1c2g6MX07ZnVuY3Rpb24gV3kodCxlLGkpe3ZhciBuPWUuZ2V0Q29tcG9uZW50QnlFbGVtZW50KHQudG9wVGFyZ2V0KSxvPW4mJm4uY29vcmRpbmF0ZVN5c3RlbTtyZXR1cm4gbiYmbiE9PWkmJiFGeVtuLm1haW5UeXBlXSYmbyYmby5tb2RlbCE9PWl9ZnVuY3Rpb24gSHkodCl7dmFyIGU9dC5nZXRJdGVtU3R5bGUoKSxpPXQuZ2V0KCJhcmVhQ29sb3IiKTtyZXR1cm4gbnVsbCE9aSYmKGUuZmlsbD1pKSxlfWZ1bmN0aW9uIFp5KGksdCl7dC5lYWNoQ2hpbGQoZnVuY3Rpb24oZSl7RShlLl9fcmVnaW9ucyxmdW5jdGlvbih0KXtlLnRyaWdnZXIoaS5pc1NlbGVjdGVkKHQubmFtZSk/ImVtcGhhc2lzIjoibm9ybWFsIil9KX0pfWZ1bmN0aW9uIFV5KHQsZSl7dmFyIGk9bmV3IElpO3RoaXMudWlkPUNsKCJlY19tYXBfZHJhdyIpLHRoaXMuX2NvbnRyb2xsZXI9bmV3IEx5KHQuZ2V0WnIoKSksdGhpcy5fY29udHJvbGxlckhvc3Q9e3RhcmdldDplP2k6bnVsbH0sdGhpcy5ncm91cD1pLHRoaXMuX3VwZGF0ZUdyb3VwPWUsdGhpcy5fbW91c2VEb3duRmxhZyx0aGlzLl9tYXBOYW1lLHRoaXMuX2luaXRpYWxpemVkLGkuYWRkKHRoaXMuX3JlZ2lvbnNHcm91cD1uZXcgSWkpLGkuYWRkKHRoaXMuX2JhY2tncm91bmRHcm91cD1uZXcgSWkpfVV5LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VXksZHJhdzpmdW5jdGlvbihfLHQsZSxpLG4pe3ZhciB3PSJnZW8iPT09Xy5tYWluVHlwZSxiPV8uZ2V0RGF0YSYmXy5nZXREYXRhKCk7dyYmdC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToic2VyaWVzIixzdWJUeXBlOiJtYXAifSxmdW5jdGlvbih0KXtifHx0LmdldEhvc3RHZW9Nb2RlbCgpIT09X3x8KGI9dC5nZXREYXRhKCkpfSk7dmFyIG89Xy5jb29yZGluYXRlU3lzdGVtO3RoaXMuX3VwZGF0ZUJhY2tncm91bmQobyk7dmFyIFM9dGhpcy5fcmVnaW9uc0dyb3VwLE09dGhpcy5ncm91cDtvLl9yb2FtVHJhbnNmb3JtYWJsZS50cmFuc2Zvcm0mJihNLnRyYW5zZm9ybT1vLl9yb2FtVHJhbnNmb3JtYWJsZS50cmFuc2Zvcm0uc2xpY2UoKSxNLmRlY29tcG9zZVRyYW5zZm9ybSgpKTt2YXIgST1vLl9yYXdUcmFuc2Zvcm1hYmxlLnNjYWxlLFQ9by5fcmF3VHJhbnNmb3JtYWJsZS5wb3NpdGlvbjtTLnJlbW92ZUFsbCgpO3ZhciBBPVsiaXRlbVN0eWxlIl0sRD1bImVtcGhhc2lzIiwiaXRlbVN0eWxlIl0sQz1bImxhYmVsIl0sTD1bImVtcGhhc2lzIiwibGFiZWwiXSxrPVEoKTtFKG8ucmVnaW9ucyxmdW5jdGlvbih0KXt2YXIgZT1rLmdldCh0Lm5hbWUpfHxrLnNldCh0Lm5hbWUsbmV3IElpKSxhPW5ldyBocyh7c2VnbWVudElnbm9yZVRocmVzaG9sZDoxLHNoYXBlOntwYXRoczpbXX19KTtlLmFkZChhKTt2YXIgaSxuPSh4PV8uZ2V0UmVnaW9uTW9kZWwodC5uYW1lKXx8XykuZ2V0TW9kZWwoQSksbz14LmdldE1vZGVsKEQpLHI9SHkobikscz1IeShvKSxsPXguZ2V0TW9kZWwoQyksdT14LmdldE1vZGVsKEwpO2lmKGIpe2k9Yi5pbmRleE9mTmFtZSh0Lm5hbWUpO3ZhciBoPWIuZ2V0SXRlbVZpc3VhbChpLCJjb2xvciIsITApO2gmJihyLmZpbGw9aCl9ZnVuY3Rpb24gYyh0KXtyZXR1cm5bdFswXSpJWzBdK1RbMF0sdFsxXSpJWzFdK1RbMV1dfUUodC5nZW9tZXRyaWVzLGZ1bmN0aW9uKHQpe2lmKCJwb2x5Z29uIj09PXQudHlwZSl7Zm9yKHZhciBlPVtdLGk9MDtpPHQuZXh0ZXJpb3IubGVuZ3RoOysraSllLnB1c2goYyh0LmV4dGVyaW9yW2ldKSk7YS5zaGFwZS5wYXRocy5wdXNoKG5ldyBxcih7c2VnbWVudElnbm9yZVRocmVzaG9sZDoxLHNoYXBlOntwb2ludHM6ZX19KSk7Zm9yKGk9MDtpPCh0LmludGVyaW9ycz90LmludGVyaW9ycy5sZW5ndGg6MCk7KytpKXtmb3IodmFyIG49dC5pbnRlcmlvcnNbaV0sbz0oZT1bXSwwKTtvPG4ubGVuZ3RoOysrbyllLnB1c2goYyhuW29dKSk7YS5zaGFwZS5wYXRocy5wdXNoKG5ldyBxcih7c2VnbWVudElnbm9yZVRocmVzaG9sZDoxLHNoYXBlOntwb2ludHM6ZX19KSl9fX0pLGEuc2V0U3R5bGUociksYS5zdHlsZS5zdHJva2VOb1NjYWxlPSEwLGEuY3VsbGluZz0hMDt2YXIgZD1sLmdldCgic2hvdyIpLGY9dS5nZXQoInNob3ciKSxwPWImJmlzTmFOKGIuZ2V0KGIubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLGkpKSxnPWImJmIuZ2V0SXRlbUxheW91dChpKTtpZih3fHxwJiYoZHx8Zil8fGcmJmcuc2hvd0xhYmVsKXt2YXIgbSx2PXc/dC5uYW1lOmk7KCFifHwwPD1pKSYmKG09Xyk7dmFyIHk9bmV3IEZyKHtwb3NpdGlvbjpjKHQuY2VudGVyLnNsaWNlKCkpLHNjYWxlOlsxL00uc2NhbGVbMF0sMS9NLnNjYWxlWzFdXSx6MjoxMCxzaWxlbnQ6ITB9KTskcyh5LnN0eWxlLHkuaG92ZXJTdHlsZT17fSxsLHUse2xhYmVsRmV0Y2hlcjptLGxhYmVsRGF0YUluZGV4OnYsZGVmYXVsdFRleHQ6dC5uYW1lLHVzZUluc2lkZVN0eWxlOiExfSx7dGV4dEFsaWduOiJjZW50ZXIiLHRleHRWZXJ0aWNhbEFsaWduOiJtaWRkbGUifSksZS5hZGQoeSl9aWYoYiliLnNldEl0ZW1HcmFwaGljRWwoaSxlKTtlbHNle3ZhciB4PV8uZ2V0UmVnaW9uTW9kZWwodC5uYW1lKTthLmV2ZW50RGF0YT17Y29tcG9uZW50VHlwZToiZ2VvIixjb21wb25lbnRJbmRleDpfLmNvbXBvbmVudEluZGV4LGdlb0luZGV4Ol8uY29tcG9uZW50SW5kZXgsbmFtZTp0Lm5hbWUscmVnaW9uOngmJngub3B0aW9ufHx7fX19KGUuX19yZWdpb25zfHwoZS5fX3JlZ2lvbnM9W10pKS5wdXNoKHQpLGUuaGlnaERvd25TaWxlbnRPblRvdWNoPSEhXy5nZXQoInNlbGVjdGVkTW9kZSIpLFlzKGUscyksUy5hZGQoZSl9KSx0aGlzLl91cGRhdGVDb250cm9sbGVyKF8sdCxlKSxmdW5jdGlvbihuLG8sYSxyLHMpe2Eub2ZmKCJjbGljayIpLGEub2ZmKCJtb3VzZWRvd24iKSxvLmdldCgic2VsZWN0ZWRNb2RlIikmJihhLm9uKCJtb3VzZWRvd24iLGZ1bmN0aW9uKCl7bi5fbW91c2VEb3duRmxhZz0hMH0pLGEub24oImNsaWNrIixmdW5jdGlvbih0KXtpZihuLl9tb3VzZURvd25GbGFnKXtuLl9tb3VzZURvd25GbGFnPSExO2Zvcih2YXIgZT10LnRhcmdldDshZS5fX3JlZ2lvbnM7KWU9ZS5wYXJlbnQ7aWYoZSl7dmFyIGk9e3R5cGU6KCJnZW8iPT09by5tYWluVHlwZT8iZ2VvIjoibWFwIikrIlRvZ2dsZVNlbGVjdCIsYmF0Y2g6TihlLl9fcmVnaW9ucyxmdW5jdGlvbih0KXtyZXR1cm57bmFtZTp0Lm5hbWUsZnJvbTpzLnVpZH19KX07aVtvLm1haW5UeXBlKyJJZCJdPW8uaWQsci5kaXNwYXRjaEFjdGlvbihpKSxaeShvLGEpfX19KSl9KHRoaXMsXyxTLGUsaSksWnkoXyxTKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5fcmVnaW9uc0dyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX2JhY2tncm91bmRHcm91cC5yZW1vdmVBbGwoKSx0aGlzLl9jb250cm9sbGVyLmRpc3Bvc2UoKSx0aGlzLl9tYXBOYW1lJiZNeS5yZW1vdmVHcmFwaGljKHRoaXMuX21hcE5hbWUsdGhpcy51aWQpLHRoaXMuX21hcE5hbWU9bnVsbCx0aGlzLl9jb250cm9sbGVySG9zdD17fX0sX3VwZGF0ZUJhY2tncm91bmQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXA7dGhpcy5fbWFwTmFtZSE9PWUmJkUoTXkubWFrZUdyYXBoaWMoZSx0aGlzLnVpZCksZnVuY3Rpb24odCl7dGhpcy5fYmFja2dyb3VuZEdyb3VwLmFkZCh0KX0sdGhpcyksdGhpcy5fbWFwTmFtZT1lfSxfdXBkYXRlQ29udHJvbGxlcjpmdW5jdGlvbihuLHQsbyl7dmFyIGE9bi5jb29yZGluYXRlU3lzdGVtLGU9dGhpcy5fY29udHJvbGxlcixpPXRoaXMuX2NvbnRyb2xsZXJIb3N0O2kuem9vbUxpbWl0PW4uZ2V0KCJzY2FsZUxpbWl0IiksaS56b29tPWEuZ2V0Wm9vbSgpLGUuZW5hYmxlKG4uZ2V0KCJyb2FtIil8fCExKTt2YXIgcj1uLm1haW5UeXBlO2Z1bmN0aW9uIHMoKXt2YXIgdD17dHlwZToiZ2VvUm9hbSIsY29tcG9uZW50VHlwZTpyfTtyZXR1cm4gdFtyKyJJZCJdPW4uaWQsdH1lLm9mZigicGFuIikub24oInBhbiIsZnVuY3Rpb24odCl7dGhpcy5fbW91c2VEb3duRmxhZz0hMSxWeShpLHQuZHgsdC5keSksby5kaXNwYXRjaEFjdGlvbihMKHMoKSx7ZHg6dC5keCxkeTp0LmR5fSkpfSx0aGlzKSxlLm9mZigiem9vbSIpLm9uKCJ6b29tIixmdW5jdGlvbih0KXtpZih0aGlzLl9tb3VzZURvd25GbGFnPSExLEd5KGksdC5zY2FsZSx0Lm9yaWdpblgsdC5vcmlnaW5ZKSxvLmRpc3BhdGNoQWN0aW9uKEwocygpLHt6b29tOnQuc2NhbGUsb3JpZ2luWDp0Lm9yaWdpblgsb3JpZ2luWTp0Lm9yaWdpbll9KSksdGhpcy5fdXBkYXRlR3JvdXApe3ZhciBlPXRoaXMuZ3JvdXAuc2NhbGU7dGhpcy5fcmVnaW9uc0dyb3VwLnRyYXZlcnNlKGZ1bmN0aW9uKHQpeyJ0ZXh0Ij09PXQudHlwZSYmdC5hdHRyKCJzY2FsZSIsWzEvZVswXSwxL2VbMV1dKX0pfX0sdGhpcyksZS5zZXRQb2ludGVyQ2hlY2tlcihmdW5jdGlvbih0LGUsaSl7cmV0dXJuIGEuZ2V0Vmlld1JlY3RBZnRlclJvYW0oKS5jb250YWluKGUsaSkmJiFXeSh0LG8sbil9KX19O3ZhciBYeT0iX19zZXJpZXNNYXBIaWdoRG93biIsWXk9Il9fc2VyaWVzTWFwQ2FsbEtleSI7ZnVuY3Rpb24gankodCl7dmFyIGU9dGhpc1tYeV07ZSYmZS5yZWNvcmRWZXJzaW9uPT09dGhpc1tZeV0mJnF5KGUsdCl9ZnVuY3Rpb24gcXkodCxlKXt2YXIgaT10LmNpcmNsZSxuPXQubGFiZWxNb2RlbCxvPXQuaG92ZXJMYWJlbE1vZGVsLGE9dC5lbXBoYXNpc1RleHQscj10Lm5vcm1hbFRleHQ7ZT8oaS5zdHlsZS5leHRlbmRGcm9tKFFzKHt9LG8se3RleHQ6by5nZXQoInNob3ciKT9hOm51bGx9LHtpc1JlY3RUZXh0OiEwLHVzZUluc2lkZVN0eWxlOiExfSwhMCkpLGkuX19tYXBPcmlnaW5hbFoyPWkuejIsaS56Mis9eXMpOihRcyhpLnN0eWxlLG4se3RleHQ6bi5nZXQoInNob3ciKT9yOm51bGwsdGV4dFBvc2l0aW9uOm4uZ2V0U2hhbGxvdygicG9zaXRpb24iKXx8ImJvdHRvbSJ9LHtpc1JlY3RUZXh0OiEwLHVzZUluc2lkZVN0eWxlOiExfSksaS5kaXJ0eSghMSksbnVsbCE9aS5fX21hcE9yaWdpbmFsWjImJihpLnoyPWkuX19tYXBPcmlnaW5hbFoyLGkuX19tYXBPcmlnaW5hbFoyPW51bGwpKX1mdW5jdGlvbiBLeSh0LGUsaSl7dmFyIG49dC5nZXRab29tKCksbz10LmdldENlbnRlcigpLGE9ZS56b29tLHI9dC5kYXRhVG9Qb2ludChvKTtpZihudWxsIT1lLmR4JiZudWxsIT1lLmR5KXtyWzBdLT1lLmR4LHJbMV0tPWUuZHk7bz10LnBvaW50VG9EYXRhKHIpO3Quc2V0Q2VudGVyKG8pfWlmKG51bGwhPWEpe2lmKGkpe3ZhciBzPWkubWlufHwwLGw9aS5tYXh8fDEvMDthPU1hdGgubWF4KE1hdGgubWluKG4qYSxsKSxzKS9ufXQuc2NhbGVbMF0qPWEsdC5zY2FsZVsxXSo9YTt2YXIgdT10LnBvc2l0aW9uLGg9KGUub3JpZ2luWC11WzBdKSooYS0xKSxjPShlLm9yaWdpblktdVsxXSkqKGEtMSk7dVswXS09aCx1WzFdLT1jLHQudXBkYXRlVHJhbnNmb3JtKCk7bz10LnBvaW50VG9EYXRhKHIpO3Quc2V0Q2VudGVyKG8pLHQuc2V0Wm9vbShhKm4pfXJldHVybntjZW50ZXI6dC5nZXRDZW50ZXIoKSx6b29tOnQuZ2V0Wm9vbSgpfX1NZih7dHlwZToibWFwIixyZW5kZXI6ZnVuY3Rpb24odCxlLGksbil7aWYoIW58fCJtYXBUb2dnbGVTZWxlY3QiIT09bi50eXBlfHxuLmZyb20hPT10aGlzLnVpZCl7dmFyIG89dGhpcy5ncm91cDtpZihvLnJlbW92ZUFsbCgpLCF0LmdldEhvc3RHZW9Nb2RlbCgpKXtpZihuJiYiZ2VvUm9hbSI9PT1uLnR5cGUmJiJzZXJpZXMiPT09bi5jb21wb25lbnRUeXBlJiZuLnNlcmllc0lkPT09dC5pZCkoYT10aGlzLl9tYXBEcmF3KSYmby5hZGQoYS5ncm91cCk7ZWxzZSBpZih0Lm5lZWRzRHJhd01hcCl7dmFyIGE9dGhpcy5fbWFwRHJhd3x8bmV3IFV5KGksITApO28uYWRkKGEuZ3JvdXApLGEuZHJhdyh0LGUsaSx0aGlzLG4pLHRoaXMuX21hcERyYXc9YX1lbHNlIHRoaXMuX21hcERyYXcmJnRoaXMuX21hcERyYXcucmVtb3ZlKCksdGhpcy5fbWFwRHJhdz1udWxsO3QuZ2V0KCJzaG93TGVnZW5kU3ltYm9sIikmJmUuZ2V0Q29tcG9uZW50KCJsZWdlbmQiKSYmdGhpcy5fcmVuZGVyU3ltYm9scyh0LGUsaSl9fX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5fbWFwRHJhdyYmdGhpcy5fbWFwRHJhdy5yZW1vdmUoKSx0aGlzLl9tYXBEcmF3PW51bGwsdGhpcy5ncm91cC5yZW1vdmVBbGwoKX0sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuX21hcERyYXcmJnRoaXMuX21hcERyYXcucmVtb3ZlKCksdGhpcy5fbWFwRHJhdz1udWxsfSxfcmVuZGVyU3ltYm9sczpmdW5jdGlvbih4LHQsZSl7dmFyIF89eC5vcmlnaW5hbERhdGEsdz10aGlzLmdyb3VwO18uZWFjaChfLm1hcERpbWVuc2lvbigidmFsdWUiKSxmdW5jdGlvbih0LGUpe2lmKCFpc05hTih0KSl7dmFyIGk9Xy5nZXRJdGVtTGF5b3V0KGUpO2lmKGkmJmkucG9pbnQpe3ZhciBuPWkucG9pbnQsbz1pLm9mZnNldCxhPW5ldyBIcih7c3R5bGU6e2ZpbGw6eC5nZXREYXRhKCkuZ2V0VmlzdWFsKCJjb2xvciIpfSxzaGFwZTp7Y3g6blswXSs5Km8sY3k6blsxXSxyOjN9LHNpbGVudDohMCx6Mjo4KyhvPzA6eXMrMSl9KTtpZighbyl7dmFyIHI9eC5tYWluU2VyaWVzLmdldERhdGEoKSxzPV8uZ2V0TmFtZShlKSxsPXIuaW5kZXhPZk5hbWUocyksdT1fLmdldEl0ZW1Nb2RlbChlKSxoPXUuZ2V0TW9kZWwoImxhYmVsIiksYz11LmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbCIpLGQ9ci5nZXRJdGVtR3JhcGhpY0VsKGwpLGY9SCh4LmdldEZvcm1hdHRlZExhYmVsKGwsIm5vcm1hbCIpLHMpLHA9SCh4LmdldEZvcm1hdHRlZExhYmVsKGwsImVtcGhhc2lzIiksZiksZz1kW1h5XSxtPU1hdGgucmFuZG9tKCk7aWYoIWcpe2c9ZFtYeV09e307dmFyIHY9VChqeSwhMCkseT1UKGp5LCExKTtkLm9uKCJtb3VzZW92ZXIiLHYpLm9uKCJtb3VzZW91dCIseSkub24oImVtcGhhc2lzIix2KS5vbigibm9ybWFsIix5KX1MKGcse3JlY29yZFZlcnNpb246ZFtZeV09bSxjaXJjbGU6YSxsYWJlbE1vZGVsOmgsaG92ZXJMYWJlbE1vZGVsOmMsZW1waGFzaXNUZXh0OnAsbm9ybWFsVGV4dDpmfSkscXkoZywhMSl9dy5hZGQoYSl9fX0pfX0pLGdmKHt0eXBlOiJnZW9Sb2FtIixldmVudDoiZ2VvUm9hbSIsdXBkYXRlOiJ1cGRhdGVUcmFuc2Zvcm0ifSxmdW5jdGlvbihuLHQpe3ZhciBvPW4uY29tcG9uZW50VHlwZXx8InNlcmllcyI7dC5lYWNoQ29tcG9uZW50KHttYWluVHlwZTpvLHF1ZXJ5Om59LGZ1bmN0aW9uKHQpe3ZhciBlPXQuY29vcmRpbmF0ZVN5c3RlbTtpZigiZ2VvIj09PWUudHlwZSl7dmFyIGk9S3koZSxuLHQuZ2V0KCJzY2FsZUxpbWl0IikpO3Quc2V0Q2VudGVyJiZ0LnNldENlbnRlcihpLmNlbnRlciksdC5zZXRab29tJiZ0LnNldFpvb20oaS56b29tKSwic2VyaWVzIj09PW8mJkUodC5zZXJpZXNHcm91cCxmdW5jdGlvbih0KXt0LnNldENlbnRlcihpLmNlbnRlciksdC5zZXRab29tKGkuem9vbSl9KX19KX0pO3ZhciAkeT1idDtmdW5jdGlvbiBKeSgpe2ZlLmNhbGwodGhpcyl9ZnVuY3Rpb24gUXkodCl7dGhpcy5uYW1lPXQsdGhpcy56b29tTGltaXQsZmUuY2FsbCh0aGlzKSx0aGlzLl9yb2FtVHJhbnNmb3JtYWJsZT1uZXcgSnksdGhpcy5fcmF3VHJhbnNmb3JtYWJsZT1uZXcgSnksdGhpcy5fY2VudGVyLHRoaXMuX3pvb219ZnVuY3Rpb24gdHgodCxlLGksbil7dmFyIG89aS5zZXJpZXNNb2RlbCxhPW8/by5jb29yZGluYXRlU3lzdGVtOm51bGw7cmV0dXJuIGE9PT10aGlzP2FbdF0obik6bnVsbH1mdW5jdGlvbiBleCh0LGUsaSxuKXtReS5jYWxsKHRoaXMsdCksdGhpcy5tYXA9ZTt2YXIgbz1NeS5sb2FkKGUsaSk7dGhpcy5fbmFtZUNvb3JkTWFwPW8ubmFtZUNvb3JkTWFwLHRoaXMuX3JlZ2lvbnNNYXA9by5yZWdpb25zTWFwLHRoaXMuX2ludmVydExvbmdpdHV0ZT1udWxsPT1ufHxuLHRoaXMucmVnaW9ucz1vLnJlZ2lvbnMsdGhpcy5fcmVjdD1vLmJvdW5kaW5nUmVjdH1mdW5jdGlvbiBpeCh0LGUsaSxuKXt2YXIgbz1pLmdlb01vZGVsLGE9aS5zZXJpZXNNb2RlbCxyPW8/by5jb29yZGluYXRlU3lzdGVtOmE/YS5jb29yZGluYXRlU3lzdGVtfHwoYS5nZXRSZWZlcnJpbmdDb21wb25lbnRzKCJnZW8iKVswXXx8e30pLmNvb3JkaW5hdGVTeXN0ZW06bnVsbDtyZXR1cm4gcj09PXRoaXM/clt0XShuKTpudWxsfWZ1bmN0aW9uIG54KHQsZSl7dmFyIGk9dC5nZXQoImJvdW5kaW5nQ29vcmRzIik7aWYobnVsbCE9aSl7dmFyIG49aVswXSxvPWlbMV07aXNOYU4oblswXSl8fGlzTmFOKG5bMV0pfHxpc05hTihvWzBdKXx8aXNOYU4ob1sxXSl8fHRoaXMuc2V0Qm91bmRpbmdSZWN0KG5bMF0sblsxXSxvWzBdLW5bMF0sb1sxXS1uWzFdKX12YXIgYSxyPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCkscz10LmdldCgibGF5b3V0Q2VudGVyIiksbD10LmdldCgibGF5b3V0U2l6ZSIpLHU9ZS5nZXRXaWR0aCgpLGg9ZS5nZXRIZWlnaHQoKSxjPXIud2lkdGgvci5oZWlnaHQqdGhpcy5hc3BlY3RTY2FsZSxkPSExO2lmKHMmJmwmJihzPVtQbChzWzBdLHUpLFBsKHNbMV0saCldLGw9UGwobCxNYXRoLm1pbih1LGgpKSxpc05hTihzWzBdKXx8aXNOYU4oc1sxXSl8fGlzTmFOKGwpfHwoZD0hMCkpLGQpe3ZhciBmPXt9OzE8Yz8oZi53aWR0aD1sLGYuaGVpZ2h0PWwvYyk6KGYuaGVpZ2h0PWwsZi53aWR0aD1sKmMpLGYueT1zWzFdLWYuaGVpZ2h0LzIsZi54PXNbMF0tZi53aWR0aC8yfWVsc2UoYT10LmdldEJveExheW91dFBhcmFtcygpKS5hc3BlY3Q9YyxmPXZ1KGEse3dpZHRoOnUsaGVpZ2h0Omh9KTt0aGlzLnNldFZpZXdSZWN0KGYueCxmLnksZi53aWR0aCxmLmhlaWdodCksdGhpcy5zZXRDZW50ZXIodC5nZXQoImNlbnRlciIpKSx0aGlzLnNldFpvb20odC5nZXQoInpvb20iKSl9ZnVuY3Rpb24gb3goaSx0KXtFKHQuZ2V0KCJnZW9Db29yZCIpLGZ1bmN0aW9uKHQsZSl7aS5hZGRHZW9Db29yZChlLHQpfSl9YihKeSxmZSksUXkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpReSx0eXBlOiJ2aWV3IixkaW1lbnNpb25zOlsieCIsInkiXSxzZXRCb3VuZGluZ1JlY3Q6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIHRoaXMuX3JlY3Q9bmV3IE1pKHQsZSxpLG4pLHRoaXMuX3JlY3R9LGdldEJvdW5kaW5nUmVjdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWN0fSxzZXRWaWV3UmVjdDpmdW5jdGlvbih0LGUsaSxuKXt0aGlzLnRyYW5zZm9ybVRvKHQsZSxpLG4pLHRoaXMuX3ZpZXdSZWN0PW5ldyBNaSh0LGUsaSxuKX0sdHJhbnNmb3JtVG86ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5nZXRCb3VuZGluZ1JlY3QoKSxhPXRoaXMuX3Jhd1RyYW5zZm9ybWFibGU7YS50cmFuc2Zvcm09by5jYWxjdWxhdGVUcmFuc2Zvcm0obmV3IE1pKHQsZSxpLG4pKSxhLmRlY29tcG9zZVRyYW5zZm9ybSgpLHRoaXMuX3VwZGF0ZVRyYW5zZm9ybSgpfSxzZXRDZW50ZXI6ZnVuY3Rpb24odCl7dCYmKHRoaXMuX2NlbnRlcj10LHRoaXMuX3VwZGF0ZUNlbnRlckFuZFpvb20oKSl9LHNldFpvb206ZnVuY3Rpb24odCl7dD10fHwxO3ZhciBlPXRoaXMuem9vbUxpbWl0O2UmJihudWxsIT1lLm1heCYmKHQ9TWF0aC5taW4oZS5tYXgsdCkpLG51bGwhPWUubWluJiYodD1NYXRoLm1heChlLm1pbix0KSkpLHRoaXMuX3pvb209dCx0aGlzLl91cGRhdGVDZW50ZXJBbmRab29tKCl9LGdldERlZmF1bHRDZW50ZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldEJvdW5kaW5nUmVjdCgpO3JldHVyblt0LngrdC53aWR0aC8yLHQueSt0LmhlaWdodC8yXX0sZ2V0Q2VudGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NlbnRlcnx8dGhpcy5nZXREZWZhdWx0Q2VudGVyKCl9LGdldFpvb206ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fem9vbXx8MX0sZ2V0Um9hbVRyYW5zZm9ybTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yb2FtVHJhbnNmb3JtYWJsZS5nZXRMb2NhbFRyYW5zZm9ybSgpfSxfdXBkYXRlQ2VudGVyQW5kWm9vbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3Jhd1RyYW5zZm9ybWFibGUuZ2V0TG9jYWxUcmFuc2Zvcm0oKSxlPXRoaXMuX3JvYW1UcmFuc2Zvcm1hYmxlLGk9dGhpcy5nZXREZWZhdWx0Q2VudGVyKCksbj10aGlzLmdldENlbnRlcigpLG89dGhpcy5nZXRab29tKCk7bj1idChbXSxuLHQpLGk9YnQoW10saSx0KSxlLm9yaWdpbj1uLGUucG9zaXRpb249W2lbMF0tblswXSxpWzFdLW5bMV1dLGUuc2NhbGU9W28sb10sdGhpcy5fdXBkYXRlVHJhbnNmb3JtKCl9LF91cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yb2FtVHJhbnNmb3JtYWJsZSxlPXRoaXMuX3Jhd1RyYW5zZm9ybWFibGU7KGUucGFyZW50PXQpLnVwZGF0ZVRyYW5zZm9ybSgpLGUudXBkYXRlVHJhbnNmb3JtKCksbmUodGhpcy50cmFuc2Zvcm18fCh0aGlzLnRyYW5zZm9ybT1bXSksZS50cmFuc2Zvcm18fGVlKCkpLHRoaXMuX3Jhd1RyYW5zZm9ybT1lLmdldExvY2FsVHJhbnNmb3JtKCksdGhpcy5pbnZUcmFuc2Zvcm09dGhpcy5pbnZUcmFuc2Zvcm18fFtdLGxlKHRoaXMuaW52VHJhbnNmb3JtLHRoaXMudHJhbnNmb3JtKSx0aGlzLmRlY29tcG9zZVRyYW5zZm9ybSgpfSxnZXRWaWV3UmVjdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3UmVjdH0sZ2V0Vmlld1JlY3RBZnRlclJvYW06ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldEJvdW5kaW5nUmVjdCgpLmNsb25lKCk7cmV0dXJuIHQuYXBwbHlUcmFuc2Zvcm0odGhpcy50cmFuc2Zvcm0pLHR9LGRhdGFUb1BvaW50OmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lP3RoaXMuX3Jhd1RyYW5zZm9ybTp0aGlzLnRyYW5zZm9ybTtyZXR1cm4gaT1pfHxbXSxuPyR5KGksdCxuKTphdChpLHQpfSxwb2ludFRvRGF0YTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmludlRyYW5zZm9ybTtyZXR1cm4gZT8keShbXSx0LGUpOlt0WzBdLHRbMV1dfSxjb252ZXJ0VG9QaXhlbDpUKHR4LCJkYXRhVG9Qb2ludCIpLGNvbnZlcnRGcm9tUGl4ZWw6VCh0eCwicG9pbnRUb0RhdGEiKSxjb250YWluUG9pbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0Vmlld1JlY3RBZnRlclJvYW0oKS5jb250YWluKHRbMF0sdFsxXSl9fSxiKFF5LGZlKSxleC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmV4LHR5cGU6ImdlbyIsZGltZW5zaW9uczpbImxuZyIsImxhdCJdLGNvbnRhaW5Db29yZDpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5yZWdpb25zLGk9MDtpPGUubGVuZ3RoO2krKylpZihlW2ldLmNvbnRhaW4odCkpcmV0dXJuITA7cmV0dXJuITF9LHRyYW5zZm9ybVRvOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCksYT10aGlzLl9pbnZlcnRMb25naXR1dGU7bz1vLmNsb25lKCksYSYmKG8ueT0tby55LW8uaGVpZ2h0KTt2YXIgcj10aGlzLl9yYXdUcmFuc2Zvcm1hYmxlO2lmKHIudHJhbnNmb3JtPW8uY2FsY3VsYXRlVHJhbnNmb3JtKG5ldyBNaSh0LGUsaSxuKSksci5kZWNvbXBvc2VUcmFuc2Zvcm0oKSxhKXt2YXIgcz1yLnNjYWxlO3NbMV09LXNbMV19ci51cGRhdGVUcmFuc2Zvcm0oKSx0aGlzLl91cGRhdGVUcmFuc2Zvcm0oKX0sZ2V0UmVnaW9uOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yZWdpb25zTWFwLmdldCh0KX0sZ2V0UmVnaW9uQnlDb29yZDpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5yZWdpb25zLGk9MDtpPGUubGVuZ3RoO2krKylpZihlW2ldLmNvbnRhaW4odCkpcmV0dXJuIGVbaV19LGFkZEdlb0Nvb3JkOmZ1bmN0aW9uKHQsZSl7dGhpcy5fbmFtZUNvb3JkTWFwLnNldCh0LGUpfSxnZXRHZW9Db29yZDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fbmFtZUNvb3JkTWFwLmdldCh0KX0sZ2V0Qm91bmRpbmdSZWN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlY3R9LGRhdGFUb1BvaW50OmZ1bmN0aW9uKHQsZSxpKXtpZigic3RyaW5nIj09dHlwZW9mIHQmJih0PXRoaXMuZ2V0R2VvQ29vcmQodCkpLHQpcmV0dXJuIFF5LnByb3RvdHlwZS5kYXRhVG9Qb2ludC5jYWxsKHRoaXMsdCxlLGkpfSxjb252ZXJ0VG9QaXhlbDpUKGl4LCJkYXRhVG9Qb2ludCIpLGNvbnZlcnRGcm9tUGl4ZWw6VChpeCwicG9pbnRUb0RhdGEiKX0sYihleCxReSk7dmFyIGF4PXtkaW1lbnNpb25zOmV4LnByb3RvdHlwZS5kaW1lbnNpb25zLGNyZWF0ZTpmdW5jdGlvbih0LHMpe3ZhciBsPVtdO3QuZWFjaENvbXBvbmVudCgiZ2VvIixmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0KCJtYXAiKSxuPXQuZ2V0KCJhc3BlY3RTY2FsZSIpLG89ITAsYT15ZC5yZXRyaWV2ZU1hcChpKTthJiZhWzBdJiYic3ZnIj09PWFbMF0udHlwZT8obnVsbD09biYmKG49MSksbz0hMSk6bnVsbD09biYmKG49Ljc1KTt2YXIgcj1uZXcgZXgoaStlLGksdC5nZXQoIm5hbWVNYXAiKSxvKTtyLmFzcGVjdFNjYWxlPW4sci56b29tTGltaXQ9dC5nZXQoInNjYWxlTGltaXQiKSxsLnB1c2gociksb3gocix0KSwodC5jb29yZGluYXRlU3lzdGVtPXIpLm1vZGVsPXQsci5yZXNpemU9bngsci5yZXNpemUodCxzKX0pLHQuZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZigiZ2VvIj09PXQuZ2V0KCJjb29yZGluYXRlU3lzdGVtIikpe3ZhciBlPXQuZ2V0KCJnZW9JbmRleCIpfHwwO3QuY29vcmRpbmF0ZVN5c3RlbT1sW2VdfX0pO3ZhciBpPXt9O3JldHVybiB0LmVhY2hTZXJpZXNCeVR5cGUoIm1hcCIsZnVuY3Rpb24odCl7aWYoIXQuZ2V0SG9zdEdlb01vZGVsKCkpe3ZhciBlPXQuZ2V0TWFwVHlwZSgpO2lbZV09aVtlXXx8W10saVtlXS5wdXNoKHQpfX0pLEUoaSxmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBleChlLGUscChOKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0KCJuYW1lTWFwIil9KSkpO2kuem9vbUxpbWl0PVcuYXBwbHkobnVsbCxOKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0KCJzY2FsZUxpbWl0Iil9KSksbC5wdXNoKGkpLGkucmVzaXplPW54LGkuYXNwZWN0U2NhbGU9dFswXS5nZXQoImFzcGVjdFNjYWxlIiksaS5yZXNpemUodFswXSxzKSxFKHQsZnVuY3Rpb24odCl7b3godC5jb29yZGluYXRlU3lzdGVtPWksdCl9KX0pLGx9LGdldEZpbGxlZFJlZ2lvbnM6ZnVuY3Rpb24odCxlLGkpe2Zvcih2YXIgbj0odHx8W10pLnNsaWNlKCksbz1RKCksYT0wO2E8bi5sZW5ndGg7YSsrKW8uc2V0KG5bYV0ubmFtZSxuW2FdKTtyZXR1cm4gRShNeS5sb2FkKGUsaSkucmVnaW9ucyxmdW5jdGlvbih0KXt2YXIgZT10Lm5hbWU7by5nZXQoZSl8fG4ucHVzaCh7bmFtZTplfSl9KSxufX07bWYoImdlbyIsYXgpO3ZmKGZ1bmN0aW9uKGkpe3ZhciBvPXt9O2kuZWFjaFNlcmllc0J5VHlwZSgibWFwIixmdW5jdGlvbih0KXt2YXIgZT10LmdldE1hcFR5cGUoKTtpZighdC5nZXRIb3N0R2VvTW9kZWwoKSYmIW9bZV0pe3ZhciBsPXt9O0UodC5zZXJpZXNHcm91cCxmdW5jdGlvbih0KXt2YXIgcj10LmNvb3JkaW5hdGVTeXN0ZW0scz10Lm9yaWdpbmFsRGF0YTt0LmdldCgic2hvd0xlZ2VuZFN5bWJvbCIpJiZpLmdldENvbXBvbmVudCgibGVnZW5kIikmJnMuZWFjaChzLm1hcERpbWVuc2lvbigidmFsdWUiKSxmdW5jdGlvbih0LGUpe3ZhciBpPXMuZ2V0TmFtZShlKSxuPXIuZ2V0UmVnaW9uKGkpO2lmKG4mJiFpc05hTih0KSl7dmFyIG89bFtpXXx8MCxhPXIuZGF0YVRvUG9pbnQobi5jZW50ZXIpO2xbaV09bysxLHMuc2V0SXRlbUxheW91dChlLHtwb2ludDphLG9mZnNldDpvfSl9fSl9KTt2YXIgbj10LmdldERhdGEoKTtuLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9bi5nZXROYW1lKHQpLGk9bi5nZXRJdGVtTGF5b3V0KHQpfHx7fTtpLnNob3dMYWJlbD0hbFtlXSxuLnNldEl0ZW1MYXlvdXQodCxpKX0pLG9bZV09ITB9fSl9KSx5ZihmdW5jdGlvbih0KXt0LmVhY2hTZXJpZXNCeVR5cGUoIm1hcCIsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQoImNvbG9yIiksaT10LmdldE1vZGVsKCJpdGVtU3R5bGUiKSxuPWkuZ2V0KCJhcmVhQ29sb3IiKSxvPWkuZ2V0KCJjb2xvciIpfHxlW3Quc2VyaWVzSW5kZXglZS5sZW5ndGhdO3QuZ2V0RGF0YSgpLnNldFZpc3VhbCh7YXJlYUNvbG9yOm4sY29sb3I6b30pfSl9KSxwZihJZC5QUk9DRVNTT1IuU1RBVElTVElDLGZ1bmN0aW9uKHQpe3ZhciBuPXt9O3QuZWFjaFNlcmllc0J5VHlwZSgibWFwIixmdW5jdGlvbih0KXt2YXIgZT10LmdldEhvc3RHZW9Nb2RlbCgpLGk9ZT8ibyIrZS5pZDoiaSIrdC5nZXRNYXBUeXBlKCk7KG5baV09bltpXXx8W10pLnB1c2godCl9KSxFKG4sZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9ZnVuY3Rpb24odSxoKXt2YXIgYz17fTtyZXR1cm4gRSh1LGZ1bmN0aW9uKG4pe24uZWFjaChuLm1hcERpbWVuc2lvbigidmFsdWUiKSxmdW5jdGlvbih0LGUpe3ZhciBpPSJlYy0iK24uZ2V0TmFtZShlKTtjW2ldPWNbaV18fFtdLGlzTmFOKHQpfHxjW2ldLnB1c2godCl9KX0pLHVbMF0ubWFwKHVbMF0ubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpLG49ImVjLSIrdVswXS5nZXROYW1lKGUpLG89MCxhPTEvMCxyPS0xLzAscz1jW25dLmxlbmd0aCxsPTA7bDxzO2wrKylhPU1hdGgubWluKGEsY1tuXVtsXSkscj1NYXRoLm1heChyLGNbbl1bbF0pLG8rPWNbbl1bbF07cmV0dXJuIGk9Im1pbiI9PT1oP2E6Im1heCI9PT1oP3I6ImF2ZXJhZ2UiPT09aD9vL3M6bywwPT09cz9OYU46aX0pfShOKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0RGF0YSgpfSksdFswXS5nZXQoIm1hcFZhbHVlQ2FsY3VsYXRpb24iKSksbj0wO248dC5sZW5ndGg7bisrKXRbbl0ub3JpZ2luYWxEYXRhPXRbbl0uZ2V0RGF0YSgpO2ZvcihuPTA7bjx0Lmxlbmd0aDtuKyspKHRbbl0uc2VyaWVzR3JvdXA9dClbbl0ubmVlZHNEcmF3TWFwPTA9PT1uJiYhdFtuXS5nZXRIb3N0R2VvTW9kZWwoKSx0W25dLnNldERhdGEoaS5jbG9uZVNoYWxsb3coKSksdFtuXS5tYWluU2VyaWVzPXRbMF19KX0pLGZmKGZ1bmN0aW9uKHQpe3ZhciBlPVtdO0UodC5zZXJpZXMsZnVuY3Rpb24odCl7dCYmIm1hcCI9PT10LnR5cGUmJihlLnB1c2godCksdC5tYXA9dC5tYXB8fHQubWFwVHlwZSxDKHQsdC5tYXBMb2NhdGlvbikpfSl9KSxYdigibWFwIixbe3R5cGU6Im1hcFRvZ2dsZVNlbGVjdCIsZXZlbnQ6Im1hcHNlbGVjdGNoYW5nZWQiLG1ldGhvZDoidG9nZ2xlU2VsZWN0ZWQifSx7dHlwZToibWFwU2VsZWN0IixldmVudDoibWFwc2VsZWN0ZWQiLG1ldGhvZDoic2VsZWN0In0se3R5cGU6Im1hcFVuU2VsZWN0IixldmVudDoibWFwdW5zZWxlY3RlZCIsbWV0aG9kOiJ1blNlbGVjdCJ9XSk7dmFyIHJ4PUUsc3g9IlwwX19saW5rX2RhdGFzIixseD0iXDBfX2xpbmtfbWFpbkRhdGEiO2Z1bmN0aW9uIHV4KGkpe3ZhciBuPWkubWFpbkRhdGEsdD1pLmRhdGFzO3R8fCh0PXttYWluOm59LGkuZGF0YXNBdHRyPXttYWluOiJkYXRhIn0pLGkuZGF0YXM9aS5tYWluRGF0YT1udWxsLHB4KG4sdCxpKSxyeCh0LGZ1bmN0aW9uKGUpe3J4KG4uVFJBTlNGRVJBQkxFX01FVEhPRFMsZnVuY3Rpb24odCl7ZS53cmFwTWV0aG9kKHQsVChoeCxpKSl9KX0pLG4ud3JhcE1ldGhvZCgiY2xvbmVTaGFsbG93IixUKGR4LGkpKSxyeChuLkNIQU5HQUJMRV9NRVRIT0RTLGZ1bmN0aW9uKHQpe24ud3JhcE1ldGhvZCh0LFQoY3gsaSkpfSksWSh0W24uZGF0YVR5cGVdPT09bil9ZnVuY3Rpb24gaHgodCxlKXtpZihmdW5jdGlvbih0KXtyZXR1cm4gdFtseF09PT10fSh0aGlzKSl7dmFyIGk9TCh7fSx0aGlzW3N4XSk7cHgoaVt0aGlzLmRhdGFUeXBlXT1lLGksdCl9ZWxzZSBneChlLHRoaXMuZGF0YVR5cGUsdGhpc1tseF0sdCk7cmV0dXJuIGV9ZnVuY3Rpb24gY3godCxlKXtyZXR1cm4gdC5zdHJ1Y3QmJnQuc3RydWN0LnVwZGF0ZSh0aGlzKSxlfWZ1bmN0aW9uIGR4KGksbil7cmV0dXJuIHJ4KG5bc3hdLGZ1bmN0aW9uKHQsZSl7dCE9PW4mJmd4KHQuY2xvbmVTaGFsbG93KCksZSxuLGkpfSksbn1mdW5jdGlvbiBmeCh0KXt2YXIgZT10aGlzW2x4XTtyZXR1cm4gbnVsbD09dHx8bnVsbD09ZT9lOmVbc3hdW3RdfWZ1bmN0aW9uIHB4KGksdCxuKXtpW3N4XT17fSxyeCh0LGZ1bmN0aW9uKHQsZSl7Z3godCxlLGksbil9KX1mdW5jdGlvbiBneCh0LGUsaSxuKXsoaVtzeF1bZV09dClbbHhdPWksdC5kYXRhVHlwZT1lLG4uc3RydWN0JiYodFtuLnN0cnVjdEF0dHJdPW4uc3RydWN0LG4uc3RydWN0W24uZGF0YXNBdHRyW2VdXT10KSx0LmdldExpbmtlZERhdGE9Znh9ZnVuY3Rpb24gbXgodCxlKXt0aGlzLm5hbWU9dHx8IiIsdGhpcy5kZXB0aD0wLHRoaXMuaGVpZ2h0PTAsdGhpcy5wYXJlbnROb2RlPW51bGwsdGhpcy5kYXRhSW5kZXg9LTEsdGhpcy5jaGlsZHJlbj1bXSx0aGlzLnZpZXdDaGlsZHJlbj1bXSx0aGlzLmhvc3RUcmVlPWV9ZnVuY3Rpb24gdngoZSx0LGkpe3RoaXMucm9vdCx0aGlzLmRhdGEsdGhpcy5fbm9kZXM9W10sdGhpcy5ob3N0TW9kZWw9ZSx0aGlzLmxldmVsTW9kZWxzPU4odHx8W10sZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJbCh0LGUsZS5lY01vZGVsKX0pLHRoaXMubGVhdmVzTW9kZWw9bmV3IElsKGl8fHt9LGUsZS5lY01vZGVsKX1mdW5jdGlvbiB5eCh0LGUpe3ZhciBpPWUuY2hpbGRyZW47dC5wYXJlbnROb2RlIT09ZSYmKGkucHVzaCh0KSx0LnBhcmVudE5vZGU9ZSl9ZnVuY3Rpb24geHgodCxlKXt2YXIgaT10LmlzRXhwYW5kP3QuY2hpbGRyZW46W10sbj10LnBhcmVudE5vZGUuY2hpbGRyZW4sbz10LmhpZXJOb2RlLmk/blt0LmhpZXJOb2RlLmktMV06bnVsbDtpZihpLmxlbmd0aCl7IWZ1bmN0aW9uKHQpe3ZhciBlPXQuY2hpbGRyZW4saT1lLmxlbmd0aCxuPTAsbz0wO2Zvcig7MDw9LS1pOyl7dmFyIGE9ZVtpXTthLmhpZXJOb2RlLnByZWxpbSs9bixhLmhpZXJOb2RlLm1vZGlmaWVyKz1uLG8rPWEuaGllck5vZGUuY2hhbmdlLG4rPWEuaGllck5vZGUuc2hpZnQrb319KHQpO3ZhciBhPShpWzBdLmhpZXJOb2RlLnByZWxpbStpW2kubGVuZ3RoLTFdLmhpZXJOb2RlLnByZWxpbSkvMjtvPyh0LmhpZXJOb2RlLnByZWxpbT1vLmhpZXJOb2RlLnByZWxpbStlKHQsbyksdC5oaWVyTm9kZS5tb2RpZmllcj10LmhpZXJOb2RlLnByZWxpbS1hKTp0LmhpZXJOb2RlLnByZWxpbT1hfWVsc2UgbyYmKHQuaGllck5vZGUucHJlbGltPW8uaGllck5vZGUucHJlbGltK2UodCxvKSk7dC5wYXJlbnROb2RlLmhpZXJOb2RlLmRlZmF1bHRBbmNlc3Rvcj1mdW5jdGlvbih0LGUsaSxuKXtpZihlKXtmb3IodmFyIG89dCxhPXQscj1hLnBhcmVudE5vZGUuY2hpbGRyZW5bMF0scz1lLGw9by5oaWVyTm9kZS5tb2RpZmllcix1PWEuaGllck5vZGUubW9kaWZpZXIsaD1yLmhpZXJOb2RlLm1vZGlmaWVyLGM9cy5oaWVyTm9kZS5tb2RpZmllcjtzPU14KHMpLGE9SXgoYSkscyYmYTspe289TXgobykscj1JeChyKSxvLmhpZXJOb2RlLmFuY2VzdG9yPXQ7dmFyIGQ9cy5oaWVyTm9kZS5wcmVsaW0rYy1hLmhpZXJOb2RlLnByZWxpbS11K24ocyxhKTswPGQmJihUeCgocD10LGc9aSwoZj1zKS5oaWVyTm9kZS5hbmNlc3Rvci5wYXJlbnROb2RlPT09cC5wYXJlbnROb2RlP2YuaGllck5vZGUuYW5jZXN0b3I6ZyksdCxkKSx1Kz1kLGwrPWQpLGMrPXMuaGllck5vZGUubW9kaWZpZXIsdSs9YS5oaWVyTm9kZS5tb2RpZmllcixsKz1vLmhpZXJOb2RlLm1vZGlmaWVyLGgrPXIuaGllck5vZGUubW9kaWZpZXJ9cyYmIU14KG8pJiYoby5oaWVyTm9kZS50aHJlYWQ9cyxvLmhpZXJOb2RlLm1vZGlmaWVyKz1jLWwpLGEmJiFJeChyKSYmKHIuaGllck5vZGUudGhyZWFkPWEsci5oaWVyTm9kZS5tb2RpZmllcis9dS1oLGk9dCl9dmFyIGYscCxnO3JldHVybiBpfSh0LG8sdC5wYXJlbnROb2RlLmhpZXJOb2RlLmRlZmF1bHRBbmNlc3Rvcnx8blswXSxlKX1mdW5jdGlvbiBfeCh0KXt2YXIgZT10LmhpZXJOb2RlLnByZWxpbSt0LnBhcmVudE5vZGUuaGllck5vZGUubW9kaWZpZXI7dC5zZXRMYXlvdXQoe3g6ZX0sITApLHQuaGllck5vZGUubW9kaWZpZXIrPXQucGFyZW50Tm9kZS5oaWVyTm9kZS5tb2RpZmllcn1mdW5jdGlvbiBieCh0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90OkF4fWZ1bmN0aW9uIFN4KHQsZSl7dmFyIGk9e307cmV0dXJuIHQtPU1hdGguUEkvMixpLng9ZSpNYXRoLmNvcyh0KSxpLnk9ZSpNYXRoLnNpbih0KSxpfWZ1bmN0aW9uIE14KHQpe3ZhciBlPXQuY2hpbGRyZW47cmV0dXJuIGUubGVuZ3RoJiZ0LmlzRXhwYW5kP2VbZS5sZW5ndGgtMV06dC5oaWVyTm9kZS50aHJlYWR9ZnVuY3Rpb24gSXgodCl7dmFyIGU9dC5jaGlsZHJlbjtyZXR1cm4gZS5sZW5ndGgmJnQuaXNFeHBhbmQ/ZVswXTp0LmhpZXJOb2RlLnRocmVhZH1mdW5jdGlvbiBUeCh0LGUsaSl7dmFyIG49aS8oZS5oaWVyTm9kZS5pLXQuaGllck5vZGUuaSk7ZS5oaWVyTm9kZS5jaGFuZ2UtPW4sZS5oaWVyTm9kZS5zaGlmdCs9aSxlLmhpZXJOb2RlLm1vZGlmaWVyKz1pLGUuaGllck5vZGUucHJlbGltKz1pLHQuaGllck5vZGUuY2hhbmdlKz1ufWZ1bmN0aW9uIEF4KHQsZSl7cmV0dXJuIHQucGFyZW50Tm9kZT09PWUucGFyZW50Tm9kZT8xOjJ9ZnVuY3Rpb24gRHgodCxlKXt2YXIgaT10LmdldEl0ZW1MYXlvdXQoZSk7cmV0dXJuIGkmJiFpc05hTihpLngpJiYhaXNOYU4oaS55KSYmIm5vbmUiIT09dC5nZXRJdGVtVmlzdWFsKGUsInN5bWJvbCIpfWZ1bmN0aW9uIEN4KHQsZSxpKXtyZXR1cm4gaS5pdGVtTW9kZWw9ZSxpLml0ZW1TdHlsZT1lLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSxpLmhvdmVySXRlbVN0eWxlPWUuZ2V0TW9kZWwoImVtcGhhc2lzLml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZSgpLGkubGluZVN0eWxlPWUuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLmdldExpbmVTdHlsZSgpLGkubGFiZWxNb2RlbD1lLmdldE1vZGVsKCJsYWJlbCIpLGkuaG92ZXJMYWJlbE1vZGVsPWUuZ2V0TW9kZWwoImVtcGhhc2lzLmxhYmVsIiksITE9PT10LmlzRXhwYW5kJiYwIT09dC5jaGlsZHJlbi5sZW5ndGg/aS5zeW1ib2xJbm5lckNvbG9yPWkuaXRlbVN0eWxlLmZpbGw6aS5zeW1ib2xJbm5lckNvbG9yPSIjZmZmIixpfWZ1bmN0aW9uIEx4KHQsZSxpLG4sbyxhKXt2YXIgcj0haSxzPXQudHJlZS5nZXROb2RlQnlEYXRhSW5kZXgoZSksbD1zLmdldE1vZGVsKCksdT0oYT1DeChzLGwsYSksdC50cmVlLnJvb3QpLGg9cy5wYXJlbnROb2RlPT09dT9zOnMucGFyZW50Tm9kZXx8cyxjPXQuZ2V0SXRlbUdyYXBoaWNFbChoLmRhdGFJbmRleCksZD1oLmdldExheW91dCgpLGY9Yz97eDpjLnBvc2l0aW9uWzBdLHk6Yy5wb3NpdGlvblsxXSxyYXdYOmMuX19yYWRpYWxPbGRSYXdYLHJhd1k6Yy5fX3JhZGlhbE9sZFJhd1l9OmQscD1zLmdldExheW91dCgpO3I/KGk9bmV3IEZnKHQsZSxhKSkuYXR0cigicG9zaXRpb24iLFtmLngsZi55XSk6aS51cGRhdGVEYXRhKHQsZSxhKSxpLl9fcmFkaWFsT2xkUmF3WD1pLl9fcmFkaWFsUmF3WCxpLl9fcmFkaWFsT2xkUmF3WT1pLl9fcmFkaWFsUmF3WSxpLl9fcmFkaWFsUmF3WD1wLnJhd1gsaS5fX3JhZGlhbFJhd1k9cC5yYXdZLG4uYWRkKGkpLHQuc2V0SXRlbUdyYXBoaWNFbChlLGkpLHNsKGkse3Bvc2l0aW9uOltwLngscC55XX0sbyk7dmFyIGc9aS5nZXRTeW1ib2xQYXRoKCk7aWYoInJhZGlhbCI9PT1hLmxheW91dCl7dmFyIG0sdix5PXUuY2hpbGRyZW5bMF0seD15LmdldExheW91dCgpLF89eS5jaGlsZHJlbi5sZW5ndGg7aWYocC54PT09eC54JiYhMD09PXMuaXNFeHBhbmQpe3ZhciB3PXt9O3cueD0oeS5jaGlsZHJlblswXS5nZXRMYXlvdXQoKS54K3kuY2hpbGRyZW5bXy0xXS5nZXRMYXlvdXQoKS54KS8yLHcueT0oeS5jaGlsZHJlblswXS5nZXRMYXlvdXQoKS55K3kuY2hpbGRyZW5bXy0xXS5nZXRMYXlvdXQoKS55KS8yLChtPU1hdGguYXRhbjIody55LXgueSx3LngteC54KSk8MCYmKG09MipNYXRoLlBJK20pLCh2PXcueDx4LngpJiYobS09TWF0aC5QSSl9ZWxzZShtPU1hdGguYXRhbjIocC55LXgueSxwLngteC54KSk8MCYmKG09MipNYXRoLlBJK20pLDA9PT1zLmNoaWxkcmVuLmxlbmd0aHx8MCE9PXMuY2hpbGRyZW4ubGVuZ3RoJiYhMT09PXMuaXNFeHBhbmQ/KHY9cC54PHgueCkmJihtLT1NYXRoLlBJKToodj1wLng+eC54KXx8KG0tPU1hdGguUEkpO3ZhciBiPXY/ImxlZnQiOiJyaWdodCIsUz1hLmxhYmVsTW9kZWwuZ2V0KCJyb3RhdGUiKSxNPVMqKE1hdGguUEkvMTgwKTtnLnNldFN0eWxlKHt0ZXh0UG9zaXRpb246YS5sYWJlbE1vZGVsLmdldCgicG9zaXRpb24iKXx8Yix0ZXh0Um90YXRpb246bnVsbD09Uz8tbTpNLHRleHRPcmlnaW46ImNlbnRlciIsdmVydGljYWxBbGlnbjoibWlkZGxlIn0pfWlmKHMucGFyZW50Tm9kZSYmcy5wYXJlbnROb2RlIT09dSl7dmFyIEk9aS5fX2VkZ2U7c2woST1JfHwoaS5fX2VkZ2U9bmV3IGxzKHtzaGFwZTpQeChhLGYsZiksc3R5bGU6Qyh7b3BhY2l0eTowLHN0cm9rZU5vU2NhbGU6ITB9LGEubGluZVN0eWxlKX0pKSx7c2hhcGU6UHgoYSxkLHApLHN0eWxlOntvcGFjaXR5OjF9fSxvKSxuLmFkZChJKX19ZnVuY3Rpb24ga3godCxlLGksbixvLGEpe2Zvcih2YXIgcixzPXQudHJlZS5nZXROb2RlQnlEYXRhSW5kZXgoZSksbD10LnRyZWUucm9vdCx1PXMuZ2V0TW9kZWwoKSxoPShhPUN4KHMsdSxhKSxzLnBhcmVudE5vZGU9PT1sP3M6cy5wYXJlbnROb2RlfHxzKTtudWxsPT0ocj1oLmdldExheW91dCgpKTspaD1oLnBhcmVudE5vZGU9PT1sP2g6aC5wYXJlbnROb2RlfHxoO3NsKGkse3Bvc2l0aW9uOltyLngrMSxyLnkrMV19LG8sZnVuY3Rpb24oKXtuLnJlbW92ZShpKSx0LnNldEl0ZW1HcmFwaGljRWwoZSxudWxsKX0pLGkuZmFkZU91dChudWxsLHtrZWVwTGFiZWw6ITB9KTt2YXIgYz1pLl9fZWRnZTtjJiZzbChjLHtzaGFwZTpQeChhLHIsciksc3R5bGU6e29wYWNpdHk6MH19LG8sZnVuY3Rpb24oKXtuLnJlbW92ZShjKX0pfWZ1bmN0aW9uIFB4KHQsZSxpKXt2YXIgbixvLGEscixzLGwsdSxoLGM9dC5vcmllbnQ7aWYoInJhZGlhbCIhPT10LmxheW91dClyZXR1cm4gcz1lLngsdT1lLnksbD1pLngsaD1pLnksIkxSIiE9PWMmJiJSTCIhPT1jfHwobj1zKyhsLXMpKnQuY3VydmF0dXJlLG89dSxhPWwrKHMtbCkqdC5jdXJ2YXR1cmUscj1oKSwiVEIiIT09YyYmIkJUIiE9PWN8fChuPXMsbz11KyhoLXUpKnQuY3VydmF0dXJlLGE9bCxyPWgrKHUtaCkqdC5jdXJ2YXR1cmUpLHt4MTpzLHkxOnUseDI6bCx5MjpoLGNweDE6bixjcHkxOm8sY3B4MjphLGNweTI6cn07cz1lLnJhd1gsdT1lLnJhd1ksbD1pLnJhd1gsaD1pLnJhd1k7dmFyIGQ9U3gocyx1KSxmPVN4KHMsdSsoaC11KSp0LmN1cnZhdHVyZSkscD1TeChsLGgrKHUtaCkqdC5jdXJ2YXR1cmUpLGc9U3gobCxoKTtyZXR1cm57eDE6ZC54LHkxOmQueSx4MjpnLngseTI6Zy55LGNweDE6Zi54LGNweTE6Zi55LGNweDI6cC54LGNweTI6cC55fX1mdW5jdGlvbiBOeCh0LGUpe2Zvcih2YXIgaSxuPVt0XTtpPW4ucG9wKCk7KWlmKGUoaSksaS5pc0V4cGFuZCl7dmFyIG89aS5jaGlsZHJlbjtpZihvLmxlbmd0aClmb3IodmFyIGE9by5sZW5ndGgtMTswPD1hO2EtLSluLnB1c2gob1thXSl9fW14LnByb3RvdHlwZT17Y29uc3RydWN0b3I6bXgsaXNSZW1vdmVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YUluZGV4PDB9LGVhY2hOb2RlOmZ1bmN0aW9uKHQsZSxpKXsiZnVuY3Rpb24iPT10eXBlb2YgdCYmKGk9ZSxlPXQsdD1udWxsKSx6KHQ9dHx8e30pJiYodD17b3JkZXI6dH0pO3ZhciBuLG89dC5vcmRlcnx8InByZW9yZGVyIixhPXRoaXNbdC5hdHRyfHwiY2hpbGRyZW4iXTsicHJlb3JkZXIiPT09byYmKG49ZS5jYWxsKGksdGhpcykpO2Zvcih2YXIgcj0wOyFuJiZyPGEubGVuZ3RoO3IrKylhW3JdLmVhY2hOb2RlKHQsZSxpKTsicG9zdG9yZGVyIj09PW8mJmUuY2FsbChpLHRoaXMpfSx1cGRhdGVEZXB0aEFuZEhlaWdodDpmdW5jdGlvbih0KXt2YXIgZT0wO3RoaXMuZGVwdGg9dDtmb3IodmFyIGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl7dmFyIG49dGhpcy5jaGlsZHJlbltpXTtuLnVwZGF0ZURlcHRoQW5kSGVpZ2h0KHQrMSksbi5oZWlnaHQ+ZSYmKGU9bi5oZWlnaHQpfXRoaXMuaGVpZ2h0PWUrMX0sZ2V0Tm9kZUJ5SWQ6ZnVuY3Rpb24odCl7aWYodGhpcy5nZXRJZCgpPT09dClyZXR1cm4gdGhpcztmb3IodmFyIGU9MCxpPXRoaXMuY2hpbGRyZW4sbj1pLmxlbmd0aDtlPG47ZSsrKXt2YXIgbz1pW2VdLmdldE5vZGVCeUlkKHQpO2lmKG8pcmV0dXJuIG99fSxjb250YWluczpmdW5jdGlvbih0KXtpZih0PT09dGhpcylyZXR1cm4hMDtmb3IodmFyIGU9MCxpPXRoaXMuY2hpbGRyZW4sbj1pLmxlbmd0aDtlPG47ZSsrKXt2YXIgbz1pW2VdLmNvbnRhaW5zKHQpO2lmKG8pcmV0dXJuIG99fSxnZXRBbmNlc3RvcnM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGk9dD90aGlzOnRoaXMucGFyZW50Tm9kZTtpOyllLnB1c2goaSksaT1pLnBhcmVudE5vZGU7cmV0dXJuIGUucmV2ZXJzZSgpLGV9LGdldFZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaG9zdFRyZWUuZGF0YTtyZXR1cm4gZS5nZXQoZS5nZXREaW1lbnNpb24odHx8InZhbHVlIiksdGhpcy5kYXRhSW5kZXgpfSxzZXRMYXlvdXQ6ZnVuY3Rpb24odCxlKXswPD10aGlzLmRhdGFJbmRleCYmdGhpcy5ob3N0VHJlZS5kYXRhLnNldEl0ZW1MYXlvdXQodGhpcy5kYXRhSW5kZXgsdCxlKX0sZ2V0TGF5b3V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG9zdFRyZWUuZGF0YS5nZXRJdGVtTGF5b3V0KHRoaXMuZGF0YUluZGV4KX0sZ2V0TW9kZWw6ZnVuY3Rpb24odCl7aWYoISh0aGlzLmRhdGFJbmRleDwwKSl7dmFyIGUsaT10aGlzLmhvc3RUcmVlLG49aS5kYXRhLmdldEl0ZW1Nb2RlbCh0aGlzLmRhdGFJbmRleCksbz10aGlzLmdldExldmVsTW9kZWwoKTtyZXR1cm4gb3x8MCE9PXRoaXMuY2hpbGRyZW4ubGVuZ3RoJiYoMD09PXRoaXMuY2hpbGRyZW4ubGVuZ3RofHwhMSE9PXRoaXMuaXNFeHBhbmQpfHwoZT10aGlzLmdldExlYXZlc01vZGVsKCkpLG4uZ2V0TW9kZWwodCwob3x8ZXx8aS5ob3N0TW9kZWwpLmdldE1vZGVsKHQpKX19LGdldExldmVsTW9kZWw6ZnVuY3Rpb24oKXtyZXR1cm4odGhpcy5ob3N0VHJlZS5sZXZlbE1vZGVsc3x8W10pW3RoaXMuZGVwdGhdfSxnZXRMZWF2ZXNNb2RlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhvc3RUcmVlLmxlYXZlc01vZGVsfSxzZXRWaXN1YWw6ZnVuY3Rpb24odCxlKXswPD10aGlzLmRhdGFJbmRleCYmdGhpcy5ob3N0VHJlZS5kYXRhLnNldEl0ZW1WaXN1YWwodGhpcy5kYXRhSW5kZXgsdCxlKX0sZ2V0VmlzdWFsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuaG9zdFRyZWUuZGF0YS5nZXRJdGVtVmlzdWFsKHRoaXMuZGF0YUluZGV4LHQsZSl9LGdldFJhd0luZGV4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG9zdFRyZWUuZGF0YS5nZXRSYXdJbmRleCh0aGlzLmRhdGFJbmRleCl9LGdldElkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG9zdFRyZWUuZGF0YS5nZXRJZCh0aGlzLmRhdGFJbmRleCl9LGlzQW5jZXN0b3JPZjpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5wYXJlbnROb2RlO2U7KXtpZihlPT09dGhpcylyZXR1cm4hMDtlPWUucGFyZW50Tm9kZX1yZXR1cm4hMX0saXNEZXNjZW5kYW50T2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQhPT10aGlzJiZ0LmlzQW5jZXN0b3JPZih0aGlzKX19LHZ4LnByb3RvdHlwZT17Y29uc3RydWN0b3I6dngsdHlwZToidHJlZSIsZWFjaE5vZGU6ZnVuY3Rpb24odCxlLGkpe3RoaXMucm9vdC5lYWNoTm9kZSh0LGUsaSl9LGdldE5vZGVCeURhdGFJbmRleDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmRhdGEuZ2V0UmF3SW5kZXgodCk7cmV0dXJuIHRoaXMuX25vZGVzW2VdfSxnZXROb2RlQnlOYW1lOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJvb3QuZ2V0Tm9kZUJ5TmFtZSh0KX0sdXBkYXRlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZGF0YSxlPXRoaXMuX25vZGVzLGk9MCxuPWUubGVuZ3RoO2k8bjtpKyspZVtpXS5kYXRhSW5kZXg9LTE7Zm9yKGk9MCxuPXQuY291bnQoKTtpPG47aSsrKWVbdC5nZXRSYXdJbmRleChpKV0uZGF0YUluZGV4PWl9LGNsZWFyTGF5b3V0czpmdW5jdGlvbigpe3RoaXMuZGF0YS5jbGVhckl0ZW1MYXlvdXRzKCl9fSx2eC5jcmVhdGVUcmVlPWZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBzPW5ldyB2eChlLGkubGV2ZWxzLGkubGVhdmVzKSxsPVtdLHU9MTshZnVuY3Rpb24gdChlLGkpe3ZhciBuPWUudmFsdWU7dT1NYXRoLm1heCh1LGsobik/bi5sZW5ndGg6MSk7bC5wdXNoKGUpO3ZhciBvPW5ldyBteChlLm5hbWUscyk7aT95eChvLGkpOnMucm9vdD1vO3MuX25vZGVzLnB1c2gobyk7dmFyIGE9ZS5jaGlsZHJlbjtpZihhKWZvcih2YXIgcj0wO3I8YS5sZW5ndGg7cisrKXQoYVtyXSxvKX0odCkscy5yb290LnVwZGF0ZURlcHRoQW5kSGVpZ2h0KDApO3ZhciBvPW5wKGwse2Nvb3JkRGltZW5zaW9uczpbInZhbHVlIl0sZGltZW5zaW9uc0NvdW50OnV9KSxhPW5ldyBXZihvLGUpO3JldHVybiBhLmluaXREYXRhKGwpLHV4KHttYWluRGF0YTphLHN0cnVjdDpzLHN0cnVjdEF0dHI6InRyZWUifSkscy51cGRhdGUoKSxuJiZuKGEpLHN9LGljLmV4dGVuZCh7dHlwZToic2VyaWVzLnRyZWUiLGxheW91dEluZm86bnVsbCxsYXlvdXRNb2RlOiJib3giLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXtuYW1lOnQubmFtZSxjaGlsZHJlbjp0LmRhdGF9LGk9dC5sZWF2ZXN8fHt9LG49e307bi5sZWF2ZXM9aTt2YXIgbz12eC5jcmVhdGVUcmVlKGUsdGhpcyxuLGZ1bmN0aW9uKHQpe3Qud3JhcE1ldGhvZCgiZ2V0SXRlbU1vZGVsIixmdW5jdGlvbih0LGUpe3ZhciBpPW8uZ2V0Tm9kZUJ5RGF0YUluZGV4KGUpLG49aS5nZXRMZWF2ZXNNb2RlbCgpO3JldHVybiBpLmNoaWxkcmVuLmxlbmd0aCYmaS5pc0V4cGFuZHx8KHQucGFyZW50TW9kZWw9biksdH0pfSk7dmFyIGE9MDtvLmVhY2hOb2RlKCJwcmVvcmRlciIsZnVuY3Rpb24odCl7dC5kZXB0aD5hJiYoYT10LmRlcHRoKX0pO3ZhciByPXQuZXhwYW5kQW5kQ29sbGFwc2UmJjA8PXQuaW5pdGlhbFRyZWVEZXB0aD90LmluaXRpYWxUcmVlRGVwdGg6YTtyZXR1cm4gby5yb290LmVhY2hOb2RlKCJwcmVvcmRlciIsZnVuY3Rpb24odCl7dmFyIGU9dC5ob3N0VHJlZS5kYXRhLmdldFJhd0RhdGFJdGVtKHQuZGF0YUluZGV4KTt0LmlzRXhwYW5kPWUmJm51bGwhPWUuY29sbGFwc2VkPyFlLmNvbGxhcHNlZDp0LmRlcHRoPD1yfSksby5kYXRhfSxnZXRPcmllbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldCgib3JpZW50Iik7cmV0dXJuImhvcml6b250YWwiPT09dD90PSJMUiI6InZlcnRpY2FsIj09PXQmJih0PSJUQiIpLHR9LHNldFpvb206ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uem9vbT10fSxzZXRDZW50ZXI6ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uY2VudGVyPXR9LGZvcm1hdFRvb2x0aXA6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuZ2V0RGF0YSgpLnRyZWUsaT1lLnJvb3QuY2hpbGRyZW5bMF0sbj1lLmdldE5vZGVCeURhdGFJbmRleCh0KSxvPW4uZ2V0VmFsdWUoKSxhPW4ubmFtZTtuJiZuIT09aTspYT1uLnBhcmVudE5vZGUubmFtZSsiLiIrYSxuPW4ucGFyZW50Tm9kZTtyZXR1cm4gZXUoYSsoaXNOYU4obyl8fG51bGw9PW8/IiI6IiA6ICIrbykpfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjIsY29vcmRpbmF0ZVN5c3RlbToidmlldyIsbGVmdDoiMTIlIix0b3A6IjEyJSIscmlnaHQ6IjEyJSIsYm90dG9tOiIxMiUiLGxheW91dDoib3J0aG9nb25hbCIscm9hbTohMSxub2RlU2NhbGVSYXRpbzouNCxjZW50ZXI6bnVsbCx6b29tOjEsb3JpZW50OiJMUiIsc3ltYm9sOiJlbXB0eUNpcmNsZSIsc3ltYm9sU2l6ZTo3LGV4cGFuZEFuZENvbGxhcHNlOiEwLGluaXRpYWxUcmVlRGVwdGg6MixsaW5lU3R5bGU6e2NvbG9yOiIjY2NjIix3aWR0aDoxLjUsY3VydmVuZXNzOi41fSxpdGVtU3R5bGU6e2NvbG9yOiJsaWdodHN0ZWVsYmx1ZSIsYm9yZGVyQ29sb3I6IiNjMjM1MzEiLGJvcmRlcldpZHRoOjEuNX0sbGFiZWw6e3Nob3c6ITAsY29sb3I6IiM1NTUifSxsZWF2ZXM6e2xhYmVsOntzaG93OiEwfX0sYW5pbWF0aW9uRWFzaW5nOiJsaW5lYXIiLGFuaW1hdGlvbkR1cmF0aW9uOjcwMCxhbmltYXRpb25EdXJhdGlvblVwZGF0ZToxZTN9fSksTWYoe3R5cGU6InRyZWUiLGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLl9vbGRUcmVlLHRoaXMuX21haW5Hcm91cD1uZXcgSWksdGhpcy5fY29udHJvbGxlcj1uZXcgTHkoZS5nZXRacigpKSx0aGlzLl9jb250cm9sbGVySG9zdD17dGFyZ2V0OnRoaXMuZ3JvdXB9LHRoaXMuZ3JvdXAuYWRkKHRoaXMuX21haW5Hcm91cCl9LHJlbmRlcjpmdW5jdGlvbihuLHQsaSxlKXt2YXIgbz1uLmdldERhdGEoKSxhPW4ubGF5b3V0SW5mbyxyPXRoaXMuX21haW5Hcm91cCxzPW4uZ2V0KCJsYXlvdXQiKTsicmFkaWFsIj09PXM/ci5hdHRyKCJwb3NpdGlvbiIsW2EueCthLndpZHRoLzIsYS55K2EuaGVpZ2h0LzJdKTpyLmF0dHIoInBvc2l0aW9uIixbYS54LGEueV0pLHRoaXMuX3VwZGF0ZVZpZXdDb29yZFN5cyhuLGEscyksdGhpcy5fdXBkYXRlQ29udHJvbGxlcihuLHQsaSk7dmFyIGw9dGhpcy5fZGF0YSx1PXtleHBhbmRBbmRDb2xsYXBzZTpuLmdldCgiZXhwYW5kQW5kQ29sbGFwc2UiKSxsYXlvdXQ6cyxvcmllbnQ6bi5nZXRPcmllbnQoKSxjdXJ2YXR1cmU6bi5nZXQoImxpbmVTdHlsZS5jdXJ2ZW5lc3MiKSxzeW1ib2xSb3RhdGU6bi5nZXQoInN5bWJvbFJvdGF0ZSIpLHN5bWJvbE9mZnNldDpuLmdldCgic3ltYm9sT2Zmc2V0IiksaG92ZXJBbmltYXRpb246bi5nZXQoImhvdmVyQW5pbWF0aW9uIiksdXNlTmFtZUxhYmVsOiEwLGZhZGVJbjohMH07by5kaWZmKGwpLmFkZChmdW5jdGlvbih0KXtEeChvLHQpJiZMeChvLHQsbnVsbCxyLG4sdSl9KS51cGRhdGUoZnVuY3Rpb24odCxlKXt2YXIgaT1sLmdldEl0ZW1HcmFwaGljRWwoZSk7RHgobyx0KT9MeChvLHQsaSxyLG4sdSk6aSYma3gobCxlLGkscixuLHUpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0SXRlbUdyYXBoaWNFbCh0KTtlJiZreChsLHQsZSxyLG4sdSl9KS5leGVjdXRlKCksdGhpcy5fbm9kZVNjYWxlUmF0aW89bi5nZXQoIm5vZGVTY2FsZVJhdGlvIiksdGhpcy5fdXBkYXRlTm9kZUFuZExpbmtTY2FsZShuKSwhMD09PXUuZXhwYW5kQW5kQ29sbGFwc2UmJm8uZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxlKXt0Lm9mZigiY2xpY2siKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aS5kaXNwYXRjaEFjdGlvbih7dHlwZToidHJlZUV4cGFuZEFuZENvbGxhcHNlIixzZXJpZXNJZDpuLmlkLGRhdGFJbmRleDplfSl9KX0pLHRoaXMuX2RhdGE9b30sX3VwZGF0ZVZpZXdDb29yZFN5czpmdW5jdGlvbih0KXt2YXIgaT10LmdldERhdGEoKSxuPVtdO2kuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1pLmdldEl0ZW1MYXlvdXQodCk7IWV8fGlzTmFOKGUueCl8fGlzTmFOKGUueSl8fG4ucHVzaChbK2UueCwrZS55XSl9KTt2YXIgZT1bXSxvPVtdO0JhKG4sZSxvKTt2YXIgYT10aGlzLl9taW4scj10aGlzLl9tYXg7b1swXS1lWzBdPT0wJiYoZVswXT1hP2FbMF06ZVswXS0xLG9bMF09cj9yWzBdOm9bMF0rMSksb1sxXS1lWzFdPT0wJiYoZVsxXT1hP2FbMV06ZVsxXS0xLG9bMV09cj9yWzFdOm9bMV0rMSk7dmFyIHM9dC5jb29yZGluYXRlU3lzdGVtPW5ldyBReTtzLnpvb21MaW1pdD10LmdldCgic2NhbGVMaW1pdCIpLHMuc2V0Qm91bmRpbmdSZWN0KGVbMF0sZVsxXSxvWzBdLWVbMF0sb1sxXS1lWzFdKSxzLnNldENlbnRlcih0LmdldCgiY2VudGVyIikpLHMuc2V0Wm9vbSh0LmdldCgiem9vbSIpKSx0aGlzLmdyb3VwLmF0dHIoe3Bvc2l0aW9uOnMucG9zaXRpb24sc2NhbGU6cy5zY2FsZX0pLHRoaXMuX3ZpZXdDb29yZFN5cz1zLHRoaXMuX21pbj1lLHRoaXMuX21heD1vfSxfdXBkYXRlQ29udHJvbGxlcjpmdW5jdGlvbihvLHQsYSl7dmFyIGU9dGhpcy5fY29udHJvbGxlcixpPXRoaXMuX2NvbnRyb2xsZXJIb3N0LHI9dGhpcy5ncm91cDtlLnNldFBvaW50ZXJDaGVja2VyKGZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1yLmdldEJvdW5kaW5nUmVjdCgpO3JldHVybiBuLmFwcGx5VHJhbnNmb3JtKHIudHJhbnNmb3JtKSxuLmNvbnRhaW4oZSxpKSYmIVd5KHQsYSxvKX0pLGUuZW5hYmxlKG8uZ2V0KCJyb2FtIikpLGkuem9vbUxpbWl0PW8uZ2V0KCJzY2FsZUxpbWl0IiksaS56b29tPW8uY29vcmRpbmF0ZVN5c3RlbS5nZXRab29tKCksZS5vZmYoInBhbiIpLm9mZigiem9vbSIpLm9uKCJwYW4iLGZ1bmN0aW9uKHQpe1Z5KGksdC5keCx0LmR5KSxhLmRpc3BhdGNoQWN0aW9uKHtzZXJpZXNJZDpvLmlkLHR5cGU6InRyZWVSb2FtIixkeDp0LmR4LGR5OnQuZHl9KX0sdGhpcykub24oInpvb20iLGZ1bmN0aW9uKHQpe0d5KGksdC5zY2FsZSx0Lm9yaWdpblgsdC5vcmlnaW5ZKSxhLmRpc3BhdGNoQWN0aW9uKHtzZXJpZXNJZDpvLmlkLHR5cGU6InRyZWVSb2FtIix6b29tOnQuc2NhbGUsb3JpZ2luWDp0Lm9yaWdpblgsb3JpZ2luWTp0Lm9yaWdpbll9KSx0aGlzLl91cGRhdGVOb2RlQW5kTGlua1NjYWxlKG8pfSx0aGlzKX0sX3VwZGF0ZU5vZGVBbmRMaW5rU2NhbGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXREYXRhKCksaT10aGlzLl9nZXROb2RlR2xvYmFsU2NhbGUodCksbj1baSxpXTtlLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQsZSl7dC5hdHRyKCJzY2FsZSIsbil9KX0sX2dldE5vZGVHbG9iYWxTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT10LmNvb3JkaW5hdGVTeXN0ZW07aWYoInZpZXciIT09ZS50eXBlKXJldHVybiAxO3ZhciBpPXRoaXMuX25vZGVTY2FsZVJhdGlvLG49ZS5zY2FsZSxvPW4mJm5bMF18fDE7cmV0dXJuKChlLmdldFpvb20oKS0xKSppKzEpL299LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLl9jb250cm9sbGVyJiZ0aGlzLl9jb250cm9sbGVyLmRpc3Bvc2UoKSx0aGlzLl9jb250cm9sbGVySG9zdD17fX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5fbWFpbkdyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX2RhdGE9bnVsbH19KSxnZih7dHlwZToidHJlZUV4cGFuZEFuZENvbGxhcHNlIixldmVudDoidHJlZUV4cGFuZEFuZENvbGxhcHNlIix1cGRhdGU6InVwZGF0ZSJ9LGZ1bmN0aW9uKG4sdCl7dC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToic2VyaWVzIixzdWJUeXBlOiJ0cmVlIixxdWVyeTpufSxmdW5jdGlvbih0KXt2YXIgZT1uLmRhdGFJbmRleCxpPXQuZ2V0RGF0YSgpLnRyZWUuZ2V0Tm9kZUJ5RGF0YUluZGV4KGUpO2kuaXNFeHBhbmQ9IWkuaXNFeHBhbmR9KX0pLGdmKHt0eXBlOiJ0cmVlUm9hbSIsZXZlbnQ6InRyZWVSb2FtIix1cGRhdGU6Im5vbmUifSxmdW5jdGlvbihpLHQpe3QuZWFjaENvbXBvbmVudCh7bWFpblR5cGU6InNlcmllcyIsc3ViVHlwZToidHJlZSIscXVlcnk6aX0sZnVuY3Rpb24odCl7dmFyIGU9S3kodC5jb29yZGluYXRlU3lzdGVtLGkpO3Quc2V0Q2VudGVyJiZ0LnNldENlbnRlcihlLmNlbnRlciksdC5zZXRab29tJiZ0LnNldFpvb20oZS56b29tKX0pfSk7ZnVuY3Rpb24gT3godCxlLGkpe2lmKHQmJjA8PV8oZSx0LnR5cGUpKXt2YXIgbj1pLmdldERhdGEoKS50cmVlLnJvb3Qsbz10LnRhcmdldE5vZGU7aWYoInN0cmluZyI9PXR5cGVvZiBvJiYobz1uLmdldE5vZGVCeUlkKG8pKSxvJiZuLmNvbnRhaW5zKG8pKXJldHVybntub2RlOm99O3ZhciBhPXQudGFyZ2V0Tm9kZUlkO2lmKG51bGwhPWEmJihvPW4uZ2V0Tm9kZUJ5SWQoYSkpKXJldHVybntub2RlOm99fX1mdW5jdGlvbiBFeCh0KXtmb3IodmFyIGU9W107dDspKHQ9dC5wYXJlbnROb2RlKSYmZS5wdXNoKHQpO3JldHVybiBlLnJldmVyc2UoKX1mdW5jdGlvbiB6eCh0LGUpe3JldHVybiAwPD1fKEV4KHQpLGUpfWZ1bmN0aW9uIFJ4KHQsZSl7Zm9yKHZhciBpPVtdO3Q7KXt2YXIgbj10LmRhdGFJbmRleDtpLnB1c2goe25hbWU6dC5uYW1lLGRhdGFJbmRleDpuLHZhbHVlOmUuZ2V0UmF3VmFsdWUobil9KSx0PXQucGFyZW50Tm9kZX1yZXR1cm4gaS5yZXZlcnNlKCksaX15ZihNbSgidHJlZSIsImNpcmNsZSIpKSx2ZihmdW5jdGlvbih0LGUpe3QuZWFjaFNlcmllc0J5VHlwZSgidHJlZSIsZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7dmFyIGk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdnUodC5nZXRCb3hMYXlvdXRQYXJhbXMoKSx7d2lkdGg6ZS5nZXRXaWR0aCgpLGhlaWdodDplLmdldEhlaWdodCgpfSl9KHQsZSk7dC5sYXlvdXRJbmZvPWk7dmFyIG49dC5nZXQoImxheW91dCIpLG89MCxhPTAscj1udWxsO3I9InJhZGlhbCI9PT1uPyhvPTIqTWF0aC5QSSxhPU1hdGgubWluKGkuaGVpZ2h0LGkud2lkdGgpLzIsYngoZnVuY3Rpb24odCxlKXtyZXR1cm4odC5wYXJlbnROb2RlPT09ZS5wYXJlbnROb2RlPzE6MikvdC5kZXB0aH0pKToobz1pLndpZHRoLGE9aS5oZWlnaHQsYngoKSk7dmFyIHM9dC5nZXREYXRhKCkudHJlZS5yb290LGw9cy5jaGlsZHJlblswXTtpZihsKXshZnVuY3Rpb24odCl7dC5oaWVyTm9kZT17ZGVmYXVsdEFuY2VzdG9yOm51bGwsYW5jZXN0b3I6dCxwcmVsaW06MCxtb2RpZmllcjowLGNoYW5nZTowLHNoaWZ0OjAsaTowLHRocmVhZDpudWxsfTtmb3IodmFyIGUsaSxuPVt0XTtlPW4ucG9wKCk7KWlmKGk9ZS5jaGlsZHJlbixlLmlzRXhwYW5kJiZpLmxlbmd0aClmb3IodmFyIG89aS5sZW5ndGgtMTswPD1vO28tLSl7dmFyIGE9aVtvXTthLmhpZXJOb2RlPXtkZWZhdWx0QW5jZXN0b3I6bnVsbCxhbmNlc3RvcjphLHByZWxpbTowLG1vZGlmaWVyOjAsY2hhbmdlOjAsc2hpZnQ6MCxpOm8sdGhyZWFkOm51bGx9LG4ucHVzaChhKX19KHMpLGZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG4sbz1bdF0sYT1bXTtuPW8ucG9wKCk7KWlmKGEucHVzaChuKSxuLmlzRXhwYW5kKXt2YXIgcj1uLmNoaWxkcmVuO2lmKHIubGVuZ3RoKWZvcih2YXIgcz0wO3M8ci5sZW5ndGg7cysrKW8ucHVzaChyW3NdKX1mb3IoO249YS5wb3AoKTspZShuLGkpfShsLHh4LHIpLHMuaGllck5vZGUubW9kaWZpZXI9LWwuaGllck5vZGUucHJlbGltLE54KGwsX3gpO3ZhciB1PWwsaD1sLGM9bDtOeChsLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0TGF5b3V0KCkueDtlPHUuZ2V0TGF5b3V0KCkueCYmKHU9dCksZT5oLmdldExheW91dCgpLngmJihoPXQpLHQuZGVwdGg+Yy5kZXB0aCYmKGM9dCl9KTt2YXIgZD11PT09aD8xOnIodSxoKS8yLGY9ZC11LmdldExheW91dCgpLngscD0wLGc9MCxtPTAsdj0wO2lmKCJyYWRpYWwiPT09bilwPW8vKGguZ2V0TGF5b3V0KCkueCtkK2YpLGc9YS8oYy5kZXB0aC0xfHwxKSxOeChsLGZ1bmN0aW9uKHQpe209KHQuZ2V0TGF5b3V0KCkueCtmKSpwLHY9KHQuZGVwdGgtMSkqZzt2YXIgZT1TeChtLHYpO3Quc2V0TGF5b3V0KHt4OmUueCx5OmUueSxyYXdYOm0scmF3WTp2fSwhMCl9KTtlbHNle3ZhciB5PXQuZ2V0T3JpZW50KCk7IlJMIj09PXl8fCJMUiI9PT15PyhnPWEvKGguZ2V0TGF5b3V0KCkueCtkK2YpLHA9by8oYy5kZXB0aC0xfHwxKSxOeChsLGZ1bmN0aW9uKHQpe3Y9KHQuZ2V0TGF5b3V0KCkueCtmKSpnLG09IkxSIj09PXk/KHQuZGVwdGgtMSkqcDpvLSh0LmRlcHRoLTEpKnAsdC5zZXRMYXlvdXQoe3g6bSx5OnZ9LCEwKX0pKToiVEIiIT09eSYmIkJUIiE9PXl8fChwPW8vKGguZ2V0TGF5b3V0KCkueCtkK2YpLGc9YS8oYy5kZXB0aC0xfHwxKSxOeChsLGZ1bmN0aW9uKHQpe209KHQuZ2V0TGF5b3V0KCkueCtmKSpwLHY9IlRCIj09PXk/KHQuZGVwdGgtMSkqZzphLSh0LmRlcHRoLTEpKmcsdC5zZXRMYXlvdXQoe3g6bSx5OnZ9LCEwKX0pKX19fSh0LGUpfSl9KSxpYy5leHRlbmQoe3R5cGU6InNlcmllcy50cmVlbWFwIixsYXlvdXRNb2RlOiJib3giLGRlcGVuZGVuY2llczpbImdyaWQiLCJwb2xhciJdLHByZXZlbnRVc2luZ0hvdmVyTGF5ZXI6ITAsX3ZpZXdSb290Om51bGwsZGVmYXVsdE9wdGlvbjp7cHJvZ3Jlc3NpdmU6MCxsZWZ0OiJjZW50ZXIiLHRvcDoibWlkZGxlIixyaWdodDpudWxsLGJvdHRvbTpudWxsLHdpZHRoOiI4MCUiLGhlaWdodDoiODAlIixzb3J0OiEwLGNsaXBXaW5kb3c6Im9yaWdpbiIsc3F1YXJlUmF0aW86LjUqKDErTWF0aC5zcXJ0KDUpKSxsZWFmRGVwdGg6bnVsbCxkcmlsbERvd25JY29uOiLilrYiLHpvb21Ub05vZGVSYXRpbzouMTAyNCxyb2FtOiEwLG5vZGVDbGljazoiem9vbVRvTm9kZSIsYW5pbWF0aW9uOiEwLGFuaW1hdGlvbkR1cmF0aW9uVXBkYXRlOjkwMCxhbmltYXRpb25FYXNpbmc6InF1aW50aWNJbk91dCIsYnJlYWRjcnVtYjp7c2hvdzohMCxoZWlnaHQ6MjIsbGVmdDoiY2VudGVyIix0b3A6ImJvdHRvbSIsZW1wdHlJdGVtV2lkdGg6MjUsaXRlbVN0eWxlOntjb2xvcjoicmdiYSgwLDAsMCwwLjcpIixib3JkZXJDb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjcpIixib3JkZXJXaWR0aDoxLHNoYWRvd0NvbG9yOiJyZ2JhKDE1MCwxNTAsMTUwLDEpIixzaGFkb3dCbHVyOjMsc2hhZG93T2Zmc2V0WDowLHNoYWRvd09mZnNldFk6MCx0ZXh0U3R5bGU6e2NvbG9yOiIjZmZmIn19LGVtcGhhc2lzOnt0ZXh0U3R5bGU6e319fSxsYWJlbDp7c2hvdzohMCxkaXN0YW5jZTowLHBhZGRpbmc6NSxwb3NpdGlvbjoiaW5zaWRlIixjb2xvcjoiI2ZmZiIsZWxsaXBzaXM6ITB9LHVwcGVyTGFiZWw6e3Nob3c6ITEscG9zaXRpb246WzAsIjUwJSJdLGhlaWdodDoyMCxjb2xvcjoiI2ZmZiIsZWxsaXBzaXM6ITAsdmVydGljYWxBbGlnbjoibWlkZGxlIn0saXRlbVN0eWxlOntjb2xvcjpudWxsLGNvbG9yQWxwaGE6bnVsbCxjb2xvclNhdHVyYXRpb246bnVsbCxib3JkZXJXaWR0aDowLGdhcFdpZHRoOjAsYm9yZGVyQ29sb3I6IiNmZmYiLGJvcmRlckNvbG9yU2F0dXJhdGlvbjpudWxsfSxlbXBoYXNpczp7dXBwZXJMYWJlbDp7c2hvdzohMCxwb3NpdGlvbjpbMCwiNTAlIl0sY29sb3I6IiNmZmYiLGVsbGlwc2lzOiEwLHZlcnRpY2FsQWxpZ246Im1pZGRsZSJ9fSx2aXN1YWxEaW1lbnNpb246MCx2aXN1YWxNaW46bnVsbCx2aXN1YWxNYXg6bnVsbCxjb2xvcjpbXSxjb2xvckFscGhhOm51bGwsY29sb3JTYXR1cmF0aW9uOm51bGwsY29sb3JNYXBwaW5nQnk6ImluZGV4Iix2aXNpYmxlTWluOjEwLGNoaWxkcmVuVmlzaWJsZU1pbjpudWxsLGxldmVsczpbXX0sZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCxlKXt2YXIgaT17bmFtZTp0Lm5hbWUsY2hpbGRyZW46dC5kYXRhfTshZnVuY3Rpb24gaSh0KXt2YXIgbj0wO0UodC5jaGlsZHJlbixmdW5jdGlvbih0KXtpKHQpO3ZhciBlPXQudmFsdWU7ayhlKSYmKGU9ZVswXSksbis9ZX0pO3ZhciBlPXQudmFsdWU7ayhlKSYmKGU9ZVswXSk7bnVsbCE9ZSYmIWlzTmFOKGUpfHwoZT1uKTtlPDAmJihlPTApO2sodC52YWx1ZSk/dC52YWx1ZVswXT1lOnQudmFsdWU9ZX0oaSk7dmFyIG49dC5sZXZlbHN8fFtdO249dC5sZXZlbHM9ZnVuY3Rpb24odCxlKXt2YXIgbixpPWUuZ2V0KCJjb2xvciIpO2lmKCFpKXJldHVybjtpZihFKHQ9dHx8W10sZnVuY3Rpb24odCl7dmFyIGU9bmV3IElsKHQpLGk9ZS5nZXQoImNvbG9yIik7KGUuZ2V0KCJpdGVtU3R5bGUuY29sb3IiKXx8aSYmIm5vbmUiIT09aSkmJihuPSEwKX0pLCFuKXsodFswXXx8KHRbMF09e30pKS5jb2xvcj1pLnNsaWNlKCl9cmV0dXJuIHR9KG4sZSk7dmFyIG89e307cmV0dXJuIG8ubGV2ZWxzPW4sdnguY3JlYXRlVHJlZShpLHRoaXMsbykuZGF0YX0sb3B0aW9uVXBkYXRlZDpmdW5jdGlvbigpe3RoaXMucmVzZXRWaWV3Um9vdCgpfSxmb3JtYXRUb29sdGlwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RGF0YSgpLGk9dGhpcy5nZXRSYXdWYWx1ZSh0KSxuPWsoaSk/S2woaVswXSk6S2woaSk7cmV0dXJuIGV1KGUuZ2V0TmFtZSh0KSsiOiAiK24pfSxnZXREYXRhUGFyYW1zOmZ1bmN0aW9uKHQpe3ZhciBlPWljLnByb3RvdHlwZS5nZXREYXRhUGFyYW1zLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxpPXRoaXMuZ2V0RGF0YSgpLnRyZWUuZ2V0Tm9kZUJ5RGF0YUluZGV4KHQpO3JldHVybiBlLnRyZWVQYXRoSW5mbz1SeChpLHRoaXMpLGV9LHNldExheW91dEluZm86ZnVuY3Rpb24odCl7dGhpcy5sYXlvdXRJbmZvPXRoaXMubGF5b3V0SW5mb3x8e30sTCh0aGlzLmxheW91dEluZm8sdCl9LG1hcElkVG9JbmRleDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9pZEluZGV4TWFwO2V8fChlPXRoaXMuX2lkSW5kZXhNYXA9USgpLHRoaXMuX2lkSW5kZXhNYXBDb3VudD0wKTt2YXIgaT1lLmdldCh0KTtyZXR1cm4gbnVsbD09aSYmZS5zZXQodCxpPXRoaXMuX2lkSW5kZXhNYXBDb3VudCsrKSxpfSxnZXRWaWV3Um9vdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3Um9vdH0scmVzZXRWaWV3Um9vdDpmdW5jdGlvbih0KXt0P3RoaXMuX3ZpZXdSb290PXQ6dD10aGlzLl92aWV3Um9vdDt2YXIgZT10aGlzLmdldFJhd0RhdGEoKS50cmVlLnJvb3Q7dCYmKHQ9PT1lfHxlLmNvbnRhaW5zKHQpKXx8KHRoaXMuX3ZpZXdSb290PWUpfX0pO3ZhciBCeD01O2Z1bmN0aW9uIFZ4KHQpe3RoaXMuZ3JvdXA9bmV3IElpLHQuYWRkKHRoaXMuZ3JvdXApfWZ1bmN0aW9uIEd4KHQsZSxpLG4sbyxhKXt2YXIgcj1bW28/dDp0LUJ4LGVdLFt0K2ksZV0sW3QraSxlK25dLFtvP3Q6dC1CeCxlK25dXTtyZXR1cm4gYXx8ci5zcGxpY2UoMiwwLFt0K2krQngsZStuLzJdKSxvfHxyLnB1c2goW3QsZStuLzJdKSxyfVZ4LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VngscmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQuZ2V0TW9kZWwoImJyZWFkY3J1bWIiKSxhPXRoaXMuZ3JvdXA7aWYoYS5yZW1vdmVBbGwoKSxvLmdldCgic2hvdyIpJiZpKXt2YXIgcj1vLmdldE1vZGVsKCJpdGVtU3R5bGUiKSxzPXIuZ2V0TW9kZWwoInRleHRTdHlsZSIpLGw9e3Bvczp7bGVmdDpvLmdldCgibGVmdCIpLHJpZ2h0Om8uZ2V0KCJyaWdodCIpLHRvcDpvLmdldCgidG9wIiksYm90dG9tOm8uZ2V0KCJib3R0b20iKX0sYm94Ont3aWR0aDplLmdldFdpZHRoKCksaGVpZ2h0OmUuZ2V0SGVpZ2h0KCl9LGVtcHR5SXRlbVdpZHRoOm8uZ2V0KCJlbXB0eUl0ZW1XaWR0aCIpLHRvdGFsV2lkdGg6MCxyZW5kZXJMaXN0OltdfTt0aGlzLl9wcmVwYXJlKGksbCxzKSx0aGlzLl9yZW5kZXJDb250ZW50KHQsbCxyLHMsbikseXUoYSxsLnBvcyxsLmJveCl9fSxfcHJlcGFyZTpmdW5jdGlvbih0LGUsaSl7Zm9yKHZhciBuPXQ7bjtuPW4ucGFyZW50Tm9kZSl7dmFyIG89bi5nZXRNb2RlbCgpLmdldCgibmFtZSIpLGE9aS5nZXRUZXh0UmVjdChvKSxyPU1hdGgubWF4KGEud2lkdGgrMTYsZS5lbXB0eUl0ZW1XaWR0aCk7ZS50b3RhbFdpZHRoKz1yKzgsZS5yZW5kZXJMaXN0LnB1c2goe25vZGU6bix0ZXh0Om8sd2lkdGg6cn0pfX0sX3JlbmRlckNvbnRlbnQ6ZnVuY3Rpb24odCxlLGksbixvKXtmb3IodmFyIGEscixzPTAsbD1lLmVtcHR5SXRlbVdpZHRoLHU9dC5nZXQoImJyZWFkY3J1bWIuaGVpZ2h0IiksaD1mdW5jdGlvbih0LGUsaSl7dmFyIG49ZS53aWR0aCxvPWUuaGVpZ2h0LGE9UGwodC54LG4pLHI9UGwodC55LG8pLHM9UGwodC54MixuKSxsPVBsKHQueTIsbyk7cmV0dXJuKGlzTmFOKGEpfHxpc05hTihwYXJzZUZsb2F0KHQueCkpKSYmKGE9MCksKGlzTmFOKHMpfHxpc05hTihwYXJzZUZsb2F0KHQueDIpKSkmJihzPW4pLChpc05hTihyKXx8aXNOYU4ocGFyc2VGbG9hdCh0LnkpKSkmJihyPTApLChpc05hTihsKXx8aXNOYU4ocGFyc2VGbG9hdCh0LnkyKSkpJiYobD1vKSxpPUpsKGl8fDApLHt3aWR0aDpNYXRoLm1heChzLWEtaVsxXS1pWzNdLDApLGhlaWdodDpNYXRoLm1heChsLXItaVswXS1pWzJdLDApfX0oZS5wb3MsZS5ib3gpLGM9ZS50b3RhbFdpZHRoLGQ9ZS5yZW5kZXJMaXN0LGY9ZC5sZW5ndGgtMTswPD1mO2YtLSl7dmFyIHA9ZFtmXSxnPXAubm9kZSxtPXAud2lkdGgsdj1wLnRleHQ7Yz5oLndpZHRoJiYoYy09bS1sLG09bCx2PW51bGwpO3ZhciB5PW5ldyBxcih7c2hhcGU6e3BvaW50czpHeChzLDAsbSx1LGY9PT1kLmxlbmd0aC0xLDA9PT1mKX0sc3R5bGU6QyhpLmdldEl0ZW1TdHlsZSgpLHtsaW5lSm9pbjoiYmV2ZWwiLHRleHQ6dix0ZXh0RmlsbDpuLmdldFRleHRDb2xvcigpLHRleHRGb250Om4uZ2V0Rm9udCgpfSksejoxMCxvbmNsaWNrOlQobyxnKX0pO3RoaXMuZ3JvdXAuYWRkKHkpLGE9dCxyPWcseS5ldmVudERhdGE9e2NvbXBvbmVudFR5cGU6InNlcmllcyIsY29tcG9uZW50U3ViVHlwZToidHJlZW1hcCIsY29tcG9uZW50SW5kZXg6YS5jb21wb25lbnRJbmRleCxzZXJpZXNJbmRleDphLmNvbXBvbmVudEluZGV4LHNlcmllc05hbWU6YS5uYW1lLHNlcmllc1R5cGU6InRyZWVtYXAiLHNlbGZUeXBlOiJicmVhZGNydW1iIixub2RlRGF0YTp7ZGF0YUluZGV4OnImJnIuZGF0YUluZGV4LG5hbWU6ciYmci5uYW1lfSx0cmVlUGF0aEluZm86ciYmUngocixhKX0scys9bSs4fX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKX19O2Z1bmN0aW9uIEZ4KHQpe3ZhciBlPSR4KHQpO3JldHVybiBlLnN0cm9rZT1lLmZpbGw9ZS5saW5lV2lkdGg9bnVsbCxlfXZhciBXeD1BLEh4PUlpLFp4PWlzLFV4PUUsWHg9WyJsYWJlbCJdLFl4PVsiZW1waGFzaXMiLCJsYWJlbCJdLGp4PVsidXBwZXJMYWJlbCJdLHF4PVsiZW1waGFzaXMiLCJ1cHBlckxhYmVsIl0sS3g9MTAsJHg9cmEoW1siZmlsbCIsImNvbG9yIl0sWyJzdHJva2UiLCJzdHJva2VDb2xvciJdLFsibGluZVdpZHRoIiwic3Ryb2tlV2lkdGgiXSxbInNoYWRvd0JsdXIiXSxbInNoYWRvd09mZnNldFgiXSxbInNoYWRvd09mZnNldFkiXSxbInNoYWRvd0NvbG9yIl1dKTtmdW5jdGlvbiBKeChkLHIscyxsLHUsaSxmLHQsZSxuKXtpZihmKXt2YXIgcD1mLmdldExheW91dCgpO2lmKHAmJnAuaXNJblZpZXcpe3ZhciBoPXAud2lkdGgsYz1wLmhlaWdodCxnPXAuYm9yZGVyV2lkdGgsbT1wLmludmlzaWJsZSx2PWYuZ2V0UmF3SW5kZXgoKSx5PXQmJnQuZ2V0UmF3SW5kZXgoKSxvPWYudmlld0NoaWxkcmVuLHg9cC51cHBlckhlaWdodCxhPW8mJm8ubGVuZ3RoLF89Zi5nZXRNb2RlbCgiaXRlbVN0eWxlIiksdz1mLmdldE1vZGVsKCJlbXBoYXNpcy5pdGVtU3R5bGUiKSxiPUEoIm5vZGVHcm91cCIsSHgpO2lmKGIpe2lmKGUuYWRkKGIpLGIuYXR0cigicG9zaXRpb24iLFtwLnh8fDAscC55fHwwXSksYi5fX3RtTm9kZVdpZHRoPWgsYi5fX3RtTm9kZUhlaWdodD1jLHAuaXNBYm92ZVZpZXdSb290KXJldHVybiBiO3ZhciBTPUEoImJhY2tncm91bmQiLFp4LG4sMSk7aWYoUyYmZnVuY3Rpb24odCxuLG8pe24uZGF0YUluZGV4PWYuZGF0YUluZGV4LG4uc2VyaWVzSW5kZXg9ZC5zZXJpZXNJbmRleCxuLnNldFNoYXBlKHt4OjAseTowLHdpZHRoOmgsaGVpZ2h0OmN9KTt2YXIgYT1mLmdldFZpc3VhbCgiYm9yZGVyQ29sb3IiLCEwKSxyPXcuZ2V0KCJib3JkZXJDb2xvciIpO0kobixmdW5jdGlvbigpe3ZhciB0PUZ4KF8pO3QuZmlsbD1hO3ZhciBlPSR4KHcpO2lmKGUuZmlsbD1yLG8pe3ZhciBpPWgtMipnO1QodCxlLGEsaSx4LHt4OmcseTowLHdpZHRoOmksaGVpZ2h0Onh9KX1lbHNlIHQudGV4dD1lLnRleHQ9bnVsbDtuLnNldFN0eWxlKHQpLFlzKG4sZSl9KSx0LmFkZChuKX0oYixTLGEmJnAudXBwZXJIZWlnaHQpLCFhKXt2YXIgTT1BKCJjb250ZW50IixaeCxuLDIpO00mJmZ1bmN0aW9uKHQsaSl7aS5kYXRhSW5kZXg9Zi5kYXRhSW5kZXgsaS5zZXJpZXNJbmRleD1kLnNlcmllc0luZGV4O3ZhciBuPU1hdGgubWF4KGgtMipnLDApLG89TWF0aC5tYXgoYy0yKmcsMCk7aS5jdWxsaW5nPSEwLGkuc2V0U2hhcGUoe3g6Zyx5Omcsd2lkdGg6bixoZWlnaHQ6b30pO3ZhciBhPWYuZ2V0VmlzdWFsKCJjb2xvciIsITApO0koaSxmdW5jdGlvbigpe3ZhciB0PUZ4KF8pO3QuZmlsbD1hO3ZhciBlPSR4KHcpO1QodCxlLGEsbixvKSxpLnNldFN0eWxlKHQpLFlzKGksZSl9KSx0LmFkZChpKX0oYixNKX1yZXR1cm4gYn19fWZ1bmN0aW9uIEkodCxlKXttP3QuaW52aXNpYmxlfHxpLnB1c2godCk6KGUoKSx0Ll9fdG1XaWxsVmlzaWJsZXx8KHQuaW52aXNpYmxlPSExKSl9ZnVuY3Rpb24gVCh0LGUsaSxuLG8sYSl7dmFyIHI9Zi5nZXRNb2RlbCgpLHM9VyhkLmdldEZvcm1hdHRlZExhYmVsKGYuZGF0YUluZGV4LCJub3JtYWwiLG51bGwsbnVsbCxhPyJ1cHBlckxhYmVsIjoibGFiZWwiKSxyLmdldCgibmFtZSIpKTtpZighYSYmcC5pc0xlYWZSb290KXt2YXIgbD1kLmdldCgiZHJpbGxEb3duSWNvbiIsITApO3M9bD9sKyIgIitzOnN9dmFyIHU9ci5nZXRNb2RlbChhP2p4Olh4KSxoPXIuZ2V0TW9kZWwoYT9xeDpZeCksYz11LmdldFNoYWxsb3coInNob3ciKTskcyh0LGUsdSxoLHtkZWZhdWx0VGV4dDpjP3M6bnVsbCxhdXRvQ29sb3I6aSxpc1JlY3RUZXh0OiEwfSksYSYmKHQudGV4dFJlY3Q9RChhKSksdC50cnVuY2F0ZT1jJiZ1LmdldCgiZWxsaXBzaXMiKT97b3V0ZXJXaWR0aDpuLG91dGVySGVpZ2h0Om8sbWluQ2hhcjoyfTpudWxsfWZ1bmN0aW9uIEEodCxlLGksbil7dmFyIG89bnVsbCE9eSYmc1t0XVt5XSxhPXVbdF07cmV0dXJuIG8/KHNbdF1beV09bnVsbCxmdW5jdGlvbih0LGUsaSl7KHRbdl09e30pLm9sZD0ibm9kZUdyb3VwIj09PWk/ZS5wb3NpdGlvbi5zbGljZSgpOkwoe30sZS5zaGFwZSl9KGEsbyx0KSk6bXx8KChvPW5ldyBlKHt6OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dCpLeCtlO3JldHVybihpLTEpL2l9KGksbil9KSkuX190bURlcHRoPWksZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRbdl09e30sbz1mLnBhcmVudE5vZGU7aWYobyYmKCFsfHwiZHJpbGxEb3duIj09PWwuZGlyZWN0aW9uKSl7dmFyIGE9MCxyPTAscz11LmJhY2tncm91bmRbby5nZXRSYXdJbmRleCgpXTshbCYmcyYmcy5vbGQmJihhPXMub2xkLndpZHRoLHI9cy5vbGQuaGVpZ2h0KSxuLm9sZD0ibm9kZUdyb3VwIj09PWk/WzAscl06e3g6YSx5OnIsd2lkdGg6MCxoZWlnaHQ6MH19bi5mYWRlaW49Im5vZGVHcm91cCIhPT1pfShhLDAsby5fX3RtU3RvcmFnZU5hbWU9dCkpLHJbdF1bdl09b319TWYoe3R5cGU6InRyZWVtYXAiLGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLl9jb250YWluZXJHcm91cCx0aGlzLl9zdG9yYWdlPXtub2RlR3JvdXA6W10sYmFja2dyb3VuZDpbXSxjb250ZW50OltdfSx0aGlzLl9vbGRUcmVlLHRoaXMuX2JyZWFkY3J1bWIsdGhpcy5fY29udHJvbGxlcix0aGlzLl9zdGF0ZT0icmVhZHkifSxyZW5kZXI6ZnVuY3Rpb24odCxlLGksbil7aWYoIShfKGUuZmluZENvbXBvbmVudHMoe21haW5UeXBlOiJzZXJpZXMiLHN1YlR5cGU6InRyZWVtYXAiLHF1ZXJ5Om59KSx0KTwwKSl7dGhpcy5zZXJpZXNNb2RlbD10LHRoaXMuYXBpPWksdGhpcy5lY01vZGVsPWU7dmFyIG89T3gobixbInRyZWVtYXBab29tVG9Ob2RlIiwidHJlZW1hcFJvb3RUb05vZGUiXSx0KSxhPW4mJm4udHlwZSxyPXQubGF5b3V0SW5mbyxzPSF0aGlzLl9vbGRUcmVlLGw9dGhpcy5fc3RvcmFnZSx1PSJ0cmVlbWFwUm9vdFRvTm9kZSI9PT1hJiZvJiZsP3tyb290Tm9kZUdyb3VwOmwubm9kZUdyb3VwW28ubm9kZS5nZXRSYXdJbmRleCgpXSxkaXJlY3Rpb246bi5kaXJlY3Rpb259Om51bGwsaD10aGlzLl9naXZlQ29udGFpbmVyR3JvdXAociksYz10aGlzLl9kb1JlbmRlcihoLHQsdSk7c3x8YSYmInRyZWVtYXBab29tVG9Ob2RlIiE9PWEmJiJ0cmVlbWFwUm9vdFRvTm9kZSIhPT1hP2MucmVuZGVyRmluYWxseSgpOnRoaXMuX2RvQW5pbWF0aW9uKGgsYyx0LHUpLHRoaXMuX3Jlc2V0Q29udHJvbGxlcihpKSx0aGlzLl9yZW5kZXJCcmVhZGNydW1iKHQsaSxvKX19LF9naXZlQ29udGFpbmVyR3JvdXA6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY29udGFpbmVyR3JvdXA7cmV0dXJuIGV8fChlPXRoaXMuX2NvbnRhaW5lckdyb3VwPW5ldyBIeCx0aGlzLl9pbml0RXZlbnRzKGUpLHRoaXMuZ3JvdXAuYWRkKGUpKSxlLmF0dHIoInBvc2l0aW9uIixbdC54LHQueV0pLGV9LF9kb1JlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49ZS5nZXREYXRhKCkudHJlZSxvPXRoaXMuX29sZFRyZWUsYT17bm9kZUdyb3VwOltdLGJhY2tncm91bmQ6W10sY29udGVudDpbXX0scj17bm9kZUdyb3VwOltdLGJhY2tncm91bmQ6W10sY29udGVudDpbXX0scz10aGlzLl9zdG9yYWdlLGw9W10sYz1UKEp4LGUscixzLGksYSxsKTshZnVuY3Rpb24gYShyLHMsbCx1LGgpe3U/VXgocz1yLGZ1bmN0aW9uKHQsZSl7dC5pc1JlbW92ZWQoKXx8aShlLGUpfSk6bmV3IFRmKHMscix0LHQpLmFkZChpKS51cGRhdGUoaSkucmVtb3ZlKFQoaSxudWxsKSkuZXhlY3V0ZSgpO2Z1bmN0aW9uIHQodCl7cmV0dXJuIHQuZ2V0SWQoKX1mdW5jdGlvbiBpKHQsZSl7dmFyIGk9bnVsbCE9dD9yW3RdOm51bGwsbj1udWxsIT1lP3NbZV06bnVsbCxvPWMoaSxuLGwsaCk7byYmYShpJiZpLnZpZXdDaGlsZHJlbnx8W10sbiYmbi52aWV3Q2hpbGRyZW58fFtdLG8sdSxoKzEpfX0obi5yb290P1tuLnJvb3RdOltdLG8mJm8ucm9vdD9bby5yb290XTpbXSx0LG49PT1vfHwhbywwKTt2YXIgdSxoLGQ9KGg9e25vZGVHcm91cDpbXSxiYWNrZ3JvdW5kOltdLGNvbnRlbnQ6W119LCh1PXMpJiZVeCh1LGZ1bmN0aW9uKHQsZSl7dmFyIGk9aFtlXTtVeCh0LGZ1bmN0aW9uKHQpe3QmJihpLnB1c2godCksdC5fX3RtV2lsbERlbGV0ZT0xKX0pfSksaCk7cmV0dXJuIHRoaXMuX29sZFRyZWU9bix0aGlzLl9zdG9yYWdlPXIse2xhc3RzRm9yQW5pbWF0aW9uOmEsd2lsbERlbGV0ZUVsczpkLHJlbmRlckZpbmFsbHk6ZnVuY3Rpb24oKXtVeChkLGZ1bmN0aW9uKHQpe1V4KHQsZnVuY3Rpb24odCl7dC5wYXJlbnQmJnQucGFyZW50LnJlbW92ZSh0KX0pfSksVXgobCxmdW5jdGlvbih0KXt0LmludmlzaWJsZT0hMCx0LmRpcnR5KCl9KX19fSxfZG9BbmltYXRpb246ZnVuY3Rpb24odCxhLGUscyl7aWYoZS5nZXQoImFuaW1hdGlvbiIpKXt2YXIgbD1lLmdldCgiYW5pbWF0aW9uRHVyYXRpb25VcGRhdGUiKSx1PWUuZ2V0KCJhbmltYXRpb25FYXNpbmciKSxoPWZ1bmN0aW9uKCl7dmFyIGEscj1bXSxzPXt9O3JldHVybnthZGQ6ZnVuY3Rpb24odCxlLGksbixvKXtyZXR1cm4geihuKSYmKG89bixuPTApLCFzW3QuaWRdJiYoc1t0LmlkXT0xLHIucHVzaCh7ZWw6dCx0YXJnZXQ6ZSx0aW1lOmksZGVsYXk6bixlYXNpbmc6b30pLCEwKX0sZG9uZTpmdW5jdGlvbih0KXtyZXR1cm4gYT10LHRoaXN9LHN0YXJ0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXIubGVuZ3RoLGU9MCxpPXIubGVuZ3RoO2U8aTtlKyspe3ZhciBuPXJbZV07bi5lbC5hbmltYXRlVG8obi50YXJnZXQsbi50aW1lLG4uZGVsYXksbi5lYXNpbmcsbyl9cmV0dXJuIHRoaXM7ZnVuY3Rpb24gbygpey0tdHx8KHIubGVuZ3RoPTAscz17fSxhJiZhKCkpfX19fSgpO1V4KGEud2lsbERlbGV0ZUVscyxmdW5jdGlvbih0LHIpe1V4KHQsZnVuY3Rpb24odCxlKXtpZighdC5pbnZpc2libGUpe3ZhciBpLG49dC5wYXJlbnQ7aWYocyYmImRyaWxsRG93biI9PT1zLmRpcmVjdGlvbilpPW49PT1zLnJvb3ROb2RlR3JvdXA/e3NoYXBlOnt4OjAseTowLHdpZHRoOm4uX190bU5vZGVXaWR0aCxoZWlnaHQ6bi5fX3RtTm9kZUhlaWdodH0sc3R5bGU6e29wYWNpdHk6MH19OntzdHlsZTp7b3BhY2l0eTowfX07ZWxzZXt2YXIgbz0wLGE9MDtuLl9fdG1XaWxsRGVsZXRlfHwobz1uLl9fdG1Ob2RlV2lkdGgvMixhPW4uX190bU5vZGVIZWlnaHQvMiksaT0ibm9kZUdyb3VwIj09PXI/e3Bvc2l0aW9uOltvLGFdLHN0eWxlOntvcGFjaXR5OjB9fTp7c2hhcGU6e3g6byx5OmEsd2lkdGg6MCxoZWlnaHQ6MH0sc3R5bGU6e29wYWNpdHk6MH19fWkmJmguYWRkKHQsaSxsLHUpfX0pfSksVXgodGhpcy5fc3RvcmFnZSxmdW5jdGlvbih0LG8pe1V4KHQsZnVuY3Rpb24odCxlKXt2YXIgaT1hLmxhc3RzRm9yQW5pbWF0aW9uW29dW2VdLG49e307aSYmKCJub2RlR3JvdXAiPT09bz9pLm9sZCYmKG4ucG9zaXRpb249dC5wb3NpdGlvbi5zbGljZSgpLHQuYXR0cigicG9zaXRpb24iLGkub2xkKSk6KGkub2xkJiYobi5zaGFwZT1MKHt9LHQuc2hhcGUpLHQuc2V0U2hhcGUoaS5vbGQpKSxpLmZhZGVpbj8odC5zZXRTdHlsZSgib3BhY2l0eSIsMCksbi5zdHlsZT17b3BhY2l0eToxfSk6MSE9PXQuc3R5bGUub3BhY2l0eSYmKG4uc3R5bGU9e29wYWNpdHk6MX0pKSxoLmFkZCh0LG4sbCx1KSl9KX0sdGhpcyksdGhpcy5fc3RhdGU9ImFuaW1hdGluZyIsaC5kb25lKFd4KGZ1bmN0aW9uKCl7dGhpcy5fc3RhdGU9InJlYWR5IixhLnJlbmRlckZpbmFsbHkoKX0sdGhpcykpLnN0YXJ0KCl9fSxfcmVzZXRDb250cm9sbGVyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NvbnRyb2xsZXI7ZXx8KChlPXRoaXMuX2NvbnRyb2xsZXI9bmV3IEx5KHQuZ2V0WnIoKSkpLmVuYWJsZSh0aGlzLnNlcmllc01vZGVsLmdldCgicm9hbSIpKSxlLm9uKCJwYW4iLFd4KHRoaXMuX29uUGFuLHRoaXMpKSxlLm9uKCJ6b29tIixXeCh0aGlzLl9vblpvb20sdGhpcykpKTt2YXIgbj1uZXcgTWkoMCwwLHQuZ2V0V2lkdGgoKSx0LmdldEhlaWdodCgpKTtlLnNldFBvaW50ZXJDaGVja2VyKGZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbi5jb250YWluKGUsaSl9KX0sX2NsZWFyQ29udHJvbGxlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2NvbnRyb2xsZXI7dCYmKHQuZGlzcG9zZSgpLHQ9bnVsbCl9LF9vblBhbjpmdW5jdGlvbih0KXtpZigiYW5pbWF0aW5nIiE9PXRoaXMuX3N0YXRlJiYoMzxNYXRoLmFicyh0LmR4KXx8MzxNYXRoLmFicyh0LmR5KSkpe3ZhciBlPXRoaXMuc2VyaWVzTW9kZWwuZ2V0RGF0YSgpLnRyZWUucm9vdDtpZighZSlyZXR1cm47dmFyIGk9ZS5nZXRMYXlvdXQoKTtpZighaSlyZXR1cm47dGhpcy5hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InRyZWVtYXBNb3ZlIixmcm9tOnRoaXMudWlkLHNlcmllc0lkOnRoaXMuc2VyaWVzTW9kZWwuaWQscm9vdFJlY3Q6e3g6aS54K3QuZHgseTppLnkrdC5keSx3aWR0aDppLndpZHRoLGhlaWdodDppLmhlaWdodH19KX19LF9vblpvb206ZnVuY3Rpb24odCl7dmFyIGU9dC5vcmlnaW5YLGk9dC5vcmlnaW5ZO2lmKCJhbmltYXRpbmciIT09dGhpcy5fc3RhdGUpe3ZhciBuPXRoaXMuc2VyaWVzTW9kZWwuZ2V0RGF0YSgpLnRyZWUucm9vdDtpZighbilyZXR1cm47dmFyIG89bi5nZXRMYXlvdXQoKTtpZighbylyZXR1cm47dmFyIGE9bmV3IE1pKG8ueCxvLnksby53aWR0aCxvLmhlaWdodCkscj10aGlzLnNlcmllc01vZGVsLmxheW91dEluZm87ZS09ci54LGktPXIueTt2YXIgcz1lZSgpO2FlKHMscyxbLWUsLWldKSxzZShzLHMsW3Quc2NhbGUsdC5zY2FsZV0pLGFlKHMscyxbZSxpXSksYS5hcHBseVRyYW5zZm9ybShzKSx0aGlzLmFwaS5kaXNwYXRjaEFjdGlvbih7dHlwZToidHJlZW1hcFJlbmRlciIsZnJvbTp0aGlzLnVpZCxzZXJpZXNJZDp0aGlzLnNlcmllc01vZGVsLmlkLHJvb3RSZWN0Ont4OmEueCx5OmEueSx3aWR0aDphLndpZHRoLGhlaWdodDphLmhlaWdodH19KX19LF9pbml0RXZlbnRzOmZ1bmN0aW9uKHQpe3Qub24oImNsaWNrIixmdW5jdGlvbih0KXtpZigicmVhZHkiPT09dGhpcy5fc3RhdGUpe3ZhciBlPXRoaXMuc2VyaWVzTW9kZWwuZ2V0KCJub2RlQ2xpY2siLCEwKTtpZihlKXt2YXIgaT10aGlzLmZpbmRUYXJnZXQodC5vZmZzZXRYLHQub2Zmc2V0WSk7aWYoaSl7dmFyIG49aS5ub2RlO2lmKG4uZ2V0TGF5b3V0KCkuaXNMZWFmUm9vdCl0aGlzLl9yb290VG9Ob2RlKGkpO2Vsc2UgaWYoInpvb21Ub05vZGUiPT09ZSl0aGlzLl96b29tVG9Ob2RlKGkpO2Vsc2UgaWYoImxpbmsiPT09ZSl7dmFyIG89bi5ob3N0VHJlZS5kYXRhLmdldEl0ZW1Nb2RlbChuLmRhdGFJbmRleCksYT1vLmdldCgibGluayIsITApLHI9by5nZXQoInRhcmdldCIsITApfHwiYmxhbmsiO2EmJndpbmRvdy5vcGVuKGEscil9fX19fSx0aGlzKX0sX3JlbmRlckJyZWFkY3J1bWI6ZnVuY3Rpb24oZSx0LGkpe2k9aXx8KChpPW51bGwhPWUuZ2V0KCJsZWFmRGVwdGgiLCEwKT97bm9kZTplLmdldFZpZXdSb290KCl9OnRoaXMuZmluZFRhcmdldCh0LmdldFdpZHRoKCkvMix0LmdldEhlaWdodCgpLzIpKXx8e25vZGU6ZS5nZXREYXRhKCkudHJlZS5yb290fSksKHRoaXMuX2JyZWFkY3J1bWJ8fCh0aGlzLl9icmVhZGNydW1iPW5ldyBWeCh0aGlzLmdyb3VwKSkpLnJlbmRlcihlLHQsaS5ub2RlLFd4KGZ1bmN0aW9uKHQpeyJhbmltYXRpbmciIT09dGhpcy5fc3RhdGUmJih6eChlLmdldFZpZXdSb290KCksdCk/dGhpcy5fcm9vdFRvTm9kZSh7bm9kZTp0fSk6dGhpcy5fem9vbVRvTm9kZSh7bm9kZTp0fSkpfSx0aGlzKSl9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMuX2NsZWFyQ29udHJvbGxlcigpLHRoaXMuX2NvbnRhaW5lckdyb3VwJiZ0aGlzLl9jb250YWluZXJHcm91cC5yZW1vdmVBbGwoKSx0aGlzLl9zdG9yYWdlPXtub2RlR3JvdXA6W10sYmFja2dyb3VuZDpbXSxjb250ZW50OltdfSx0aGlzLl9zdGF0ZT0icmVhZHkiLHRoaXMuX2JyZWFkY3J1bWImJnRoaXMuX2JyZWFkY3J1bWIucmVtb3ZlKCl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckNvbnRyb2xsZXIoKX0sX3pvb21Ub05vZGU6ZnVuY3Rpb24odCl7dGhpcy5hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InRyZWVtYXBab29tVG9Ob2RlIixmcm9tOnRoaXMudWlkLHNlcmllc0lkOnRoaXMuc2VyaWVzTW9kZWwuaWQsdGFyZ2V0Tm9kZTp0Lm5vZGV9KX0sX3Jvb3RUb05vZGU6ZnVuY3Rpb24odCl7dGhpcy5hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InRyZWVtYXBSb290VG9Ob2RlIixmcm9tOnRoaXMudWlkLHNlcmllc0lkOnRoaXMuc2VyaWVzTW9kZWwuaWQsdGFyZ2V0Tm9kZTp0Lm5vZGV9KX0sZmluZFRhcmdldDpmdW5jdGlvbihvLGEpe3ZhciByO3JldHVybiB0aGlzLnNlcmllc01vZGVsLmdldFZpZXdSb290KCkuZWFjaE5vZGUoe2F0dHI6InZpZXdDaGlsZHJlbiIsb3JkZXI6InByZW9yZGVyIn0sZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fc3RvcmFnZS5iYWNrZ3JvdW5kW3QuZ2V0UmF3SW5kZXgoKV07aWYoZSl7dmFyIGk9ZS50cmFuc2Zvcm1Db29yZFRvTG9jYWwobyxhKSxuPWUuc2hhcGU7aWYoIShuLng8PWlbMF0mJmlbMF08PW4ueCtuLndpZHRoJiZuLnk8PWlbMV0mJmlbMV08PW4ueStuLmhlaWdodCkpcmV0dXJuITE7cj17bm9kZTp0LG9mZnNldFg6aVswXSxvZmZzZXRZOmlbMV19fX0sdGhpcykscn19KTtmb3IodmFyIFF4PWZ1bmN0aW9uKCl7fSx0Xz1bInRyZWVtYXBab29tVG9Ob2RlIiwidHJlZW1hcFJlbmRlciIsInRyZWVtYXBNb3ZlIl0sZV89MDtlXzx0Xy5sZW5ndGg7ZV8rKylnZih7dHlwZTp0X1tlX10sdXBkYXRlOiJ1cGRhdGVWaWV3In0sUXgpO2dmKHt0eXBlOiJ0cmVlbWFwUm9vdFRvTm9kZSIsdXBkYXRlOiJ1cGRhdGVWaWV3In0sZnVuY3Rpb24obyx0KXt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJzZXJpZXMiLHN1YlR5cGU6InRyZWVtYXAiLHF1ZXJ5Om99LGZ1bmN0aW9uKHQsZSl7dmFyIGk9T3gobyxbInRyZWVtYXBab29tVG9Ob2RlIiwidHJlZW1hcFJvb3RUb05vZGUiXSx0KTtpZihpKXt2YXIgbj10LmdldFZpZXdSb290KCk7biYmKG8uZGlyZWN0aW9uPXp4KG4saS5ub2RlKT8icm9sbFVwIjoiZHJpbGxEb3duIiksdC5yZXNldFZpZXdSb290KGkubm9kZSl9fSl9KTt2YXIgaV89RSxuXz1SLG9fPS0xLGFfPWZ1bmN0aW9uKHQpe3ZhciBlPXQubWFwcGluZ01ldGhvZCxpPXQudHlwZSxuPXRoaXMub3B0aW9uPUQodCk7dGhpcy50eXBlPWksdGhpcy5tYXBwaW5nTWV0aG9kPWUsdGhpcy5fbm9ybWFsaXplRGF0YT1tX1tlXTt2YXIgbz1yX1tpXTt0aGlzLmFwcGx5VmlzdWFsPW8uYXBwbHlWaXN1YWwsdGhpcy5nZXRDb2xvck1hcHBlcj1vLmdldENvbG9yTWFwcGVyLHRoaXMuX2RvTWFwPW8uX2RvTWFwW2VdLCJwaWVjZXdpc2UiPT09ZT8oc18obiksZnVuY3Rpb24oaSl7dmFyIHQ9aS5waWVjZUxpc3Q7aS5oYXNTcGVjaWFsVmlzdWFsPSExLEUodCxmdW5jdGlvbih0LGUpe3Qub3JpZ2luSW5kZXg9ZSxudWxsIT10LnZpc3VhbCYmKGkuaGFzU3BlY2lhbFZpc3VhbD0hMCl9KX0obikpOiJjYXRlZ29yeSI9PT1lP24uY2F0ZWdvcmllcz9mdW5jdGlvbih0KXt2YXIgZT10LmNhdGVnb3JpZXMsaT10LnZpc3VhbCxuPXQuY2F0ZWdvcnlNYXA9e307aWYoaV8oZSxmdW5jdGlvbih0LGUpe25bdF09ZX0pLCFrKGkpKXt2YXIgbz1bXTtSKGkpP2lfKGksZnVuY3Rpb24odCxlKXt2YXIgaT1uW2VdO29bbnVsbCE9aT9pOm9fXT10fSk6b1tvX109aSxpPWdfKHQsbyl9Zm9yKHZhciBhPWUubGVuZ3RoLTE7MDw9YTthLS0pbnVsbD09aVthXSYmKGRlbGV0ZSBuW2VbYV1dLGUucG9wKCkpfShuKTpzXyhuLCEwKTooWSgibGluZWFyIiE9PWV8fG4uZGF0YUV4dGVudCksc18obikpfTthXy5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmFfLG1hcFZhbHVlVG9WaXN1YWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbm9ybWFsaXplRGF0YSh0KTtyZXR1cm4gdGhpcy5fZG9NYXAoZSx0KX0sZ2V0Tm9ybWFsaXplcjpmdW5jdGlvbigpe3JldHVybiBBKHRoaXMuX25vcm1hbGl6ZURhdGEsdGhpcyl9fTt2YXIgcl89YV8udmlzdWFsSGFuZGxlcnM9e2NvbG9yOnthcHBseVZpc3VhbDpoXygiY29sb3IiKSxnZXRDb2xvck1hcHBlcjpmdW5jdGlvbigpe3ZhciBvPXRoaXMub3B0aW9uO3JldHVybiBBKCJjYXRlZ29yeSI9PT1vLm1hcHBpbmdNZXRob2Q/ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8KHQ9dGhpcy5fbm9ybWFsaXplRGF0YSh0KSksY18uY2FsbCh0aGlzLHQpfTpmdW5jdGlvbih0LGUsaSl7dmFyIG49ISFpO3JldHVybiBlfHwodD10aGlzLl9ub3JtYWxpemVEYXRhKHQpKSxpPUZlKHQsby5wYXJzZWRWaXN1YWwsaSksbj9pOlllKGksInJnYmEiKX0sdGhpcyl9LF9kb01hcDp7bGluZWFyOmZ1bmN0aW9uKHQpe3JldHVybiBZZShGZSh0LHRoaXMub3B0aW9uLnBhcnNlZFZpc3VhbCksInJnYmEiKX0sY2F0ZWdvcnk6Y18scGllY2V3aXNlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9cF8uY2FsbCh0aGlzLGUpO3JldHVybiBudWxsPT1pJiYoaT1ZZShGZSh0LHRoaXMub3B0aW9uLnBhcnNlZFZpc3VhbCksInJnYmEiKSksaX0sZml4ZWQ6ZF99fSxjb2xvckh1ZTpsXyhmdW5jdGlvbih0LGUpe3JldHVybiBVZSh0LGUpfSksY29sb3JTYXR1cmF0aW9uOmxfKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIFVlKHQsbnVsbCxlKX0pLGNvbG9yTGlnaHRuZXNzOmxfKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIFVlKHQsbnVsbCxudWxsLGUpfSksY29sb3JBbHBoYTpsXyhmdW5jdGlvbih0LGUpe3JldHVybiBYZSh0LGUpfSksb3BhY2l0eTp7YXBwbHlWaXN1YWw6aF8oIm9wYWNpdHkiKSxfZG9NYXA6Zl8oWzAsMV0pfSxsaWZ0Wjp7YXBwbHlWaXN1YWw6aF8oImxpZnRaIiksX2RvTWFwOntsaW5lYXI6ZF8sY2F0ZWdvcnk6ZF8scGllY2V3aXNlOmRfLGZpeGVkOmRffX0sc3ltYm9sOnthcHBseVZpc3VhbDpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5tYXBWYWx1ZVRvVmlzdWFsKHQpO2lmKHoobikpaSgic3ltYm9sIixuKTtlbHNlIGlmKG5fKG4pKWZvcih2YXIgbyBpbiBuKW4uaGFzT3duUHJvcGVydHkobykmJmkobyxuW29dKX0sX2RvTWFwOntsaW5lYXI6dV8sY2F0ZWdvcnk6Y18scGllY2V3aXNlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9cF8uY2FsbCh0aGlzLGUpO3JldHVybiBudWxsPT1pJiYoaT11Xy5jYWxsKHRoaXMsdCkpLGl9LGZpeGVkOmRffX0sc3ltYm9sU2l6ZTp7YXBwbHlWaXN1YWw6aF8oInN5bWJvbFNpemUiKSxfZG9NYXA6Zl8oWzAsMV0pfX07ZnVuY3Rpb24gc18odCxlKXt2YXIgaT10LnZpc3VhbCxuPVtdO1IoaSk/aV8oaSxmdW5jdGlvbih0KXtuLnB1c2godCl9KTpudWxsIT1pJiZuLnB1c2goaSk7ZXx8MSE9PW4ubGVuZ3RofHx7Y29sb3I6MSxzeW1ib2w6MX0uaGFzT3duUHJvcGVydHkodC50eXBlKXx8KG5bMV09blswXSksZ18odCxuKX1mdW5jdGlvbiBsXyhuKXtyZXR1cm57YXBwbHlWaXN1YWw6ZnVuY3Rpb24odCxlLGkpe3Q9dGhpcy5tYXBWYWx1ZVRvVmlzdWFsKHQpLGkoImNvbG9yIixuKGUoImNvbG9yIiksdCkpfSxfZG9NYXA6Zl8oWzAsMV0pfX1mdW5jdGlvbiB1Xyh0KXt2YXIgZT10aGlzLm9wdGlvbi52aXN1YWw7cmV0dXJuIGVbTWF0aC5yb3VuZChrbCh0LFswLDFdLFswLGUubGVuZ3RoLTFdLCEwKSldfHx7fX1mdW5jdGlvbiBoXyhuKXtyZXR1cm4gZnVuY3Rpb24odCxlLGkpe2kobix0aGlzLm1hcFZhbHVlVG9WaXN1YWwodCkpfX1mdW5jdGlvbiBjXyh0KXt2YXIgZT10aGlzLm9wdGlvbi52aXN1YWw7cmV0dXJuIGVbdGhpcy5vcHRpb24ubG9vcCYmdCE9PW9fP3QlZS5sZW5ndGg6dF19ZnVuY3Rpb24gZF8oKXtyZXR1cm4gdGhpcy5vcHRpb24udmlzdWFsWzBdfWZ1bmN0aW9uIGZfKG4pe3JldHVybntsaW5lYXI6ZnVuY3Rpb24odCl7cmV0dXJuIGtsKHQsbix0aGlzLm9wdGlvbi52aXN1YWwsITApfSxjYXRlZ29yeTpjXyxwaWVjZXdpc2U6ZnVuY3Rpb24odCxlKXt2YXIgaT1wXy5jYWxsKHRoaXMsZSk7cmV0dXJuIG51bGw9PWkmJihpPWtsKHQsbix0aGlzLm9wdGlvbi52aXN1YWwsITApKSxpfSxmaXhlZDpkX319ZnVuY3Rpb24gcF8odCl7dmFyIGU9dGhpcy5vcHRpb24saT1lLnBpZWNlTGlzdDtpZihlLmhhc1NwZWNpYWxWaXN1YWwpe3ZhciBuPWlbYV8uZmluZFBpZWNlSW5kZXgodCxpKV07aWYobiYmbi52aXN1YWwpcmV0dXJuIG4udmlzdWFsW3RoaXMudHlwZV19fWZ1bmN0aW9uIGdfKHQsZSl7cmV0dXJuIHQudmlzdWFsPWUsImNvbG9yIj09PXQudHlwZSYmKHQucGFyc2VkVmlzdWFsPU4oZSxmdW5jdGlvbih0KXtyZXR1cm4gUmUodCl9KSksZX12YXIgbV89e2xpbmVhcjpmdW5jdGlvbih0KXtyZXR1cm4ga2wodCx0aGlzLm9wdGlvbi5kYXRhRXh0ZW50LFswLDFdLCEwKX0scGllY2V3aXNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9uLnBpZWNlTGlzdCxpPWFfLmZpbmRQaWVjZUluZGV4KHQsZSwhMCk7aWYobnVsbCE9aSlyZXR1cm4ga2woaSxbMCxlLmxlbmd0aC0xXSxbMCwxXSwhMCl9LGNhdGVnb3J5OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9uLmNhdGVnb3JpZXM/dGhpcy5vcHRpb24uY2F0ZWdvcnlNYXBbdF06dDtyZXR1cm4gbnVsbD09ZT9vXzplfSxmaXhlZDpldH07ZnVuY3Rpb24gdl8odCxlLGkpe3JldHVybiB0P2U8PWk6ZTxpfWFfLmxpc3RWaXN1YWxUeXBlcz1mdW5jdGlvbigpe3ZhciBpPVtdO3JldHVybiBFKHJfLGZ1bmN0aW9uKHQsZSl7aS5wdXNoKGUpfSksaX0sYV8uYWRkVmlzdWFsSGFuZGxlcj1mdW5jdGlvbih0LGUpe3JfW3RdPWV9LGFfLmlzVmFsaWRUeXBlPWZ1bmN0aW9uKHQpe3JldHVybiByXy5oYXNPd25Qcm9wZXJ0eSh0KX0sYV8uZWFjaFZpc3VhbD1mdW5jdGlvbih0LGUsaSl7Uih0KT9FKHQsZSxpKTplLmNhbGwoaSx0KX0sYV8ubWFwVmlzdWFsPWZ1bmN0aW9uKHQsbixvKXt2YXIgYSxyPWsodCk/W106Uih0KT97fTooYT0hMCxudWxsKTtyZXR1cm4gYV8uZWFjaFZpc3VhbCh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9bi5jYWxsKG8sdCxlKTthP3I9aTpyW2VdPWl9KSxyfSxhXy5yZXRyaWV2ZVZpc3VhbHM9ZnVuY3Rpb24oaSl7dmFyIG4sbz17fTtyZXR1cm4gaSYmaV8ocl8sZnVuY3Rpb24odCxlKXtpLmhhc093blByb3BlcnR5KGUpJiYob1tlXT1pW2VdLG49ITApfSksbj9vOm51bGx9LGFfLnByZXBhcmVWaXN1YWxUeXBlcz1mdW5jdGlvbih0KXtpZihuXyh0KSl7dmFyIGk9W107aV8odCxmdW5jdGlvbih0LGUpe2kucHVzaChlKX0pLHQ9aX1lbHNle2lmKCFrKHQpKXJldHVybltdO3Q9dC5zbGljZSgpfXJldHVybiB0LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4iY29sb3IiPT09ZSYmImNvbG9yIiE9PXQmJjA9PT10LmluZGV4T2YoImNvbG9yIik/MTotMX0pLHR9LGFfLmRlcGVuZHNPbj1mdW5jdGlvbih0LGUpe3JldHVybiJjb2xvciI9PT1lPyEoIXR8fDAhPT10LmluZGV4T2YoZSkpOnQ9PT1lfSxhXy5maW5kUGllY2VJbmRleD1mdW5jdGlvbihuLHQsZSl7Zm9yKHZhciBvLGE9MS8wLGk9MCxyPXQubGVuZ3RoO2k8cjtpKyspe3ZhciBzPXRbaV0udmFsdWU7aWYobnVsbCE9cyl7aWYocz09PW58fCJzdHJpbmciPT10eXBlb2YgcyYmcz09PW4rIiIpcmV0dXJuIGk7ZSYmYyhzLGkpfX1mb3IoaT0wLHI9dC5sZW5ndGg7aTxyO2krKyl7dmFyIGw9dFtpXSx1PWwuaW50ZXJ2YWwsaD1sLmNsb3NlO2lmKHUpe2lmKHVbMF09PT0tMS8wKXtpZih2XyhoWzFdLG4sdVsxXSkpcmV0dXJuIGl9ZWxzZSBpZih1WzFdPT09MS8wKXtpZih2XyhoWzBdLHVbMF0sbikpcmV0dXJuIGl9ZWxzZSBpZih2XyhoWzBdLHVbMF0sbikmJnZfKGhbMV0sbix1WzFdKSlyZXR1cm4gaTtlJiZjKHVbMF0saSksZSYmYyh1WzFdLGkpfX1pZihlKXJldHVybiBuPT09MS8wP3QubGVuZ3RoLTE6bj09PS0xLzA/MDpvO2Z1bmN0aW9uIGModCxlKXt2YXIgaT1NYXRoLmFicyh0LW4pO2k8YSYmKGE9aSxvPWUpfX07dmFyIHlfPWsseF89Iml0ZW1TdHlsZSIsX189e3Nlcmllc1R5cGU6InRyZWVtYXAiLHJlc2V0OmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQuZ2V0RGF0YSgpLnRyZWUsYT1vLnJvb3Qscj10LmdldE1vZGVsKHhfKTthLmlzUmVtb3ZlZCgpfHwhZnVuY3Rpb24gbih0LGUsbyxhLHIscyl7dmFyIGw9dC5nZXRNb2RlbCgpO3ZhciBpPXQuZ2V0TGF5b3V0KCk7aWYoIWl8fGkuaW52aXNpYmxlfHwhaS5pc0luVmlldylyZXR1cm47dmFyIHU9dC5nZXRNb2RlbCh4Xyk7dmFyIGg9b1t0LmRlcHRoXTt2YXIgYz13Xyh1LGUsaCxhKTt2YXIgZD11LmdldCgiYm9yZGVyQ29sb3IiKTt2YXIgZj11LmdldCgiYm9yZGVyQ29sb3JTYXR1cmF0aW9uIik7dmFyIHA7bnVsbCE9ZiYmKHA9Yl8oYyksZz1mLGQ9bnVsbCE9KG09cCk/VWUobSxudWxsLG51bGwsZyk6bnVsbCk7dmFyIGcsbTt0LnNldFZpc3VhbCgiYm9yZGVyQ29sb3IiLGQpO3ZhciB2PXQudmlld0NoaWxkcmVuO2lmKHYmJnYubGVuZ3RoKXt2YXIgeT1NXyh0LGwsaSx1LGMsdik7RSh2LGZ1bmN0aW9uKHQsZSl7aWYodC5kZXB0aD49ci5sZW5ndGh8fHQ9PT1yW3QuZGVwdGhdKXt2YXIgaT1UXyhsLGMsdCxlLHkscyk7bih0LGksbyxhLHIscyl9fSl9ZWxzZSBwPWJfKGMpLHQuc2V0VmlzdWFsKCJjb2xvciIscCl9KGEse30sTihvLmxldmVsTW9kZWxzLGZ1bmN0aW9uKHQpe3JldHVybiB0P3QuZ2V0KHhfKTpudWxsfSkscix0LmdldFZpZXdSb290KCkuZ2V0QW5jZXN0b3JzKCksdCl9fTtmdW5jdGlvbiB3XyhpLG4sbyxhKXt2YXIgcj1MKHt9LG4pO3JldHVybiBFKFsiY29sb3IiLCJjb2xvckFscGhhIiwiY29sb3JTYXR1cmF0aW9uIl0sZnVuY3Rpb24odCl7dmFyIGU9aS5nZXQodCwhMCk7bnVsbD09ZSYmbyYmKGU9b1t0XSksbnVsbD09ZSYmKGU9blt0XSksbnVsbD09ZSYmKGU9YS5nZXQodCkpLG51bGwhPWUmJihyW3RdPWUpfSkscn1mdW5jdGlvbiBiXyh0KXt2YXIgZT1TXyh0LCJjb2xvciIpO2lmKGUpe3ZhciBpPVNfKHQsImNvbG9yQWxwaGEiKSxuPVNfKHQsImNvbG9yU2F0dXJhdGlvbiIpO3JldHVybiBuJiYoZT1VZShlLG51bGwsbnVsbCxuKSksaSYmKGU9WGUoZSxpKSksZX19ZnVuY3Rpb24gU18odCxlKXt2YXIgaT10W2VdO2lmKG51bGwhPWkmJiJub25lIiE9PWkpcmV0dXJuIGl9ZnVuY3Rpb24gTV8odCxlLGksbixvLGEpe2lmKGEmJmEubGVuZ3RoKXt2YXIgcj1JXyhlLCJjb2xvciIpfHxudWxsIT1vLmNvbG9yJiYibm9uZSIhPT1vLmNvbG9yJiYoSV8oZSwiY29sb3JBbHBoYSIpfHxJXyhlLCJjb2xvclNhdHVyYXRpb24iKSk7aWYocil7dmFyIHM9ZS5nZXQoInZpc3VhbE1pbiIpLGw9ZS5nZXQoInZpc3VhbE1heCIpLHU9aS5kYXRhRXh0ZW50LnNsaWNlKCk7bnVsbCE9cyYmczx1WzBdJiYodVswXT1zKSxudWxsIT1sJiZsPnVbMV0mJih1WzFdPWwpO3ZhciBoPWUuZ2V0KCJjb2xvck1hcHBpbmdCeSIpLGM9e3R5cGU6ci5uYW1lLGRhdGFFeHRlbnQ6dSx2aXN1YWw6ci5yYW5nZX07ImNvbG9yIiE9PWMudHlwZXx8ImluZGV4IiE9PWgmJiJpZCIhPT1oP2MubWFwcGluZ01ldGhvZD0ibGluZWFyIjooYy5tYXBwaW5nTWV0aG9kPSJjYXRlZ29yeSIsYy5sb29wPSEwKTt2YXIgZD1uZXcgYV8oYyk7cmV0dXJuIGQuX19kckNvbG9yTWFwcGluZ0J5PWgsZH19fWZ1bmN0aW9uIElfKHQsZSl7dmFyIGk9dC5nZXQoZSk7cmV0dXJuIHlfKGkpJiZpLmxlbmd0aD97bmFtZTplLHJhbmdlOml9Om51bGx9ZnVuY3Rpb24gVF8odCxlLGksbixvLGEpe3ZhciByPUwoe30sZSk7aWYobyl7dmFyIHM9by50eXBlLGw9ImNvbG9yIj09PXMmJm8uX19kckNvbG9yTWFwcGluZ0J5LHU9ImluZGV4Ij09PWw/bjoiaWQiPT09bD9hLm1hcElkVG9JbmRleChpLmdldElkKCkpOmkuZ2V0VmFsdWUodC5nZXQoInZpc3VhbERpbWVuc2lvbiIpKTtyW3NdPW8ubWFwVmFsdWVUb1Zpc3VhbCh1KX1yZXR1cm4gcn12YXIgQV89TWF0aC5tYXgsRF89TWF0aC5taW4sQ189VyxMXz1FLGtfPVsiaXRlbVN0eWxlIiwiYm9yZGVyV2lkdGgiXSxQXz1bIml0ZW1TdHlsZSIsImdhcFdpZHRoIl0sTl89WyJ1cHBlckxhYmVsIiwic2hvdyJdLE9fPVsidXBwZXJMYWJlbCIsImhlaWdodCJdLEVfPXtzZXJpZXNUeXBlOiJ0cmVlbWFwIixyZXNldDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1pLmdldFdpZHRoKCksYT1pLmdldEhlaWdodCgpLHI9dC5vcHRpb24scz12dSh0LmdldEJveExheW91dFBhcmFtcygpLHt3aWR0aDppLmdldFdpZHRoKCksaGVpZ2h0OmkuZ2V0SGVpZ2h0KCl9KSxsPXIuc2l6ZXx8W10sdT1QbChDXyhzLndpZHRoLGxbMF0pLG8pLGg9UGwoQ18ocy5oZWlnaHQsbFsxXSksYSksYz1uJiZuLnR5cGUsZD1PeChuLFsidHJlZW1hcFpvb21Ub05vZGUiLCJ0cmVlbWFwUm9vdFRvTm9kZSJdLHQpLGY9InRyZWVtYXBSZW5kZXIiPT09Y3x8InRyZWVtYXBNb3ZlIj09PWM/bi5yb290UmVjdDpudWxsLHA9dC5nZXRWaWV3Um9vdCgpLGc9RXgocCk7aWYoInRyZWVtYXBNb3ZlIiE9PWMpe3ZhciBtPSJ0cmVlbWFwWm9vbVRvTm9kZSI9PT1jP2Z1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGEscj0oZXx8e30pLm5vZGUscz1bbixvXTtpZighcnx8cj09PWkpcmV0dXJuIHM7dmFyIGw9bipvLHU9bCp0Lm9wdGlvbi56b29tVG9Ob2RlUmF0aW87Zm9yKDthPXIucGFyZW50Tm9kZTspe2Zvcih2YXIgaD0wLGM9YS5jaGlsZHJlbixkPTAsZj1jLmxlbmd0aDtkPGY7ZCsrKWgrPWNbZF0uZ2V0VmFsdWUoKTt2YXIgcD1yLmdldFZhbHVlKCk7aWYoMD09PXApcmV0dXJuIHM7dSo9aC9wO3ZhciBnPWEuZ2V0TW9kZWwoKSxtPWcuZ2V0KGtfKSx2PU1hdGgubWF4KG0sVl8oZykpO3UrPTQqbSptKygzKm0rdikqTWF0aC5wb3codSwuNSksVmw8dSYmKHU9VmwpLHI9YX11PGwmJih1PWwpO3ZhciB5PU1hdGgucG93KHUvbCwuNSk7cmV0dXJuW24qeSxvKnldfSh0LGQscCx1LGgpOmY/W2Yud2lkdGgsZi5oZWlnaHRdOlt1LGhdLHY9ci5zb3J0O3YmJiJhc2MiIT09diYmImRlc2MiIT09diYmKHY9ImRlc2MiKTt2YXIgeT17c3F1YXJlUmF0aW86ci5zcXVhcmVSYXRpbyxzb3J0OnYsbGVhZkRlcHRoOnIubGVhZkRlcHRofTtwLmhvc3RUcmVlLmNsZWFyTGF5b3V0cygpO3ZhciB4PXt4OjAseTowLHdpZHRoOm1bMF0saGVpZ2h0Om1bMV0sYXJlYTptWzBdKm1bMV19O3Auc2V0TGF5b3V0KHgpLGZ1bmN0aW9uIHQoZSxpLG4sbyl7dmFyIGE7dmFyIHI7aWYoZS5pc1JlbW92ZWQoKSlyZXR1cm47dmFyIHM9ZS5nZXRMYXlvdXQoKTthPXMud2lkdGg7cj1zLmhlaWdodDt2YXIgbD1lLmdldE1vZGVsKCk7dmFyIHU9bC5nZXQoa18pO3ZhciBoPWwuZ2V0KFBfKS8yO3ZhciBjPVZfKGwpO3ZhciBkPU1hdGgubWF4KHUsYyk7dmFyIGY9dS1oO3ZhciBwPWQtaDt2YXIgbD1lLmdldE1vZGVsKCk7ZS5zZXRMYXlvdXQoe2JvcmRlcldpZHRoOnUsdXBwZXJIZWlnaHQ6ZCx1cHBlckxhYmVsSGVpZ2h0OmN9LCEwKTthPUFfKGEtMipmLDApO3I9QV8oci1mLXAsMCk7dmFyIGc9YSpyO3ZhciBtPXpfKGUsbCxnLGksbixvKTtpZighbS5sZW5ndGgpcmV0dXJuO3ZhciB2PXt4OmYseTpwLHdpZHRoOmEsaGVpZ2h0OnJ9O3ZhciB5PURfKGEscik7dmFyIHg9MS8wO3ZhciBfPVtdO18uYXJlYT0wO2Zvcih2YXIgdz0wLGI9bS5sZW5ndGg7dzxiOyl7dmFyIFM9bVt3XTtfLnB1c2goUyksXy5hcmVhKz1TLmdldExheW91dCgpLmFyZWE7dmFyIE09Ul8oXyx5LGkuc3F1YXJlUmF0aW8pO3g9TTw9eD8odysrLE0pOihfLmFyZWEtPV8ucG9wKCkuZ2V0TGF5b3V0KCkuYXJlYSxCXyhfLHksdixoLCExKSx5PURfKHYud2lkdGgsdi5oZWlnaHQpLF8ubGVuZ3RoPV8uYXJlYT0wLDEvMCl9Xy5sZW5ndGgmJkJfKF8seSx2LGgsITApO2lmKCFuKXt2YXIgST1sLmdldCgiY2hpbGRyZW5WaXNpYmxlTWluIik7bnVsbCE9SSYmZzxJJiYobj0hMCl9Zm9yKHZhciB3PTAsYj1tLmxlbmd0aDt3PGI7dysrKXQobVt3XSxpLG4sbysxKX0ocCx5LCExLDApO3g9cC5nZXRMYXlvdXQoKTtMXyhnLGZ1bmN0aW9uKHQsZSl7dmFyIGk9KGdbZSsxXXx8cCkuZ2V0VmFsdWUoKTt0LnNldExheW91dChMKHtkYXRhRXh0ZW50OltpLGldLGJvcmRlcldpZHRoOjAsdXBwZXJIZWlnaHQ6MH0seCkpfSl9dmFyIF89dC5nZXREYXRhKCkudHJlZS5yb290O18uc2V0TGF5b3V0KGZ1bmN0aW9uKHQsZSxpKXtpZihlKXJldHVybnt4OmUueCx5OmUueX07dmFyIG49e3g6MCx5OjB9O2lmKCFpKXJldHVybiBuO3ZhciBvPWkubm9kZSxhPW8uZ2V0TGF5b3V0KCk7aWYoIWEpcmV0dXJuIG47dmFyIHI9W2Eud2lkdGgvMixhLmhlaWdodC8yXSxzPW87Zm9yKDtzOyl7dmFyIGw9cy5nZXRMYXlvdXQoKTtyWzBdKz1sLngsclsxXSs9bC55LHM9cy5wYXJlbnROb2RlfXJldHVybnt4OnQud2lkdGgvMi1yWzBdLHk6dC5oZWlnaHQvMi1yWzFdfX0ocyxmLGQpLCEwKSx0LnNldExheW91dEluZm8ocyksZnVuY3Rpb24gZSh0LGksbixvLGEpe3ZhciByPXQuZ2V0TGF5b3V0KCk7dmFyIHM9blthXTt2YXIgbD1zJiZzPT09dDtpZihzJiYhbHx8YT09PW4ubGVuZ3RoJiZ0IT09bylyZXR1cm47dC5zZXRMYXlvdXQoe2lzSW5WaWV3OiEwLGludmlzaWJsZTohbCYmIWkuaW50ZXJzZWN0KHIpLGlzQWJvdmVWaWV3Um9vdDpsfSwhMCk7dmFyIHU9bmV3IE1pKGkueC1yLngsaS55LXIueSxpLndpZHRoLGkuaGVpZ2h0KTtMXyh0LnZpZXdDaGlsZHJlbnx8W10sZnVuY3Rpb24odCl7ZSh0LHUsbixvLGErMSl9KX0oXyxuZXcgTWkoLXMueCwtcy55LG8sYSksZyxwLDApfX07ZnVuY3Rpb24gel8odCxlLGksbixvLGEpe3ZhciByPXQuY2hpbGRyZW58fFtdLHM9bi5zb3J0OyJhc2MiIT09cyYmImRlc2MiIT09cyYmKHM9bnVsbCk7dmFyIGw9bnVsbCE9bi5sZWFmRGVwdGgmJm4ubGVhZkRlcHRoPD1hO2lmKG8mJiFsKXJldHVybiB0LnZpZXdDaGlsZHJlbj1bXTshZnVuY3Rpb24odCxuKXtuJiZ0LnNvcnQoZnVuY3Rpb24odCxlKXt2YXIgaT0iYXNjIj09PW4/dC5nZXRWYWx1ZSgpLWUuZ2V0VmFsdWUoKTplLmdldFZhbHVlKCktdC5nZXRWYWx1ZSgpO3JldHVybiAwPT1pPyJhc2MiPT09bj90LmRhdGFJbmRleC1lLmRhdGFJbmRleDplLmRhdGFJbmRleC10LmRhdGFJbmRleDppfSl9KHI9TShyLGZ1bmN0aW9uKHQpe3JldHVybiF0LmlzUmVtb3ZlZCgpfSkscyk7dmFyIHU9ZnVuY3Rpb24odCxlLGkpe2Zvcih2YXIgbj0wLG89MCxhPWUubGVuZ3RoO288YTtvKyspbis9ZVtvXS5nZXRWYWx1ZSgpO3ZhciByPXQuZ2V0KCJ2aXN1YWxEaW1lbnNpb24iKTtpZihlJiZlLmxlbmd0aClpZigidmFsdWUiPT09ciYmaSlzPVtlW2UubGVuZ3RoLTFdLmdldFZhbHVlKCksZVswXS5nZXRWYWx1ZSgpXSwiYXNjIj09PWkmJnMucmV2ZXJzZSgpO2Vsc2V7dmFyIHM9WzEvMCwtMS8wXTtMXyhlLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0VmFsdWUocik7ZTxzWzBdJiYoc1swXT1lKSxlPnNbMV0mJihzWzFdPWUpfSl9ZWxzZSBzPVtOYU4sTmFOXTtyZXR1cm57c3VtOm4sZGF0YUV4dGVudDpzfX0oZSxyLHMpO2lmKDA9PT11LnN1bSlyZXR1cm4gdC52aWV3Q2hpbGRyZW49W107aWYodS5zdW09ZnVuY3Rpb24odCxlLGksbixvKXtpZighbilyZXR1cm4gaTtmb3IodmFyIGE9dC5nZXQoInZpc2libGVNaW4iKSxyPW8ubGVuZ3RoLHM9cixsPXItMTswPD1sO2wtLSl7dmFyIHU9b1siYXNjIj09PW4/ci1sLTE6bF0uZ2V0VmFsdWUoKTt1L2kqZTxhJiYocz1sLGktPXUpfXJldHVybiJhc2MiPT09bj9vLnNwbGljZSgwLHItcyk6by5zcGxpY2UocyxyLXMpLGl9KGUsaSx1LnN1bSxzLHIpLDA9PT11LnN1bSlyZXR1cm4gdC52aWV3Q2hpbGRyZW49W107Zm9yKHZhciBoPTAsYz1yLmxlbmd0aDtoPGM7aCsrKXt2YXIgZD1yW2hdLmdldFZhbHVlKCkvdS5zdW0qaTtyW2hdLnNldExheW91dCh7YXJlYTpkfSl9cmV0dXJuIGwmJihyLmxlbmd0aCYmdC5zZXRMYXlvdXQoe2lzTGVhZlJvb3Q6ITB9LCEwKSxyLmxlbmd0aD0wKSx0LnZpZXdDaGlsZHJlbj1yLHQuc2V0TGF5b3V0KHtkYXRhRXh0ZW50OnUuZGF0YUV4dGVudH0sITApLHJ9ZnVuY3Rpb24gUl8odCxlLGkpe2Zvcih2YXIgbixvPTAsYT0xLzAscj0wLHM9dC5sZW5ndGg7cjxzO3IrKykobj10W3JdLmdldExheW91dCgpLmFyZWEpJiYobjxhJiYoYT1uKSxvPG4mJihvPW4pKTt2YXIgbD10LmFyZWEqdC5hcmVhLHU9ZSplKmk7cmV0dXJuIGw/QV8odSpvL2wsbC8odSphKSk6MS8wfWZ1bmN0aW9uIEJfKHQsZSxpLG4sbyl7dmFyIGE9ZT09PWkud2lkdGg/MDoxLHI9MS1hLHM9WyJ4IiwieSJdLGw9WyJ3aWR0aCIsImhlaWdodCJdLHU9aVtzW2FdXSxoPWU/dC5hcmVhL2U6MDsob3x8aD5pW2xbcl1dKSYmKGg9aVtsW3JdXSk7Zm9yKHZhciBjPTAsZD10Lmxlbmd0aDtjPGQ7YysrKXt2YXIgZj10W2NdLHA9e30sZz1oP2YuZ2V0TGF5b3V0KCkuYXJlYS9oOjAsbT1wW2xbcl1dPUFfKGgtMipuLDApLHY9aVtzW2FdXStpW2xbYV1dLXUseT1jPT09ZC0xfHx2PGc/djpnLHg9cFtsW2FdXT1BXyh5LTIqbiwwKTtwW3Nbcl1dPWlbc1tyXV0rRF8obixtLzIpLHBbc1thXV09dStEXyhuLHgvMiksdSs9eSxmLnNldExheW91dChwLCEwKX1pW3Nbcl1dKz1oLGlbbFtyXV0tPWh9ZnVuY3Rpb24gVl8odCl7cmV0dXJuIHQuZ2V0KE5fKT90LmdldChPXyk6MH1mdW5jdGlvbiBHXyh0KXtyZXR1cm4iX0VDXyIrdH15ZihfXyksdmYoRV8pO2Z1bmN0aW9uIEZfKHQpe3RoaXMuX2RpcmVjdGVkPXR8fCExLHRoaXMubm9kZXM9W10sdGhpcy5lZGdlcz1bXSx0aGlzLl9ub2Rlc01hcD17fSx0aGlzLl9lZGdlc01hcD17fSx0aGlzLmRhdGEsdGhpcy5lZGdlRGF0YX12YXIgV189Rl8ucHJvdG90eXBlO2Z1bmN0aW9uIEhfKHQsZSl7dGhpcy5pZD1udWxsPT10PyIiOnQsdGhpcy5pbkVkZ2VzPVtdLHRoaXMub3V0RWRnZXM9W10sdGhpcy5lZGdlcz1bXSx0aGlzLmhvc3RHcmFwaCx0aGlzLmRhdGFJbmRleD1udWxsPT1lPy0xOmV9ZnVuY3Rpb24gWl8odCxlLGkpe3RoaXMubm9kZTE9dCx0aGlzLm5vZGUyPWUsdGhpcy5kYXRhSW5kZXg9bnVsbD09aT8tMTppfVdfLnR5cGU9ImdyYXBoIixXXy5pc0RpcmVjdGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RpcmVjdGVkfSxXXy5hZGROb2RlPWZ1bmN0aW9uKHQsZSl7dD1udWxsPT10PyIiK2U6IiIrdDt2YXIgaT10aGlzLl9ub2Rlc01hcDtpZighaVtHXyh0KV0pe3ZhciBuPW5ldyBIXyh0LGUpO3JldHVybihuLmhvc3RHcmFwaD10aGlzKS5ub2Rlcy5wdXNoKG4pLGlbR18odCldPW59fSxXXy5nZXROb2RlQnlJbmRleD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmRhdGEuZ2V0UmF3SW5kZXgodCk7cmV0dXJuIHRoaXMubm9kZXNbZV19LFdfLmdldE5vZGVCeUlkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9ub2Rlc01hcFtHXyh0KV19LFdfLmFkZEVkZ2U9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX25vZGVzTWFwLG89dGhpcy5fZWRnZXNNYXA7aWYoIm51bWJlciI9PXR5cGVvZiB0JiYodD10aGlzLm5vZGVzW3RdKSwibnVtYmVyIj09dHlwZW9mIGUmJihlPXRoaXMubm9kZXNbZV0pLEhfLmlzSW5zdGFuY2UodCl8fCh0PW5bR18odCldKSxIXy5pc0luc3RhbmNlKGUpfHwoZT1uW0dfKGUpXSksdCYmZSl7dmFyIGE9dC5pZCsiLSIrZS5pZDtpZighb1thXSl7dmFyIHI9bmV3IFpfKHQsZSxpKTtyZXR1cm4oci5ob3N0R3JhcGg9dGhpcykuX2RpcmVjdGVkJiYodC5vdXRFZGdlcy5wdXNoKHIpLGUuaW5FZGdlcy5wdXNoKHIpKSx0LmVkZ2VzLnB1c2gociksdCE9PWUmJmUuZWRnZXMucHVzaChyKSx0aGlzLmVkZ2VzLnB1c2gociksb1thXT1yfX19LFdfLmdldEVkZ2VCeUluZGV4PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWRnZURhdGEuZ2V0UmF3SW5kZXgodCk7cmV0dXJuIHRoaXMuZWRnZXNbZV19LFdfLmdldEVkZ2U9ZnVuY3Rpb24odCxlKXtIXy5pc0luc3RhbmNlKHQpJiYodD10LmlkKSxIXy5pc0luc3RhbmNlKGUpJiYoZT1lLmlkKTt2YXIgaT10aGlzLl9lZGdlc01hcDtyZXR1cm4gdGhpcy5fZGlyZWN0ZWQ/aVt0KyItIitlXTppW3QrIi0iK2VdfHxpW2UrIi0iK3RdfSxXXy5lYWNoTm9kZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLm5vZGVzLG49aS5sZW5ndGgsbz0wO288bjtvKyspMDw9aVtvXS5kYXRhSW5kZXgmJnQuY2FsbChlLGlbb10sbyl9LFdfLmVhY2hFZGdlPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMuZWRnZXMsbj1pLmxlbmd0aCxvPTA7bzxuO28rKykwPD1pW29dLmRhdGFJbmRleCYmMDw9aVtvXS5ub2RlMS5kYXRhSW5kZXgmJjA8PWlbb10ubm9kZTIuZGF0YUluZGV4JiZ0LmNhbGwoZSxpW29dLG8pfSxXXy5icmVhZHRoRmlyc3RUcmF2ZXJzZT1mdW5jdGlvbih0LGUsaSxuKXtpZihIXy5pc0luc3RhbmNlKGUpfHwoZT10aGlzLl9ub2Rlc01hcFtHXyhlKV0pLGUpe2Zvcih2YXIgbz0ib3V0Ij09PWk/Im91dEVkZ2VzIjoiaW4iPT09aT8iaW5FZGdlcyI6ImVkZ2VzIixhPTA7YTx0aGlzLm5vZGVzLmxlbmd0aDthKyspdGhpcy5ub2Rlc1thXS5fX3Zpc2l0ZWQ9ITE7aWYoIXQuY2FsbChuLGUsbnVsbCkpZm9yKHZhciByPVtlXTtyLmxlbmd0aDspe3ZhciBzPXIuc2hpZnQoKSxsPXNbb107Zm9yKGE9MDthPGwubGVuZ3RoO2ErKyl7dmFyIHU9bFthXSxoPXUubm9kZTE9PT1zP3Uubm9kZTI6dS5ub2RlMTtpZighaC5fX3Zpc2l0ZWQpe2lmKHQuY2FsbChuLGgscykpcmV0dXJuO3IucHVzaChoKSxoLl9fdmlzaXRlZD0hMH19fX19LFdfLnVwZGF0ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmRhdGEsaT10aGlzLmVkZ2VEYXRhLGU9dGhpcy5ub2RlcyxuPXRoaXMuZWRnZXMsbz0wLGE9ZS5sZW5ndGg7bzxhO28rKyllW29dLmRhdGFJbmRleD0tMTtmb3Iobz0wLGE9dC5jb3VudCgpO288YTtvKyspZVt0LmdldFJhd0luZGV4KG8pXS5kYXRhSW5kZXg9bztpLmZpbHRlclNlbGYoZnVuY3Rpb24odCl7dmFyIGU9bltpLmdldFJhd0luZGV4KHQpXTtyZXR1cm4gMDw9ZS5ub2RlMS5kYXRhSW5kZXgmJjA8PWUubm9kZTIuZGF0YUluZGV4fSk7Zm9yKG89MCxhPW4ubGVuZ3RoO288YTtvKyspbltvXS5kYXRhSW5kZXg9LTE7Zm9yKG89MCxhPWkuY291bnQoKTtvPGE7bysrKW5baS5nZXRSYXdJbmRleChvKV0uZGF0YUluZGV4PW99LFdfLmNsb25lPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PW5ldyBGXyh0aGlzLl9kaXJlY3RlZCksZT10aGlzLm5vZGVzLGk9dGhpcy5lZGdlcyxuPTA7bjxlLmxlbmd0aDtuKyspdC5hZGROb2RlKGVbbl0uaWQsZVtuXS5kYXRhSW5kZXgpO2ZvcihuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPWlbbl07dC5hZGRFZGdlKG8ubm9kZTEuaWQsby5ub2RlMi5pZCxvLmRhdGFJbmRleCl9cmV0dXJuIHR9LEhfLnByb3RvdHlwZT17Y29uc3RydWN0b3I6SF8sZGVncmVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRnZXMubGVuZ3RofSxpbkRlZ3JlZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmluRWRnZXMubGVuZ3RofSxvdXREZWdyZWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vdXRFZGdlcy5sZW5ndGh9LGdldE1vZGVsOmZ1bmN0aW9uKHQpe2lmKCEodGhpcy5kYXRhSW5kZXg8MCkpcmV0dXJuIHRoaXMuaG9zdEdyYXBoLmRhdGEuZ2V0SXRlbU1vZGVsKHRoaXMuZGF0YUluZGV4KS5nZXRNb2RlbCh0KX19LFpfLnByb3RvdHlwZS5nZXRNb2RlbD1mdW5jdGlvbih0KXtpZighKHRoaXMuZGF0YUluZGV4PDApKXJldHVybiB0aGlzLmhvc3RHcmFwaC5lZGdlRGF0YS5nZXRJdGVtTW9kZWwodGhpcy5kYXRhSW5kZXgpLmdldE1vZGVsKHQpfTtmdW5jdGlvbiBVXyhpLG4pe3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzW2ldW25dO3JldHVybiBlLmdldChlLmdldERpbWVuc2lvbih0fHwidmFsdWUiKSx0aGlzLmRhdGFJbmRleCl9LHNldFZpc3VhbDpmdW5jdGlvbih0LGUpezA8PXRoaXMuZGF0YUluZGV4JiZ0aGlzW2ldW25dLnNldEl0ZW1WaXN1YWwodGhpcy5kYXRhSW5kZXgsdCxlKX0sZ2V0VmlzdWFsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXNbaV1bbl0uZ2V0SXRlbVZpc3VhbCh0aGlzLmRhdGFJbmRleCx0LGUpfSxzZXRMYXlvdXQ6ZnVuY3Rpb24odCxlKXswPD10aGlzLmRhdGFJbmRleCYmdGhpc1tpXVtuXS5zZXRJdGVtTGF5b3V0KHRoaXMuZGF0YUluZGV4LHQsZSl9LGdldExheW91dDpmdW5jdGlvbigpe3JldHVybiB0aGlzW2ldW25dLmdldEl0ZW1MYXlvdXQodGhpcy5kYXRhSW5kZXgpfSxnZXRHcmFwaGljRWw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tpXVtuXS5nZXRJdGVtR3JhcGhpY0VsKHRoaXMuZGF0YUluZGV4KX0sZ2V0UmF3SW5kZXg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tpXVtuXS5nZXRSYXdJbmRleCh0aGlzLmRhdGFJbmRleCl9fX1iKEhfLFVfKCJob3N0R3JhcGgiLCJkYXRhIikpLGIoWl8sVV8oImhvc3RHcmFwaCIsImVkZ2VEYXRhIikpLEZfLk5vZGU9SF8sRl8uRWRnZT1aXyxpYShIXyksaWEoWl8pO2Z1bmN0aW9uIFhfKHQsZSxpLG4sbyl7Zm9yKHZhciBhPW5ldyBGXyhuKSxyPTA7cjx0Lmxlbmd0aDtyKyspYS5hZGROb2RlKFcodFtyXS5pZCx0W3JdLm5hbWUscikscik7dmFyIHM9W10sbD1bXSx1PTA7Zm9yKHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIGg9ZVtyXSxjPWguc291cmNlLGQ9aC50YXJnZXQ7YS5hZGRFZGdlKGMsZCx1KSYmKGwucHVzaChoKSxzLnB1c2goVyhoLmlkLGMrIiA+ICIrZCkpLHUrKyl9dmFyIGYscD1pLmdldCgiY29vcmRpbmF0ZVN5c3RlbSIpO2lmKCJjYXJ0ZXNpYW4yZCI9PT1wfHwicG9sYXIiPT09cClmPWhwKHQsaSk7ZWxzZXt2YXIgZz1uaC5nZXQocCksbT1nJiYidmlldyIhPT1nLnR5cGUmJmcuZGltZW5zaW9uc3x8W107XyhtLCJ2YWx1ZSIpPDAmJm0uY29uY2F0KFsidmFsdWUiXSk7dmFyIHY9bnAodCx7Y29vcmREaW1lbnNpb25zOm19KTsoZj1uZXcgV2YodixpKSkuaW5pdERhdGEodCl9dmFyIHk9bmV3IFdmKFsidmFsdWUiXSxpKTtyZXR1cm4geS5pbml0RGF0YShsLHMpLG8mJm8oZix5KSx1eCh7bWFpbkRhdGE6ZixzdHJ1Y3Q6YSxzdHJ1Y3RBdHRyOiJncmFwaCIsZGF0YXM6e25vZGU6ZixlZGdlOnl9LGRhdGFzQXR0cjp7bm9kZToiZGF0YSIsZWRnZToiZWRnZURhdGEifX0pLGEudXBkYXRlKCksYX12YXIgWV89U2Yoe3R5cGU6InNlcmllcy5ncmFwaCIsaW5pdDpmdW5jdGlvbih0KXtZXy5zdXBlckFwcGx5KHRoaXMsImluaXQiLGFyZ3VtZW50cyk7dmFyIGU9dGhpcztmdW5jdGlvbiBpKCl7cmV0dXJuIGUuX2NhdGVnb3JpZXNEYXRhfXRoaXMubGVnZW5kVmlzdWFsUHJvdmlkZXI9bmV3IEd2KGksaSksdGhpcy5maWxsRGF0YVRleHRTdHlsZSh0LmVkZ2VzfHx0LmxpbmtzKSx0aGlzLl91cGRhdGVDYXRlZ29yaWVzRGF0YSgpfSxtZXJnZU9wdGlvbjpmdW5jdGlvbih0KXtZXy5zdXBlckFwcGx5KHRoaXMsIm1lcmdlT3B0aW9uIixhcmd1bWVudHMpLHRoaXMuZmlsbERhdGFUZXh0U3R5bGUodC5lZGdlc3x8dC5saW5rcyksdGhpcy5fdXBkYXRlQ2F0ZWdvcmllc0RhdGEoKX0sbWVyZ2VEZWZhdWx0QW5kVGhlbWU6ZnVuY3Rpb24odCl7WV8uc3VwZXJBcHBseSh0aGlzLCJtZXJnZURlZmF1bHRBbmRUaGVtZSIsYXJndW1lbnRzKSx6byh0LFsiZWRnZUxhYmVsIl0sWyJzaG93Il0pfSxnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LHMpe3ZhciBlPXQuZWRnZXN8fHQubGlua3N8fFtdLGk9dC5kYXRhfHx0Lm5vZGVzfHxbXSxsPXRoaXM7aWYoaSYmZSlyZXR1cm4gWF8oaSxlLHRoaXMsITAsZnVuY3Rpb24odCxlKXt0LndyYXBNZXRob2QoImdldEl0ZW1Nb2RlbCIsZnVuY3Rpb24odCl7dmFyIGU9bC5fY2F0ZWdvcmllc01vZGVsc1t0LmdldFNoYWxsb3coImNhdGVnb3J5IildO3JldHVybiBlJiYoZS5wYXJlbnRNb2RlbD10LnBhcmVudE1vZGVsLHQucGFyZW50TW9kZWw9ZSksdH0pO3ZhciBpPWwuZ2V0TW9kZWwoImVkZ2VMYWJlbCIpLG49bmV3IElsKHtsYWJlbDppLm9wdGlvbn0saS5wYXJlbnRNb2RlbCxzKSxvPWwuZ2V0TW9kZWwoImVtcGhhc2lzLmVkZ2VMYWJlbCIpLGE9bmV3IElsKHtlbXBoYXNpczp7bGFiZWw6by5vcHRpb259fSxvLnBhcmVudE1vZGVsLHMpO2Z1bmN0aW9uIHIodCl7cmV0dXJuKHQ9dGhpcy5wYXJzZVBhdGgodCkpJiYibGFiZWwiPT09dFswXT9uOnQmJiJlbXBoYXNpcyI9PT10WzBdJiYibGFiZWwiPT09dFsxXT9hOnRoaXMucGFyZW50TW9kZWx9ZS53cmFwTWV0aG9kKCJnZXRJdGVtTW9kZWwiLGZ1bmN0aW9uKHQpe3JldHVybiB0LmN1c3RvbWl6ZUdldFBhcmVudChyKSx0fSl9KS5kYXRhfSxnZXRHcmFwaDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldERhdGEoKS5ncmFwaH0sZ2V0RWRnZURhdGE6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRHcmFwaCgpLmVkZ2VEYXRhfSxnZXRDYXRlZ29yaWVzRGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jYXRlZ29yaWVzRGF0YX0sZm9ybWF0VG9vbHRpcDpmdW5jdGlvbih0LGUsaSl7aWYoImVkZ2UiIT09aSlyZXR1cm4gWV8uc3VwZXJBcHBseSh0aGlzLCJmb3JtYXRUb29sdGlwIixhcmd1bWVudHMpO3ZhciBuPXRoaXMuZ2V0RGF0YSgpLG89dGhpcy5nZXREYXRhUGFyYW1zKHQsaSksYT1uLmdyYXBoLmdldEVkZ2VCeUluZGV4KHQpLHI9bi5nZXROYW1lKGEubm9kZTEuZGF0YUluZGV4KSxzPW4uZ2V0TmFtZShhLm5vZGUyLmRhdGFJbmRleCksbD1bXTtyZXR1cm4gbnVsbCE9ciYmbC5wdXNoKHIpLG51bGwhPXMmJmwucHVzaChzKSxsPWV1KGwuam9pbigiID4gIikpLG8udmFsdWUmJihsKz0iIDogIitldShvLnZhbHVlKSksbH0sX3VwZGF0ZUNhdGVnb3JpZXNEYXRhOmZ1bmN0aW9uKCl7dmFyIHQ9Tih0aGlzLm9wdGlvbi5jYXRlZ29yaWVzfHxbXSxmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dC52YWx1ZT90Okwoe3ZhbHVlOjB9LHQpfSksZT1uZXcgV2YoWyJ2YWx1ZSJdLHRoaXMpO2UuaW5pdERhdGEodCksdGhpcy5fY2F0ZWdvcmllc0RhdGE9ZSx0aGlzLl9jYXRlZ29yaWVzTW9kZWxzPWUubWFwQXJyYXkoZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0SXRlbU1vZGVsKHQsITApfSl9LHNldFpvb206ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uem9vbT10fSxzZXRDZW50ZXI6ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uY2VudGVyPXR9LGlzQW5pbWF0aW9uRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiBZXy5zdXBlckNhbGwodGhpcywiaXNBbmltYXRpb25FbmFibGVkIikmJiEoImZvcmNlIj09PXRoaXMuZ2V0KCJsYXlvdXQiKSYmdGhpcy5nZXQoImZvcmNlLmxheW91dEFuaW1hdGlvbiIpKX0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06InZpZXciLGxlZ2VuZEhvdmVyTGluazohMCxob3ZlckFuaW1hdGlvbjohMCxsYXlvdXQ6bnVsbCxmb2N1c05vZGVBZGphY2VuY3k6ITEsY2lyY3VsYXI6e3JvdGF0ZUxhYmVsOiExfSxmb3JjZTp7aW5pdExheW91dDpudWxsLHJlcHVsc2lvbjpbMCw1MF0sZ3Jhdml0eTouMSxmcmljdGlvbjouNixlZGdlTGVuZ3RoOjMwLGxheW91dEFuaW1hdGlvbjohMH0sbGVmdDoiY2VudGVyIix0b3A6ImNlbnRlciIsc3ltYm9sOiJjaXJjbGUiLHN5bWJvbFNpemU6MTAsZWRnZVN5bWJvbDpbIm5vbmUiLCJub25lIl0sZWRnZVN5bWJvbFNpemU6MTAsZWRnZUxhYmVsOntwb3NpdGlvbjoibWlkZGxlIn0sZHJhZ2dhYmxlOiExLHJvYW06ITEsY2VudGVyOm51bGwsem9vbToxLG5vZGVTY2FsZVJhdGlvOi42LGxhYmVsOntzaG93OiExLGZvcm1hdHRlcjoie2J9In0saXRlbVN0eWxlOnt9LGxpbmVTdHlsZTp7Y29sb3I6IiNhYWEiLHdpZHRoOjEsY3VydmVuZXNzOjAsb3BhY2l0eTouNX0sZW1waGFzaXM6e2xhYmVsOntzaG93OiEwfX19fSksal89b3MucHJvdG90eXBlLHFfPWxzLnByb3RvdHlwZTtmdW5jdGlvbiBLXyh0KXtyZXR1cm4gaXNOYU4oK3QuY3B4MSl8fGlzTmFOKCt0LmNweTEpfXZhciAkXz1Jcyh7dHlwZToiZWMtbGluZSIsc3R5bGU6e3N0cm9rZToiIzAwMCIsZmlsbDpudWxsfSxzaGFwZTp7eDE6MCx5MTowLHgyOjAseTI6MCxwZXJjZW50OjEsY3B4MTpudWxsLGNweTE6bnVsbH0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7dGhpc1tLXyhlKT8iX2J1aWxkUGF0aExpbmUiOiJfYnVpbGRQYXRoQ3VydmUiXSh0LGUpfSxfYnVpbGRQYXRoTGluZTpqXy5idWlsZFBhdGgsX2J1aWxkUGF0aEN1cnZlOnFfLmJ1aWxkUGF0aCxwb2ludEF0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW0tfKHRoaXMuc2hhcGUpPyJfcG9pbnRBdExpbmUiOiJfcG9pbnRBdEN1cnZlIl0odCl9LF9wb2ludEF0TGluZTpqXy5wb2ludEF0LF9wb2ludEF0Q3VydmU6cV8ucG9pbnRBdCx0YW5nZW50QXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5zaGFwZSxpPUtfKGUpP1tlLngyLWUueDEsZS55Mi1lLnkxXTp0aGlzLl90YW5nZW50QXRDdXJ2ZSh0KTtyZXR1cm4gbXQoaSxpKX0sX3RhbmdlbnRBdEN1cnZlOnFfLnRhbmdlbnRBdH0pLEpfPVsiZnJvbVN5bWJvbCIsInRvU3ltYm9sIl07ZnVuY3Rpb24gUV8odCl7cmV0dXJuIl8iK3QrIlR5cGUifWZ1bmN0aW9uIHR3KHQsZSxpKXt2YXIgbj1lLmdldEl0ZW1WaXN1YWwoaSwiY29sb3IiKSxvPWUuZ2V0SXRlbVZpc3VhbChpLHQpLGE9ZS5nZXRJdGVtVmlzdWFsKGksdCsiU2l6ZSIpO2lmKG8mJiJub25lIiE9PW8pe2soYSl8fChhPVthLGFdKTt2YXIgcj1tZyhvLC1hWzBdLzIsLWFbMV0vMixhWzBdLGFbMV0sbik7cmV0dXJuIHIubmFtZT10LHJ9fWZ1bmN0aW9uIGV3KHQsZSl7dC54MT1lWzBdWzBdLHQueTE9ZVswXVsxXSx0LngyPWVbMV1bMF0sdC55Mj1lWzFdWzFdLHQucGVyY2VudD0xO3ZhciBpPWVbMl07aT8odC5jcHgxPWlbMF0sdC5jcHkxPWlbMV0pOih0LmNweDE9TmFOLHQuY3B5MT1OYU4pfWZ1bmN0aW9uIGl3KHQsZSxpKXtJaS5jYWxsKHRoaXMpLHRoaXMuX2NyZWF0ZUxpbmUodCxlLGkpfXZhciBudz1pdy5wcm90b3R5cGU7ZnVuY3Rpb24gb3codCl7dGhpcy5fY3Rvcj10fHxpdyx0aGlzLmdyb3VwPW5ldyBJaX1udy5iZWZvcmVVcGRhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNoaWxkT2ZOYW1lKCJmcm9tU3ltYm9sIiksZT10aGlzLmNoaWxkT2ZOYW1lKCJ0b1N5bWJvbCIpLGk9dGhpcy5jaGlsZE9mTmFtZSgibGFiZWwiKTtpZih0fHxlfHwhaS5pZ25vcmUpe2Zvcih2YXIgbj0xLG89dGhpcy5wYXJlbnQ7bzspby5zY2FsZSYmKG4vPW8uc2NhbGVbMF0pLG89by5wYXJlbnQ7dmFyIGE9dGhpcy5jaGlsZE9mTmFtZSgibGluZSIpO2lmKHRoaXMuX19kaXJ0eXx8YS5fX2RpcnR5KXt2YXIgcj1hLnNoYXBlLnBlcmNlbnQscz1hLnBvaW50QXQoMCksbD1hLnBvaW50QXQociksdT1odChbXSxsLHMpO2lmKG10KHUsdSksdCl7dC5hdHRyKCJwb3NpdGlvbiIscyk7dmFyIGg9YS50YW5nZW50QXQoMCk7dC5hdHRyKCJyb3RhdGlvbiIsTWF0aC5QSS8yLU1hdGguYXRhbjIoaFsxXSxoWzBdKSksdC5hdHRyKCJzY2FsZSIsW24qcixuKnJdKX1pZihlKXtlLmF0dHIoInBvc2l0aW9uIixsKTtoPWEudGFuZ2VudEF0KDEpO2UuYXR0cigicm90YXRpb24iLC1NYXRoLlBJLzItTWF0aC5hdGFuMihoWzFdLGhbMF0pKSxlLmF0dHIoInNjYWxlIixbbipyLG4qcl0pfWlmKCFpLmlnbm9yZSl7dmFyIGMsZCxmO2kuYXR0cigicG9zaXRpb24iLGwpO3ZhciBwPTUqbjtpZigiZW5kIj09PWkuX19wb3NpdGlvbiljPVt1WzBdKnArbFswXSx1WzFdKnArbFsxXV0sZD0uODx1WzBdPyJsZWZ0Ijp1WzBdPC0uOD8icmlnaHQiOiJjZW50ZXIiLGY9Ljg8dVsxXT8idG9wIjp1WzFdPC0uOD8iYm90dG9tIjoibWlkZGxlIjtlbHNlIGlmKCJtaWRkbGUiPT09aS5fX3Bvc2l0aW9uKXt2YXIgZz1yLzIsbT1bKGg9YS50YW5nZW50QXQoZykpWzFdLC1oWzBdXSx2PWEucG9pbnRBdChnKTswPG1bMV0mJihtWzBdPS1tWzBdLG1bMV09LW1bMV0pLGM9W3ZbMF0rbVswXSpwLHZbMV0rbVsxXSpwXSxkPSJjZW50ZXIiLGY9ImJvdHRvbSI7dmFyIHk9LU1hdGguYXRhbjIoaFsxXSxoWzBdKTtsWzBdPHNbMF0mJih5PU1hdGguUEkreSksaS5hdHRyKCJyb3RhdGlvbiIseSl9ZWxzZSBjPVstdVswXSpwK3NbMF0sLXVbMV0qcCtzWzFdXSxkPS44PHVbMF0/InJpZ2h0Ijp1WzBdPC0uOD8ibGVmdCI6ImNlbnRlciIsZj0uODx1WzFdPyJib3R0b20iOnVbMV08LS44PyJ0b3AiOiJtaWRkbGUiO2kuYXR0cih7c3R5bGU6e3RleHRWZXJ0aWNhbEFsaWduOmkuX192ZXJ0aWNhbEFsaWdufHxmLHRleHRBbGlnbjppLl9fdGV4dEFsaWdufHxkfSxwb3NpdGlvbjpjLHNjYWxlOltuLG5dfSl9fX19LG53Ll9jcmVhdGVMaW5lPWZ1bmN0aW9uKGksbix0KXt2YXIgZT1pLmhvc3RNb2RlbCxvPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyAkXyh7bmFtZToibGluZSIsc3ViUGl4ZWxPcHRpbWl6ZTohMH0pO3JldHVybiBldyhlLnNoYXBlLHQpLGV9KGkuZ2V0SXRlbUxheW91dChuKSk7by5zaGFwZS5wZXJjZW50PTAsbGwobyx7c2hhcGU6e3BlcmNlbnQ6MX19LGUsbiksdGhpcy5hZGQobyk7dmFyIGE9bmV3IEZyKHtuYW1lOiJsYWJlbCIsbGluZUxhYmVsT3JpZ2luYWxPcGFjaXR5OjF9KTt0aGlzLmFkZChhKSxFKEpfLGZ1bmN0aW9uKHQpe3ZhciBlPXR3KHQsaSxuKTt0aGlzLmFkZChlKSx0aGlzW1FfKHQpXT1pLmdldEl0ZW1WaXN1YWwobix0KX0sdGhpcyksdGhpcy5fdXBkYXRlQ29tbW9uU3RsKGksbix0KX0sbncudXBkYXRlRGF0YT1mdW5jdGlvbihvLGEsdCl7dmFyIGU9by5ob3N0TW9kZWwsaT10aGlzLmNoaWxkT2ZOYW1lKCJsaW5lIiksbj1vLmdldEl0ZW1MYXlvdXQoYSkscj17c2hhcGU6e319O2V3KHIuc2hhcGUsbiksc2woaSxyLGUsYSksRShKXyxmdW5jdGlvbih0KXt2YXIgZT1vLmdldEl0ZW1WaXN1YWwoYSx0KSxpPVFfKHQpO2lmKHRoaXNbaV0hPT1lKXt0aGlzLnJlbW92ZSh0aGlzLmNoaWxkT2ZOYW1lKHQpKTt2YXIgbj10dyh0LG8sYSk7dGhpcy5hZGQobil9dGhpc1tpXT1lfSx0aGlzKSx0aGlzLl91cGRhdGVDb21tb25TdGwobyxhLHQpfSxudy5fdXBkYXRlQ29tbW9uU3RsPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10Lmhvc3RNb2RlbCxvPXRoaXMuY2hpbGRPZk5hbWUoImxpbmUiKSxhPWkmJmkubGluZVN0eWxlLHI9aSYmaS5ob3ZlckxpbmVTdHlsZSxzPWkmJmkubGFiZWxNb2RlbCxsPWkmJmkuaG92ZXJMYWJlbE1vZGVsO2lmKCFpfHx0Lmhhc0l0ZW1PcHRpb24pe3ZhciB1PXQuZ2V0SXRlbU1vZGVsKGUpO2E9dS5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCkscj11LmdldE1vZGVsKCJlbXBoYXNpcy5saW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSxzPXUuZ2V0TW9kZWwoImxhYmVsIiksbD11LmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbCIpfXZhciBoPXQuZ2V0SXRlbVZpc3VhbChlLCJjb2xvciIpLGM9Wih0LmdldEl0ZW1WaXN1YWwoZSwib3BhY2l0eSIpLGEub3BhY2l0eSwxKTtvLnVzZVN0eWxlKEMoe3N0cm9rZU5vU2NhbGU6ITAsZmlsbDoibm9uZSIsc3Ryb2tlOmgsb3BhY2l0eTpjfSxhKSksby5ob3ZlclN0eWxlPXIsRShKXyxmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoaWxkT2ZOYW1lKHQpO2UmJihlLnNldENvbG9yKGgpLGUuc2V0U3R5bGUoe29wYWNpdHk6Y30pKX0sdGhpcyk7dmFyIGQsZixwPXMuZ2V0U2hhbGxvdygic2hvdyIpLGc9bC5nZXRTaGFsbG93KCJzaG93IiksbT10aGlzLmNoaWxkT2ZOYW1lKCJsYWJlbCIpO2lmKChwfHxnKSYmKGQ9aHx8IiMwMDAiLG51bGw9PShmPW4uZ2V0Rm9ybWF0dGVkTGFiZWwoZSwibm9ybWFsIix0LmRhdGFUeXBlKSkpKXt2YXIgdj1uLmdldFJhd1ZhbHVlKGUpO2Y9bnVsbD09dj90LmdldE5hbWUoZSk6aXNGaW5pdGUodik/Tmwodik6dn12YXIgeT1wP2Y6bnVsbCx4PWc/SChuLmdldEZvcm1hdHRlZExhYmVsKGUsImVtcGhhc2lzIix0LmRhdGFUeXBlKSxmKTpudWxsLF89bS5zdHlsZTtudWxsPT15JiZudWxsPT14fHwoUXMobS5zdHlsZSxzLHt0ZXh0Onl9LHthdXRvQ29sb3I6ZH0pLG0uX190ZXh0QWxpZ249Xy50ZXh0QWxpZ24sbS5fX3ZlcnRpY2FsQWxpZ249Xy50ZXh0VmVydGljYWxBbGlnbixtLl9fcG9zaXRpb249cy5nZXQoInBvc2l0aW9uIil8fCJtaWRkbGUiKSxtLmhvdmVyU3R5bGU9bnVsbCE9eD97dGV4dDp4LHRleHRGaWxsOmwuZ2V0VGV4dENvbG9yKCEwKSxmb250U3R5bGU6bC5nZXRTaGFsbG93KCJmb250U3R5bGUiKSxmb250V2VpZ2h0OmwuZ2V0U2hhbGxvdygiZm9udFdlaWdodCIpLGZvbnRTaXplOmwuZ2V0U2hhbGxvdygiZm9udFNpemUiKSxmb250RmFtaWx5OmwuZ2V0U2hhbGxvdygiZm9udEZhbWlseSIpfTp7dGV4dDpudWxsfSxtLmlnbm9yZT0hcCYmIWcsWXModGhpcyl9LG53LmhpZ2hsaWdodD1mdW5jdGlvbigpe3RoaXMudHJpZ2dlcigiZW1waGFzaXMiKX0sbncuZG93bnBsYXk9ZnVuY3Rpb24oKXt0aGlzLnRyaWdnZXIoIm5vcm1hbCIpfSxudy51cGRhdGVMYXlvdXQ9ZnVuY3Rpb24odCxlKXt0aGlzLnNldExpbmVQb2ludHModC5nZXRJdGVtTGF5b3V0KGUpKX0sbncuc2V0TGluZVBvaW50cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoaWxkT2ZOYW1lKCJsaW5lIik7ZXcoZS5zaGFwZSx0KSxlLmRpcnR5KCl9LHcoaXcsSWkpO3ZhciBhdz1vdy5wcm90b3R5cGU7ZnVuY3Rpb24gcncodCl7dmFyIGU9dC5ob3N0TW9kZWw7cmV0dXJue2xpbmVTdHlsZTplLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSxob3ZlckxpbmVTdHlsZTplLmdldE1vZGVsKCJlbXBoYXNpcy5saW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSxsYWJlbE1vZGVsOmUuZ2V0TW9kZWwoImxhYmVsIiksaG92ZXJMYWJlbE1vZGVsOmUuZ2V0TW9kZWwoImVtcGhhc2lzLmxhYmVsIil9fWZ1bmN0aW9uIHN3KHQpe3JldHVybiBpc05hTih0WzBdKXx8aXNOYU4odFsxXSl9ZnVuY3Rpb24gbHcodCl7cmV0dXJuIXN3KHRbMF0pJiYhc3codFsxXSl9ZnVuY3Rpb24gdXcodCl7dmFyIGU9dC5jb29yZGluYXRlU3lzdGVtO2lmKCJ2aWV3IiE9PWUudHlwZSlyZXR1cm4gMTt2YXIgaT10Lm9wdGlvbi5ub2RlU2NhbGVSYXRpbyxuPWUuc2NhbGUsbz1uJiZuWzBdfHwxO3JldHVybigoZS5nZXRab29tKCktMSkqaSsxKS9vfWZ1bmN0aW9uIGh3KHQpe3ZhciBlPXQuZ2V0VmlzdWFsKCJzeW1ib2xTaXplIik7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheSYmKGU9KGVbMF0rZVsxXSkvMiksK2V9YXcuaXNQZXJzaXN0ZW50PWZ1bmN0aW9uKCl7cmV0dXJuITB9LGF3LnVwZGF0ZURhdGE9ZnVuY3Rpb24oaSl7dmFyIG49dGhpcyxlPW4uZ3JvdXAsbz1uLl9saW5lRGF0YTtuLl9saW5lRGF0YT1pLG98fGUucmVtb3ZlQWxsKCk7dmFyIGE9cncoaSk7aS5kaWZmKG8pLmFkZChmdW5jdGlvbih0KXshZnVuY3Rpb24odCxlLGksbil7aWYoIWx3KGUuZ2V0SXRlbUxheW91dChpKSkpcmV0dXJuO3ZhciBvPW5ldyB0Ll9jdG9yKGUsaSxuKTtlLnNldEl0ZW1HcmFwaGljRWwoaSxvKSx0Lmdyb3VwLmFkZChvKX0obixpLHQsYSl9KS51cGRhdGUoZnVuY3Rpb24odCxlKXshZnVuY3Rpb24odCxlLGksbixvLGEpe3ZhciByPWUuZ2V0SXRlbUdyYXBoaWNFbChuKTtpZighbHcoaS5nZXRJdGVtTGF5b3V0KG8pKSlyZXR1cm4gdC5ncm91cC5yZW1vdmUocik7cj9yLnVwZGF0ZURhdGEoaSxvLGEpOnI9bmV3IHQuX2N0b3IoaSxvLGEpO2kuc2V0SXRlbUdyYXBoaWNFbChvLHIpLHQuZ3JvdXAuYWRkKHIpfShuLG8saSxlLHQsYSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7ZS5yZW1vdmUoby5nZXRJdGVtR3JhcGhpY0VsKHQpKX0pLmV4ZWN1dGUoKX0sYXcudXBkYXRlTGF5b3V0PWZ1bmN0aW9uKCl7dmFyIGk9dGhpcy5fbGluZURhdGE7aSYmaS5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0LGUpe3QudXBkYXRlTGF5b3V0KGksZSl9LHRoaXMpfSxhdy5pbmNyZW1lbnRhbFByZXBhcmVVcGRhdGU9ZnVuY3Rpb24odCl7dGhpcy5fc2VyaWVzU2NvcGU9cncodCksdGhpcy5fbGluZURhdGE9bnVsbCx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpfSxhdy5pbmNyZW1lbnRhbFVwZGF0ZT1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkodCl7dC5pc0dyb3VwfHwodC5pbmNyZW1lbnRhbD10LnVzZUhvdmVyTGF5ZXI9ITApfWZvcih2YXIgbj10LnN0YXJ0O248dC5lbmQ7bisrKXtpZihsdyhlLmdldEl0ZW1MYXlvdXQobikpKXt2YXIgbz1uZXcgdGhpcy5fY3RvcihlLG4sdGhpcy5fc2VyaWVzU2NvcGUpO28udHJhdmVyc2UoaSksdGhpcy5ncm91cC5hZGQobyksZS5zZXRJdGVtR3JhcGhpY0VsKG4sbyl9fX0sYXcucmVtb3ZlPWZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJJbmNyZW1lbnRhbCgpLHRoaXMuX2luY3JlbWVudGFsPW51bGwsdGhpcy5ncm91cC5yZW1vdmVBbGwoKX0sYXcuX2NsZWFySW5jcmVtZW50YWw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9pbmNyZW1lbnRhbDt0JiZ0LmNsZWFyRGlzcGxheWJsZXMoKX07dmFyIGN3PVtdLGR3PVtdLGZ3PVtdLHB3PVRhLGd3PV90LG13PU1hdGguYWJzO2Z1bmN0aW9uIHZ3KHQsZSxpKXtmb3IodmFyIG4sbz10WzBdLGE9dFsxXSxyPXRbMl0scz0xLzAsbD1pKmksdT0uMSxoPS4xO2g8PS45O2grPS4xKXtjd1swXT1wdyhvWzBdLGFbMF0sclswXSxoKSxjd1sxXT1wdyhvWzFdLGFbMV0sclsxXSxoKSwoZj1tdyhndyhjdyxlKS1sKSk8cyYmKHM9ZixuPWgpfWZvcih2YXIgYz0wO2M8MzI7YysrKXt2YXIgZD1uK3U7ZHdbMF09cHcob1swXSxhWzBdLHJbMF0sbiksZHdbMV09cHcob1sxXSxhWzFdLHJbMV0sbiksZndbMF09cHcob1swXSxhWzBdLHJbMF0sZCksZndbMV09cHcob1sxXSxhWzFdLHJbMV0sZCk7dmFyIGY9Z3coZHcsZSktbDtpZihtdyhmKTwuMDEpYnJlYWs7dmFyIHA9Z3coZncsZSktbDt1Lz0yLGY8MD8wPD1wP24rPXU6bi09dTowPD1wP24tPXU6bis9dX1yZXR1cm4gbn1mdW5jdGlvbiB5dyh0LGwpe3ZhciB1PVtdLGg9Q2EsYz1bW10sW10sW11dLGQ9W1tdLFtdXSxmPVtdO2wvPTIsdC5lYWNoRWRnZShmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0TGF5b3V0KCksbj10LmdldFZpc3VhbCgiZnJvbVN5bWJvbCIpLG89dC5nZXRWaXN1YWwoInRvU3ltYm9sIik7aS5fX29yaWdpbmFsfHwoaS5fX29yaWdpbmFsPVtydChpWzBdKSxydChpWzFdKV0saVsyXSYmaS5fX29yaWdpbmFsLnB1c2gocnQoaVsyXSkpKTt2YXIgYT1pLl9fb3JpZ2luYWw7aWYobnVsbCE9aVsyXSl7aWYoYXQoY1swXSxhWzBdKSxhdChjWzFdLGFbMl0pLGF0KGNbMl0sYVsxXSksbiYmIm5vbmUiIT09bil7dmFyIHI9aHcodC5ub2RlMSkscz12dyhjLGFbMF0scipsKTtoKGNbMF1bMF0sY1sxXVswXSxjWzJdWzBdLHMsdSksY1swXVswXT11WzNdLGNbMV1bMF09dVs0XSxoKGNbMF1bMV0sY1sxXVsxXSxjWzJdWzFdLHMsdSksY1swXVsxXT11WzNdLGNbMV1bMV09dVs0XX1pZihvJiYibm9uZSIhPT1vKXtyPWh3KHQubm9kZTIpLHM9dncoYyxhWzFdLHIqbCk7aChjWzBdWzBdLGNbMV1bMF0sY1syXVswXSxzLHUpLGNbMV1bMF09dVsxXSxjWzJdWzBdPXVbMl0saChjWzBdWzFdLGNbMV1bMV0sY1syXVsxXSxzLHUpLGNbMV1bMV09dVsxXSxjWzJdWzFdPXVbMl19YXQoaVswXSxjWzBdKSxhdChpWzFdLGNbMl0pLGF0KGlbMl0sY1sxXSl9ZWxzZXtpZihhdChkWzBdLGFbMF0pLGF0KGRbMV0sYVsxXSksaHQoZixkWzFdLGRbMF0pLG10KGYsZiksbiYmIm5vbmUiIT09bil7cj1odyh0Lm5vZGUxKTt1dChkWzBdLGRbMF0sZixyKmwpfWlmKG8mJiJub25lIiE9PW8pe3I9aHcodC5ub2RlMik7dXQoZFsxXSxkWzFdLGYsLXIqbCl9YXQoaVswXSxkWzBdKSxhdChpWzFdLGRbMV0pfX0pfXZhciB4dz0iX19mb2N1c05vZGVBZGphY2VuY3kiLF93PSJfX3VuZm9jdXNOb2RlQWRqYWNlbmN5Iix3dz1bIml0ZW1TdHlsZSIsIm9wYWNpdHkiXSxidz1bImxpbmVTdHlsZSIsIm9wYWNpdHkiXTtmdW5jdGlvbiBTdyh0LGUpe3ZhciBpPXQuZ2V0VmlzdWFsKCJvcGFjaXR5Iik7cmV0dXJuIG51bGwhPWk/aTp0LmdldE1vZGVsKCkuZ2V0KGUpfWZ1bmN0aW9uIE13KHQsZSxpKXt2YXIgbj10LmdldEdyYXBoaWNFbCgpLG89U3codCxlKTtudWxsIT1pJiYobnVsbD09byYmKG89MSksbyo9aSksbi5kb3ducGxheSYmbi5kb3ducGxheSgpLG4udHJhdmVyc2UoZnVuY3Rpb24odCl7aWYoIXQuaXNHcm91cCl7dmFyIGU9dC5saW5lTGFiZWxPcmlnaW5hbE9wYWNpdHk7bnVsbCE9ZSYmbnVsbD09aXx8KGU9byksdC5zZXRTdHlsZSgib3BhY2l0eSIsZSl9fSl9ZnVuY3Rpb24gSXcodCxlKXt2YXIgaT1Tdyh0LGUpLG49dC5nZXRHcmFwaGljRWwoKTtuLnRyYXZlcnNlKGZ1bmN0aW9uKHQpe3QuaXNHcm91cHx8dC5zZXRTdHlsZSgib3BhY2l0eSIsaSl9KSxuLmhpZ2hsaWdodCYmbi5oaWdobGlnaHQoKX1NZih7dHlwZToiZ3JhcGgiLGluaXQ6ZnVuY3Rpb24odCxlKXt2YXIgaT1uZXcgJGcsbj1uZXcgb3csbz10aGlzLmdyb3VwO3RoaXMuX2NvbnRyb2xsZXI9bmV3IEx5KGUuZ2V0WnIoKSksdGhpcy5fY29udHJvbGxlckhvc3Q9e3RhcmdldDpvfSxvLmFkZChpLmdyb3VwKSxvLmFkZChuLmdyb3VwKSx0aGlzLl9zeW1ib2xEcmF3PWksdGhpcy5fbGluZURyYXc9bix0aGlzLl9maXJzdFJlbmRlcj0hMH0scmVuZGVyOmZ1bmN0aW9uKG8sdCxhKXt2YXIgcj10aGlzLGU9by5jb29yZGluYXRlU3lzdGVtO3RoaXMuX21vZGVsPW87dmFyIGk9dGhpcy5fc3ltYm9sRHJhdyxuPXRoaXMuX2xpbmVEcmF3LHM9dGhpcy5ncm91cDtpZigidmlldyI9PT1lLnR5cGUpe3ZhciBsPXtwb3NpdGlvbjplLnBvc2l0aW9uLHNjYWxlOmUuc2NhbGV9O3RoaXMuX2ZpcnN0UmVuZGVyP3MuYXR0cihsKTpzbChzLGwsbyl9eXcoby5nZXRHcmFwaCgpLHV3KG8pKTt2YXIgdT1vLmdldERhdGEoKTtpLnVwZGF0ZURhdGEodSk7dmFyIGg9by5nZXRFZGdlRGF0YSgpO24udXBkYXRlRGF0YShoKSx0aGlzLl91cGRhdGVOb2RlQW5kTGlua1NjYWxlKCksdGhpcy5fdXBkYXRlQ29udHJvbGxlcihvLHQsYSksY2xlYXJUaW1lb3V0KHRoaXMuX2xheW91dFRpbWVvdXQpO3ZhciBjPW8uZm9yY2VMYXlvdXQsZD1vLmdldCgiZm9yY2UubGF5b3V0QW5pbWF0aW9uIik7YyYmdGhpcy5fc3RhcnRGb3JjZUxheW91dEl0ZXJhdGlvbihjLGQpLHUuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxlKXt2YXIgaT11LmdldEl0ZW1Nb2RlbChlKTt0Lm9mZigiZHJhZyIpLm9mZigiZHJhZ2VuZCIpO3ZhciBuPWkuZ2V0KCJkcmFnZ2FibGUiKTtuJiZ0Lm9uKCJkcmFnIixmdW5jdGlvbigpe2MmJihjLndhcm1VcCgpLHRoaXMuX2xheW91dGluZ3x8dGhpcy5fc3RhcnRGb3JjZUxheW91dEl0ZXJhdGlvbihjLGQpLGMuc2V0Rml4ZWQoZSksdS5zZXRJdGVtTGF5b3V0KGUsdC5wb3NpdGlvbikpfSx0aGlzKS5vbigiZHJhZ2VuZCIsZnVuY3Rpb24oKXtjJiZjLnNldFVuZml4ZWQoZSl9LHRoaXMpLHQuc2V0RHJhZ2dhYmxlKG4mJmMpLHRbeHddJiZ0Lm9mZigibW91c2VvdmVyIix0W3h3XSksdFtfd10mJnQub2ZmKCJtb3VzZW91dCIsdFtfd10pLGkuZ2V0KCJmb2N1c05vZGVBZGphY2VuY3kiKSYmKHQub24oIm1vdXNlb3ZlciIsdFt4d109ZnVuY3Rpb24oKXtyLl9jbGVhclRpbWVyKCksYS5kaXNwYXRjaEFjdGlvbih7dHlwZToiZm9jdXNOb2RlQWRqYWNlbmN5IixzZXJpZXNJZDpvLmlkLGRhdGFJbmRleDp0LmRhdGFJbmRleH0pfSksdC5vbigibW91c2VvdXQiLHRbX3ddPWZ1bmN0aW9uKCl7ci5fZGlzcGF0Y2hVbmZvY3VzKGEpfSkpfSx0aGlzKSx1LmdyYXBoLmVhY2hFZGdlKGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0R3JhcGhpY0VsKCk7ZVt4d10mJmUub2ZmKCJtb3VzZW92ZXIiLGVbeHddKSxlW193XSYmZS5vZmYoIm1vdXNlb3V0IixlW193XSksdC5nZXRNb2RlbCgpLmdldCgiZm9jdXNOb2RlQWRqYWNlbmN5IikmJihlLm9uKCJtb3VzZW92ZXIiLGVbeHddPWZ1bmN0aW9uKCl7ci5fY2xlYXJUaW1lcigpLGEuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImZvY3VzTm9kZUFkamFjZW5jeSIsc2VyaWVzSWQ6by5pZCxlZGdlRGF0YUluZGV4OnQuZGF0YUluZGV4fSl9KSxlLm9uKCJtb3VzZW91dCIsZVtfd109ZnVuY3Rpb24oKXtyLl9kaXNwYXRjaFVuZm9jdXMoYSl9KSl9KTt2YXIgZj0iY2lyY3VsYXIiPT09by5nZXQoImxheW91dCIpJiZvLmdldCgiY2lyY3VsYXIucm90YXRlTGFiZWwiKSxwPXUuZ2V0TGF5b3V0KCJjeCIpLGc9dS5nZXRMYXlvdXQoImN5Iik7dS5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0LGUpe3ZhciBpPXUuZ2V0SXRlbU1vZGVsKGUpLmdldCgibGFiZWwucm90YXRlIil8fDAsbj10LmdldFN5bWJvbFBhdGgoKTtpZihmKXt2YXIgbz11LmdldEl0ZW1MYXlvdXQoZSksYT1NYXRoLmF0YW4yKG9bMV0tZyxvWzBdLXApO2E8MCYmKGE9MipNYXRoLlBJK2EpO3ZhciByPW9bMF08cDtyJiYoYS09TWF0aC5QSSk7dmFyIHM9cj8ibGVmdCI6InJpZ2h0IjtKcyhuLHt0ZXh0Um90YXRpb246LWEsdGV4dFBvc2l0aW9uOnMsdGV4dE9yaWdpbjoiY2VudGVyIn0se3RleHRQb3NpdGlvbjpzfSl9ZWxzZSBKcyhuLHt0ZXh0Um90YXRpb246aSo9TWF0aC5QSS8xODB9KX0pLHRoaXMuX2ZpcnN0UmVuZGVyPSExfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5fY29udHJvbGxlciYmdGhpcy5fY29udHJvbGxlci5kaXNwb3NlKCksdGhpcy5fY29udHJvbGxlckhvc3Q9e30sdGhpcy5fY2xlYXJUaW1lcigpfSxfZGlzcGF0Y2hVbmZvY3VzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpczt0aGlzLl9jbGVhclRpbWVyKCksdGhpcy5fdW5mb2N1c0RlbGF5VGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe2kuX3VuZm9jdXNEZWxheVRpbWVyPW51bGwsdC5kaXNwYXRjaEFjdGlvbih7dHlwZToidW5mb2N1c05vZGVBZGphY2VuY3kiLHNlcmllc0lkOmkuX21vZGVsLmlkfSl9LDUwMCl9LF9jbGVhclRpbWVyOmZ1bmN0aW9uKCl7dGhpcy5fdW5mb2N1c0RlbGF5VGltZXImJihjbGVhclRpbWVvdXQodGhpcy5fdW5mb2N1c0RlbGF5VGltZXIpLHRoaXMuX3VuZm9jdXNEZWxheVRpbWVyPW51bGwpfSxmb2N1c05vZGVBZGphY2VuY3k6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5fbW9kZWwuZ2V0RGF0YSgpLmdyYXBoLGE9bi5kYXRhSW5kZXgscj1uLmVkZ2VEYXRhSW5kZXgscz1vLmdldE5vZGVCeUluZGV4KGEpLGw9by5nZXRFZGdlQnlJbmRleChyKTsoc3x8bCkmJihvLmVhY2hOb2RlKGZ1bmN0aW9uKHQpe013KHQsd3csLjEpfSksby5lYWNoRWRnZShmdW5jdGlvbih0KXtNdyh0LGJ3LC4xKX0pLHMmJihJdyhzLHd3KSxFKHMuZWRnZXMsZnVuY3Rpb24odCl7dC5kYXRhSW5kZXg8MHx8KEl3KHQsYncpLEl3KHQubm9kZTEsd3cpLEl3KHQubm9kZTIsd3cpKX0pKSxsJiYoSXcobCxidyksSXcobC5ub2RlMSx3dyksSXcobC5ub2RlMix3dykpKX0sdW5mb2N1c05vZGVBZGphY2VuY3k6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5fbW9kZWwuZ2V0RGF0YSgpLmdyYXBoO28uZWFjaE5vZGUoZnVuY3Rpb24odCl7TXcodCx3dyl9KSxvLmVhY2hFZGdlKGZ1bmN0aW9uKHQpe013KHQsYncpfSl9LF9zdGFydEZvcmNlTGF5b3V0SXRlcmF0aW9uOmZ1bmN0aW9uKHQsaSl7dmFyIG49dGhpczshZnVuY3Rpb24gZSgpe3Quc3RlcChmdW5jdGlvbih0KXtuLnVwZGF0ZUxheW91dChuLl9tb2RlbCksKG4uX2xheW91dGluZz0hdCkmJihpP24uX2xheW91dFRpbWVvdXQ9c2V0VGltZW91dChlLDE2KTplKCkpfSl9KCl9LF91cGRhdGVDb250cm9sbGVyOmZ1bmN0aW9uKG8sdCxhKXt2YXIgZT10aGlzLl9jb250cm9sbGVyLGk9dGhpcy5fY29udHJvbGxlckhvc3Qscj10aGlzLmdyb3VwO2Uuc2V0UG9pbnRlckNoZWNrZXIoZnVuY3Rpb24odCxlLGkpe3ZhciBuPXIuZ2V0Qm91bmRpbmdSZWN0KCk7cmV0dXJuIG4uYXBwbHlUcmFuc2Zvcm0oci50cmFuc2Zvcm0pLG4uY29udGFpbihlLGkpJiYhV3kodCxhLG8pfSksInZpZXciPT09by5jb29yZGluYXRlU3lzdGVtLnR5cGU/KGUuZW5hYmxlKG8uZ2V0KCJyb2FtIikpLGkuem9vbUxpbWl0PW8uZ2V0KCJzY2FsZUxpbWl0IiksaS56b29tPW8uY29vcmRpbmF0ZVN5c3RlbS5nZXRab29tKCksZS5vZmYoInBhbiIpLm9mZigiem9vbSIpLm9uKCJwYW4iLGZ1bmN0aW9uKHQpe1Z5KGksdC5keCx0LmR5KSxhLmRpc3BhdGNoQWN0aW9uKHtzZXJpZXNJZDpvLmlkLHR5cGU6ImdyYXBoUm9hbSIsZHg6dC5keCxkeTp0LmR5fSl9KS5vbigiem9vbSIsZnVuY3Rpb24odCl7R3koaSx0LnNjYWxlLHQub3JpZ2luWCx0Lm9yaWdpblkpLGEuZGlzcGF0Y2hBY3Rpb24oe3Nlcmllc0lkOm8uaWQsdHlwZToiZ3JhcGhSb2FtIix6b29tOnQuc2NhbGUsb3JpZ2luWDp0Lm9yaWdpblgsb3JpZ2luWTp0Lm9yaWdpbll9KSx0aGlzLl91cGRhdGVOb2RlQW5kTGlua1NjYWxlKCkseXcoby5nZXRHcmFwaCgpLHV3KG8pKSx0aGlzLl9saW5lRHJhdy51cGRhdGVMYXlvdXQoKX0sdGhpcykpOmUuZGlzYWJsZSgpfSxfdXBkYXRlTm9kZUFuZExpbmtTY2FsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX21vZGVsLGU9dC5nZXREYXRhKCksaT11dyh0KSxuPVtpLGldO2UuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxlKXt0LmF0dHIoInNjYWxlIixuKX0pfSx1cGRhdGVMYXlvdXQ6ZnVuY3Rpb24odCl7eXcodC5nZXRHcmFwaCgpLHV3KHQpKSx0aGlzLl9zeW1ib2xEcmF3LnVwZGF0ZUxheW91dCgpLHRoaXMuX2xpbmVEcmF3LnVwZGF0ZUxheW91dCgpfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt0aGlzLl9zeW1ib2xEcmF3JiZ0aGlzLl9zeW1ib2xEcmF3LnJlbW92ZSgpLHRoaXMuX2xpbmVEcmF3JiZ0aGlzLl9saW5lRHJhdy5yZW1vdmUoKX19KSxnZih7dHlwZToiZm9jdXNOb2RlQWRqYWNlbmN5IixldmVudDoiZm9jdXNOb2RlQWRqYWNlbmN5Iix1cGRhdGU6InNlcmllczpmb2N1c05vZGVBZGphY2VuY3kifSxmdW5jdGlvbigpe30pLGdmKHt0eXBlOiJ1bmZvY3VzTm9kZUFkamFjZW5jeSIsZXZlbnQ6InVuZm9jdXNOb2RlQWRqYWNlbmN5Iix1cGRhdGU6InNlcmllczp1bmZvY3VzTm9kZUFkamFjZW5jeSJ9LGZ1bmN0aW9uKCl7fSk7Z2Yoe3R5cGU6ImdyYXBoUm9hbSIsZXZlbnQ6ImdyYXBoUm9hbSIsdXBkYXRlOiJub25lIn0sZnVuY3Rpb24oaSx0KXt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJzZXJpZXMiLHF1ZXJ5Oml9LGZ1bmN0aW9uKHQpe3ZhciBlPUt5KHQuY29vcmRpbmF0ZVN5c3RlbSxpKTt0LnNldENlbnRlciYmdC5zZXRDZW50ZXIoZS5jZW50ZXIpLHQuc2V0Wm9vbSYmdC5zZXRab29tKGUuem9vbSl9KX0pO2Z1bmN0aW9uIFR3KHQpe3JldHVybiB0IGluc3RhbmNlb2YgQXJyYXl8fCh0PVt0LHRdKSx0fWZ1bmN0aW9uIEF3KHQpe3ZhciBlPXQuY29vcmRpbmF0ZVN5c3RlbTtpZighZXx8InZpZXciPT09ZS50eXBlKXt2YXIgaT10LmdldEdyYXBoKCk7aS5lYWNoTm9kZShmdW5jdGlvbih0KXt2YXIgZT10LmdldE1vZGVsKCk7dC5zZXRMYXlvdXQoWytlLmdldCgieCIpLCtlLmdldCgieSIpXSl9KSxEdyhpKX19ZnVuY3Rpb24gRHcodCl7dC5lYWNoRWRnZShmdW5jdGlvbih0KXt2YXIgZT10LmdldE1vZGVsKCkuZ2V0KCJsaW5lU3R5bGUuY3VydmVuZXNzIil8fDAsaT1ydCh0Lm5vZGUxLmdldExheW91dCgpKSxuPXJ0KHQubm9kZTIuZ2V0TGF5b3V0KCkpLG89W2ksbl07K2UmJm8ucHVzaChbKGlbMF0rblswXSkvMi0oaVsxXS1uWzFdKSplLChpWzFdK25bMV0pLzItKG5bMF0taVswXSkqZV0pLHQuc2V0TGF5b3V0KG8pfSl9dmFyIEN3PU1hdGguUEksTHc9W107ZnVuY3Rpb24ga3codCxlKXt2YXIgaT10LmNvb3JkaW5hdGVTeXN0ZW07aWYoIWl8fCJ2aWV3Ij09PWkudHlwZSl7dmFyIG49aS5nZXRCb3VuZGluZ1JlY3QoKSxvPXQuZ2V0RGF0YSgpLGE9by5ncmFwaCxzPW4ud2lkdGgvMituLngsbD1uLmhlaWdodC8yK24ueSxyPU1hdGgubWluKG4ud2lkdGgsbi5oZWlnaHQpLzIsdT1vLmNvdW50KCk7by5zZXRMYXlvdXQoe2N4OnMsY3k6bH0pLHUmJihQd1tlXSh0LGksYSxvLHIscyxsLHUpLGEuZWFjaEVkZ2UoZnVuY3Rpb24odCl7dmFyIGUsaT10LmdldE1vZGVsKCkuZ2V0KCJsaW5lU3R5bGUuY3VydmVuZXNzIil8fDAsbj1ydCh0Lm5vZGUxLmdldExheW91dCgpKSxvPXJ0KHQubm9kZTIuZ2V0TGF5b3V0KCkpLGE9KG5bMF0rb1swXSkvMixyPShuWzFdK29bMV0pLzI7K2kmJihlPVtzKihpKj0zKSthKigxLWkpLGwqaStyKigxLWkpXSksdC5zZXRMYXlvdXQoW24sbyxlXSl9KSl9fXZhciBQdz17dmFsdWU6ZnVuY3Rpb24odCxlLGksbixvLGEscixzKXt2YXIgbD0wLHU9bi5nZXRTdW0oInZhbHVlIiksaD0yKk1hdGguUEkvKHV8fHMpO2kuZWFjaE5vZGUoZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRWYWx1ZSgidmFsdWUiKSxpPWgqKHU/ZToxKS8yO2wrPWksdC5zZXRMYXlvdXQoW28qTWF0aC5jb3MobCkrYSxvKk1hdGguc2luKGwpK3JdKSxsKz1pfSl9LHN5bWJvbFNpemU6ZnVuY3Rpb24odCxlLGksbixvLGEscixzKXt2YXIgbD0wO0x3Lmxlbmd0aD1zO3ZhciB1PXV3KHQpO2kuZWFjaE5vZGUoZnVuY3Rpb24odCl7dmFyIGU9aHcodCk7aXNOYU4oZSkmJihlPTIpLGU8MCYmKGU9MCksZSo9dTt2YXIgaT1NYXRoLmFzaW4oZS8yL28pO2lzTmFOKGkpJiYoaT1Ddy8yKSxMd1t0LmRhdGFJbmRleF09aSxsKz0yKml9KTt2YXIgaD0oMipDdy1sKS9zLzIsYz0wO2kuZWFjaE5vZGUoZnVuY3Rpb24odCl7dmFyIGU9aCtMd1t0LmRhdGFJbmRleF07Yys9ZSx0LnNldExheW91dChbbypNYXRoLmNvcyhjKSthLG8qTWF0aC5zaW4oYykrcl0pLGMrPWV9KX19LE53PXV0O3BmKGZ1bmN0aW9uKHQpe3ZhciBhPXQuZmluZENvbXBvbmVudHMoe21haW5UeXBlOiJsZWdlbmQifSk7YSYmYS5sZW5ndGgmJnQuZWFjaFNlcmllc0J5VHlwZSgiZ3JhcGgiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0Q2F0ZWdvcmllc0RhdGEoKSxuPXQuZ2V0R3JhcGgoKS5kYXRhLG89ZS5tYXBBcnJheShlLmdldE5hbWUpO24uZmlsdGVyU2VsZihmdW5jdGlvbih0KXt2YXIgZT1uLmdldEl0ZW1Nb2RlbCh0KS5nZXRTaGFsbG93KCJjYXRlZ29yeSIpO2lmKG51bGwhPWUpeyJudW1iZXIiPT10eXBlb2YgZSYmKGU9b1tlXSk7Zm9yKHZhciBpPTA7aTxhLmxlbmd0aDtpKyspaWYoIWFbaV0uaXNTZWxlY3RlZChlKSlyZXR1cm4hMX1yZXR1cm4hMH0pfSx0aGlzKX0pLHlmKE1tKCJncmFwaCIsImNpcmNsZSIsbnVsbCkpLHlmKGZ1bmN0aW9uKHQpe3ZhciBoPXt9O3QuZWFjaFNlcmllc0J5VHlwZSgiZ3JhcGgiLGZ1bmN0aW9uKHMpe3ZhciBsPXMuZ2V0Q2F0ZWdvcmllc0RhdGEoKSxvPXMuZ2V0RGF0YSgpLHU9e307bC5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0TmFtZSh0KTt1WyJlYy0iK2VdPXQ7dmFyIGk9bC5nZXRJdGVtTW9kZWwodCksbj1pLmdldCgiaXRlbVN0eWxlLmNvbG9yIil8fHMuZ2V0Q29sb3JGcm9tUGFsZXR0ZShlLGgpO2wuc2V0SXRlbVZpc3VhbCh0LCJjb2xvciIsbik7Zm9yKHZhciBvPVsib3BhY2l0eSIsInN5bWJvbCIsInN5bWJvbFNpemUiLCJzeW1ib2xLZWVwQXNwZWN0Il0sYT0wO2E8by5sZW5ndGg7YSsrKXt2YXIgcj1pLmdldFNoYWxsb3cob1thXSwhMCk7bnVsbCE9ciYmbC5zZXRJdGVtVmlzdWFsKHQsb1thXSxyKX19KSxsLmNvdW50KCkmJm8uZWFjaChmdW5jdGlvbih0KXt2YXIgZT1vLmdldEl0ZW1Nb2RlbCh0KS5nZXRTaGFsbG93KCJjYXRlZ29yeSIpO2lmKG51bGwhPWUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9dVsiZWMtIitlXSk7Zm9yKHZhciBpPVsiY29sb3IiLCJvcGFjaXR5Iiwic3ltYm9sIiwic3ltYm9sU2l6ZSIsInN5bWJvbEtlZXBBc3BlY3QiXSxuPTA7bjxpLmxlbmd0aDtuKyspbnVsbD09by5nZXRJdGVtVmlzdWFsKHQsaVtuXSwhMCkmJm8uc2V0SXRlbVZpc3VhbCh0LGlbbl0sbC5nZXRJdGVtVmlzdWFsKGUsaVtuXSkpfX0pfSl9KSx5ZihmdW5jdGlvbih0KXt0LmVhY2hTZXJpZXNCeVR5cGUoImdyYXBoIixmdW5jdGlvbih0KXt2YXIgcz10LmdldEdyYXBoKCksbD10LmdldEVkZ2VEYXRhKCksZT1Udyh0LmdldCgiZWRnZVN5bWJvbCIpKSxpPVR3KHQuZ2V0KCJlZGdlU3ltYm9sU2l6ZSIpKSx1PSJsaW5lU3R5bGUuY29sb3IiLnNwbGl0KCIuIiksaD0ibGluZVN0eWxlLm9wYWNpdHkiLnNwbGl0KCIuIik7bC5zZXRWaXN1YWwoImZyb21TeW1ib2wiLGUmJmVbMF0pLGwuc2V0VmlzdWFsKCJ0b1N5bWJvbCIsZSYmZVsxXSksbC5zZXRWaXN1YWwoImZyb21TeW1ib2xTaXplIixpJiZpWzBdKSxsLnNldFZpc3VhbCgidG9TeW1ib2xTaXplIixpJiZpWzFdKSxsLnNldFZpc3VhbCgiY29sb3IiLHQuZ2V0KHUpKSxsLnNldFZpc3VhbCgib3BhY2l0eSIsdC5nZXQoaCkpLGwuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1sLmdldEl0ZW1Nb2RlbCh0KSxpPXMuZ2V0RWRnZUJ5SW5kZXgodCksbj1UdyhlLmdldFNoYWxsb3coInN5bWJvbCIsITApKSxvPVR3KGUuZ2V0U2hhbGxvdygic3ltYm9sU2l6ZSIsITApKSxhPWUuZ2V0KHUpLHI9ZS5nZXQoaCk7c3dpdGNoKGEpe2Nhc2Uic291cmNlIjphPWkubm9kZTEuZ2V0VmlzdWFsKCJjb2xvciIpO2JyZWFrO2Nhc2UidGFyZ2V0IjphPWkubm9kZTIuZ2V0VmlzdWFsKCJjb2xvciIpfW5bMF0mJmkuc2V0VmlzdWFsKCJmcm9tU3ltYm9sIixuWzBdKSxuWzFdJiZpLnNldFZpc3VhbCgidG9TeW1ib2wiLG5bMV0pLG9bMF0mJmkuc2V0VmlzdWFsKCJmcm9tU3ltYm9sU2l6ZSIsb1swXSksb1sxXSYmaS5zZXRWaXN1YWwoInRvU3ltYm9sU2l6ZSIsb1sxXSksaS5zZXRWaXN1YWwoImNvbG9yIixhKSxpLnNldFZpc3VhbCgib3BhY2l0eSIscil9KX0pfSksdmYoZnVuY3Rpb24odCxlKXt0LmVhY2hTZXJpZXNCeVR5cGUoImdyYXBoIixmdW5jdGlvbih0KXt2YXIgZT10LmdldCgibGF5b3V0IiksaT10LmNvb3JkaW5hdGVTeXN0ZW07aWYoaSYmInZpZXciIT09aS50eXBlKXt2YXIgbj10LmdldERhdGEoKSxvPVtdO0UoaS5kaW1lbnNpb25zLGZ1bmN0aW9uKHQpe289by5jb25jYXQobi5tYXBEaW1lbnNpb24odCwhMCkpfSk7Zm9yKHZhciBhPTA7YTxuLmNvdW50KCk7YSsrKXtmb3IodmFyIHI9W10scz0hMSxsPTA7bDxvLmxlbmd0aDtsKyspe3ZhciB1PW4uZ2V0KG9bbF0sYSk7aXNOYU4odSl8fChzPSEwKSxyLnB1c2godSl9cz9uLnNldEl0ZW1MYXlvdXQoYSxpLmRhdGFUb1BvaW50KHIpKTpuLnNldEl0ZW1MYXlvdXQoYSxbTmFOLE5hTl0pfUR3KG4uZ3JhcGgpfWVsc2UgZSYmIm5vbmUiIT09ZXx8QXcodCl9KX0pLHZmKElkLlZJU1VBTC5QT1NUX0NIQVJUX0xBWU9VVCxmdW5jdGlvbih0KXt0LmVhY2hTZXJpZXNCeVR5cGUoImdyYXBoIixmdW5jdGlvbih0KXsiY2lyY3VsYXIiPT09dC5nZXQoImxheW91dCIpJiZrdyh0LCJzeW1ib2xTaXplIil9KX0pLHZmKGZ1bmN0aW9uKHQpe3QuZWFjaFNlcmllc0J5VHlwZSgiZ3JhcGgiLGZ1bmN0aW9uKHQpe2lmKCEobD10LmNvb3JkaW5hdGVTeXN0ZW0pfHwidmlldyI9PT1sLnR5cGUpaWYoImZvcmNlIj09PXQuZ2V0KCJsYXlvdXQiKSl7dmFyIGM9dC5wcmVzZXJ2ZWRQb2ludHN8fHt9LGQ9dC5nZXRHcmFwaCgpLGY9ZC5kYXRhLGU9ZC5lZGdlRGF0YSxpPXQuZ2V0TW9kZWwoImZvcmNlIiksbj1pLmdldCgiaW5pdExheW91dCIpO3QucHJlc2VydmVkUG9pbnRzP2YuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1mLmdldElkKHQpO2Yuc2V0SXRlbUxheW91dCh0LGNbZV18fFtOYU4sTmFOXSl9KTpuJiYibm9uZSIhPT1uPyJjaXJjdWxhciI9PT1uJiZrdyh0LCJ2YWx1ZSIpOkF3KHQpO3ZhciBvPWYuZ2V0RGF0YUV4dGVudCgidmFsdWUiKSxhPWUuZ2V0RGF0YUV4dGVudCgidmFsdWUiKSxyPWkuZ2V0KCJyZXB1bHNpb24iKSxzPWkuZ2V0KCJlZGdlTGVuZ3RoIik7ayhyKXx8KHI9W3Iscl0pLGsocyl8fChzPVtzLHNdKSxzPVtzWzFdLHNbMF1dO3ZhciBsLHU9Zi5tYXBBcnJheSgidmFsdWUiLGZ1bmN0aW9uKHQsZSl7dmFyIGk9Zi5nZXRJdGVtTGF5b3V0KGUpLG49a2wodCxvLHIpO3JldHVybiBpc05hTihuKSYmKG49KHJbMF0rclsxXSkvMikse3c6bixyZXA6bixmaXhlZDpmLmdldEl0ZW1Nb2RlbChlKS5nZXQoImZpeGVkIikscDohaXx8aXNOYU4oaVswXSl8fGlzTmFOKGlbMV0pP251bGw6aX19KSxoPWUubWFwQXJyYXkoInZhbHVlIixmdW5jdGlvbih0LGUpe3ZhciBpPWQuZ2V0RWRnZUJ5SW5kZXgoZSksbj1rbCh0LGEscyk7aXNOYU4obikmJihuPShzWzBdK3NbMV0pLzIpO3ZhciBvPWkuZ2V0TW9kZWwoKTtyZXR1cm57bjE6dVtpLm5vZGUxLmRhdGFJbmRleF0sbjI6dVtpLm5vZGUyLmRhdGFJbmRleF0sZDpuLGN1cnZlbmVzczpvLmdldCgibGluZVN0eWxlLmN1cnZlbmVzcyIpfHwwLGlnbm9yZUZvcmNlTGF5b3V0Om8uZ2V0KCJpZ25vcmVGb3JjZUxheW91dCIpfX0pLHA9KGw9dC5jb29yZGluYXRlU3lzdGVtKS5nZXRCb3VuZGluZ1JlY3QoKSxnPWZ1bmN0aW9uKGYscCx0KXtmb3IodmFyIGU9dC5yZWN0LGk9ZS53aWR0aCxuPWUuaGVpZ2h0LGc9W2UueCtpLzIsZS55K24vMl0sbT1udWxsPT10LmdyYXZpdHk/LjE6dC5ncmF2aXR5LG89MDtvPGYubGVuZ3RoO28rKyl7dmFyIGE9ZltvXTthLnB8fChhLnA9b3QoaSooTWF0aC5yYW5kb20oKS0uNSkrZ1swXSxuKihNYXRoLnJhbmRvbSgpLS41KStnWzFdKSksYS5wcD1ydChhLnApLGEuZWRnZXM9bnVsbH12YXIgcj1udWxsPT10LmZyaWN0aW9uPy42OnQuZnJpY3Rpb24sdj1yO3JldHVybnt3YXJtVXA6ZnVuY3Rpb24oKXt2PS44KnJ9LHNldEZpeGVkOmZ1bmN0aW9uKHQpe2ZbdF0uZml4ZWQ9ITB9LHNldFVuZml4ZWQ6ZnVuY3Rpb24odCl7Zlt0XS5maXhlZD0hMX0sc3RlcDpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10saT1mLmxlbmd0aCxuPTA7bjxwLmxlbmd0aDtuKyspe3ZhciBvPXBbbl07aWYoIW8uaWdub3JlRm9yY2VMYXlvdXQpe3ZhciBhPW8ubjE7aHQoZSwodT1vLm4yKS5wLGEucCk7dmFyIHI9Y3QoZSktby5kLHM9dS53LyhhLncrdS53KTtpc05hTihzKSYmKHM9MCksbXQoZSxlKSxhLmZpeGVkfHxOdyhhLnAsYS5wLGUscypyKnYpLHUuZml4ZWR8fE53KHUucCx1LnAsZSwtKDEtcykqcip2KX19Zm9yKG49MDtuPGk7bisrKXsoZD1mW25dKS5maXhlZHx8KGh0KGUsZyxkLnApLE53KGQucCxkLnAsZSxtKnYpKX1mb3Iobj0wO248aTtuKyspe2E9ZltuXTtmb3IodmFyIGw9bisxO2w8aTtsKyspe3ZhciB1O2h0KGUsKHU9ZltsXSkucCxhLnApLDA9PT0ocj1jdChlKSkmJihzdChlLE1hdGgucmFuZG9tKCktLjUsTWF0aC5yYW5kb20oKS0uNSkscj0xKTt2YXIgaD0oYS5yZXArdS5yZXApL3IvcjthLmZpeGVkfHxOdyhhLnBwLGEucHAsZSxoKSx1LmZpeGVkfHxOdyh1LnBwLHUucHAsZSwtaCl9fXZhciBjPVtdO2ZvcihuPTA7bjxpO24rKyl7dmFyIGQ7KGQ9ZltuXSkuZml4ZWR8fChodChjLGQucCxkLnBwKSxOdyhkLnAsZC5wLGMsdiksYXQoZC5wcCxkLnApKX12Kj0uOTkyLHQmJnQoZixwLHY8LjAxKX19fSh1LGgse3JlY3Q6cCxncmF2aXR5OmkuZ2V0KCJncmF2aXR5IiksZnJpY3Rpb246aS5nZXQoImZyaWN0aW9uIil9KSxtPWcuc3RlcDtnLnN0ZXA9ZnVuY3Rpb24oaCl7Zm9yKHZhciB0PTAsZT11Lmxlbmd0aDt0PGU7dCsrKXVbdF0uZml4ZWQmJmF0KHVbdF0ucCxkLmdldE5vZGVCeUluZGV4KHQpLmdldExheW91dCgpKTttKGZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49MCxvPXQubGVuZ3RoO248bztuKyspdFtuXS5maXhlZHx8ZC5nZXROb2RlQnlJbmRleChuKS5zZXRMYXlvdXQodFtuXS5wKSxjW2YuZ2V0SWQobildPXRbbl0ucDtmb3Iobj0wLG89ZS5sZW5ndGg7bjxvO24rKyl7dmFyIGE9ZVtuXSxyPWQuZ2V0RWRnZUJ5SW5kZXgobikscz1hLm4xLnAsbD1hLm4yLnAsdT1yLmdldExheW91dCgpOyh1PXU/dS5zbGljZSgpOltdKVswXT11WzBdfHxbXSx1WzFdPXVbMV18fFtdLGF0KHVbMF0scyksYXQodVsxXSxsKSwrYS5jdXJ2ZW5lc3MmJih1WzJdPVsoc1swXStsWzBdKS8yLShzWzFdLWxbMV0pKmEuY3VydmVuZXNzLChzWzFdK2xbMV0pLzItKGxbMF0tc1swXSkqYS5jdXJ2ZW5lc3NdKSxyLnNldExheW91dCh1KX1oJiZoKGkpfSl9LHQuZm9yY2VMYXlvdXQ9Zyx0LnByZXNlcnZlZFBvaW50cz1jLGcuc3RlcCgpfWVsc2UgdC5mb3JjZUxheW91dD1udWxsfSl9KSxtZigiZ3JhcGhWaWV3Iix7Y3JlYXRlOmZ1bmN0aW9uKHQsZCl7dmFyIGY9W107cmV0dXJuIHQuZWFjaFNlcmllc0J5VHlwZSgiZ3JhcGgiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0KCJjb29yZGluYXRlU3lzdGVtIik7aWYoIWV8fCJ2aWV3Ij09PWUpe3ZhciBpPXQuZ2V0RGF0YSgpLG49W10sbz1bXTtCYShpLm1hcEFycmF5KGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0SXRlbU1vZGVsKHQpO3JldHVyblsrZS5nZXQoIngiKSwrZS5nZXQoInkiKV19KSxuLG8pLG9bMF0tblswXT09MCYmKG9bMF0rPTEsblswXS09MSksb1sxXS1uWzFdPT0wJiYob1sxXSs9MSxuWzFdLT0xKTt2YXIgYT0ob1swXS1uWzBdKS8ob1sxXS1uWzFdKSxyPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldEJveExheW91dFBhcmFtcygpO3JldHVybiBuLmFzcGVjdD1pLHZ1KG4se3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0pfSh0LGQsYSk7aXNOYU4oYSkmJihuPVtyLngsci55XSxvPVtyLngrci53aWR0aCxyLnkrci5oZWlnaHRdKTt2YXIgcz1vWzBdLW5bMF0sbD1vWzFdLW5bMV0sdT1yLndpZHRoLGg9ci5oZWlnaHQsYz10LmNvb3JkaW5hdGVTeXN0ZW09bmV3IFF5O2Muem9vbUxpbWl0PXQuZ2V0KCJzY2FsZUxpbWl0IiksYy5zZXRCb3VuZGluZ1JlY3QoblswXSxuWzFdLHMsbCksYy5zZXRWaWV3UmVjdChyLngsci55LHUsaCksYy5zZXRDZW50ZXIodC5nZXQoImNlbnRlciIpKSxjLnNldFpvb20odC5nZXQoInpvb20iKSksZi5wdXNoKGMpfX0pLGZ9fSk7aWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuZ2F1Z2UiLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEJ2KHRoaXMsWyJ2YWx1ZSJdKX0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNlbnRlcjpbIjUwJSIsIjUwJSJdLGxlZ2VuZEhvdmVyTGluazohMCxyYWRpdXM6Ijc1JSIsc3RhcnRBbmdsZToyMjUsZW5kQW5nbGU6LTQ1LGNsb2Nrd2lzZTohMCxtaW46MCxtYXg6MTAwLHNwbGl0TnVtYmVyOjEwLGF4aXNMaW5lOntzaG93OiEwLGxpbmVTdHlsZTp7Y29sb3I6W1suMiwiIzkxYzdhZSJdLFsuOCwiIzYzODY5ZSJdLFsxLCIjYzIzNTMxIl1dLHdpZHRoOjMwfX0sc3BsaXRMaW5lOntzaG93OiEwLGxlbmd0aDozMCxsaW5lU3R5bGU6e2NvbG9yOiIjZWVlIix3aWR0aDoyLHR5cGU6InNvbGlkIn19LGF4aXNUaWNrOntzaG93OiEwLHNwbGl0TnVtYmVyOjUsbGVuZ3RoOjgsbGluZVN0eWxlOntjb2xvcjoiI2VlZSIsd2lkdGg6MSx0eXBlOiJzb2xpZCJ9fSxheGlzTGFiZWw6e3Nob3c6ITAsZGlzdGFuY2U6NSxjb2xvcjoiYXV0byJ9LHBvaW50ZXI6e3Nob3c6ITAsbGVuZ3RoOiI4MCUiLHdpZHRoOjh9LGl0ZW1TdHlsZTp7Y29sb3I6ImF1dG8ifSx0aXRsZTp7c2hvdzohMCxvZmZzZXRDZW50ZXI6WzAsIi00MCUiXSxjb2xvcjoiIzMzMyIsZm9udFNpemU6MTV9LGRldGFpbDp7c2hvdzohMCxiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkiLGJvcmRlcldpZHRoOjAsYm9yZGVyQ29sb3I6IiNjY2MiLHdpZHRoOjEwMCxoZWlnaHQ6bnVsbCxwYWRkaW5nOls1LDEwXSxvZmZzZXRDZW50ZXI6WzAsIjQwJSJdLGNvbG9yOiJhdXRvIixmb250U2l6ZTozMH19fSk7dmFyIE93PVNyLmV4dGVuZCh7dHlwZToiZWNoYXJ0c0dhdWdlUG9pbnRlciIsc2hhcGU6e2FuZ2xlOjAsd2lkdGg6MTAscjoxMCx4OjAseTowfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1NYXRoLmNvcyxuPU1hdGguc2luLG89ZS5yLGE9ZS53aWR0aCxyPWUuYW5nbGUscz1lLngtaShyKSphKihvLzM8PWE/MToyKSxsPWUueS1uKHIpKmEqKG8vMzw9YT8xOjIpO3I9ZS5hbmdsZS1NYXRoLlBJLzIsdC5tb3ZlVG8ocyxsKSx0LmxpbmVUbyhlLngraShyKSphLGUueStuKHIpKmEpLHQubGluZVRvKGUueCtpKGUuYW5nbGUpKm8sZS55K24oZS5hbmdsZSkqbyksdC5saW5lVG8oZS54LWkocikqYSxlLnktbihyKSphKSx0LmxpbmVUbyhzLGwpfX0pO2Z1bmN0aW9uIEV3KHQsZSl7cmV0dXJuIGUmJigic3RyaW5nIj09dHlwZW9mIGU/dD1lLnJlcGxhY2UoInt2YWx1ZX0iLG51bGwhPXQ/dDoiIik6ImZ1bmN0aW9uIj09dHlwZW9mIGUmJih0PWUodCkpKSx0fXZhciB6dz0yKk1hdGguUEksUnc9KGdjLmV4dGVuZCh7dHlwZToiZ2F1Z2UiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKTt2YXIgbj10LmdldCgiYXhpc0xpbmUubGluZVN0eWxlLmNvbG9yIiksbz1mdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0KCJjZW50ZXIiKSxuPWUuZ2V0V2lkdGgoKSxvPWUuZ2V0SGVpZ2h0KCksYT1NYXRoLm1pbihuLG8pO3JldHVybntjeDpQbChpWzBdLGUuZ2V0V2lkdGgoKSksY3k6UGwoaVsxXSxlLmdldEhlaWdodCgpKSxyOlBsKHQuZ2V0KCJyYWRpdXMiKSxhLzIpfX0odCxpKTt0aGlzLl9yZW5kZXJNYWluKHQsZSxpLG4sbyl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt9LF9yZW5kZXJNYWluOmZ1bmN0aW9uKHQsZSxpLG4sbyl7Zm9yKHZhciBhPXRoaXMuZ3JvdXAscj10LmdldE1vZGVsKCJheGlzTGluZSIpLHM9ci5nZXRNb2RlbCgibGluZVN0eWxlIiksbD10LmdldCgiY2xvY2t3aXNlIiksdT0tdC5nZXQoInN0YXJ0QW5nbGUiKS8xODAqTWF0aC5QSSxoPSgoZz0tdC5nZXQoImVuZEFuZ2xlIikvMTgwKk1hdGguUEkpLXUpJXp3LGM9dSxkPXMuZ2V0KCJ3aWR0aCIpLGY9ci5nZXQoInNob3ciKSxwPTA7ZiYmcDxuLmxlbmd0aDtwKyspe3ZhciBnLG09TWF0aC5taW4oTWF0aC5tYXgobltwXVswXSwwKSwxKSx2PW5ldyBVcih7c2hhcGU6e3N0YXJ0QW5nbGU6YyxlbmRBbmdsZTpnPXUraCptLGN4Om8uY3gsY3k6by5jeSxjbG9ja3dpc2U6bCxyMDpvLnItZCxyOm8ucn0sc2lsZW50OiEwfSk7di5zZXRTdHlsZSh7ZmlsbDpuW3BdWzFdfSksdi5zZXRTdHlsZShzLmdldExpbmVTdHlsZShbImNvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciJdKSksYS5hZGQodiksYz1nfWZ1bmN0aW9uIHkodCl7aWYodDw9MClyZXR1cm4gblswXVsxXTtmb3IodmFyIGU9MDtlPG4ubGVuZ3RoO2UrKylpZihuW2VdWzBdPj10JiYoMD09PWU/MDpuW2UtMV1bMF0pPHQpcmV0dXJuIG5bZV1bMV07cmV0dXJuIG5bZS0xXVsxXX1pZighbCl7dmFyIHg9dTt1PWcsZz14fXRoaXMuX3JlbmRlclRpY2tzKHQsZSxpLHksbyx1LGcsbCksdGhpcy5fcmVuZGVyUG9pbnRlcih0LGUsaSx5LG8sdSxnLGwpLHRoaXMuX3JlbmRlclRpdGxlKHQsZSxpLHksbyksdGhpcy5fcmVuZGVyRGV0YWlsKHQsZSxpLHksbyl9LF9yZW5kZXJUaWNrczpmdW5jdGlvbih0LGUsaSxuLG8sYSxyLHMpe2Zvcih2YXIgbD10aGlzLmdyb3VwLHU9by5jeCxoPW8uY3ksYz1vLnIsZD0rdC5nZXQoIm1pbiIpLGY9K3QuZ2V0KCJtYXgiKSxwPXQuZ2V0TW9kZWwoInNwbGl0TGluZSIpLGc9dC5nZXRNb2RlbCgiYXhpc1RpY2siKSxtPXQuZ2V0TW9kZWwoImF4aXNMYWJlbCIpLHY9dC5nZXQoInNwbGl0TnVtYmVyIikseT1nLmdldCgic3BsaXROdW1iZXIiKSx4PVBsKHAuZ2V0KCJsZW5ndGgiKSxjKSxfPVBsKGcuZ2V0KCJsZW5ndGgiKSxjKSx3PWEsYj0oci1hKS92LFM9Yi95LE09cC5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCksST1nLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSxUPTA7VDw9djtUKyspe3ZhciBBPU1hdGguY29zKHcpLEQ9TWF0aC5zaW4odyk7aWYocC5nZXQoInNob3ciKSl7dmFyIEM9bmV3IG9zKHtzaGFwZTp7eDE6QSpjK3UseTE6RCpjK2gseDI6QSooYy14KSt1LHkyOkQqKGMteCkraH0sc3R5bGU6TSxzaWxlbnQ6ITB9KTsiYXV0byI9PT1NLnN0cm9rZSYmQy5zZXRTdHlsZSh7c3Ryb2tlOm4oVC92KX0pLGwuYWRkKEMpfWlmKG0uZ2V0KCJzaG93Iikpe3ZhciBMPUV3KE5sKFQvdiooZi1kKStkKSxtLmdldCgiZm9ybWF0dGVyIikpLGs9bS5nZXQoImRpc3RhbmNlIiksUD1uKFQvdik7bC5hZGQobmV3IEZyKHtzdHlsZTpRcyh7fSxtLHt0ZXh0OkwseDpBKihjLXgtaykrdSx5OkQqKGMteC1rKStoLHRleHRWZXJ0aWNhbEFsaWduOkQ8LS40PyJ0b3AiOi40PEQ/ImJvdHRvbSI6Im1pZGRsZSIsdGV4dEFsaWduOkE8LS40PyJsZWZ0IjouNDxBPyJyaWdodCI6ImNlbnRlciJ9LHthdXRvQ29sb3I6UH0pLHNpbGVudDohMH0pKX1pZihnLmdldCgic2hvdyIpJiZUIT09dil7Zm9yKHZhciBOPTA7Tjw9eTtOKyspe0E9TWF0aC5jb3ModyksRD1NYXRoLnNpbih3KTt2YXIgTz1uZXcgb3Moe3NoYXBlOnt4MTpBKmMrdSx5MTpEKmMraCx4MjpBKihjLV8pK3UseTI6RCooYy1fKStofSxzaWxlbnQ6ITAsc3R5bGU6SX0pOyJhdXRvIj09PUkuc3Ryb2tlJiZPLnNldFN0eWxlKHtzdHJva2U6bigoVCtOL3kpL3YpfSksbC5hZGQoTyksdys9U313LT1TfWVsc2Ugdys9Yn19LF9yZW5kZXJQb2ludGVyOmZ1bmN0aW9uKG4sdCxlLG8sYSxpLHIscyl7dmFyIGw9dGhpcy5ncm91cCx1PXRoaXMuX2RhdGE7aWYobi5nZXQoInBvaW50ZXIuc2hvdyIpKXt2YXIgaD1bK24uZ2V0KCJtaW4iKSwrbi5nZXQoIm1heCIpXSxjPVtpLHJdLGQ9bi5nZXREYXRhKCksZj1kLm1hcERpbWVuc2lvbigidmFsdWUiKTtkLmRpZmYodSkuYWRkKGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBPdyh7c2hhcGU6e2FuZ2xlOml9fSk7bGwoZSx7c2hhcGU6e2FuZ2xlOmtsKGQuZ2V0KGYsdCksaCxjLCEwKX19LG4pLGwuYWRkKGUpLGQuc2V0SXRlbUdyYXBoaWNFbCh0LGUpfSkudXBkYXRlKGZ1bmN0aW9uKHQsZSl7dmFyIGk9dS5nZXRJdGVtR3JhcGhpY0VsKGUpO3NsKGkse3NoYXBlOnthbmdsZTprbChkLmdldChmLHQpLGgsYywhMCl9fSxuKSxsLmFkZChpKSxkLnNldEl0ZW1HcmFwaGljRWwodCxpKX0pLnJlbW92ZShmdW5jdGlvbih0KXt2YXIgZT11LmdldEl0ZW1HcmFwaGljRWwodCk7bC5yZW1vdmUoZSl9KS5leGVjdXRlKCksZC5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0LGUpe3ZhciBpPWQuZ2V0SXRlbU1vZGVsKGUpLG49aS5nZXRNb2RlbCgicG9pbnRlciIpO3Quc2V0U2hhcGUoe3g6YS5jeCx5OmEuY3ksd2lkdGg6UGwobi5nZXQoIndpZHRoIiksYS5yKSxyOlBsKG4uZ2V0KCJsZW5ndGgiKSxhLnIpfSksdC51c2VTdHlsZShpLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSksImF1dG8iPT09dC5zdHlsZS5maWxsJiZ0LnNldFN0eWxlKCJmaWxsIixvKGtsKGQuZ2V0KGYsZSksaCxbMCwxXSwhMCkpKSxZcyh0LGkuZ2V0TW9kZWwoImVtcGhhc2lzLml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZSgpKX0pLHRoaXMuX2RhdGE9ZH1lbHNlIHUmJnUuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCl7bC5yZW1vdmUodCl9KX0sX3JlbmRlclRpdGxlOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9dC5nZXREYXRhKCkscj1hLm1hcERpbWVuc2lvbigidmFsdWUiKSxzPXQuZ2V0TW9kZWwoInRpdGxlIik7aWYocy5nZXQoInNob3ciKSl7dmFyIGw9cy5nZXQoIm9mZnNldENlbnRlciIpLHU9by5jeCtQbChsWzBdLG8uciksaD1vLmN5K1BsKGxbMV0sby5yKSxjPSt0LmdldCgibWluIiksZD0rdC5nZXQoIm1heCIpLGY9bihrbCh0LmdldERhdGEoKS5nZXQociwwKSxbYyxkXSxbMCwxXSwhMCkpO3RoaXMuZ3JvdXAuYWRkKG5ldyBGcih7c2lsZW50OiEwLHN0eWxlOlFzKHt9LHMse3g6dSx5OmgsdGV4dDphLmdldE5hbWUoMCksdGV4dEFsaWduOiJjZW50ZXIiLHRleHRWZXJ0aWNhbEFsaWduOiJtaWRkbGUifSx7YXV0b0NvbG9yOmYsZm9yY2VSaWNoOiEwfSl9KSl9fSxfcmVuZGVyRGV0YWlsOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9dC5nZXRNb2RlbCgiZGV0YWlsIikscj0rdC5nZXQoIm1pbiIpLHM9K3QuZ2V0KCJtYXgiKTtpZihhLmdldCgic2hvdyIpKXt2YXIgbD1hLmdldCgib2Zmc2V0Q2VudGVyIiksdT1vLmN4K1BsKGxbMF0sby5yKSxoPW8uY3krUGwobFsxXSxvLnIpLGM9UGwoYS5nZXQoIndpZHRoIiksby5yKSxkPVBsKGEuZ2V0KCJoZWlnaHQiKSxvLnIpLGY9dC5nZXREYXRhKCkscD1mLmdldChmLm1hcERpbWVuc2lvbigidmFsdWUiKSwwKSxnPW4oa2wocCxbcixzXSxbMCwxXSwhMCkpO3RoaXMuZ3JvdXAuYWRkKG5ldyBGcih7c2lsZW50OiEwLHN0eWxlOlFzKHt9LGEse3g6dSx5OmgsdGV4dDpFdyhwLGEuZ2V0KCJmb3JtYXR0ZXIiKSksdGV4dFdpZHRoOmlzTmFOKGMpP251bGw6Yyx0ZXh0SGVpZ2h0OmlzTmFOKGQpP251bGw6ZCx0ZXh0QWxpZ246ImNlbnRlciIsdGV4dFZlcnRpY2FsQWxpZ246Im1pZGRsZSJ9LHthdXRvQ29sb3I6Zyxmb3JjZVJpY2g6ITB9KX0pKX19fSksU2Yoe3R5cGU6InNlcmllcy5mdW5uZWwiLGluaXQ6ZnVuY3Rpb24odCl7Uncuc3VwZXJBcHBseSh0aGlzLCJpbml0Iixhcmd1bWVudHMpLHRoaXMubGVnZW5kVmlzdWFsUHJvdmlkZXI9bmV3IEd2KEEodGhpcy5nZXREYXRhLHRoaXMpLEEodGhpcy5nZXRSYXdEYXRhLHRoaXMpKSx0aGlzLl9kZWZhdWx0TGFiZWxMaW5lKHQpfSxnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBCdih0aGlzLHtjb29yZERpbWVuc2lvbnM6WyJ2YWx1ZSJdLGVuY29kZURlZmF1bHRlcjpUKFl1LHRoaXMpfSl9LF9kZWZhdWx0TGFiZWxMaW5lOmZ1bmN0aW9uKHQpe3pvKHQsImxhYmVsTGluZSIsWyJzaG93Il0pO3ZhciBlPXQubGFiZWxMaW5lLGk9dC5lbXBoYXNpcy5sYWJlbExpbmU7ZS5zaG93PWUuc2hvdyYmdC5sYWJlbC5zaG93LGkuc2hvdz1pLnNob3cmJnQuZW1waGFzaXMubGFiZWwuc2hvd30sZ2V0RGF0YVBhcmFtczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGEoKSxpPVJ3LnN1cGVyQ2FsbCh0aGlzLCJnZXREYXRhUGFyYW1zIix0KSxuPWUubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLG89ZS5nZXRTdW0obik7cmV0dXJuIGkucGVyY2VudD1vPysoZS5nZXQobix0KS9vKjEwMCkudG9GaXhlZCgyKTowLGkuJHZhcnMucHVzaCgicGVyY2VudCIpLGl9LGRlZmF1bHRPcHRpb246e3psZXZlbDowLHo6MixsZWdlbmRIb3Zlckxpbms6ITAsbGVmdDo4MCx0b3A6NjAscmlnaHQ6ODAsYm90dG9tOjYwLG1pblNpemU6IjAlIixtYXhTaXplOiIxMDAlIixzb3J0OiJkZXNjZW5kaW5nIixnYXA6MCxmdW5uZWxBbGlnbjoiY2VudGVyIixsYWJlbDp7c2hvdzohMCxwb3NpdGlvbjoib3V0ZXIifSxsYWJlbExpbmU6e3Nob3c6ITAsbGVuZ3RoOjIwLGxpbmVTdHlsZTp7d2lkdGg6MSx0eXBlOiJzb2xpZCJ9fSxpdGVtU3R5bGU6e2JvcmRlckNvbG9yOiIjZmZmIixib3JkZXJXaWR0aDoxfSxlbXBoYXNpczp7bGFiZWw6e3Nob3c6ITB9fX19KSk7ZnVuY3Rpb24gQncodCxlKXtJaS5jYWxsKHRoaXMpO3ZhciBpPW5ldyBxcixuPW5ldyBLcixvPW5ldyBGcjt0aGlzLmFkZChpKSx0aGlzLmFkZChuKSx0aGlzLmFkZChvKSx0aGlzLmhpZ2hEb3duT25VcGRhdGU9ZnVuY3Rpb24odCxlKXsiZW1waGFzaXMiPT09ZT8obi5pZ25vcmU9bi5ob3Zlcklnbm9yZSxvLmlnbm9yZT1vLmhvdmVySWdub3JlKToobi5pZ25vcmU9bi5ub3JtYWxJZ25vcmUsby5pZ25vcmU9by5ub3JtYWxJZ25vcmUpfSx0aGlzLnVwZGF0ZURhdGEodCxlLCEwKX12YXIgVnc9QncucHJvdG90eXBlLEd3PVsiaXRlbVN0eWxlIiwib3BhY2l0eSJdO1Z3LnVwZGF0ZURhdGE9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuY2hpbGRBdCgwKSxvPXQuaG9zdE1vZGVsLGE9dC5nZXRJdGVtTW9kZWwoZSkscj10LmdldEl0ZW1MYXlvdXQoZSkscz10LmdldEl0ZW1Nb2RlbChlKS5nZXQoR3cpO3M9bnVsbD09cz8xOnMsbi51c2VTdHlsZSh7fSksaT8obi5zZXRTaGFwZSh7cG9pbnRzOnIucG9pbnRzfSksbi5zZXRTdHlsZSh7b3BhY2l0eTowfSksbGwobix7c3R5bGU6e29wYWNpdHk6c319LG8sZSkpOnNsKG4se3N0eWxlOntvcGFjaXR5OnN9LHNoYXBlOntwb2ludHM6ci5wb2ludHN9fSxvLGUpO3ZhciBsPWEuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLHU9dC5nZXRJdGVtVmlzdWFsKGUsImNvbG9yIik7bi5zZXRTdHlsZShDKHtsaW5lSm9pbjoicm91bmQiLGZpbGw6dX0sbC5nZXRJdGVtU3R5bGUoWyJvcGFjaXR5Il0pKSksbi5ob3ZlclN0eWxlPWwuZ2V0TW9kZWwoImVtcGhhc2lzIikuZ2V0SXRlbVN0eWxlKCksdGhpcy5fdXBkYXRlTGFiZWwodCxlKSxZcyh0aGlzKX0sVncuX3VwZGF0ZUxhYmVsPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5jaGlsZEF0KDEpLG49dGhpcy5jaGlsZEF0KDIpLG89dC5ob3N0TW9kZWwsYT10LmdldEl0ZW1Nb2RlbChlKSxyPXQuZ2V0SXRlbUxheW91dChlKS5sYWJlbCxzPXQuZ2V0SXRlbVZpc3VhbChlLCJjb2xvciIpO3NsKGkse3NoYXBlOntwb2ludHM6ci5saW5lUG9pbnRzfHxyLmxpbmVQb2ludHN9fSxvLGUpLHNsKG4se3N0eWxlOnt4OnIueCx5OnIueX19LG8sZSksbi5hdHRyKHtyb3RhdGlvbjpyLnJvdGF0aW9uLG9yaWdpbjpbci54LHIueV0sejI6MTB9KTt2YXIgbD1hLmdldE1vZGVsKCJsYWJlbCIpLHU9YS5nZXRNb2RlbCgiZW1waGFzaXMubGFiZWwiKSxoPWEuZ2V0TW9kZWwoImxhYmVsTGluZSIpLGM9YS5nZXRNb2RlbCgiZW1waGFzaXMubGFiZWxMaW5lIik7cz10LmdldEl0ZW1WaXN1YWwoZSwiY29sb3IiKTskcyhuLnN0eWxlLG4uaG92ZXJTdHlsZT17fSxsLHUse2xhYmVsRmV0Y2hlcjp0Lmhvc3RNb2RlbCxsYWJlbERhdGFJbmRleDplLGRlZmF1bHRUZXh0OnQuZ2V0TmFtZShlKSxhdXRvQ29sb3I6cyx1c2VJbnNpZGVTdHlsZTohIXIuaW5zaWRlfSx7dGV4dEFsaWduOnIudGV4dEFsaWduLHRleHRWZXJ0aWNhbEFsaWduOnIudmVydGljYWxBbGlnbn0pLG4uaWdub3JlPW4ubm9ybWFsSWdub3JlPSFsLmdldCgic2hvdyIpLG4uaG92ZXJJZ25vcmU9IXUuZ2V0KCJzaG93IiksaS5pZ25vcmU9aS5ub3JtYWxJZ25vcmU9IWguZ2V0KCJzaG93IiksaS5ob3Zlcklnbm9yZT0hYy5nZXQoInNob3ciKSxpLnNldFN0eWxlKHtzdHJva2U6c30pLGkuc2V0U3R5bGUoaC5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCkpLGkuaG92ZXJTdHlsZT1jLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKX0sdyhCdyxJaSk7Z2MuZXh0ZW5kKHt0eXBlOiJmdW5uZWwiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5nZXREYXRhKCksbz10aGlzLl9kYXRhLGE9dGhpcy5ncm91cDtuLmRpZmYobykuYWRkKGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBCdyhuLHQpO24uc2V0SXRlbUdyYXBoaWNFbCh0LGUpLGEuYWRkKGUpfSkudXBkYXRlKGZ1bmN0aW9uKHQsZSl7dmFyIGk9by5nZXRJdGVtR3JhcGhpY0VsKGUpO2kudXBkYXRlRGF0YShuLHQpLGEuYWRkKGkpLG4uc2V0SXRlbUdyYXBoaWNFbCh0LGkpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPW8uZ2V0SXRlbUdyYXBoaWNFbCh0KTthLnJlbW92ZShlKX0pLmV4ZWN1dGUoKSx0aGlzLl9kYXRhPW59LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fZGF0YT1udWxsfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fX0pO3lmKFl2KCJmdW5uZWwiKSksdmYoZnVuY3Rpb24odCx3LGUpe3QuZWFjaFNlcmllc0J5VHlwZSgiZnVubmVsIixmdW5jdGlvbih0KXt2YXIgbz10LmdldERhdGEoKSxhPW8ubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLGU9dC5nZXQoInNvcnQiKSxyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZ1KHQuZ2V0Qm94TGF5b3V0UGFyYW1zKCkse3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0pfSh0LHcpLGk9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dC5tYXBEaW1lbnNpb24oInZhbHVlIiksbj10Lm1hcEFycmF5KGksZnVuY3Rpb24odCl7cmV0dXJuIHR9KSxvPVtdLGE9ImFzY2VuZGluZyI9PT1lLHI9MCxzPXQuY291bnQoKTtyPHM7cisrKW9bcl09cjtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZT9vLnNvcnQoZSk6Im5vbmUiIT09ZSYmby5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGE/blt0XS1uW2VdOm5bZV0tblt0XX0pLG99KG8sZSkscz1bUGwodC5nZXQoIm1pblNpemUiKSxyLndpZHRoKSxQbCh0LmdldCgibWF4U2l6ZSIpLHIud2lkdGgpXSxuPW8uZ2V0RGF0YUV4dGVudChhKSxsPXQuZ2V0KCJtaW4iKSx1PXQuZ2V0KCJtYXgiKTtudWxsPT1sJiYobD1NYXRoLm1pbihuWzBdLDApKSxudWxsPT11JiYodT1uWzFdKTtmdW5jdGlvbiBoKHQsZSl7dmFyIGksbj1rbChvLmdldChhLHQpfHwwLFtsLHVdLHMsITApO3N3aXRjaChjKXtjYXNlImxlZnQiOmk9ci54O2JyZWFrO2Nhc2UiY2VudGVyIjppPXIueCsoci53aWR0aC1uKS8yO2JyZWFrO2Nhc2UicmlnaHQiOmk9ci54K3Iud2lkdGgtbn1yZXR1cm5bW2ksZV0sW2krbixlXV19dmFyIGM9dC5nZXQoImZ1bm5lbEFsaWduIiksZD10LmdldCgiZ2FwIiksZj0oci5oZWlnaHQtZCooby5jb3VudCgpLTEpKS9vLmNvdW50KCkscD1yLnk7ImFzY2VuZGluZyI9PT1lJiYoZj0tZixkPS1kLHArPXIuaGVpZ2h0LGk9aS5yZXZlcnNlKCkpO2Zvcih2YXIgZz0wO2c8aS5sZW5ndGg7ZysrKXt2YXIgbT1pW2ddLHY9aVtnKzFdLHk9by5nZXRJdGVtTW9kZWwobSkuZ2V0KCJpdGVtU3R5bGUuaGVpZ2h0Iik7bnVsbD09eT95PWY6KHk9UGwoeSxyLmhlaWdodCksImFzY2VuZGluZyI9PT1lJiYoeT0teSkpO3ZhciB4PWgobSxwKSxfPWgodixwK3kpO3ArPXkrZCxvLnNldEl0ZW1MYXlvdXQobSx7cG9pbnRzOnguY29uY2F0KF8uc2xpY2UoKS5yZXZlcnNlKCkpfSl9IWZ1bmN0aW9uKGcpe2cuZWFjaChmdW5jdGlvbih0KXt2YXIgZSxpLG4sbyxhPWcuZ2V0SXRlbU1vZGVsKHQpLHI9YS5nZXRNb2RlbCgibGFiZWwiKS5nZXQoInBvc2l0aW9uIikscz1hLmdldE1vZGVsKCJsYWJlbExpbmUiKSxsPWcuZ2V0SXRlbUxheW91dCh0KSx1PWwucG9pbnRzLGg9ImlubmVyIj09PXJ8fCJpbnNpZGUiPT09cnx8ImNlbnRlciI9PT1yfHwiaW5zaWRlTGVmdCI9PT1yfHwiaW5zaWRlUmlnaHQiPT09cjtpZihoKWU9Imluc2lkZUxlZnQiPT09cj8oaT0odVswXVswXSt1WzNdWzBdKS8yKzUsbj0odVswXVsxXSt1WzNdWzFdKS8yLCJsZWZ0Iik6Imluc2lkZVJpZ2h0Ij09PXI/KGk9KHVbMV1bMF0rdVsyXVswXSkvMi01LG49KHVbMV1bMV0rdVsyXVsxXSkvMiwicmlnaHQiKTooaT0odVswXVswXSt1WzFdWzBdK3VbMl1bMF0rdVszXVswXSkvNCxuPSh1WzBdWzFdK3VbMV1bMV0rdVsyXVsxXSt1WzNdWzFdKS80LCJjZW50ZXIiKSxvPVtbaSxuXSxbaSxuXV07ZWxzZXt2YXIgYyxkLGYscD1zLmdldCgibGVuZ3RoIik7ZT0ibGVmdCI9PT1yPyhjPSh1WzNdWzBdK3VbMF1bMF0pLzIsZD0odVszXVsxXSt1WzBdWzFdKS8yLGk9KGY9Yy1wKS01LCJyaWdodCIpOiJyaWdodCI9PT1yPyhjPSh1WzFdWzBdK3VbMl1bMF0pLzIsZD0odVsxXVsxXSt1WzJdWzFdKS8yLGk9KGY9YytwKSs1LCJsZWZ0Iik6InJpZ2h0VG9wIj09PXI/KGM9dVsxXVswXSxkPXVbMV1bMV0saT0oZj1jK3ApKzUsInRvcCIpOiJyaWdodEJvdHRvbSI9PT1yPyhjPXVbMl1bMF0sZD11WzJdWzFdLGk9KGY9YytwKSs1LCJib3R0b20iKToibGVmdFRvcCI9PT1yPyhjPXVbMF1bMF0sZD11WzFdWzFdLGk9KGY9Yy1wKS01LCJyaWdodCIpOiJsZWZ0Qm90dG9tIj09PXI/KGM9dVszXVswXSxkPXVbMl1bMV0saT0oZj1jLXApLTUsInJpZ2h0Iik6KGM9KHVbMV1bMF0rdVsyXVswXSkvMixkPSh1WzFdWzFdK3VbMl1bMV0pLzIsaT0oZj1jK3ApKzUsImxlZnQiKTtvPVtbYyxkXSxbZixkXV0sbj1kfWwubGFiZWw9e2xpbmVQb2ludHM6byx4OmkseTpuLHZlcnRpY2FsQWxpZ246Im1pZGRsZSIsdGV4dEFsaWduOmUsaW5zaWRlOmh9fSl9KG8pfSl9KSxwZih0eSgiZnVubmVsIikpO2Z1bmN0aW9uIEZ3KHQsZSxpLG4sbyl7RWcuY2FsbCh0aGlzLHQsZSxpKSx0aGlzLnR5cGU9bnx8InZhbHVlIix0aGlzLmF4aXNJbmRleD1vfUZ3LnByb3RvdHlwZT17Y29uc3RydWN0b3I6RncsbW9kZWw6bnVsbCxpc0hvcml6b250YWw6ZnVuY3Rpb24oKXtyZXR1cm4iaG9yaXpvbnRhbCIhPT10aGlzLmNvb3JkaW5hdGVTeXN0ZW0uZ2V0TW9kZWwoKS5nZXQoImxheW91dCIpfX0sdyhGdyxFZyk7ZnVuY3Rpb24gV3codCxlLGksbixvLGEpe3Q9dHx8MDt2YXIgcj1pWzFdLWlbMF07aWYobnVsbCE9byYmKG89WncobyxbMCxyXSkpLG51bGwhPWEmJihhPU1hdGgubWF4KGEsbnVsbCE9bz9vOjApKSwiYWxsIj09PW4pe3ZhciBzPU1hdGguYWJzKGVbMV0tZVswXSk7bz1hPVp3KHM9WncocyxbMCxyXSksW28sYV0pLG49MH1lWzBdPVp3KGVbMF0saSksZVsxXT1adyhlWzFdLGkpO3ZhciBsPUh3KGUsbik7ZVtuXSs9dDt2YXIgdT1vfHwwLGg9aS5zbGljZSgpO2wuc2lnbjwwP2hbMF0rPXU6aFsxXS09dSxlW25dPVp3KGVbbl0saCk7dmFyIGM9SHcoZSxuKTtyZXR1cm4gbnVsbCE9byYmKGMuc2lnbiE9PWwuc2lnbnx8Yy5zcGFuPG8pJiYoZVsxLW5dPWVbbl0rbC5zaWduKm8pLGM9SHcoZSxuKSxudWxsIT1hJiZjLnNwYW4+YSYmKGVbMS1uXT1lW25dK2Muc2lnbiphKSxlfWZ1bmN0aW9uIEh3KHQsZSl7dmFyIGk9dFtlXS10WzEtZV07cmV0dXJue3NwYW46TWF0aC5hYnMoaSksc2lnbjowPGk/LTE6aTwwPzE6ZT8tMToxfX1mdW5jdGlvbiBadyh0LGUpe3JldHVybiBNYXRoLm1pbihudWxsIT1lWzFdP2VbMV06MS8wLE1hdGgubWF4KG51bGwhPWVbMF0/ZVswXTotMS8wLHQpKX12YXIgVXc9RSxYdz1NYXRoLm1pbixZdz1NYXRoLm1heCxqdz1NYXRoLmZsb29yLHF3PU1hdGguY2VpbCxLdz1ObCwkdz1NYXRoLlBJO2Z1bmN0aW9uIEp3KHQsZSxpKXt0aGlzLl9heGVzTWFwPVEoKSx0aGlzLl9heGVzTGF5b3V0PXt9LHRoaXMuZGltZW5zaW9ucz10LmRpbWVuc2lvbnMsdGhpcy5fcmVjdCx0aGlzLl9tb2RlbD10LHRoaXMuX2luaXQodCxlLGkpfWZ1bmN0aW9uIFF3KHQsZSl7cmV0dXJuIFh3KFl3KHQsZVswXSksZVsxXSl9SncucHJvdG90eXBlPXt0eXBlOiJwYXJhbGxlbCIsY29uc3RydWN0b3I6SncsX2luaXQ6ZnVuY3Rpb24odCxyLGUpe3ZhciBpPXQuZGltZW5zaW9ucyxzPXQucGFyYWxsZWxBeGlzSW5kZXg7VXcoaSxmdW5jdGlvbih0LGUpe3ZhciBpPXNbZV0sbj1yLmdldENvbXBvbmVudCgicGFyYWxsZWxBeGlzIixpKSxvPXRoaXMuX2F4ZXNNYXAuc2V0KHQsbmV3IEZ3KHQsaWcobiksWzAsMF0sbi5nZXQoInR5cGUiKSxpKSksYT0iY2F0ZWdvcnkiPT09by50eXBlO28ub25CYW5kPWEmJm4uZ2V0KCJib3VuZGFyeUdhcCIpLG8uaW52ZXJzZT1uLmdldCgiaW52ZXJzZSIpLChuLmF4aXM9bykubW9kZWw9bixvLmNvb3JkaW5hdGVTeXN0ZW09bi5jb29yZGluYXRlU3lzdGVtPXRoaXN9LHRoaXMpfSx1cGRhdGU6ZnVuY3Rpb24odCxlKXt0aGlzLl91cGRhdGVBeGVzRnJvbVNlcmllcyh0aGlzLl9tb2RlbCx0KX0sY29udGFpblBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX21ha2VMYXlvdXRJbmZvKCksaT1lLmF4aXNCYXNlLG49ZS5sYXlvdXRCYXNlLG89ZS5waXhlbERpbUluZGV4LGE9dFsxLW9dLHI9dFtvXTtyZXR1cm4gaTw9YSYmYTw9aStlLmF4aXNMZW5ndGgmJm48PXImJnI8PW4rZS5sYXlvdXRMZW5ndGh9LGdldE1vZGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vZGVsfSxfdXBkYXRlQXhlc0Zyb21TZXJpZXM6ZnVuY3Rpb24oZSxuKXtuLmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7aWYoZS5jb250YWlucyh0LG4pKXt2YXIgaT10LmdldERhdGEoKTtVdyh0aGlzLmRpbWVuc2lvbnMsZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fYXhlc01hcC5nZXQodCk7ZS5zY2FsZS51bmlvbkV4dGVudEZyb21EYXRhKGksaS5tYXBEaW1lbnNpb24odCkpLGVnKGUuc2NhbGUsZS5tb2RlbCl9LHRoaXMpfX0sdGhpcyl9LHJlc2l6ZTpmdW5jdGlvbih0LGUpe3RoaXMuX3JlY3Q9dnUodC5nZXRCb3hMYXlvdXRQYXJhbXMoKSx7d2lkdGg6ZS5nZXRXaWR0aCgpLGhlaWdodDplLmdldEhlaWdodCgpfSksdGhpcy5fbGF5b3V0QXhlcygpfSxnZXRSZWN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlY3R9LF9tYWtlTGF5b3V0SW5mbzpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5fbW9kZWwsaT10aGlzLl9yZWN0LG49WyJ4IiwieSJdLG89WyJ3aWR0aCIsImhlaWdodCJdLGE9ZS5nZXQoImxheW91dCIpLHI9Imhvcml6b250YWwiPT09YT8wOjEscz1pW29bcl1dLGw9WzAsc10sdT10aGlzLmRpbWVuc2lvbnMubGVuZ3RoLGg9UXcoZS5nZXQoImF4aXNFeHBhbmRXaWR0aCIpLGwpLGM9UXcoZS5nZXQoImF4aXNFeHBhbmRDb3VudCIpfHwwLFswLHVdKSxkPWUuZ2V0KCJheGlzRXhwYW5kYWJsZSIpJiYzPHUmJmM8dSYmMTxjJiYwPGgmJjA8cyxmPWUuZ2V0KCJheGlzRXhwYW5kV2luZG93Iik7Zj8odD1RdyhmWzFdLWZbMF0sbCksZlsxXT1mWzBdK3QpOih0PVF3KGgqKGMtMSksbCksKGY9W2gqKGUuZ2V0KCJheGlzRXhwYW5kQ2VudGVyIil8fGp3KHUvMikpLXQvMl0pWzFdPWZbMF0rdCk7dmFyIHA9KHMtdCkvKHUtYyk7cDwzJiYocD0wKTt2YXIgZz1bancoS3coZlswXS9oLDEpKSsxLHF3KEt3KGZbMV0vaCwxKSktMV0sbT1wL2gqZlswXTtyZXR1cm57bGF5b3V0OmEscGl4ZWxEaW1JbmRleDpyLGxheW91dEJhc2U6aVtuW3JdXSxsYXlvdXRMZW5ndGg6cyxheGlzQmFzZTppW25bMS1yXV0sYXhpc0xlbmd0aDppW29bMS1yXV0sYXhpc0V4cGFuZGFibGU6ZCxheGlzRXhwYW5kV2lkdGg6aCxheGlzQ29sbGFwc2VXaWR0aDpwLGF4aXNFeHBhbmRXaW5kb3c6ZixheGlzQ291bnQ6dSx3aW5Jbm5lckluZGljZXM6ZyxheGlzRXhwYW5kV2luZG93MFBvczptfX0sX2xheW91dEF4ZXM6ZnVuY3Rpb24oKXt2YXIgbD10aGlzLl9yZWN0LHQ9dGhpcy5fYXhlc01hcCxlPXRoaXMuZGltZW5zaW9ucyx1PXRoaXMuX21ha2VMYXlvdXRJbmZvKCksaD11LmxheW91dDt0LmVhY2goZnVuY3Rpb24odCl7dmFyIGU9WzAsdS5heGlzTGVuZ3RoXSxpPXQuaW52ZXJzZT8xOjA7dC5zZXRFeHRlbnQoZVtpXSxlWzEtaV0pfSksVXcoZSxmdW5jdGlvbih0LGUpe3ZhciBpPSh1LmF4aXNFeHBhbmRhYmxlP2Z1bmN0aW9uKHQsZSl7dmFyIGksbixvPWUubGF5b3V0TGVuZ3RoLGE9ZS5heGlzRXhwYW5kV2lkdGgscj1lLmF4aXNDb3VudCxzPWUuYXhpc0NvbGxhcHNlV2lkdGgsbD1lLndpbklubmVySW5kaWNlcyx1PXMsaD0hMTt0PGxbMF0/KGk9dCpzLG49cyk6dDw9bFsxXT8oaT1lLmF4aXNFeHBhbmRXaW5kb3cwUG9zK3QqYS1lLmF4aXNFeHBhbmRXaW5kb3dbMF0sdT1hLGg9ITApOihpPW8tKHItMS10KSpzLG49cyk7cmV0dXJue3Bvc2l0aW9uOmksYXhpc05hbWVBdmFpbGFibGVXaWR0aDp1LGF4aXNMYWJlbFNob3c6aCxuYW1lVHJ1bmNhdGVNYXhXaWR0aDpufX06ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmxheW91dExlbmd0aC8oZS5heGlzQ291bnQtMSk7cmV0dXJue3Bvc2l0aW9uOmkqdCxheGlzTmFtZUF2YWlsYWJsZVdpZHRoOmksYXhpc0xhYmVsU2hvdzohMH19KShlLHUpLG49e2hvcml6b250YWw6e3g6aS5wb3NpdGlvbix5OnUuYXhpc0xlbmd0aH0sdmVydGljYWw6e3g6MCx5OmkucG9zaXRpb259fSxvPXtob3Jpem9udGFsOiR3LzIsdmVydGljYWw6MH0sYT1bbltoXS54K2wueCxuW2hdLnkrbC55XSxyPW9baF0scz1lZSgpO3JlKHMscyxyKSxhZShzLHMsYSksdGhpcy5fYXhlc0xheW91dFt0XT17cG9zaXRpb246YSxyb3RhdGlvbjpyLHRyYW5zZm9ybTpzLGF4aXNOYW1lQXZhaWxhYmxlV2lkdGg6aS5heGlzTmFtZUF2YWlsYWJsZVdpZHRoLGF4aXNMYWJlbFNob3c6aS5heGlzTGFiZWxTaG93LG5hbWVUcnVuY2F0ZU1heFdpZHRoOmkubmFtZVRydW5jYXRlTWF4V2lkdGgsdGlja0RpcmVjdGlvbjoxLGxhYmVsRGlyZWN0aW9uOjF9fSx0aGlzKX0sZ2V0QXhpczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXhlc01hcC5nZXQodCl9LGRhdGFUb1BvaW50OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXhpc0Nvb3JkVG9Qb2ludCh0aGlzLl9heGVzTWFwLmdldChlKS5kYXRhVG9Db29yZCh0KSxlKX0sZWFjaEFjdGl2ZVN0YXRlOmZ1bmN0aW9uKGUsdCxpLG4pe251bGw9PWkmJihpPTApLG51bGw9PW4mJihuPWUuY291bnQoKSk7dmFyIG89dGhpcy5fYXhlc01hcCxhPXRoaXMuZGltZW5zaW9ucyxyPVtdLHM9W107RShhLGZ1bmN0aW9uKHQpe3IucHVzaChlLm1hcERpbWVuc2lvbih0KSkscy5wdXNoKG8uZ2V0KHQpLm1vZGVsKX0pO2Zvcih2YXIgbD10aGlzLmhhc0F4aXNCcnVzaGVkKCksdT1pO3U8bjt1Kyspe3ZhciBoO2lmKGwpe2g9ImFjdGl2ZSI7Zm9yKHZhciBjPWUuZ2V0VmFsdWVzKHIsdSksZD0wLGY9YS5sZW5ndGg7ZDxmO2QrKyl7aWYoImluYWN0aXZlIj09PXNbZF0uZ2V0QWN0aXZlU3RhdGUoY1tkXSkpe2g9ImluYWN0aXZlIjticmVha319fWVsc2UgaD0ibm9ybWFsIjt0KGgsdSl9fSxoYXNBeGlzQnJ1c2hlZDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmRpbWVuc2lvbnMsZT10aGlzLl9heGVzTWFwLGk9ITEsbj0wLG89dC5sZW5ndGg7bjxvO24rKykibm9ybWFsIiE9PWUuZ2V0KHRbbl0pLm1vZGVsLmdldEFjdGl2ZVN0YXRlKCkmJihpPSEwKTtyZXR1cm4gaX0sYXhpc0Nvb3JkVG9Qb2ludDpmdW5jdGlvbih0LGUpe3JldHVybiBobChbdCwwXSx0aGlzLl9heGVzTGF5b3V0W2VdLnRyYW5zZm9ybSl9LGdldEF4aXNMYXlvdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIEQodGhpcy5fYXhlc0xheW91dFt0XSl9LGdldFNsaWRlZEF4aXNFeHBhbmRXaW5kb3c6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbWFrZUxheW91dEluZm8oKSxpPWUucGl4ZWxEaW1JbmRleCxuPWUuYXhpc0V4cGFuZFdpbmRvdy5zbGljZSgpLG89blsxXS1uWzBdLGE9WzAsZS5heGlzRXhwYW5kV2lkdGgqKGUuYXhpc0NvdW50LTEpXTtpZighdGhpcy5jb250YWluUG9pbnQodCkpcmV0dXJue2JlaGF2aW9yOiJub25lIixheGlzRXhwYW5kV2luZG93Om59O3ZhciByLHM9dFtpXS1lLmxheW91dEJhc2UtZS5heGlzRXhwYW5kV2luZG93MFBvcyxsPSJzbGlkZSIsdT1lLmF4aXNDb2xsYXBzZVdpZHRoLGg9dGhpcy5fbW9kZWwuZ2V0KCJheGlzRXhwYW5kU2xpZGVUcmlnZ2VyQXJlYSIpLGM9bnVsbCE9aFswXTtpZih1KWMmJnUmJnM8bypoWzBdPyhsPSJqdW1wIixyPXMtbypoWzJdKTpjJiZ1JiZzPm8qKDEtaFswXSk/KGw9Imp1bXAiLHI9cy1vKigxLWhbMl0pKTowPD0ocj1zLW8qaFsxXSkmJihyPXMtbyooMS1oWzFdKSk8PTAmJihyPTApLChyKj1lLmF4aXNFeHBhbmRXaWR0aC91KT9XdyhyLG4sYSwiYWxsIik6bD0ibm9uZSI7ZWxzZXtvPW5bMV0tblswXTsobj1bWXcoMCxhWzFdKnMvby1vLzIpXSlbMV09WHcoYVsxXSxuWzBdK28pLG5bMF09blsxXS1vfXJldHVybntheGlzRXhwYW5kV2luZG93Om4sYmVoYXZpb3I6bH19fSxuaC5yZWdpc3RlcigicGFyYWxsZWwiLHtjcmVhdGU6ZnVuY3Rpb24obixvKXt2YXIgYT1bXTtyZXR1cm4gbi5lYWNoQ29tcG9uZW50KCJwYXJhbGxlbCIsZnVuY3Rpb24odCxlKXt2YXIgaT1uZXcgSncodCxuLG8pO2kubmFtZT0icGFyYWxsZWxfIitlLGkucmVzaXplKHQsbyksKHQuY29vcmRpbmF0ZVN5c3RlbT1pKS5tb2RlbD10LGEucHVzaChpKX0pLG4uZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZigicGFyYWxsZWwiPT09dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSl7dmFyIGU9bi5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJwYXJhbGxlbCIsaW5kZXg6dC5nZXQoInBhcmFsbGVsSW5kZXgiKSxpZDp0LmdldCgicGFyYWxsZWxJZCIpfSlbMF07dC5jb29yZGluYXRlU3lzdGVtPWUuY29vcmRpbmF0ZVN5c3RlbX19KSxhfX0pO3ZhciB0Yj1UdS5leHRlbmQoe3R5cGU6ImJhc2VQYXJhbGxlbEF4aXMiLGF4aXM6bnVsbCxhY3RpdmVJbnRlcnZhbHM6W10sZ2V0QXJlYVNlbGVjdFN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHJhKFtbImZpbGwiLCJjb2xvciJdLFsibGluZVdpZHRoIiwiYm9yZGVyV2lkdGgiXSxbInN0cm9rZSIsImJvcmRlckNvbG9yIl0sWyJ3aWR0aCIsIndpZHRoIl0sWyJvcGFjaXR5Iiwib3BhY2l0eSJdXSkodGhpcy5nZXRNb2RlbCgiYXJlYVNlbGVjdFN0eWxlIikpfSxzZXRBY3RpdmVJbnRlcnZhbHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hY3RpdmVJbnRlcnZhbHM9RCh0KTtpZihlKWZvcih2YXIgaT1lLmxlbmd0aC0xOzA8PWk7aS0tKU9sKGVbaV0pfSxnZXRBY3RpdmVTdGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFjdGl2ZUludGVydmFscztpZighZS5sZW5ndGgpcmV0dXJuIm5vcm1hbCI7aWYobnVsbD09dHx8aXNOYU4odCkpcmV0dXJuImluYWN0aXZlIjtpZigxPT09ZS5sZW5ndGgpe3ZhciBpPWVbMF07aWYoaVswXTw9dCYmdDw9aVsxXSlyZXR1cm4iYWN0aXZlIn1lbHNlIGZvcih2YXIgbj0wLG89ZS5sZW5ndGg7bjxvO24rKylpZihlW25dWzBdPD10JiZ0PD1lW25dWzFdKXJldHVybiJhY3RpdmUiO3JldHVybiJpbmFjdGl2ZSJ9fSk7bSh0Yi5wcm90b3R5cGUsc2cpLE9tKCJwYXJhbGxlbCIsdGIsZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50eXBlfHwoZS5kYXRhPyJjYXRlZ29yeSI6InZhbHVlIil9LHt0eXBlOiJ2YWx1ZSIsZGltOm51bGwsYXJlYVNlbGVjdFN0eWxlOnt3aWR0aDoyMCxib3JkZXJXaWR0aDoxLGJvcmRlckNvbG9yOiJyZ2JhKDE2MCwxOTcsMjMyKSIsY29sb3I6InJnYmEoMTYwLDE5NywyMzIpIixvcGFjaXR5Oi4zfSxyZWFsdGltZTohMCx6OjEwfSksVHUuZXh0ZW5kKHt0eXBlOiJwYXJhbGxlbCIsZGVwZW5kZW5jaWVzOlsicGFyYWxsZWxBeGlzIl0sY29vcmRpbmF0ZVN5c3RlbTpudWxsLGRpbWVuc2lvbnM6bnVsbCxwYXJhbGxlbEF4aXNJbmRleDpudWxsLGxheW91dE1vZGU6ImJveCIsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejowLGxlZnQ6ODAsdG9wOjYwLHJpZ2h0OjgwLGJvdHRvbTo2MCxsYXlvdXQ6Imhvcml6b250YWwiLGF4aXNFeHBhbmRhYmxlOiExLGF4aXNFeHBhbmRDZW50ZXI6bnVsbCxheGlzRXhwYW5kQ291bnQ6MCxheGlzRXhwYW5kV2lkdGg6NTAsYXhpc0V4cGFuZFJhdGU6MTcsYXhpc0V4cGFuZERlYm91bmNlOjUwLGF4aXNFeHBhbmRTbGlkZVRyaWdnZXJBcmVhOlstLjE1LC4wNSwuNF0sYXhpc0V4cGFuZFRyaWdnZXJPbjoiY2xpY2siLHBhcmFsbGVsQXhpc0RlZmF1bHQ6bnVsbH0saW5pdDpmdW5jdGlvbigpe1R1LnByb3RvdHlwZS5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLm1lcmdlT3B0aW9uKHt9KX0sbWVyZ2VPcHRpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb247dCYmbShlLHQsITApLHRoaXMuX2luaXREaW1lbnNpb25zKCl9LGNvbnRhaW5zOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXQoInBhcmFsbGVsSW5kZXgiKTtyZXR1cm4gbnVsbCE9aSYmZS5nZXRDb21wb25lbnQoInBhcmFsbGVsIixpKT09PXRoaXN9LHNldEF4aXNFeHBhbmQ6ZnVuY3Rpb24oZSl7RShbImF4aXNFeHBhbmRhYmxlIiwiYXhpc0V4cGFuZENlbnRlciIsImF4aXNFeHBhbmRDb3VudCIsImF4aXNFeHBhbmRXaWR0aCIsImF4aXNFeHBhbmRXaW5kb3ciXSxmdW5jdGlvbih0KXtlLmhhc093blByb3BlcnR5KHQpJiYodGhpcy5vcHRpb25bdF09ZVt0XSl9LHRoaXMpfSxfaW5pdERpbWVuc2lvbnM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmRpbWVuc2lvbnM9W10saT10aGlzLnBhcmFsbGVsQXhpc0luZGV4PVtdO0UoTSh0aGlzLmRlcGVuZGVudE1vZGVscy5wYXJhbGxlbEF4aXMsZnVuY3Rpb24odCl7cmV0dXJuKHQuZ2V0KCJwYXJhbGxlbEluZGV4Iil8fDApPT09dGhpcy5jb21wb25lbnRJbmRleH0sdGhpcyksZnVuY3Rpb24odCl7ZS5wdXNoKCJkaW0iK3QuZ2V0KCJkaW0iKSksaS5wdXNoKHQuY29tcG9uZW50SW5kZXgpfSl9fSk7Z2Yoe3R5cGU6ImF4aXNBcmVhU2VsZWN0IixldmVudDoiYXhpc0FyZWFTZWxlY3RlZCJ9LGZ1bmN0aW9uKGUsdCl7dC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToicGFyYWxsZWxBeGlzIixxdWVyeTplfSxmdW5jdGlvbih0KXt0LmF4aXMubW9kZWwuc2V0QWN0aXZlSW50ZXJ2YWxzKGUuaW50ZXJ2YWxzKX0pfSksZ2YoInBhcmFsbGVsQXhpc0V4cGFuZCIsZnVuY3Rpb24oZSx0KXt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJwYXJhbGxlbCIscXVlcnk6ZX0sZnVuY3Rpb24odCl7dC5zZXRBeGlzRXhwYW5kKGUpfSl9KTt2YXIgZWI9VCxpYj1FLG5iPU4sb2I9TWF0aC5taW4sYWI9TWF0aC5tYXgscmI9TWF0aC5wb3csc2I9MWU0LGxiPTYsdWI9NixoYj0iZ2xvYmFsUGFuIixjYj17dzpbMCwwXSxlOlswLDFdLG46WzEsMF0sczpbMSwxXX0sZGI9e3c6ImV3IixlOiJldyIsbjoibnMiLHM6Im5zIixuZToibmVzdyIsc3c6Im5lc3ciLG53OiJud3NlIixzZToibndzZSJ9LGZiPXticnVzaFN0eWxlOntsaW5lV2lkdGg6MixzdHJva2U6InJnYmEoMCwwLDAsMC4zKSIsZmlsbDoicmdiYSgwLDAsMCwwLjEpIn0sdHJhbnNmb3JtYWJsZTohMCxicnVzaE1vZGU6InNpbmdsZSIscmVtb3ZlT25DbGljazohMX0scGI9MDtmdW5jdGlvbiBnYih0KXtDdC5jYWxsKHRoaXMpLHRoaXMuX3pyPXQsdGhpcy5ncm91cD1uZXcgSWksdGhpcy5fYnJ1c2hUeXBlLHRoaXMuX2JydXNoT3B0aW9uLHRoaXMuX3BhbmVscyx0aGlzLl90cmFjaz1bXSx0aGlzLl9kcmFnZ2luZyx0aGlzLl9jb3ZlcnM9W10sdGhpcy5fY3JlYXRpbmdDb3Zlcix0aGlzLl9jcmVhdGluZ1BhbmVsLHRoaXMuX2VuYWJsZUdsb2JhbFBhbix0aGlzLl91aWQ9ImJydXNoQ29udHJvbGxlcl8iK3BiKyssdGhpcy5faGFuZGxlcnM9e30saWIoRmIsZnVuY3Rpb24odCxlKXt0aGlzLl9oYW5kbGVyc1tlXT1BKHQsdGhpcyl9LHRoaXMpfWZ1bmN0aW9uIG1iKHQsZSl7dmFyIGk9SGJbZS5icnVzaFR5cGVdLmNyZWF0ZUNvdmVyKHQsZSk7cmV0dXJuIGkuX19icnVzaE9wdGlvbj1lLHhiKGksZSksdC5ncm91cC5hZGQoaSksaX1mdW5jdGlvbiB2Yih0LGUpe3ZhciBpPXdiKGUpO3JldHVybiBpLmVuZENyZWF0aW5nJiYoaS5lbmRDcmVhdGluZyh0LGUpLHhiKGUsZS5fX2JydXNoT3B0aW9uKSksZX1mdW5jdGlvbiB5Yih0LGUpe3ZhciBpPWUuX19icnVzaE9wdGlvbjt3YihlKS51cGRhdGVDb3ZlclNoYXBlKHQsZSxpLnJhbmdlLGkpfWZ1bmN0aW9uIHhiKHQsZSl7dmFyIGk9ZS56O251bGw9PWkmJihpPXNiKSx0LnRyYXZlcnNlKGZ1bmN0aW9uKHQpe3Quej1pLHQuejI9aX0pfWZ1bmN0aW9uIF9iKHQsZSl7d2IoZSkudXBkYXRlQ29tbW9uKHQsZSkseWIodCxlKX1mdW5jdGlvbiB3Yih0KXtyZXR1cm4gSGJbdC5fX2JydXNoT3B0aW9uLmJydXNoVHlwZV19ZnVuY3Rpb24gYmIodCxlLGkpe3ZhciBuLG89dC5fcGFuZWxzO2lmKCFvKXJldHVybiEwO3ZhciBhPXQuX3RyYW5zZm9ybTtyZXR1cm4gaWIobyxmdW5jdGlvbih0KXt0LmlzVGFyZ2V0QnlDdXJzb3IoZSxpLGEpJiYobj10KX0pLG59ZnVuY3Rpb24gU2IodCxlKXt2YXIgaT10Ll9wYW5lbHM7aWYoIWkpcmV0dXJuITA7dmFyIG49ZS5fX2JydXNoT3B0aW9uLnBhbmVsSWQ7cmV0dXJuIG51bGw9PW58fGlbbl19ZnVuY3Rpb24gTWIoZSl7dmFyIHQ9ZS5fY292ZXJzLGk9dC5sZW5ndGg7cmV0dXJuIGliKHQsZnVuY3Rpb24odCl7ZS5ncm91cC5yZW1vdmUodCl9LGUpLHQubGVuZ3RoPTAsISFpfWZ1bmN0aW9uIEliKHQsZSl7dmFyIGk9bmIodC5fY292ZXJzLGZ1bmN0aW9uKHQpe3ZhciBlPXQuX19icnVzaE9wdGlvbixpPUQoZS5yYW5nZSk7cmV0dXJue2JydXNoVHlwZTplLmJydXNoVHlwZSxwYW5lbElkOmUucGFuZWxJZCxyYW5nZTppfX0pO3QudHJpZ2dlcigiYnJ1c2giLGkse2lzRW5kOiEhZS5pc0VuZCxyZW1vdmVPbkNsaWNrOiEhZS5yZW1vdmVPbkNsaWNrfSl9ZnVuY3Rpb24gVGIodCl7dmFyIGU9dC5sZW5ndGgtMTtyZXR1cm4gZTwwJiYoZT0wKSxbdFswXSx0W2VdXX1mdW5jdGlvbiBBYihlLGksdCxuKXt2YXIgbz1uZXcgSWk7cmV0dXJuIG8uYWRkKG5ldyBpcyh7bmFtZToibWFpbiIsc3R5bGU6a2IodCksc2lsZW50OiEwLGRyYWdnYWJsZTohMCxjdXJzb3I6Im1vdmUiLGRyaWZ0OmViKGUsaSxvLCJuc3dlIiksb25kcmFnZW5kOmViKEliLGkse2lzRW5kOiEwfSl9KSksaWIobixmdW5jdGlvbih0KXtvLmFkZChuZXcgaXMoe25hbWU6dCxzdHlsZTp7b3BhY2l0eTowfSxkcmFnZ2FibGU6ITAsc2lsZW50OiEwLGludmlzaWJsZTohMCxkcmlmdDplYihlLGksbyx0KSxvbmRyYWdlbmQ6ZWIoSWIsaSx7aXNFbmQ6ITB9KX0pKX0pLG99ZnVuY3Rpb24gRGIodCxlLGksbil7dmFyIG89bi5icnVzaFN0eWxlLmxpbmVXaWR0aHx8MCxhPWFiKG8sdWIpLHI9aVswXVswXSxzPWlbMV1bMF0sbD1yLW8vMix1PXMtby8yLGg9aVswXVsxXSxjPWlbMV1bMV0sZD1oLWErby8yLGY9Yy1hK28vMixwPWgtcixnPWMtcyxtPXArbyx2PWcrbztMYih0LGUsIm1haW4iLHIscyxwLGcpLG4udHJhbnNmb3JtYWJsZSYmKExiKHQsZSwidyIsbCx1LGEsdiksTGIodCxlLCJlIixkLHUsYSx2KSxMYih0LGUsIm4iLGwsdSxtLGEpLExiKHQsZSwicyIsbCxmLG0sYSksTGIodCxlLCJudyIsbCx1LGEsYSksTGIodCxlLCJuZSIsZCx1LGEsYSksTGIodCxlLCJzdyIsbCxmLGEsYSksTGIodCxlLCJzZSIsZCxmLGEsYSkpfWZ1bmN0aW9uIENiKG4sbyl7dmFyIHQ9by5fX2JydXNoT3B0aW9uLGE9dC50cmFuc2Zvcm1hYmxlLGU9by5jaGlsZEF0KDApO2UudXNlU3R5bGUoa2IodCkpLGUuYXR0cih7c2lsZW50OiFhLGN1cnNvcjphPyJtb3ZlIjoiZGVmYXVsdCJ9KSxpYihbInciLCJlIiwibiIsInMiLCJzZSIsInN3IiwibmUiLCJudyJdLGZ1bmN0aW9uKHQpe3ZhciBlPW8uY2hpbGRPZk5hbWUodCksaT1mdW5jdGlvbiB0KGUsaSl7e2lmKDE8aS5sZW5ndGgpe2k9aS5zcGxpdCgiIik7dmFyIG49W3QoZSxpWzBdKSx0KGUsaVsxXSldO3JldHVybiJlIiE9PW5bMF0mJiJ3IiE9PW5bMF18fG4ucmV2ZXJzZSgpLG4uam9pbigiIil9dmFyIG89e3c6ImxlZnQiLGU6InJpZ2h0IixuOiJ0b3AiLHM6ImJvdHRvbSJ9LGE9e2xlZnQ6InciLHJpZ2h0OiJlIix0b3A6Im4iLGJvdHRvbToicyJ9LG49Y2wob1tpXSx1bChlLmdyb3VwKSk7cmV0dXJuIGFbbl19fShuLHQpO2UmJmUuYXR0cih7c2lsZW50OiFhLGludmlzaWJsZTohYSxjdXJzb3I6YT9kYltpXSsiLXJlc2l6ZSI6bnVsbH0pfSl9ZnVuY3Rpb24gTGIodCxlLGksbixvLGEscil7dmFyIHM9ZS5jaGlsZE9mTmFtZShpKTtzJiZzLnNldFNoYXBlKGZ1bmN0aW9uKHQpe3ZhciBlPW9iKHRbMF1bMF0sdFsxXVswXSksaT1vYih0WzBdWzFdLHRbMV1bMV0pLG49YWIodFswXVswXSx0WzFdWzBdKSxvPWFiKHRbMF1bMV0sdFsxXVsxXSk7cmV0dXJue3g6ZSx5Omksd2lkdGg6bi1lLGhlaWdodDpvLWl9fSh6Yih0LGUsW1tuLG9dLFtuK2EsbytyXV0pKSl9ZnVuY3Rpb24ga2IodCl7cmV0dXJuIEMoe3N0cm9rZU5vU2NhbGU6ITB9LHQuYnJ1c2hTdHlsZSl9ZnVuY3Rpb24gUGIodCxlLGksbil7dmFyIG89W29iKHQsaSksb2IoZSxuKV0sYT1bYWIodCxpKSxhYihlLG4pXTtyZXR1cm5bW29bMF0sYVswXV0sW29bMV0sYVsxXV1dfWZ1bmN0aW9uIE5iKHQsZSxpLG4sbyxhLHIscyl7dmFyIGw9bi5fX2JydXNoT3B0aW9uLHU9dChsLnJhbmdlKSxoPUViKGksYSxyKTtpYihvLnNwbGl0KCIiKSxmdW5jdGlvbih0KXt2YXIgZT1jYlt0XTt1W2VbMF1dW2VbMV1dKz1oW2VbMF1dfSksbC5yYW5nZT1lKFBiKHVbMF1bMF0sdVsxXVswXSx1WzBdWzFdLHVbMV1bMV0pKSxfYihpLG4pLEliKGkse2lzRW5kOiExfSl9ZnVuY3Rpb24gT2IodCxlLGksbixvKXt2YXIgYT1lLl9fYnJ1c2hPcHRpb24ucmFuZ2Uscj1FYih0LGksbik7aWIoYSxmdW5jdGlvbih0KXt0WzBdKz1yWzBdLHRbMV0rPXJbMV19KSxfYih0LGUpLEliKHQse2lzRW5kOiExfSl9ZnVuY3Rpb24gRWIodCxlLGkpe3ZhciBuPXQuZ3JvdXAsbz1uLnRyYW5zZm9ybUNvb3JkVG9Mb2NhbChlLGkpLGE9bi50cmFuc2Zvcm1Db29yZFRvTG9jYWwoMCwwKTtyZXR1cm5bb1swXS1hWzBdLG9bMV0tYVsxXV19ZnVuY3Rpb24gemIodCxlLGkpe3ZhciBuPVNiKHQsZSk7cmV0dXJuIG4mJiEwIT09bj9uLmNsaXBQYXRoKGksdC5fdHJhbnNmb3JtKTpEKGkpfWZ1bmN0aW9uIFJiKHQpe3ZhciBlPXQuZXZlbnQ7ZS5wcmV2ZW50RGVmYXVsdCYmZS5wcmV2ZW50RGVmYXVsdCgpfWZ1bmN0aW9uIEJiKHQsZSxpKXtyZXR1cm4gdC5jaGlsZE9mTmFtZSgibWFpbiIpLmNvbnRhaW4oZSxpKX1mdW5jdGlvbiBWYih0LGUsaSxuKXt2YXIgbyxhPXQuX2NyZWF0aW5nQ292ZXIscj10Ll9jcmVhdGluZ1BhbmVsLHM9dC5fYnJ1c2hPcHRpb247aWYodC5fdHJhY2sucHVzaChpLnNsaWNlKCkpLGZ1bmN0aW9uKHQpe3ZhciBlPXQuX3RyYWNrO2lmKCFlLmxlbmd0aClyZXR1cm4hMTt2YXIgaT1lW2UubGVuZ3RoLTFdLG49ZVswXSxvPWlbMF0tblswXSxhPWlbMV0tblsxXSxyPXJiKG8qbythKmEsLjUpO3JldHVybiBsYjxyfSh0KXx8YSl7aWYociYmIWEpeyJzaW5nbGUiPT09cy5icnVzaE1vZGUmJk1iKHQpO3ZhciBsPUQocyk7bC5icnVzaFR5cGU9R2IobC5icnVzaFR5cGUsciksbC5wYW5lbElkPSEwPT09cj9udWxsOnIucGFuZWxJZCxhPXQuX2NyZWF0aW5nQ292ZXI9bWIodCxsKSx0Ll9jb3ZlcnMucHVzaChhKX1pZihhKXt2YXIgdT1IYltHYih0Ll9icnVzaFR5cGUscildO2EuX19icnVzaE9wdGlvbi5yYW5nZT11LmdldENyZWF0aW5nUmFuZ2UoemIodCxhLHQuX3RyYWNrKSksbiYmKHZiKHQsYSksdS51cGRhdGVDb21tb24odCxhKSkseWIodCxhKSxvPXtpc0VuZDpufX19ZWxzZSBuJiYic2luZ2xlIj09PXMuYnJ1c2hNb2RlJiZzLnJlbW92ZU9uQ2xpY2smJmJiKHQsZSxpKSYmTWIodCkmJihvPXtpc0VuZDpuLHJlbW92ZU9uQ2xpY2s6ITB9KTtyZXR1cm4gb31mdW5jdGlvbiBHYih0LGUpe3JldHVybiJhdXRvIj09PXQ/ZS5kZWZhdWx0QnJ1c2hUeXBlOnR9Z2IucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpnYixlbmFibGVCcnVzaDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYnJ1c2hUeXBlJiZmdW5jdGlvbih0KXt2YXIgZT10Ll96cjsoZnVuY3Rpb24odCxlLGkpe3ZhciBuPUN5KHQpO25bZV09PT1pJiYobltlXT1udWxsKX0pKGUsaGIsdC5fdWlkKSxmdW5jdGlvbihpLHQpe2liKHQsZnVuY3Rpb24odCxlKXtpLm9mZihlLHQpfSl9KGUsdC5faGFuZGxlcnMpLHQuX2JydXNoVHlwZT10Ll9icnVzaE9wdGlvbj1udWxsfSh0aGlzKSx0LmJydXNoVHlwZSYmZnVuY3Rpb24odCxlKXt2YXIgaT10Ll96cjt0Ll9lbmFibGVHbG9iYWxQYW58fGZ1bmN0aW9uKHQsZSxpKXtDeSh0KVtlXT1pfShpLGhiLHQuX3VpZCk7KGZ1bmN0aW9uKGksdCl7aWIodCxmdW5jdGlvbih0LGUpe2kub24oZSx0KX0pfSkoaSx0Ll9oYW5kbGVycyksdC5fYnJ1c2hUeXBlPWUuYnJ1c2hUeXBlLHQuX2JydXNoT3B0aW9uPW0oRChmYiksZSwhMCl9KHRoaXMsdCksdGhpc30sc2V0UGFuZWxzOmZ1bmN0aW9uKHQpe2lmKHQmJnQubGVuZ3RoKXt2YXIgZT10aGlzLl9wYW5lbHM9e307RSh0LGZ1bmN0aW9uKHQpe2VbdC5wYW5lbElkXT1EKHQpfSl9ZWxzZSB0aGlzLl9wYW5lbHM9bnVsbDtyZXR1cm4gdGhpc30sbW91bnQ6ZnVuY3Rpb24odCl7dD10fHx7fSx0aGlzLl9lbmFibGVHbG9iYWxQYW49dC5lbmFibGVHbG9iYWxQYW47dmFyIGU9dGhpcy5ncm91cDtyZXR1cm4gdGhpcy5fenIuYWRkKGUpLGUuYXR0cih7cG9zaXRpb246dC5wb3NpdGlvbnx8WzAsMF0scm90YXRpb246dC5yb3RhdGlvbnx8MCxzY2FsZTp0LnNjYWxlfHxbMSwxXX0pLHRoaXMuX3RyYW5zZm9ybT1lLmdldExvY2FsVHJhbnNmb3JtKCksdGhpc30sZWFjaENvdmVyOmZ1bmN0aW9uKHQsZSl7aWIodGhpcy5fY292ZXJzLHQsZSl9LHVwZGF0ZUNvdmVyczpmdW5jdGlvbihvKXtvPU4obyxmdW5jdGlvbih0KXtyZXR1cm4gbShEKGZiKSx0LCEwKX0pO3ZhciBpPSJcMC1icnVzaC1pbmRleC0iLGE9dGhpcy5fY292ZXJzLHI9dGhpcy5fY292ZXJzPVtdLHM9dGhpcyxsPXRoaXMuX2NyZWF0aW5nQ292ZXI7cmV0dXJuIG5ldyBUZihhLG8sZnVuY3Rpb24odCxlKXtyZXR1cm4gbih0Ll9fYnJ1c2hPcHRpb24sZSl9LG4pLmFkZCh0KS51cGRhdGUodCkucmVtb3ZlKGZ1bmN0aW9uKHQpe2FbdF0hPT1sJiZzLmdyb3VwLnJlbW92ZShhW3RdKX0pLmV4ZWN1dGUoKSx0aGlzO2Z1bmN0aW9uIG4odCxlKXtyZXR1cm4obnVsbCE9dC5pZD90LmlkOmkrZSkrIi0iK3QuYnJ1c2hUeXBlfWZ1bmN0aW9uIHQodCxlKXt2YXIgaT1vW3RdO2lmKG51bGwhPWUmJmFbZV09PT1sKXJbdF09YVtlXTtlbHNle3ZhciBuPXJbdF09bnVsbCE9ZT8oYVtlXS5fX2JydXNoT3B0aW9uPWksYVtlXSk6dmIocyxtYihzLGkpKTtfYihzLG4pfX19LHVubW91bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmFibGVCcnVzaCghMSksTWIodGhpcyksdGhpcy5fenIucmVtb3ZlKHRoaXMuZ3JvdXApLHRoaXN9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLnVubW91bnQoKSx0aGlzLm9mZigpfX0sYihnYixDdCk7dmFyIEZiPXttb3VzZWRvd246ZnVuY3Rpb24odCl7aWYodGhpcy5fZHJhZ2dpbmcpV2IodGhpcyx0KTtlbHNlIGlmKCF0LnRhcmdldHx8IXQudGFyZ2V0LmRyYWdnYWJsZSl7UmIodCk7dmFyIGU9dGhpcy5ncm91cC50cmFuc2Zvcm1Db29yZFRvTG9jYWwodC5vZmZzZXRYLHQub2Zmc2V0WSk7dGhpcy5fY3JlYXRpbmdDb3Zlcj1udWxsLCh0aGlzLl9jcmVhdGluZ1BhbmVsPWJiKHRoaXMsdCxlKSkmJih0aGlzLl9kcmFnZ2luZz0hMCx0aGlzLl90cmFjaz1bZS5zbGljZSgpXSl9fSxtb3VzZW1vdmU6ZnVuY3Rpb24odCl7dmFyIGU9dC5vZmZzZXRYLGk9dC5vZmZzZXRZLG49dGhpcy5ncm91cC50cmFuc2Zvcm1Db29yZFRvTG9jYWwoZSxpKTtpZihmdW5jdGlvbih0LGUsaSl7aWYodC5fYnJ1c2hUeXBlJiYhZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuX3pyO3JldHVybiBlPDB8fGU+bi5nZXRXaWR0aCgpfHxpPDB8fGk+bi5nZXRIZWlnaHQoKX0odCxlKSl7dmFyIG49dC5fenIsbz10Ll9jb3ZlcnMsYT1iYih0LGUsaSk7aWYoIXQuX2RyYWdnaW5nKWZvcih2YXIgcj0wO3I8by5sZW5ndGg7cisrKXt2YXIgcz1vW3JdLl9fYnJ1c2hPcHRpb247aWYoYSYmKCEwPT09YXx8cy5wYW5lbElkPT09YS5wYW5lbElkKSYmSGJbcy5icnVzaFR5cGVdLmNvbnRhaW4ob1tyXSxpWzBdLGlbMV0pKXJldHVybn1hJiZuLnNldEN1cnNvclN0eWxlKCJjcm9zc2hhaXIiKX19KHRoaXMsdCxuKSx0aGlzLl9kcmFnZ2luZyl7UmIodCk7dmFyIG89VmIodGhpcyx0LG4sITEpO28mJkliKHRoaXMsbyl9fSxtb3VzZXVwOmZ1bmN0aW9uKHQpe1diKHRoaXMsdCl9fTtmdW5jdGlvbiBXYih0LGUpe2lmKHQuX2RyYWdnaW5nKXtSYihlKTt2YXIgaT1lLm9mZnNldFgsbj1lLm9mZnNldFksbz10Lmdyb3VwLnRyYW5zZm9ybUNvb3JkVG9Mb2NhbChpLG4pLGE9VmIodCxlLG8sITApO3QuX2RyYWdnaW5nPSExLHQuX3RyYWNrPVtdLHQuX2NyZWF0aW5nQ292ZXI9bnVsbCxhJiZJYih0LGEpfX12YXIgSGI9e2xpbmVYOlpiKDApLGxpbmVZOlpiKDEpLHJlY3Q6e2NyZWF0ZUNvdmVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFiKGViKE5iLGZ1bmN0aW9uKHQpe3JldHVybiB0fSxmdW5jdGlvbih0KXtyZXR1cm4gdH0pLHQsZSxbInciLCJlIiwibiIsInMiLCJzZSIsInN3IiwibmUiLCJudyJdKX0sZ2V0Q3JlYXRpbmdSYW5nZTpmdW5jdGlvbih0KXt2YXIgZT1UYih0KTtyZXR1cm4gUGIoZVsxXVswXSxlWzFdWzFdLGVbMF1bMF0sZVswXVsxXSl9LHVwZGF0ZUNvdmVyU2hhcGU6ZnVuY3Rpb24odCxlLGksbil7RGIodCxlLGksbil9LHVwZGF0ZUNvbW1vbjpDYixjb250YWluOkJifSxwb2x5Z29uOntjcmVhdGVDb3ZlcjpmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBJaTtyZXR1cm4gaS5hZGQobmV3IEtyKHtuYW1lOiJtYWluIixzdHlsZTprYihlKSxzaWxlbnQ6ITB9KSksaX0sZ2V0Q3JlYXRpbmdSYW5nZTpmdW5jdGlvbih0KXtyZXR1cm4gdH0sZW5kQ3JlYXRpbmc6ZnVuY3Rpb24odCxlKXtlLnJlbW92ZShlLmNoaWxkQXQoMCkpLGUuYWRkKG5ldyBxcih7bmFtZToibWFpbiIsZHJhZ2dhYmxlOiEwLGRyaWZ0OmViKE9iLHQsZSksb25kcmFnZW5kOmViKEliLHQse2lzRW5kOiEwfSl9KSl9LHVwZGF0ZUNvdmVyU2hhcGU6ZnVuY3Rpb24odCxlLGksbil7ZS5jaGlsZEF0KDApLnNldFNoYXBlKHtwb2ludHM6emIodCxlLGkpfSl9LHVwZGF0ZUNvbW1vbjpDYixjb250YWluOkJifX07ZnVuY3Rpb24gWmIobCl7cmV0dXJue2NyZWF0ZUNvdmVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFiKGViKE5iLGZ1bmN0aW9uKHQpe3ZhciBlPVt0LFswLDEwMF1dO3JldHVybiBsJiZlLnJldmVyc2UoKSxlfSxmdW5jdGlvbih0KXtyZXR1cm4gdFtsXX0pLHQsZSxbWyJ3IiwiZSJdLFsibiIsInMiXV1bbF0pfSxnZXRDcmVhdGluZ1JhbmdlOmZ1bmN0aW9uKHQpe3ZhciBlPVRiKHQpO3JldHVybltvYihlWzBdW2xdLGVbMV1bbF0pLGFiKGVbMF1bbF0sZVsxXVtsXSldfSx1cGRhdGVDb3ZlclNoYXBlOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvLGE9U2IodCxlKTtpZighMCE9PWEmJmEuZ2V0TGluZWFyQnJ1c2hPdGhlckV4dGVudClvPWEuZ2V0TGluZWFyQnJ1c2hPdGhlckV4dGVudChsLHQuX3RyYW5zZm9ybSk7ZWxzZXt2YXIgcj10Ll96cjtvPVswLFtyLmdldFdpZHRoKCksci5nZXRIZWlnaHQoKV1bMS1sXV19dmFyIHM9W2ksb107bCYmcy5yZXZlcnNlKCksRGIodCxlLHMsbil9LHVwZGF0ZUNvbW1vbjpDYixjb250YWluOkJifX1mdW5jdGlvbiBVYihpKXtyZXR1cm4gaT1qYihpKSxmdW5jdGlvbih0LGUpe3JldHVybiBmbCh0LGkpfX1mdW5jdGlvbiBYYihvLGEpe3JldHVybiBvPWpiKG8pLGZ1bmN0aW9uKHQpe3ZhciBlPW51bGwhPWE/YTp0LGk9ZT9vLndpZHRoOm8uaGVpZ2h0LG49ZT9vLng6by55O3JldHVybltuLG4rKGl8fDApXX19ZnVuY3Rpb24gWWIobixvLGEpe3JldHVybiBuPWpiKG4pLGZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbi5jb250YWluKGVbMF0sZVsxXSkmJiFXeSh0LG8sYSl9fWZ1bmN0aW9uIGpiKHQpe3JldHVybiBNaS5jcmVhdGUodCl9dmFyIHFiPVsiYXhpc0xpbmUiLCJheGlzVGlja0xhYmVsIiwiYXhpc05hbWUiXSxLYj1iZih7dHlwZToicGFyYWxsZWxBeGlzIixpbml0OmZ1bmN0aW9uKHQsZSl7S2Iuc3VwZXJBcHBseSh0aGlzLCJpbml0Iixhcmd1bWVudHMpLCh0aGlzLl9icnVzaENvbnRyb2xsZXI9bmV3IGdiKGUuZ2V0WnIoKSkpLm9uKCJicnVzaCIsQSh0aGlzLl9vbkJydXNoLHRoaXMpKX0scmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe2lmKCFmdW5jdGlvbih0LGUsaSl7cmV0dXJuIGkmJiJheGlzQXJlYVNlbGVjdCI9PT1pLnR5cGUmJmUuZmluZENvbXBvbmVudHMoe21haW5UeXBlOiJwYXJhbGxlbEF4aXMiLHF1ZXJ5Oml9KVswXT09PXR9KHQsZSxuKSl7dGhpcy5heGlzTW9kZWw9dCx0aGlzLmFwaT1pLHRoaXMuZ3JvdXAucmVtb3ZlQWxsKCk7dmFyIG89dGhpcy5fYXhpc0dyb3VwO2lmKHRoaXMuX2F4aXNHcm91cD1uZXcgSWksdGhpcy5ncm91cC5hZGQodGhpcy5fYXhpc0dyb3VwKSx0LmdldCgic2hvdyIpKXt2YXIgYT1mdW5jdGlvbih0LGUpe3JldHVybiBlLmdldENvbXBvbmVudCgicGFyYWxsZWwiLHQuZ2V0KCJwYXJhbGxlbEluZGV4IikpfSh0LGUpLHI9YS5jb29yZGluYXRlU3lzdGVtLHM9dC5nZXRBcmVhU2VsZWN0U3R5bGUoKSxsPXMud2lkdGgsdT10LmF4aXMuZGltLGg9TCh7c3Ryb2tlQ29udGFpblRocmVzaG9sZDpsfSxyLmdldEF4aXNMYXlvdXQodSkpLGM9bmV3IFltKHQsaCk7RShxYixjLmFkZCxjKSx0aGlzLl9heGlzR3JvdXAuYWRkKGMuZ2V0R3JvdXAoKSksdGhpcy5fcmVmcmVzaEJydXNoQ29udHJvbGxlcihoLHMsdCxhLGwsaSk7dmFyIGQ9biYmITE9PT1uLmFuaW1hdGlvbj9udWxsOnQ7ZGwobyx0aGlzLl9heGlzR3JvdXAsZCl9fX0sX3JlZnJlc2hCcnVzaENvbnRyb2xsZXI6ZnVuY3Rpb24odCxlLGksbixvLGEpe3ZhciByPWkuYXhpcy5nZXRFeHRlbnQoKSxzPXJbMV0tclswXSxsPU1hdGgubWluKDMwLC4xKk1hdGguYWJzKHMpKSx1PU1pLmNyZWF0ZSh7eDpyWzBdLHk6LW8vMix3aWR0aDpzLGhlaWdodDpvfSk7dS54LT1sLHUud2lkdGgrPTIqbCx0aGlzLl9icnVzaENvbnRyb2xsZXIubW91bnQoe2VuYWJsZUdsb2JhbFBhbjohMCxyb3RhdGlvbjp0LnJvdGF0aW9uLHBvc2l0aW9uOnQucG9zaXRpb259KS5zZXRQYW5lbHMoW3twYW5lbElkOiJwbCIsY2xpcFBhdGg6VWIodSksaXNUYXJnZXRCeUN1cnNvcjpZYih1LGEsbiksZ2V0TGluZWFyQnJ1c2hPdGhlckV4dGVudDpYYih1LDApfV0pLmVuYWJsZUJydXNoKHticnVzaFR5cGU6ImxpbmVYIixicnVzaFN0eWxlOmUscmVtb3ZlT25DbGljazohMH0pLnVwZGF0ZUNvdmVycyhmdW5jdGlvbih0KXt2YXIgZT10LmF4aXM7cmV0dXJuIE4odC5hY3RpdmVJbnRlcnZhbHMsZnVuY3Rpb24odCl7cmV0dXJue2JydXNoVHlwZToibGluZVgiLHBhbmVsSWQ6InBsIixyYW5nZTpbZS5kYXRhVG9Db29yZCh0WzBdLCEwKSxlLmRhdGFUb0Nvb3JkKHRbMV0sITApXX19KX0oaSkpfSxfb25CcnVzaDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuYXhpc01vZGVsLG49aS5heGlzLG89Tih0LGZ1bmN0aW9uKHQpe3JldHVybltuLmNvb3JkVG9EYXRhKHQucmFuZ2VbMF0sITApLG4uY29vcmRUb0RhdGEodC5yYW5nZVsxXSwhMCldfSk7IWkub3B0aW9uLnJlYWx0aW1lIT09ZS5pc0VuZCYmIWUucmVtb3ZlT25DbGlja3x8dGhpcy5hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImF4aXNBcmVhU2VsZWN0IixwYXJhbGxlbEF4aXNJZDppLmlkLGludGVydmFsczpvfSl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLl9icnVzaENvbnRyb2xsZXIuZGlzcG9zZSgpfX0pO2JmKHt0eXBlOiJwYXJhbGxlbCIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9tb2RlbD10LHRoaXMuX2FwaT1pLHRoaXMuX2hhbmRsZXJzfHwodGhpcy5faGFuZGxlcnM9e30sRSgkYixmdW5jdGlvbih0LGUpe2kuZ2V0WnIoKS5vbihlLHRoaXMuX2hhbmRsZXJzW2VdPUEodCx0aGlzKSl9LHRoaXMpKSxUYyh0aGlzLCJfdGhyb3R0bGVkRGlzcGF0Y2hFeHBhbmQiLHQuZ2V0KCJheGlzRXhwYW5kUmF0ZSIpLCJmaXhSYXRlIil9LGRpc3Bvc2U6ZnVuY3Rpb24odCxpKXtFKHRoaXMuX2hhbmRsZXJzLGZ1bmN0aW9uKHQsZSl7aS5nZXRacigpLm9mZihlLHQpfSksdGhpcy5faGFuZGxlcnM9bnVsbH0sX3Rocm90dGxlZERpc3BhdGNoRXhwYW5kOmZ1bmN0aW9uKHQpe3RoaXMuX2Rpc3BhdGNoRXhwYW5kKHQpfSxfZGlzcGF0Y2hFeHBhbmQ6ZnVuY3Rpb24odCl7dCYmdGhpcy5fYXBpLmRpc3BhdGNoQWN0aW9uKEwoe3R5cGU6InBhcmFsbGVsQXhpc0V4cGFuZCJ9LHQpKX19KTt2YXIgJGI9e21vdXNlZG93bjpmdW5jdGlvbih0KXtKYih0aGlzLCJjbGljayIpJiYodGhpcy5fbW91c2VEb3duUG9pbnQ9W3Qub2Zmc2V0WCx0Lm9mZnNldFldKX0sbW91c2V1cDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9tb3VzZURvd25Qb2ludDtpZihKYih0aGlzLCJjbGljayIpJiZlKXt2YXIgaT1bdC5vZmZzZXRYLHQub2Zmc2V0WV07aWYoNTxNYXRoLnBvdyhlWzBdLWlbMF0sMikrTWF0aC5wb3coZVsxXS1pWzFdLDIpKXJldHVybjt2YXIgbj10aGlzLl9tb2RlbC5jb29yZGluYXRlU3lzdGVtLmdldFNsaWRlZEF4aXNFeHBhbmRXaW5kb3coW3Qub2Zmc2V0WCx0Lm9mZnNldFldKTsibm9uZSIhPT1uLmJlaGF2aW9yJiZ0aGlzLl9kaXNwYXRjaEV4cGFuZCh7YXhpc0V4cGFuZFdpbmRvdzpuLmF4aXNFeHBhbmRXaW5kb3d9KX10aGlzLl9tb3VzZURvd25Qb2ludD1udWxsfSxtb3VzZW1vdmU6ZnVuY3Rpb24odCl7aWYoIXRoaXMuX21vdXNlRG93blBvaW50JiZKYih0aGlzLCJtb3VzZW1vdmUiKSl7dmFyIGU9dGhpcy5fbW9kZWwsaT1lLmNvb3JkaW5hdGVTeXN0ZW0uZ2V0U2xpZGVkQXhpc0V4cGFuZFdpbmRvdyhbdC5vZmZzZXRYLHQub2Zmc2V0WV0pLG49aS5iZWhhdmlvcjsianVtcCI9PT1uJiZ0aGlzLl90aHJvdHRsZWREaXNwYXRjaEV4cGFuZC5kZWJvdW5jZU5leHRDYWxsKGUuZ2V0KCJheGlzRXhwYW5kRGVib3VuY2UiKSksdGhpcy5fdGhyb3R0bGVkRGlzcGF0Y2hFeHBhbmQoIm5vbmUiPT09bj9udWxsOntheGlzRXhwYW5kV2luZG93OmkuYXhpc0V4cGFuZFdpbmRvdyxhbmltYXRpb246Imp1bXAiPT09biYmbnVsbH0pfX19O2Z1bmN0aW9uIEpiKHQsZSl7dmFyIGk9dC5fbW9kZWw7cmV0dXJuIGkuZ2V0KCJheGlzRXhwYW5kYWJsZSIpJiZpLmdldCgiYXhpc0V4cGFuZFRyaWdnZXJPbiIpPT09ZX1mZihmdW5jdGlvbih0KXshZnVuY3Rpb24odCl7aWYodC5wYXJhbGxlbClyZXR1cm47dmFyIGU9ITE7RSh0LnNlcmllcyxmdW5jdGlvbih0KXt0JiYicGFyYWxsZWwiPT09dC50eXBlJiYoZT0hMCl9KSxlJiYodC5wYXJhbGxlbD1be31dKX0odCksZnVuY3Rpb24obil7RShFbyhuLnBhcmFsbGVsQXhpcyksZnVuY3Rpb24odCl7aWYoUih0KSl7dmFyIGU9dC5wYXJhbGxlbEluZGV4fHwwLGk9RW8obi5wYXJhbGxlbClbZV07aSYmaS5wYXJhbGxlbEF4aXNEZWZhdWx0JiZtKHQsaS5wYXJhbGxlbEF4aXNEZWZhdWx0LCExKX19KX0odCl9KSxpYy5leHRlbmQoe3R5cGU6InNlcmllcy5wYXJhbGxlbCIsZGVwZW5kZW5jaWVzOlsicGFyYWxsZWwiXSx2aXN1YWxDb2xvckFjY2Vzc1BhdGg6ImxpbmVTdHlsZS5jb2xvciIsZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmdldFNvdXJjZSgpO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKHQuZW5jb2RlRGVmaW5lKXJldHVybjt2YXIgaT1lLmVjTW9kZWwuZ2V0Q29tcG9uZW50KCJwYXJhbGxlbCIsZS5nZXQoInBhcmFsbGVsSW5kZXgiKSk7aWYoIWkpcmV0dXJuO3ZhciBuPXQuZW5jb2RlRGVmaW5lPVEoKTtFKGkuZGltZW5zaW9ucyxmdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbih0KXtyZXR1cm4rdC5yZXBsYWNlKCJkaW0iLCIiKX0odCk7bi5zZXQodCxlKX0pfShpLHRoaXMpLGhwKGksdGhpcyl9LGdldFJhd0luZGljZXNCeUFjdGl2ZVN0YXRlOmZ1bmN0aW9uKGkpe3ZhciB0PXRoaXMuY29vcmRpbmF0ZVN5c3RlbSxuPXRoaXMuZ2V0RGF0YSgpLG89W107cmV0dXJuIHQuZWFjaEFjdGl2ZVN0YXRlKG4sZnVuY3Rpb24odCxlKXtpPT09dCYmby5wdXNoKG4uZ2V0UmF3SW5kZXgoZSkpfSksb30sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06InBhcmFsbGVsIixwYXJhbGxlbEluZGV4OjAsbGFiZWw6e3Nob3c6ITF9LGluYWN0aXZlT3BhY2l0eTouMDUsYWN0aXZlT3BhY2l0eToxLGxpbmVTdHlsZTp7d2lkdGg6MSxvcGFjaXR5Oi40NSx0eXBlOiJzb2xpZCJ9LGVtcGhhc2lzOntsYWJlbDp7c2hvdzohMX19LHByb2dyZXNzaXZlOjUwMCxzbW9vdGg6ITEsYW5pbWF0aW9uRWFzaW5nOiJsaW5lYXIifX0pO2djLmV4dGVuZCh7dHlwZToicGFyYWxsZWwiLGluaXQ6ZnVuY3Rpb24oKXt0aGlzLl9kYXRhR3JvdXA9bmV3IElpLHRoaXMuZ3JvdXAuYWRkKHRoaXMuX2RhdGFHcm91cCksdGhpcy5fZGF0YSx0aGlzLl9pbml0aWFsaXplZH0scmVuZGVyOmZ1bmN0aW9uKGEsdCxlLHIpe3ZhciBpPXRoaXMuX2RhdGFHcm91cCxzPWEuZ2V0RGF0YSgpLGw9dGhpcy5fZGF0YSx1PWEuY29vcmRpbmF0ZVN5c3RlbSxoPXUuZGltZW5zaW9ucyxjPWVTKGEpO2lmKHMuZGlmZihsKS5hZGQoZnVuY3Rpb24odCl7aVModFMocyxpLHQsaCx1KSxzLHQsYyl9KS51cGRhdGUoZnVuY3Rpb24odCxlKXt2YXIgaT1sLmdldEl0ZW1HcmFwaGljRWwoZSksbj1RYihzLHQsaCx1KTtzLnNldEl0ZW1HcmFwaGljRWwodCxpKTt2YXIgbz1yJiYhMT09PXIuYW5pbWF0aW9uP251bGw6YTtzbChpLHtzaGFwZTp7cG9pbnRzOm59fSxvLHQpLGlTKGkscyx0LGMpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0SXRlbUdyYXBoaWNFbCh0KTtpLnJlbW92ZShlKX0pLmV4ZWN1dGUoKSwhdGhpcy5faW5pdGlhbGl6ZWQpe3RoaXMuX2luaXRpYWxpemVkPSEwO3ZhciBuPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10Lm1vZGVsLG89dC5nZXRSZWN0KCksYT1uZXcgaXMoe3NoYXBlOnt4Om8ueCx5Om8ueSx3aWR0aDpvLndpZHRoLGhlaWdodDpvLmhlaWdodH19KSxyPSJob3Jpem9udGFsIj09PW4uZ2V0KCJsYXlvdXQiKT8id2lkdGgiOiJoZWlnaHQiO3JldHVybiBhLnNldFNoYXBlKHIsMCksbGwoYSx7c2hhcGU6e3dpZHRoOm8ud2lkdGgsaGVpZ2h0Om8uaGVpZ2h0fX0sZSxpKSxhfSh1LGEsZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aS5yZW1vdmVDbGlwUGF0aCgpfSl9KTtpLnNldENsaXBQYXRoKG4pfXRoaXMuX2RhdGE9c30saW5jcmVtZW50YWxQcmVwYXJlUmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9pbml0aWFsaXplZD0hMCx0aGlzLl9kYXRhPW51bGwsdGhpcy5fZGF0YUdyb3VwLnJlbW92ZUFsbCgpfSxpbmNyZW1lbnRhbFJlbmRlcjpmdW5jdGlvbih0LGUsaSl7Zm9yKHZhciBuPWUuZ2V0RGF0YSgpLG89ZS5jb29yZGluYXRlU3lzdGVtLGE9by5kaW1lbnNpb25zLHI9ZVMoZSkscz10LnN0YXJ0O3M8dC5lbmQ7cysrKXt2YXIgbD10UyhuLHRoaXMuX2RhdGFHcm91cCxzLGEsbyk7bC5pbmNyZW1lbnRhbD0hMCxpUyhsLG4scyxyKX19LGRpc3Bvc2U6ZnVuY3Rpb24oKXt9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMuX2RhdGFHcm91cCYmdGhpcy5fZGF0YUdyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX2RhdGE9bnVsbH19KTtmdW5jdGlvbiBRYih0LGUsaSxuKXtmb3IodmFyIG8sYT1bXSxyPTA7cjxpLmxlbmd0aDtyKyspe3ZhciBzPWlbcl0sbD10LmdldCh0Lm1hcERpbWVuc2lvbihzKSxlKTtvPWwsKCJjYXRlZ29yeSI9PT1uLmdldEF4aXMocykudHlwZT9udWxsPT1vOm51bGw9PW98fGlzTmFOKG8pKXx8YS5wdXNoKG4uZGF0YVRvUG9pbnQobCxzKSl9cmV0dXJuIGF9ZnVuY3Rpb24gdFModCxlLGksbixvKXt2YXIgYT1RYih0LGksbixvKSxyPW5ldyBLcih7c2hhcGU6e3BvaW50czphfSxzaWxlbnQ6ITAsejI6MTB9KTtyZXR1cm4gZS5hZGQociksdC5zZXRJdGVtR3JhcGhpY0VsKGkscikscn1mdW5jdGlvbiBlUyh0KXt2YXIgZT10LmdldCgic21vb3RoIiwhMCk7cmV0dXJuITA9PT1lJiYoZT0uMykse2xpbmVTdHlsZTp0LmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSxzbW9vdGg6bnVsbCE9ZT9lOi4zfX1mdW5jdGlvbiBpUyh0LGUsaSxuKXt2YXIgbz1uLmxpbmVTdHlsZTtlLmhhc0l0ZW1PcHRpb24mJihvPWUuZ2V0SXRlbU1vZGVsKGkpLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSk7dC51c2VTdHlsZShvKTt2YXIgYT10LnN0eWxlO2EuZmlsbD1udWxsLGEuc3Ryb2tlPWUuZ2V0SXRlbVZpc3VhbChpLCJjb2xvciIpLGEub3BhY2l0eT1lLmdldEl0ZW1WaXN1YWwoaSwib3BhY2l0eSIpLG4uc21vb3RoJiYodC5zaGFwZS5zbW9vdGg9bi5zbW9vdGgpfXZhciBuUz1bImxpbmVTdHlsZSIsIm5vcm1hbCIsIm9wYWNpdHkiXTt5Zih7c2VyaWVzVHlwZToicGFyYWxsZWwiLHJlc2V0OmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldE1vZGVsKCJpdGVtU3R5bGUiKSxvPXQuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLGE9ZS5nZXQoImNvbG9yIikscj1vLmdldCgiY29sb3IiKXx8bi5nZXQoImNvbG9yIil8fGFbdC5zZXJpZXNJbmRleCVhLmxlbmd0aF0scz10LmdldCgiaW5hY3RpdmVPcGFjaXR5IiksbD10LmdldCgiYWN0aXZlT3BhY2l0eSIpLHU9dC5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCksaD10LmNvb3JkaW5hdGVTeXN0ZW0sYz10LmdldERhdGEoKSxkPXtub3JtYWw6dS5vcGFjaXR5LGFjdGl2ZTpsLGluYWN0aXZlOnN9O3JldHVybiBjLnNldFZpc3VhbCgiY29sb3IiLHIpLHtwcm9ncmVzczpmdW5jdGlvbih0LG8pe2guZWFjaEFjdGl2ZVN0YXRlKG8sZnVuY3Rpb24odCxlKXt2YXIgaT1kW3RdO2lmKCJub3JtYWwiPT09dCYmby5oYXNJdGVtT3B0aW9uKXt2YXIgbj1vLmdldEl0ZW1Nb2RlbChlKS5nZXQoblMsITApO251bGwhPW4mJihpPW4pfW8uc2V0SXRlbVZpc3VhbChlLCJvcGFjaXR5IixpKX0sdC5zdGFydCx0LmVuZCl9fX19KTt2YXIgb1M9aWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuc2Fua2V5IixsYXlvdXRJbmZvOm51bGwsbGV2ZWxNb2RlbHM6bnVsbCxnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10LmVkZ2VzfHx0LmxpbmtzLG49dC5kYXRhfHx0Lm5vZGVzLG89dC5sZXZlbHMsYT10aGlzLmxldmVsTW9kZWxzPXt9LHI9MDtyPG8ubGVuZ3RoO3IrKyludWxsIT1vW3JdLmRlcHRoJiYwPD1vW3JdLmRlcHRoJiYoYVtvW3JdLmRlcHRoXT1uZXcgSWwob1tyXSx0aGlzLGUpKTtpZihuJiZpKXJldHVybiBYXyhuLGksdGhpcywhMCxmdW5jdGlvbih0LGUpe3Qud3JhcE1ldGhvZCgiZ2V0SXRlbU1vZGVsIixmdW5jdGlvbih0LG4pe3JldHVybiB0LmN1c3RvbWl6ZUdldFBhcmVudChmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBhcmVudE1vZGVsLGk9ZS5nZXREYXRhKCkuZ2V0SXRlbUxheW91dChuKS5kZXB0aDtyZXR1cm4gZS5sZXZlbE1vZGVsc1tpXXx8dGhpcy5wYXJlbnRNb2RlbH0pLHR9KSxlLndyYXBNZXRob2QoImdldEl0ZW1Nb2RlbCIsZnVuY3Rpb24odCxuKXtyZXR1cm4gdC5jdXN0b21pemVHZXRQYXJlbnQoZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wYXJlbnRNb2RlbCxpPWUuZ2V0R3JhcGgoKS5nZXRFZGdlQnlJbmRleChuKS5ub2RlMS5nZXRMYXlvdXQoKS5kZXB0aDtyZXR1cm4gZS5sZXZlbE1vZGVsc1tpXXx8dGhpcy5wYXJlbnRNb2RlbH0pLHR9KX0pLmRhdGF9LHNldE5vZGVQb3NpdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMub3B0aW9uLmRhdGFbdF07aS5sb2NhbFg9ZVswXSxpLmxvY2FsWT1lWzFdfSxnZXRHcmFwaDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldERhdGEoKS5ncmFwaH0sZ2V0RWRnZURhdGE6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRHcmFwaCgpLmVkZ2VEYXRhfSxmb3JtYXRUb29sdGlwOmZ1bmN0aW9uKHQsZSxpKXtpZigiZWRnZSI9PT1pKXt2YXIgbj10aGlzLmdldERhdGFQYXJhbXModCxpKSxvPW4uZGF0YSxhPW8uc291cmNlKyIgLS0gIitvLnRhcmdldDtyZXR1cm4gbi52YWx1ZSYmKGErPSIgOiAiK24udmFsdWUpLGV1KGEpfWlmKCJub2RlIiE9PWkpcmV0dXJuIG9TLnN1cGVyQ2FsbCh0aGlzLCJmb3JtYXRUb29sdGlwIix0LGUpO3ZhciByPXRoaXMuZ2V0R3JhcGgoKS5nZXROb2RlQnlJbmRleCh0KS5nZXRMYXlvdXQoKS52YWx1ZSxzPXRoaXMuZ2V0RGF0YVBhcmFtcyh0LGkpLmRhdGEubmFtZTtpZihyKWE9cysiIDogIityO3JldHVybiBldShhKX0sb3B0aW9uVXBkYXRlZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uOyEwPT09dC5mb2N1c05vZGVBZGphY2VuY3kmJih0LmZvY3VzTm9kZUFkamFjZW5jeT0iYWxsRWRnZXMiKX0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06InZpZXciLGxheW91dDpudWxsLGxlZnQ6IjUlIix0b3A6IjUlIixyaWdodDoiMjAlIixib3R0b206IjUlIixvcmllbnQ6Imhvcml6b250YWwiLG5vZGVXaWR0aDoyMCxub2RlR2FwOjgsZHJhZ2dhYmxlOiEwLGZvY3VzTm9kZUFkamFjZW5jeTohMSxsYXlvdXRJdGVyYXRpb25zOjMyLGxhYmVsOntzaG93OiEwLHBvc2l0aW9uOiJyaWdodCIsY29sb3I6IiMwMDAiLGZvbnRTaXplOjEyfSxsZXZlbHM6W10sbm9kZUFsaWduOiJqdXN0aWZ5IixpdGVtU3R5bGU6e2JvcmRlcldpZHRoOjEsYm9yZGVyQ29sb3I6IiMzMzMifSxsaW5lU3R5bGU6e2NvbG9yOiIjMzE0NjU2IixvcGFjaXR5Oi4yLGN1cnZlbmVzczouNX0sZW1waGFzaXM6e2xhYmVsOntzaG93OiEwfSxsaW5lU3R5bGU6e29wYWNpdHk6LjZ9fSxhbmltYXRpb25FYXNpbmc6ImxpbmVhciIsYW5pbWF0aW9uRHVyYXRpb246MWUzfX0pLGFTPVsiaXRlbVN0eWxlIiwib3BhY2l0eSJdLHJTPVsibGluZVN0eWxlIiwib3BhY2l0eSJdO2Z1bmN0aW9uIHNTKHQsZSl7cmV0dXJuIHQuZ2V0VmlzdWFsKCJvcGFjaXR5Iil8fHQuZ2V0TW9kZWwoKS5nZXQoZSl9ZnVuY3Rpb24gbFModCxlLGkpe3ZhciBuPXQuZ2V0R3JhcGhpY0VsKCksbz1zUyh0LGUpO251bGwhPWkmJihudWxsPT1vJiYobz0xKSxvKj1pKSxuLmRvd25wbGF5JiZuLmRvd25wbGF5KCksbi50cmF2ZXJzZShmdW5jdGlvbih0KXsiZ3JvdXAiIT09dC50eXBlJiZ0LnNldFN0eWxlKCJvcGFjaXR5IixvKX0pfWZ1bmN0aW9uIHVTKHQsZSl7dmFyIGk9c1ModCxlKSxuPXQuZ2V0R3JhcGhpY0VsKCk7bi5oaWdobGlnaHQmJm4uaGlnaGxpZ2h0KCksbi50cmF2ZXJzZShmdW5jdGlvbih0KXsiZ3JvdXAiIT09dC50eXBlJiZ0LnNldFN0eWxlKCJvcGFjaXR5IixpKX0pfXZhciBoUz1Jcyh7c2hhcGU6e3gxOjAseTE6MCx4MjowLHkyOjAsY3B4MTowLGNweTE6MCxjcHgyOjAsY3B5MjowLGV4dGVudDowLG9yaWVudDoiIn0sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5leHRlbnQ7dC5tb3ZlVG8oZS54MSxlLnkxKSx0LmJlemllckN1cnZlVG8oZS5jcHgxLGUuY3B5MSxlLmNweDIsZS5jcHkyLGUueDIsZS55MiksInZlcnRpY2FsIj09PWUub3JpZW50Pyh0LmxpbmVUbyhlLngyK2ksZS55MiksdC5iZXppZXJDdXJ2ZVRvKGUuY3B4MitpLGUuY3B5MixlLmNweDEraSxlLmNweTEsZS54MStpLGUueTEpKToodC5saW5lVG8oZS54MixlLnkyK2kpLHQuYmV6aWVyQ3VydmVUbyhlLmNweDIsZS5jcHkyK2ksZS5jcHgxLGUuY3B5MStpLGUueDEsZS55MStpKSksdC5jbG9zZVBhdGgoKX19KTtNZih7dHlwZToic2Fua2V5IixfbW9kZWw6bnVsbCxfZm9jdXNBZGphY2VuY3lEaXNhYmxlZDohMSxyZW5kZXI6ZnVuY3Rpb24odyx0LG4pe3ZhciBvPXRoaXMsZT13LmdldEdyYXBoKCksYj10aGlzLmdyb3VwLGk9dy5sYXlvdXRJbmZvLFM9aS53aWR0aCxNPWkuaGVpZ2h0LHU9dy5nZXREYXRhKCksST13LmdldERhdGEoImVkZ2UiKSxUPXcuZ2V0KCJvcmllbnQiKTt0aGlzLl9tb2RlbD13LGIucmVtb3ZlQWxsKCksYi5hdHRyKCJwb3NpdGlvbiIsW2kueCxpLnldKSxlLmVhY2hFZGdlKGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBoUztlLmRhdGFJbmRleD10LmRhdGFJbmRleCxlLnNlcmllc0luZGV4PXcuc2VyaWVzSW5kZXgsZS5kYXRhVHlwZT0iZWRnZSI7dmFyIGksbixvLGEscixzLGwsdSxoPXQuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLGM9aC5nZXQoImN1cnZlbmVzcyIpLGQ9dC5ub2RlMS5nZXRMYXlvdXQoKSxmPXQubm9kZTEuZ2V0TW9kZWwoKSxwPWYuZ2V0KCJsb2NhbFgiKSxnPWYuZ2V0KCJsb2NhbFkiKSxtPXQubm9kZTIuZ2V0TGF5b3V0KCksdj10Lm5vZGUyLmdldE1vZGVsKCkseT12LmdldCgibG9jYWxYIikseD12LmdldCgibG9jYWxZIiksXz10LmdldExheW91dCgpO3N3aXRjaChlLnNoYXBlLmV4dGVudD1NYXRoLm1heCgxLF8uZHkpLHU9InZlcnRpY2FsIj09PShlLnNoYXBlLm9yaWVudD1UKT8oaT0obnVsbCE9cD9wKlM6ZC54KStfLnN5LG49KG51bGwhPWc/ZypNOmQueSkrZC5keSxvPShudWxsIT15P3kqUzptLngpK18udHkscj1pLHM9biooMS1jKSsoYT1udWxsIT14P3gqTTptLnkpKmMsbD1vLG4qYythKigxLWMpKTooaT0obnVsbCE9cD9wKlM6ZC54KStkLmR4LG49KG51bGwhPWc/ZypNOmQueSkrXy5zeSxyPWkqKDEtYykrKG89bnVsbCE9eT95KlM6bS54KSpjLHM9bixsPWkqYytvKigxLWMpLGE9KG51bGwhPXg/eCpNOm0ueSkrXy50eSksZS5zZXRTaGFwZSh7eDE6aSx5MTpuLHgyOm8seTI6YSxjcHgxOnIsY3B5MTpzLGNweDI6bCxjcHkyOnV9KSxlLnNldFN0eWxlKGguZ2V0SXRlbVN0eWxlKCkpLGUuc3R5bGUuZmlsbCl7Y2FzZSJzb3VyY2UiOmUuc3R5bGUuZmlsbD10Lm5vZGUxLmdldFZpc3VhbCgiY29sb3IiKTticmVhaztjYXNlInRhcmdldCI6ZS5zdHlsZS5maWxsPXQubm9kZTIuZ2V0VmlzdWFsKCJjb2xvciIpfVlzKGUsdC5nZXRNb2RlbCgiZW1waGFzaXMubGluZVN0eWxlIikuZ2V0SXRlbVN0eWxlKCkpLGIuYWRkKGUpLEkuc2V0SXRlbUdyYXBoaWNFbCh0LmRhdGFJbmRleCxlKX0pLGUuZWFjaE5vZGUoZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRMYXlvdXQoKSxpPXQuZ2V0TW9kZWwoKSxuPWkuZ2V0KCJsb2NhbFgiKSxvPWkuZ2V0KCJsb2NhbFkiKSxhPWkuZ2V0TW9kZWwoImxhYmVsIikscj1pLmdldE1vZGVsKCJlbXBoYXNpcy5sYWJlbCIpLHM9bmV3IGlzKHtzaGFwZTp7eDpudWxsIT1uP24qUzplLngseTpudWxsIT1vP28qTTplLnksd2lkdGg6ZS5keCxoZWlnaHQ6ZS5keX0sc3R5bGU6aS5nZXRNb2RlbCgiaXRlbVN0eWxlIikuZ2V0SXRlbVN0eWxlKCl9KSxsPXQuZ2V0TW9kZWwoImVtcGhhc2lzLml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZSgpOyRzKHMuc3R5bGUsbCxhLHIse2xhYmVsRmV0Y2hlcjp3LGxhYmVsRGF0YUluZGV4OnQuZGF0YUluZGV4LGRlZmF1bHRUZXh0OnQuaWQsaXNSZWN0VGV4dDohMH0pLHMuc2V0U3R5bGUoImZpbGwiLHQuZ2V0VmlzdWFsKCJjb2xvciIpKSxZcyhzLGwpLGIuYWRkKHMpLHUuc2V0SXRlbUdyYXBoaWNFbCh0LmRhdGFJbmRleCxzKSxzLmRhdGFUeXBlPSJub2RlIn0pLHUuZWFjaEl0ZW1HcmFwaGljRWwoZnVuY3Rpb24odCxpKXt2YXIgZT11LmdldEl0ZW1Nb2RlbChpKTtlLmdldCgiZHJhZ2dhYmxlIikmJih0LmRyaWZ0PWZ1bmN0aW9uKHQsZSl7by5fZm9jdXNBZGphY2VuY3lEaXNhYmxlZD0hMCx0aGlzLnNoYXBlLngrPXQsdGhpcy5zaGFwZS55Kz1lLHRoaXMuZGlydHkoKSxuLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJkcmFnTm9kZSIsc2VyaWVzSWQ6dy5pZCxkYXRhSW5kZXg6dS5nZXRSYXdJbmRleChpKSxsb2NhbFg6dGhpcy5zaGFwZS54L1MsbG9jYWxZOnRoaXMuc2hhcGUueS9NfSl9LHQub25kcmFnZW5kPWZ1bmN0aW9uKCl7by5fZm9jdXNBZGphY2VuY3lEaXNhYmxlZD0hMX0sdC5kcmFnZ2FibGU9ITAsdC5jdXJzb3I9Im1vdmUiKSxlLmdldCgiZm9jdXNOb2RlQWRqYWNlbmN5IikmJih0Lm9mZigibW91c2VvdmVyIikub24oIm1vdXNlb3ZlciIsZnVuY3Rpb24oKXtvLl9mb2N1c0FkamFjZW5jeURpc2FibGVkfHwoby5fY2xlYXJUaW1lcigpLG4uZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImZvY3VzTm9kZUFkamFjZW5jeSIsc2VyaWVzSWQ6dy5pZCxkYXRhSW5kZXg6dC5kYXRhSW5kZXh9KSl9KSx0Lm9mZigibW91c2VvdXQiKS5vbigibW91c2VvdXQiLGZ1bmN0aW9uKCl7by5fZm9jdXNBZGphY2VuY3lEaXNhYmxlZHx8by5fZGlzcGF0Y2hVbmZvY3VzKG4pfSkpfSksSS5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0LGUpe0kuZ2V0SXRlbU1vZGVsKGUpLmdldCgiZm9jdXNOb2RlQWRqYWNlbmN5IikmJih0Lm9mZigibW91c2VvdmVyIikub24oIm1vdXNlb3ZlciIsZnVuY3Rpb24oKXtvLl9mb2N1c0FkamFjZW5jeURpc2FibGVkfHwoby5fY2xlYXJUaW1lcigpLG4uZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImZvY3VzTm9kZUFkamFjZW5jeSIsc2VyaWVzSWQ6dy5pZCxlZGdlRGF0YUluZGV4OnQuZGF0YUluZGV4fSkpfSksdC5vZmYoIm1vdXNlb3V0Iikub24oIm1vdXNlb3V0IixmdW5jdGlvbigpe28uX2ZvY3VzQWRqYWNlbmN5RGlzYWJsZWR8fG8uX2Rpc3BhdGNoVW5mb2N1cyhuKX0pKX0pLCF0aGlzLl9kYXRhJiZ3LmdldCgiYW5pbWF0aW9uIikmJmIuc2V0Q2xpcFBhdGgoZnVuY3Rpb24odCxlLGkpe3ZhciBuPW5ldyBpcyh7c2hhcGU6e3g6dC54LTEwLHk6dC55LTEwLHdpZHRoOjAsaGVpZ2h0OnQuaGVpZ2h0KzIwfX0pO3JldHVybiBsbChuLHtzaGFwZTp7d2lkdGg6dC53aWR0aCsyMCxoZWlnaHQ6dC5oZWlnaHQrMjB9fSxlLGkpLG59KGIuZ2V0Qm91bmRpbmdSZWN0KCksdyxmdW5jdGlvbigpe2IucmVtb3ZlQ2xpcFBhdGgoKX0pKSx0aGlzLl9kYXRhPXcuZ2V0RGF0YSgpfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJUaW1lcigpfSxfZGlzcGF0Y2hVbmZvY3VzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5fY2xlYXJUaW1lcigpLHRoaXMuX3VuZm9jdXNEZWxheVRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLl91bmZvY3VzRGVsYXlUaW1lcj1udWxsLHQuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InVuZm9jdXNOb2RlQWRqYWNlbmN5IixzZXJpZXNJZDplLl9tb2RlbC5pZH0pfSw1MDApfSxfY2xlYXJUaW1lcjpmdW5jdGlvbigpe3RoaXMuX3VuZm9jdXNEZWxheVRpbWVyJiYoY2xlYXJUaW1lb3V0KHRoaXMuX3VuZm9jdXNEZWxheVRpbWVyKSx0aGlzLl91bmZvY3VzRGVsYXlUaW1lcj1udWxsKX0sZm9jdXNOb2RlQWRqYWNlbmN5OmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXRoaXMuX21vZGVsLmdldERhdGEoKSxhPW8uZ3JhcGgscj1uLmRhdGFJbmRleCxzPW8uZ2V0SXRlbU1vZGVsKHIpLGw9bi5lZGdlRGF0YUluZGV4O2lmKG51bGwhPXJ8fG51bGwhPWwpe3ZhciB1PWEuZ2V0Tm9kZUJ5SW5kZXgociksaD1hLmdldEVkZ2VCeUluZGV4KGwpO2lmKGEuZWFjaE5vZGUoZnVuY3Rpb24odCl7bFModCxhUywuMSl9KSxhLmVhY2hFZGdlKGZ1bmN0aW9uKHQpe2xTKHQsclMsLjEpfSksdSl7dVModSxhUyk7dmFyIGM9cy5nZXQoImZvY3VzTm9kZUFkamFjZW5jeSIpOyJvdXRFZGdlcyI9PT1jP0UodS5vdXRFZGdlcyxmdW5jdGlvbih0KXt0LmRhdGFJbmRleDwwfHwodVModCxyUyksdVModC5ub2RlMixhUykpfSk6ImluRWRnZXMiPT09Yz9FKHUuaW5FZGdlcyxmdW5jdGlvbih0KXt0LmRhdGFJbmRleDwwfHwodVModCxyUyksdVModC5ub2RlMSxhUykpfSk6ImFsbEVkZ2VzIj09PWMmJkUodS5lZGdlcyxmdW5jdGlvbih0KXt0LmRhdGFJbmRleDwwfHwodVModCxyUyksdVModC5ub2RlMSxhUyksdVModC5ub2RlMixhUykpfSl9aCYmKHVTKGgsclMpLHVTKGgubm9kZTEsYVMpLHVTKGgubm9kZTIsYVMpKX19LHVuZm9jdXNOb2RlQWRqYWNlbmN5OmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXRoaXMuX21vZGVsLmdldEdyYXBoKCk7by5lYWNoTm9kZShmdW5jdGlvbih0KXtsUyh0LGFTKX0pLG8uZWFjaEVkZ2UoZnVuY3Rpb24odCl7bFModCxyUyl9KX19KSxnZih7dHlwZToiZHJhZ05vZGUiLGV2ZW50OiJkcmFnbm9kZSIsdXBkYXRlOiJ1cGRhdGUifSxmdW5jdGlvbihlLHQpe3QuZWFjaENvbXBvbmVudCh7bWFpblR5cGU6InNlcmllcyIsc3ViVHlwZToic2Fua2V5IixxdWVyeTplfSxmdW5jdGlvbih0KXt0LnNldE5vZGVQb3NpdGlvbihlLmRhdGFJbmRleCxbZS5sb2NhbFgsZS5sb2NhbFldKX0pfSk7ZnVuY3Rpb24gY1ModCl7dmFyIGU9dC5ob3N0R3JhcGguZGF0YS5nZXRSYXdEYXRhSXRlbSh0LmRhdGFJbmRleCk7cmV0dXJuIG51bGwhPWUuZGVwdGgmJjA8PWUuZGVwdGh9ZnVuY3Rpb24gZFModCxsLHUsaCxjKXt2YXIgZD0idmVydGljYWwiPT09Yz8ieCI6InkiO0UodCxmdW5jdGlvbih0KXt2YXIgZSxpLG47dC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0TGF5b3V0KClbZF0tZS5nZXRMYXlvdXQoKVtkXX0pO2Zvcih2YXIgbz0wLGE9dC5sZW5ndGgscj0idmVydGljYWwiPT09Yz8iZHgiOiJkeSIscz0wO3M8YTtzKyspMDwobj1vLShpPXRbc10pLmdldExheW91dCgpW2RdKSYmKGU9aS5nZXRMYXlvdXQoKVtkXStuLCJ2ZXJ0aWNhbCI9PT1jP2kuc2V0TGF5b3V0KHt4OmV9LCEwKTppLnNldExheW91dCh7eTplfSwhMCkpLG89aS5nZXRMYXlvdXQoKVtkXStpLmdldExheW91dCgpW3JdK2w7aWYoMDwobj1vLWwtKCJ2ZXJ0aWNhbCI9PT1jP2g6dSkpKWZvcihlPWkuZ2V0TGF5b3V0KClbZF0tbiwidmVydGljYWwiPT09Yz9pLnNldExheW91dCh7eDplfSwhMCk6aS5zZXRMYXlvdXQoe3k6ZX0sITApLG89ZSxzPWEtMjswPD1zOy0tcykwPChuPShpPXRbc10pLmdldExheW91dCgpW2RdK2kuZ2V0TGF5b3V0KClbcl0rbC1vKSYmKGU9aS5nZXRMYXlvdXQoKVtkXS1uLCJ2ZXJ0aWNhbCI9PT1jP2kuc2V0TGF5b3V0KHt4OmV9LCEwKTppLnNldExheW91dCh7eTplfSwhMCkpLG89aS5nZXRMYXlvdXQoKVtkXX0pfWZ1bmN0aW9uIGZTKHQsbyxhKXtFKHQuc2xpY2UoKS5yZXZlcnNlKCksZnVuY3Rpb24odCl7RSh0LGZ1bmN0aW9uKHQpe2lmKHQub3V0RWRnZXMubGVuZ3RoKXt2YXIgZT15Uyh0Lm91dEVkZ2VzLHBTLGEpL3lTKHQub3V0RWRnZXMsdlMsYSk7aWYoInZlcnRpY2FsIj09PWEpe3ZhciBpPXQuZ2V0TGF5b3V0KCkueCsoZS1tUyh0LGEpKSpvO3Quc2V0TGF5b3V0KHt4Oml9LCEwKX1lbHNle3ZhciBuPXQuZ2V0TGF5b3V0KCkueSsoZS1tUyh0LGEpKSpvO3Quc2V0TGF5b3V0KHt5Om59LCEwKX19fSl9KX1mdW5jdGlvbiBwUyh0LGUpe3JldHVybiBtUyh0Lm5vZGUyLGUpKnQuZ2V0VmFsdWUoKX1mdW5jdGlvbiBnUyh0LGUpe3JldHVybiBtUyh0Lm5vZGUxLGUpKnQuZ2V0VmFsdWUoKX1mdW5jdGlvbiBtUyh0LGUpe3JldHVybiJ2ZXJ0aWNhbCI9PT1lP3QuZ2V0TGF5b3V0KCkueCt0LmdldExheW91dCgpLmR4LzI6dC5nZXRMYXlvdXQoKS55K3QuZ2V0TGF5b3V0KCkuZHkvMn1mdW5jdGlvbiB2Uyh0KXtyZXR1cm4gdC5nZXRWYWx1ZSgpfWZ1bmN0aW9uIHlTKHQsZSxpKXtmb3IodmFyIG49MCxvPXQubGVuZ3RoLGE9LTE7KythPG87KXt2YXIgcj0rZS5jYWxsKHQsdFthXSxpKTtpc05hTihyKXx8KG4rPXIpfXJldHVybiBufWZ1bmN0aW9uIHhTKHQsbyxhKXtFKHQsZnVuY3Rpb24odCl7RSh0LGZ1bmN0aW9uKHQpe2lmKHQuaW5FZGdlcy5sZW5ndGgpe3ZhciBlPXlTKHQuaW5FZGdlcyxnUyxhKS95Uyh0LmluRWRnZXMsdlMsYSk7aWYoInZlcnRpY2FsIj09PWEpe3ZhciBpPXQuZ2V0TGF5b3V0KCkueCsoZS1tUyh0LGEpKSpvO3Quc2V0TGF5b3V0KHt4Oml9LCEwKX1lbHNle3ZhciBuPXQuZ2V0TGF5b3V0KCkueSsoZS1tUyh0LGEpKSpvO3Quc2V0TGF5b3V0KHt5Om59LCEwKX19fSl9KX12ZihmdW5jdGlvbih0LHUsZSl7dC5lYWNoU2VyaWVzQnlUeXBlKCJzYW5rZXkiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0KCJub2RlV2lkdGgiKSxpPXQuZ2V0KCJub2RlR2FwIiksbj1mdW5jdGlvbih0LGUpe3JldHVybiB2dSh0LmdldEJveExheW91dFBhcmFtcygpLHt3aWR0aDplLmdldFdpZHRoKCksaGVpZ2h0OmUuZ2V0SGVpZ2h0KCl9KX0odCx1KSxvPSh0LmxheW91dEluZm89bikud2lkdGgsYT1uLmhlaWdodCxyPXQuZ2V0R3JhcGgoKSxzPXIubm9kZXMsbD1yLmVkZ2VzOyFmdW5jdGlvbih0KXtFKHQsZnVuY3Rpb24odCl7dmFyIGU9eVModC5vdXRFZGdlcyx2UyksaT15Uyh0LmluRWRnZXMsdlMpLG49TWF0aC5tYXgoZSxpKTt0LnNldExheW91dCh7dmFsdWU6bn0sITApfSl9KHMpLGZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyxsKXsoZnVuY3Rpb24odCxlLGksbixvLGEscil7Zm9yKHZhciBzPVtdLGw9W10sdT1bXSxoPVtdLGM9MCxkPTA7ZDxlLmxlbmd0aDtkKyspc1tkXT0xO2ZvcihkPTA7ZDx0Lmxlbmd0aDtkKyspbFtkXT10W2RdLmluRWRnZXMubGVuZ3RoLDA9PT1sW2RdJiZ1LnB1c2godFtkXSk7dmFyIGY9LTE7Zm9yKDt1Lmxlbmd0aDspe2Zvcih2YXIgcD0wO3A8dS5sZW5ndGg7cCsrKXt2YXIgZz11W3BdLG09Zy5ob3N0R3JhcGguZGF0YS5nZXRSYXdEYXRhSXRlbShnLmRhdGFJbmRleCksdj1udWxsIT1tLmRlcHRoJiYwPD1tLmRlcHRoO3YmJm0uZGVwdGg+ZiYmKGY9bS5kZXB0aCksZy5zZXRMYXlvdXQoe2RlcHRoOnY/bS5kZXB0aDpjfSwhMCksInZlcnRpY2FsIj09PWE/Zy5zZXRMYXlvdXQoe2R5Oml9LCEwKTpnLnNldExheW91dCh7ZHg6aX0sITApO2Zvcih2YXIgeT0wO3k8Zy5vdXRFZGdlcy5sZW5ndGg7eSsrKXt2YXIgeD1nLm91dEVkZ2VzW3ldLF89ZS5pbmRleE9mKHgpO3NbX109MDt2YXIgdz14Lm5vZGUyLGI9dC5pbmRleE9mKHcpOzA9PS0tbFtiXSYmaC5pbmRleE9mKHcpPDAmJmgucHVzaCh3KX19KytjLHU9aCxoPVtdfWZvcihkPTA7ZDxzLmxlbmd0aDtkKyspaWYoMT09PXNbZF0pdGhyb3cgbmV3IEVycm9yKCJTYW5rZXkgaXMgYSBEQUcsIHRoZSBvcmlnaW5hbCBkYXRhIGhhcyBjeWNsZSEiKTt2YXIgUz1jLTE8Zj9mOmMtMTtyJiYibGVmdCIhPT1yJiZmdW5jdGlvbih0LGUsaSxuKXtpZigicmlnaHQiPT09ZSl7Zm9yKHZhciBvPVtdLGE9dCxyPTA7YS5sZW5ndGg7KXtmb3IodmFyIHM9MDtzPGEubGVuZ3RoO3MrKyl7dmFyIGw9YVtzXTtsLnNldExheW91dCh7c2tOb2RlSGVpZ2h0OnJ9LCEwKTtmb3IodmFyIHU9MDt1PGwuaW5FZGdlcy5sZW5ndGg7dSsrKXt2YXIgaD1sLmluRWRnZXNbdV07by5pbmRleE9mKGgubm9kZTEpPDAmJm8ucHVzaChoLm5vZGUxKX19YT1vLG89W10sKytyfUUodCxmdW5jdGlvbih0KXtjUyh0KXx8dC5zZXRMYXlvdXQoe2RlcHRoOk1hdGgubWF4KDAsbi10LmdldExheW91dCgpLnNrTm9kZUhlaWdodCl9LCEwKX0pfWVsc2UianVzdGlmeSI9PT1lJiZmdW5jdGlvbih0LGUpe0UodCxmdW5jdGlvbih0KXtjUyh0KXx8dC5vdXRFZGdlcy5sZW5ndGh8fHQuc2V0TGF5b3V0KHtkZXB0aDplfSwhMCl9KX0odCxuKX0odCxyLDAsUyk7IWZ1bmN0aW9uKHQsaSxuKXtFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRMYXlvdXQoKS5kZXB0aCppOyJ2ZXJ0aWNhbCI9PT1uP3Quc2V0TGF5b3V0KHt5OmV9LCEwKTp0LnNldExheW91dCh7eDplfSwhMCl9KX0odCwidmVydGljYWwiPT09YT8oby1pKS9TOihuLWkpL1MsYSl9KSh0LGUsaSxvLGEscyxsKSxmdW5jdGlvbih0LGUsaSxuLG8sYSxyKXt2YXIgcz1mdW5jdGlvbih0LGUpe3ZhciBpPVtdLG49InZlcnRpY2FsIj09PWU/InkiOiJ4IixvPUtvKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0TGF5b3V0KClbbl19KTtyZXR1cm4gby5rZXlzLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSksRShvLmtleXMsZnVuY3Rpb24odCl7aS5wdXNoKG8uYnVja2V0cy5nZXQodCkpfSksaX0odCxyKTsoZnVuY3Rpb24odCxlLG8sYSxyLHMpe3ZhciBsPTEvMDtFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGgsaT0wO0UodCxmdW5jdGlvbih0KXtpKz10LmdldExheW91dCgpLnZhbHVlfSk7dmFyIG49InZlcnRpY2FsIj09PXM/KGEtKGUtMSkqcikvaTooby0oZS0xKSpyKS9pO248bCYmKGw9bil9KSxFKHQsZnVuY3Rpb24odCl7RSh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXRMYXlvdXQoKS52YWx1ZSpsOyJ2ZXJ0aWNhbCI9PT1zPyh0LnNldExheW91dCh7eDplfSwhMCksdC5zZXRMYXlvdXQoe2R4Oml9LCEwKSk6KHQuc2V0TGF5b3V0KHt5OmV9LCEwKSx0LnNldExheW91dCh7ZHk6aX0sITApKX0pfSksRShlLGZ1bmN0aW9uKHQpe3ZhciBlPSt0LmdldFZhbHVlKCkqbDt0LnNldExheW91dCh7ZHk6ZX0sITApfSl9KShzLGUsaSxuLG8sciksZFMocyxvLGksbixyKTtmb3IodmFyIGw9MTswPGE7YS0tKWZTKHMsbCo9Ljk5LHIpLGRTKHMsbyxpLG4scikseFMocyxsLHIpLGRTKHMsbyxpLG4scil9KHQsZSxhLG8sbixyLHMpLGZ1bmN0aW9uKHQsZSl7dmFyIGk9InZlcnRpY2FsIj09PWU/IngiOiJ5IjtFKHQsZnVuY3Rpb24odCl7dC5vdXRFZGdlcy5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubm9kZTIuZ2V0TGF5b3V0KClbaV0tZS5ub2RlMi5nZXRMYXlvdXQoKVtpXX0pLHQuaW5FZGdlcy5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubm9kZTEuZ2V0TGF5b3V0KClbaV0tZS5ub2RlMS5nZXRMYXlvdXQoKVtpXX0pfSksRSh0LGZ1bmN0aW9uKHQpe3ZhciBlPTAsaT0wO0UodC5vdXRFZGdlcyxmdW5jdGlvbih0KXt0LnNldExheW91dCh7c3k6ZX0sITApLGUrPXQuZ2V0TGF5b3V0KCkuZHl9KSxFKHQuaW5FZGdlcyxmdW5jdGlvbih0KXt0LnNldExheW91dCh7dHk6aX0sITApLGkrPXQuZ2V0TGF5b3V0KCkuZHl9KX0pfSh0LHMpfShzLGwsZSxpLG8sYSwwIT09TShzLGZ1bmN0aW9uKHQpe3JldHVybiAwPT09dC5nZXRMYXlvdXQoKS52YWx1ZX0pLmxlbmd0aD8wOnQuZ2V0KCJsYXlvdXRJdGVyYXRpb25zIiksdC5nZXQoIm9yaWVudCIpLHQuZ2V0KCJub2RlQWxpZ24iKSl9KX0pLHlmKGZ1bmN0aW9uKHQsZSl7dC5lYWNoU2VyaWVzQnlUeXBlKCJzYW5rZXkiLGZ1bmN0aW9uKG4pe3ZhciB0PW4uZ2V0R3JhcGgoKS5ub2RlcztpZih0Lmxlbmd0aCl7dmFyIG89MS8wLGE9LTEvMDtFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRMYXlvdXQoKS52YWx1ZTtlPG8mJihvPWUpLGE8ZSYmKGE9ZSl9KSxFKHQsZnVuY3Rpb24odCl7dmFyIGU9bmV3IGFfKHt0eXBlOiJjb2xvciIsbWFwcGluZ01ldGhvZDoibGluZWFyIixkYXRhRXh0ZW50OltvLGFdLHZpc3VhbDpuLmdldCgiY29sb3IiKX0pLm1hcFZhbHVlVG9WaXN1YWwodC5nZXRMYXlvdXQoKS52YWx1ZSksaT10LmdldE1vZGVsKCkuZ2V0KCJpdGVtU3R5bGUuY29sb3IiKTtudWxsIT1pP3Quc2V0VmlzdWFsKCJjb2xvciIsaSk6dC5zZXRWaXN1YWwoImNvbG9yIixlKX0pfX0pfSk7dmFyIF9TPXtfYmFzZUF4aXNEaW06bnVsbCxnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LGUpe3ZhciBpLG4sbz1lLmdldENvbXBvbmVudCgieEF4aXMiLHRoaXMuZ2V0KCJ4QXhpc0luZGV4IikpLGE9ZS5nZXRDb21wb25lbnQoInlBeGlzIix0aGlzLmdldCgieUF4aXNJbmRleCIpKSxyPW8uZ2V0KCJ0eXBlIikscz1hLmdldCgidHlwZSIpOyJjYXRlZ29yeSI9PT1yPyh0LmxheW91dD0iaG9yaXpvbnRhbCIsaT1vLmdldE9yZGluYWxNZXRhKCksbj0hMCk6ImNhdGVnb3J5Ij09PXM/KHQubGF5b3V0PSJ2ZXJ0aWNhbCIsaT1hLmdldE9yZGluYWxNZXRhKCksbj0hMCk6dC5sYXlvdXQ9dC5sYXlvdXR8fCJob3Jpem9udGFsIjt2YXIgbD1bIngiLCJ5Il0sdT0iaG9yaXpvbnRhbCI9PT10LmxheW91dD8wOjEsaD10aGlzLl9iYXNlQXhpc0RpbT1sW3VdLGM9bFsxLXVdLGQ9W28sYV0sZj1kW3VdLmdldCgidHlwZSIpLHA9ZFsxLXVdLmdldCgidHlwZSIpLGc9dC5kYXRhO2lmKGcmJm4pe3ZhciBtPVtdO0UoZyxmdW5jdGlvbih0LGUpe3ZhciBpO3QudmFsdWUmJmsodC52YWx1ZSk/KGk9dC52YWx1ZS5zbGljZSgpLHQudmFsdWUudW5zaGlmdChlKSk6ayh0KT8oaT10LnNsaWNlKCksdC51bnNoaWZ0KGUpKTppPXQsbS5wdXNoKGkpfSksdC5kYXRhPW19dmFyIHY9dGhpcy5kZWZhdWx0VmFsdWVEaW1lbnNpb25zLHk9W3tuYW1lOmgsdHlwZTpMZihmKSxvcmRpbmFsTWV0YTppLG90aGVyRGltczp7dG9vbHRpcDohMSxpdGVtTmFtZTowfSxkaW1zRGVmOlsiYmFzZSJdfSx7bmFtZTpjLHR5cGU6TGYocCksZGltc0RlZjp2LnNsaWNlKCl9XTtyZXR1cm4gQnYodGhpcyx7Y29vcmREaW1lbnNpb25zOnksZGltZW5zaW9uc0NvdW50OnYubGVuZ3RoKzEsZW5jb2RlRGVmYXVsdGVyOlQoWHUseSx0aGlzKX0pfSxnZXRCYXNlQXhpczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2Jhc2VBeGlzRGltO3JldHVybiB0aGlzLmVjTW9kZWwuZ2V0Q29tcG9uZW50KHQrIkF4aXMiLHRoaXMuZ2V0KHQrIkF4aXNJbmRleCIpKS5heGlzfX07YihpYy5leHRlbmQoe3R5cGU6InNlcmllcy5ib3hwbG90IixkZXBlbmRlbmNpZXM6WyJ4QXhpcyIsInlBeGlzIiwiZ3JpZCJdLGRlZmF1bHRWYWx1ZURpbWVuc2lvbnM6W3tuYW1lOiJtaW4iLGRlZmF1bHRUb29sdGlwOiEwfSx7bmFtZToiUTEiLGRlZmF1bHRUb29sdGlwOiEwfSx7bmFtZToibWVkaWFuIixkZWZhdWx0VG9vbHRpcDohMH0se25hbWU6IlEzIixkZWZhdWx0VG9vbHRpcDohMH0se25hbWU6Im1heCIsZGVmYXVsdFRvb2x0aXA6ITB9XSxkaW1lbnNpb25zOm51bGwsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06ImNhcnRlc2lhbjJkIixsZWdlbmRIb3Zlckxpbms6ITAsaG92ZXJBbmltYXRpb246ITAsbGF5b3V0Om51bGwsYm94V2lkdGg6WzcsNTBdLGl0ZW1TdHlsZTp7Y29sb3I6IiNmZmYiLGJvcmRlcldpZHRoOjF9LGVtcGhhc2lzOntpdGVtU3R5bGU6e2JvcmRlcldpZHRoOjIsc2hhZG93Qmx1cjo1LHNoYWRvd09mZnNldFg6MixzaGFkb3dPZmZzZXRZOjIsc2hhZG93Q29sb3I6InJnYmEoMCwwLDAsMC40KSJ9fSxhbmltYXRpb25FYXNpbmc6ImVsYXN0aWNPdXQiLGFuaW1hdGlvbkR1cmF0aW9uOjgwMH19KSxfUywhMCk7dmFyIHdTPVsiaXRlbVN0eWxlIl0sYlM9WyJlbXBoYXNpcyIsIml0ZW1TdHlsZSJdLFNTPShnYy5leHRlbmQoe3R5cGU6ImJveHBsb3QiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG89dC5nZXREYXRhKCksYT10aGlzLmdyb3VwLHI9dGhpcy5fZGF0YTt0aGlzLl9kYXRhfHxhLnJlbW92ZUFsbCgpO3ZhciBzPSJob3Jpem9udGFsIj09PXQuZ2V0KCJsYXlvdXQiKT8xOjA7by5kaWZmKHIpLmFkZChmdW5jdGlvbih0KXtpZihvLmhhc1ZhbHVlKHQpKXt2YXIgZT1NUyhvLmdldEl0ZW1MYXlvdXQodCksbyx0LHMsITApO28uc2V0SXRlbUdyYXBoaWNFbCh0LGUpLGEuYWRkKGUpfX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPXIuZ2V0SXRlbUdyYXBoaWNFbChlKTtpZihvLmhhc1ZhbHVlKHQpKXt2YXIgbj1vLmdldEl0ZW1MYXlvdXQodCk7aT9JUyhuLGksbyx0KTppPU1TKG4sbyx0LHMpLGEuYWRkKGkpLG8uc2V0SXRlbUdyYXBoaWNFbCh0LGkpfWVsc2UgYS5yZW1vdmUoaSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7dmFyIGU9ci5nZXRJdGVtR3JhcGhpY0VsKHQpO2UmJmEucmVtb3ZlKGUpfSkuZXhlY3V0ZSgpLHRoaXMuX2RhdGE9b30scmVtb3ZlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ3JvdXAsaT10aGlzLl9kYXRhO3RoaXMuX2RhdGE9bnVsbCxpJiZpLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQpe3QmJmUucmVtb3ZlKHQpfSl9LGRpc3Bvc2U6ZXR9KSxTci5leHRlbmQoe3R5cGU6ImJveHBsb3RCb3hQYXRoIixzaGFwZTp7fSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLnBvaW50cyxuPTA7Zm9yKHQubW92ZVRvKGlbbl1bMF0saVtuXVsxXSksbisrO248NDtuKyspdC5saW5lVG8oaVtuXVswXSxpW25dWzFdKTtmb3IodC5jbG9zZVBhdGgoKTtuPGkubGVuZ3RoO24rKyl0Lm1vdmVUbyhpW25dWzBdLGlbbl1bMV0pLG4rKyx0LmxpbmVUbyhpW25dWzBdLGlbbl1bMV0pfX0pKTtmdW5jdGlvbiBNUyh0LGUsaSxuLG8pe3ZhciBhPXQuZW5kcyxyPW5ldyBTUyh7c2hhcGU6e3BvaW50czpvP2Z1bmN0aW9uKHQsZSxpKXtyZXR1cm4gTih0LGZ1bmN0aW9uKHQpe3JldHVybih0PXQuc2xpY2UoKSlbZV09aS5pbml0QmFzZWxpbmUsdH0pfShhLG4sdCk6YX19KTtyZXR1cm4gSVModCxyLGUsaSxvKSxyfWZ1bmN0aW9uIElTKHQsZSxpLG4sbyl7dmFyIGE9aS5ob3N0TW9kZWw7KDAseWxbbz8iaW5pdFByb3BzIjoidXBkYXRlUHJvcHMiXSkoZSx7c2hhcGU6e3BvaW50czp0LmVuZHN9fSxhLG4pO3ZhciByPWkuZ2V0SXRlbU1vZGVsKG4pLHM9ci5nZXRNb2RlbCh3UyksbD1pLmdldEl0ZW1WaXN1YWwobiwiY29sb3IiKSx1PXMuZ2V0SXRlbVN0eWxlKFsiYm9yZGVyQ29sb3IiXSk7dS5zdHJva2U9bCx1LnN0cm9rZU5vU2NhbGU9ITAsZS51c2VTdHlsZSh1KSxlLnoyPTEwMCxZcyhlLHIuZ2V0TW9kZWwoYlMpLmdldEl0ZW1TdHlsZSgpKX12YXIgVFM9WyJpdGVtU3R5bGUiLCJib3JkZXJDb2xvciJdLEFTPUU7eWYoZnVuY3Rpb24obix0KXt2YXIgbz1uLmdldCgiY29sb3IiKTtuLmVhY2hSYXdTZXJpZXNCeVR5cGUoImJveHBsb3QiLGZ1bmN0aW9uKHQpe3ZhciBlPW9bdC5zZXJpZXNJbmRleCVvLmxlbmd0aF0saT10LmdldERhdGEoKTtpLnNldFZpc3VhbCh7bGVnZW5kU3ltYm9sOiJyb3VuZFJlY3QiLGNvbG9yOnQuZ2V0KFRTKXx8ZX0pLG4uaXNTZXJpZXNGaWx0ZXJlZCh0KXx8aS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0SXRlbU1vZGVsKHQpO2kuc2V0SXRlbVZpc3VhbCh0LHtjb2xvcjplLmdldChUUywhMCl9KX0pfSl9KSx2ZihmdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbih0KXt2YXIgbj1bXSxvPVtdO3JldHVybiB0LmVhY2hTZXJpZXNCeVR5cGUoImJveHBsb3QiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0QmFzZUF4aXMoKSxpPV8obyxlKTtpPDAmJihpPW8ubGVuZ3RoLG9baV09ZSxuW2ldPXtheGlzOmUsc2VyaWVzTW9kZWxzOltdfSksbltpXS5zZXJpZXNNb2RlbHMucHVzaCh0KX0pLG59KHQpO0FTKGUsZnVuY3Rpb24oaSl7dmFyIHQ9aS5zZXJpZXNNb2RlbHM7dC5sZW5ndGgmJihmdW5jdGlvbih0KXt2YXIgZSxpLG49dC5heGlzLG89dC5zZXJpZXNNb2RlbHMsYT1vLmxlbmd0aCxyPXQuYm94V2lkdGhMaXN0PVtdLHM9dC5ib3hPZmZzZXRMaXN0PVtdLGw9W107aWYoImNhdGVnb3J5Ij09PW4udHlwZSlpPW4uZ2V0QmFuZFdpZHRoKCk7ZWxzZXt2YXIgdT0wO0FTKG8sZnVuY3Rpb24odCl7dT1NYXRoLm1heCh1LHQuZ2V0RGF0YSgpLmNvdW50KCkpfSksZT1uLmdldEV4dGVudCgpLE1hdGguYWJzKGVbMV0tZVswXSl9QVMobyxmdW5jdGlvbih0KXt2YXIgZT10LmdldCgiYm94V2lkdGgiKTtrKGUpfHwoZT1bZSxlXSksbC5wdXNoKFtQbChlWzBdLGkpfHwwLFBsKGVbMV0saSl8fDBdKX0pO3ZhciBoPS44KmktMixjPWgvYSouMyxkPShoLWMqKGEtMSkpL2EsZj1kLzItaC8yO0FTKG8sZnVuY3Rpb24odCxlKXtzLnB1c2goZiksZis9YytkLHIucHVzaChNYXRoLm1pbihNYXRoLm1heChkLGxbZV1bMF0pLGxbZV1bMV0pKX0pfShpKSxBUyh0LGZ1bmN0aW9uKHQsZSl7IWZ1bmN0aW9uKHQscixlKXt2YXIgcz10LmNvb3JkaW5hdGVTeXN0ZW0sbD10LmdldERhdGEoKSxhPWUvMix1PSJob3Jpem9udGFsIj09PXQuZ2V0KCJsYXlvdXQiKT8wOjEsaD0xLXUsaT1bIngiLCJ5Il0sbj1sLm1hcERpbWVuc2lvbihpW3VdKSxvPWwubWFwRGltZW5zaW9uKGlbaF0sITApO2lmKG51bGw9PW58fG8ubGVuZ3RoPDUpcmV0dXJuO2Zvcih2YXIgYz0wO2M8bC5jb3VudCgpO2MrKyl7dmFyIGQ9bC5nZXQobixjKSxmPXgoZCxvWzJdLGMpLHA9eChkLG9bMF0sYyksZz14KGQsb1sxXSxjKSxtPXgoZCxvWzNdLGMpLHY9eChkLG9bNF0sYykseT1bXTtfKHksZywwKSxfKHksbSwxKSx5LnB1c2gocCxnLHYsbSksdyh5LHApLHcoeSx2KSx3KHksZiksbC5zZXRJdGVtTGF5b3V0KGMse2luaXRCYXNlbGluZTpmW2hdLGVuZHM6eX0pfWZ1bmN0aW9uIHgodCxlLGkpe3ZhciBuLG89bC5nZXQoZSxpKSxhPVtdO3JldHVybiBhW3VdPXQsYVtoXT1vLGlzTmFOKHQpfHxpc05hTihvKT9uPVtOYU4sTmFOXToobj1zLmRhdGFUb1BvaW50KGEpKVt1XSs9cixufWZ1bmN0aW9uIF8odCxlLGkpe3ZhciBuPWUuc2xpY2UoKSxvPWUuc2xpY2UoKTtuW3VdKz1hLG9bdV0tPWEsaT90LnB1c2gobixvKTp0LnB1c2gobyxuKX1mdW5jdGlvbiB3KHQsZSl7dmFyIGk9ZS5zbGljZSgpLG49ZS5zbGljZSgpO2lbdV0tPWEsblt1XSs9YSx0LnB1c2goaSxuKX19KHQsaS5ib3hPZmZzZXRMaXN0W2VdLGkuYm94V2lkdGhMaXN0W2VdKX0pKX0pfSksYihpYy5leHRlbmQoe3R5cGU6InNlcmllcy5jYW5kbGVzdGljayIsZGVwZW5kZW5jaWVzOlsieEF4aXMiLCJ5QXhpcyIsImdyaWQiXSxkZWZhdWx0VmFsdWVEaW1lbnNpb25zOlt7bmFtZToib3BlbiIsZGVmYXVsdFRvb2x0aXA6ITB9LHtuYW1lOiJjbG9zZSIsZGVmYXVsdFRvb2x0aXA6ITB9LHtuYW1lOiJsb3dlc3QiLGRlZmF1bHRUb29sdGlwOiEwfSx7bmFtZToiaGlnaGVzdCIsZGVmYXVsdFRvb2x0aXA6ITB9XSxkaW1lbnNpb25zOm51bGwsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoyLGNvb3JkaW5hdGVTeXN0ZW06ImNhcnRlc2lhbjJkIixsZWdlbmRIb3Zlckxpbms6ITAsaG92ZXJBbmltYXRpb246ITAsbGF5b3V0Om51bGwsY2xpcDohMCxpdGVtU3R5bGU6e2NvbG9yOiIjYzIzNTMxIixjb2xvcjA6IiMzMTQ2NTYiLGJvcmRlcldpZHRoOjEsYm9yZGVyQ29sb3I6IiNjMjM1MzEiLGJvcmRlckNvbG9yMDoiIzMxNDY1NiJ9LGVtcGhhc2lzOntpdGVtU3R5bGU6e2JvcmRlcldpZHRoOjJ9fSxiYXJNYXhXaWR0aDpudWxsLGJhck1pbldpZHRoOm51bGwsYmFyV2lkdGg6bnVsbCxsYXJnZTohMCxsYXJnZVRocmVzaG9sZDo2MDAscHJvZ3Jlc3NpdmU6M2UzLHByb2dyZXNzaXZlVGhyZXNob2xkOjFlNCxwcm9ncmVzc2l2ZUNodW5rTW9kZToibW9kIixhbmltYXRpb25VcGRhdGU6ITEsYW5pbWF0aW9uRWFzaW5nOiJsaW5lYXIiLGFuaW1hdGlvbkR1cmF0aW9uOjMwMH0sZ2V0U2hhZG93RGltOmZ1bmN0aW9uKCl7cmV0dXJuIm9wZW4ifSxicnVzaFNlbGVjdG9yOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lLmdldEl0ZW1MYXlvdXQodCk7cmV0dXJuIG4mJmkucmVjdChuLmJydXNoUmVjdCl9fSksX1MsITApO3ZhciBEUz1bIml0ZW1TdHlsZSJdLENTPVsiZW1waGFzaXMiLCJpdGVtU3R5bGUiXSxMUz1bImNvbG9yIiwiY29sb3IwIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJDb2xvcjAiXSxrUz0oZ2MuZXh0ZW5kKHt0eXBlOiJjYW5kbGVzdGljayIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLmdyb3VwLnJlbW92ZUNsaXBQYXRoKCksdGhpcy5fdXBkYXRlRHJhd01vZGUodCksdGhpcy5faXNMYXJnZURyYXc/dGhpcy5fcmVuZGVyTGFyZ2UodCk6dGhpcy5fcmVuZGVyTm9ybWFsKHQpfSxpbmNyZW1lbnRhbFByZXBhcmVSZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuX2NsZWFyKCksdGhpcy5fdXBkYXRlRHJhd01vZGUodCl9LGluY3JlbWVudGFsUmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuX2lzTGFyZ2VEcmF3P3RoaXMuX2luY3JlbWVudGFsUmVuZGVyTGFyZ2UodCxlKTp0aGlzLl9pbmNyZW1lbnRhbFJlbmRlck5vcm1hbCh0LGUpfSxfdXBkYXRlRHJhd01vZGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5waXBlbGluZUNvbnRleHQubGFyZ2U7KG51bGw9PXRoaXMuX2lzTGFyZ2VEcmF3fHxlXnRoaXMuX2lzTGFyZ2VEcmF3KSYmKHRoaXMuX2lzTGFyZ2VEcmF3PWUsdGhpcy5fY2xlYXIoKSl9LF9yZW5kZXJOb3JtYWw6ZnVuY3Rpb24obyl7dmFyIGE9by5nZXREYXRhKCkscj10aGlzLl9kYXRhLHM9dGhpcy5ncm91cCxsPWEuZ2V0TGF5b3V0KCJpc1NpbXBsZUJveCIpLHU9by5nZXQoImNsaXAiLCEwKSx0PW8uY29vcmRpbmF0ZVN5c3RlbSxoPXQuZ2V0QXJlYSYmdC5nZXRBcmVhKCk7dGhpcy5fZGF0YXx8cy5yZW1vdmVBbGwoKSxhLmRpZmYocikuYWRkKGZ1bmN0aW9uKHQpe2lmKGEuaGFzVmFsdWUodCkpe3ZhciBlLGk9YS5nZXRJdGVtTGF5b3V0KHQpO2lmKHUmJk5TKGgsaSkpcmV0dXJuO2xsKGU9UFMoaSx0LCEwKSx7c2hhcGU6e3BvaW50czppLmVuZHN9fSxvLHQpLE9TKGUsYSx0LGwpLHMuYWRkKGUpLGEuc2V0SXRlbUdyYXBoaWNFbCh0LGUpfX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPXIuZ2V0SXRlbUdyYXBoaWNFbChlKTtpZihhLmhhc1ZhbHVlKHQpKXt2YXIgbj1hLmdldEl0ZW1MYXlvdXQodCk7dSYmTlMoaCxuKT9zLnJlbW92ZShpKTooaT9zbChpLHtzaGFwZTp7cG9pbnRzOm4uZW5kc319LG8sdCk6aT1QUyhuLHQpLE9TKGksYSx0LGwpLHMuYWRkKGkpLGEuc2V0SXRlbUdyYXBoaWNFbCh0LGkpKX1lbHNlIHMucmVtb3ZlKGkpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPXIuZ2V0SXRlbUdyYXBoaWNFbCh0KTtlJiZzLnJlbW92ZShlKX0pLmV4ZWN1dGUoKSx0aGlzLl9kYXRhPWF9LF9yZW5kZXJMYXJnZTpmdW5jdGlvbih0KXt0aGlzLl9jbGVhcigpLHpTKHQsdGhpcy5ncm91cCk7dmFyIGU9dC5nZXQoImNsaXAiLCEwKT95bSh0LmNvb3JkaW5hdGVTeXN0ZW0sITEsdCk6bnVsbDtlP3RoaXMuZ3JvdXAuc2V0Q2xpcFBhdGgoZSk6dGhpcy5ncm91cC5yZW1vdmVDbGlwUGF0aCgpfSxfaW5jcmVtZW50YWxSZW5kZXJOb3JtYWw6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGksbj1lLmdldERhdGEoKSxvPW4uZ2V0TGF5b3V0KCJpc1NpbXBsZUJveCIpO251bGwhPShpPXQubmV4dCgpKTspe3ZhciBhO09TKGE9UFMobi5nZXRJdGVtTGF5b3V0KGkpLGkpLG4saSxvKSxhLmluY3JlbWVudGFsPSEwLHRoaXMuZ3JvdXAuYWRkKGEpfX0sX2luY3JlbWVudGFsUmVuZGVyTGFyZ2U6ZnVuY3Rpb24odCxlKXt6UyhlLHRoaXMuZ3JvdXAsITApfSxyZW1vdmU6ZnVuY3Rpb24odCl7dGhpcy5fY2xlYXIoKX0sX2NsZWFyOmZ1bmN0aW9uKCl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKSx0aGlzLl9kYXRhPW51bGx9LGRpc3Bvc2U6ZXR9KSxTci5leHRlbmQoe3R5cGU6Im5vcm1hbENhbmRsZXN0aWNrQm94IixzaGFwZTp7fSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLnBvaW50czt0aGlzLl9fc2ltcGxlQm94Pyh0Lm1vdmVUbyhpWzRdWzBdLGlbNF1bMV0pLHQubGluZVRvKGlbNl1bMF0saVs2XVsxXSkpOih0Lm1vdmVUbyhpWzBdWzBdLGlbMF1bMV0pLHQubGluZVRvKGlbMV1bMF0saVsxXVsxXSksdC5saW5lVG8oaVsyXVswXSxpWzJdWzFdKSx0LmxpbmVUbyhpWzNdWzBdLGlbM11bMV0pLHQuY2xvc2VQYXRoKCksdC5tb3ZlVG8oaVs0XVswXSxpWzRdWzFdKSx0LmxpbmVUbyhpWzVdWzBdLGlbNV1bMV0pLHQubW92ZVRvKGlbNl1bMF0saVs2XVsxXSksdC5saW5lVG8oaVs3XVswXSxpWzddWzFdKSl9fSkpO2Z1bmN0aW9uIFBTKHQsZSxpKXt2YXIgbj10LmVuZHM7cmV0dXJuIG5ldyBrUyh7c2hhcGU6e3BvaW50czppP2Z1bmN0aW9uKHQsZSl7cmV0dXJuIE4odCxmdW5jdGlvbih0KXtyZXR1cm4odD10LnNsaWNlKCkpWzFdPWUuaW5pdEJhc2VsaW5lLHR9KX0obix0KTpufSx6MjoxMDB9KX1mdW5jdGlvbiBOUyh0LGUpe2Zvcih2YXIgaT0hMCxuPTA7bjxlLmVuZHMubGVuZ3RoO24rKylpZih0LmNvbnRhaW4oZS5lbmRzW25dWzBdLGUuZW5kc1tuXVsxXSkpe2k9ITE7YnJlYWt9cmV0dXJuIGl9ZnVuY3Rpb24gT1ModCxlLGksbil7dmFyIG89ZS5nZXRJdGVtTW9kZWwoaSksYT1vLmdldE1vZGVsKERTKSxyPWUuZ2V0SXRlbVZpc3VhbChpLCJjb2xvciIpLHM9ZS5nZXRJdGVtVmlzdWFsKGksImJvcmRlckNvbG9yIil8fHIsbD1hLmdldEl0ZW1TdHlsZShMUyk7dC51c2VTdHlsZShsKSx0LnN0eWxlLnN0cm9rZU5vU2NhbGU9ITAsdC5zdHlsZS5maWxsPXIsdC5zdHlsZS5zdHJva2U9cyx0Ll9fc2ltcGxlQm94PW4sWXModCxvLmdldE1vZGVsKENTKS5nZXRJdGVtU3R5bGUoKSl9dmFyIEVTPVNyLmV4dGVuZCh7dHlwZToibGFyZ2VDYW5kbGVzdGlja0JveCIsc2hhcGU6e30sYnVpbGRQYXRoOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPWUucG9pbnRzLG49MDtuPGkubGVuZ3RoOylpZih0aGlzLl9fc2lnbj09PWlbbisrXSl7dmFyIG89aVtuKytdO3QubW92ZVRvKG8saVtuKytdKSx0LmxpbmVUbyhvLGlbbisrXSl9ZWxzZSBuKz0zfX0pO2Z1bmN0aW9uIHpTKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKSxvPW4uZ2V0TGF5b3V0KCJsYXJnZVBvaW50cyIpLGE9bmV3IEVTKHtzaGFwZTp7cG9pbnRzOm99LF9fc2lnbjoxfSk7ZS5hZGQoYSk7dmFyIHI9bmV3IEVTKHtzaGFwZTp7cG9pbnRzOm99LF9fc2lnbjotMX0pO2UuYWRkKHIpLFJTKDEsYSx0LG4pLFJTKC0xLHIsdCxuKSxpJiYoYS5pbmNyZW1lbnRhbD0hMCxyLmluY3JlbWVudGFsPSEwKX1mdW5jdGlvbiBSUyh0LGUsaSxuKXt2YXIgbz0wPHQ/IlAiOiJOIixhPW4uZ2V0VmlzdWFsKCJib3JkZXJDb2xvciIrbyl8fG4uZ2V0VmlzdWFsKCJjb2xvciIrbykscj1pLmdldE1vZGVsKERTKS5nZXRJdGVtU3R5bGUoTFMpO2UudXNlU3R5bGUociksZS5zdHlsZS5maWxsPW51bGwsZS5zdHlsZS5zdHJva2U9YX12YXIgQlM9WyJpdGVtU3R5bGUiLCJib3JkZXJDb2xvciJdLFZTPVsiaXRlbVN0eWxlIiwiYm9yZGVyQ29sb3IwIl0sR1M9WyJpdGVtU3R5bGUiLCJjb2xvciJdLEZTPVsiaXRlbVN0eWxlIiwiY29sb3IwIl0sV1M9e3Nlcmllc1R5cGU6ImNhbmRsZXN0aWNrIixwbGFuOmRjKCkscGVyZm9ybVJhd1NlcmllczohMCxyZXNldDpmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0RGF0YSgpLG49dC5waXBlbGluZUNvbnRleHQubGFyZ2U7aWYoaS5zZXRWaXN1YWwoe2xlZ2VuZFN5bWJvbDoicm91bmRSZWN0Iixjb2xvclA6YSgxLHQpLGNvbG9yTjphKC0xLHQpLGJvcmRlckNvbG9yUDpyKDEsdCksYm9yZGVyQ29sb3JOOnIoLTEsdCl9KSwhZS5pc1Nlcmllc0ZpbHRlcmVkKHQpKXJldHVybiFuJiZ7cHJvZ3Jlc3M6ZnVuY3Rpb24odCxlKXt2YXIgaTtmb3IoO251bGwhPShpPXQubmV4dCgpKTspe3ZhciBuPWUuZ2V0SXRlbU1vZGVsKGkpLG89ZS5nZXRJdGVtTGF5b3V0KGkpLnNpZ247ZS5zZXRJdGVtVmlzdWFsKGkse2NvbG9yOmEobyxuKSxib3JkZXJDb2xvcjpyKG8sbil9KX19fTtmdW5jdGlvbiBhKHQsZSl7cmV0dXJuIGUuZ2V0KDA8dD9HUzpGUyl9ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLmdldCgwPHQ/QlM6VlMpfX19LEhTPSJ1bmRlZmluZWQiIT10eXBlb2YgRmxvYXQzMkFycmF5P0Zsb2F0MzJBcnJheTpBcnJheSxaUz17c2VyaWVzVHlwZToiY2FuZGxlc3RpY2siLHBsYW46ZGMoKSxyZXNldDpmdW5jdGlvbih0KXt2YXIgeD10LmNvb3JkaW5hdGVTeXN0ZW0sZT10LmdldERhdGEoKSxfPWZ1bmN0aW9uKHQsZSl7dmFyIGksbj10LmdldEJhc2VBeGlzKCksbz0iY2F0ZWdvcnkiPT09bi50eXBlP24uZ2V0QmFuZFdpZHRoKCk6KGk9bi5nZXRFeHRlbnQoKSxNYXRoLmFicyhpWzFdLWlbMF0pL2UuY291bnQoKSksYT1QbChIKHQuZ2V0KCJiYXJNYXhXaWR0aCIpLG8pLG8pLHI9UGwoSCh0LmdldCgiYmFyTWluV2lkdGgiKSwxKSxvKSxzPXQuZ2V0KCJiYXJXaWR0aCIpO3JldHVybiBudWxsIT1zP1BsKHMsbyk6TWF0aC5tYXgoTWF0aC5taW4oby8yLGEpLHIpfSh0LGUpLGk9WyJ4IiwieSJdLHc9ZS5tYXBEaW1lbnNpb24oaVswXSksbj1lLm1hcERpbWVuc2lvbihpWzFdLCEwKSxiPW5bMF0sUz1uWzFdLE09blsyXSxJPW5bM107aWYoZS5zZXRMYXlvdXQoe2NhbmRsZVdpZHRoOl8saXNTaW1wbGVCb3g6Xzw9MS4zfSksIShudWxsPT13fHxuLmxlbmd0aDw0KSlyZXR1cm57cHJvZ3Jlc3M6dC5waXBlbGluZUNvbnRleHQubGFyZ2U/ZnVuY3Rpb24odCxlKXt2YXIgaSxuLG89bmV3IEhTKDQqdC5jb3VudCksYT0wLHI9W10scz1bXTtmb3IoO251bGwhPShuPXQubmV4dCgpKTspe3ZhciBsPWUuZ2V0KHcsbiksdT1lLmdldChiLG4pLGg9ZS5nZXQoUyxuKSxjPWUuZ2V0KE0sbiksZD1lLmdldChJLG4pO2lzTmFOKGwpfHxpc05hTihjKXx8aXNOYU4oZCk/KG9bYSsrXT1OYU4sYSs9Myk6KG9bYSsrXT1VUyhlLG4sdSxoLFMpLHJbMF09bCxyWzFdPWMsaT14LmRhdGFUb1BvaW50KHIsbnVsbCxzKSxvW2ErK109aT9pWzBdOk5hTixvW2ErK109aT9pWzFdOk5hTixyWzFdPWQsaT14LmRhdGFUb1BvaW50KHIsbnVsbCxzKSxvW2ErK109aT9pWzFdOk5hTil9ZS5zZXRMYXlvdXQoImxhcmdlUG9pbnRzIixvKX06ZnVuY3Rpb24odCxlKXt2YXIgaTtmb3IoO251bGwhPShpPXQubmV4dCgpKTspe3ZhciBuPWUuZ2V0KHcsaSksbz1lLmdldChiLGkpLGE9ZS5nZXQoUyxpKSxyPWUuZ2V0KE0saSkscz1lLmdldChJLGkpLGw9TWF0aC5taW4obyxhKSx1PU1hdGgubWF4KG8sYSksaD1nKGwsbiksYz1nKHUsbiksZD1nKHIsbiksZj1nKHMsbikscD1bXTttKHAsYywwKSxtKHAsaCwxKSxwLnB1c2goeShmKSx5KGMpLHkoZCkseShoKSksZS5zZXRJdGVtTGF5b3V0KGkse3NpZ246VVMoZSxpLG8sYSxTKSxpbml0QmFzZWxpbmU6YTxvP2NbMV06aFsxXSxlbmRzOnAsYnJ1c2hSZWN0OnYocixzLG4pfSl9ZnVuY3Rpb24gZyh0LGUpe3ZhciBpPVtdO3JldHVybiBpWzBdPWUsaVsxXT10LGlzTmFOKGUpfHxpc05hTih0KT9bTmFOLE5hTl06eC5kYXRhVG9Qb2ludChpKX1mdW5jdGlvbiBtKHQsZSxpKXt2YXIgbj1lLnNsaWNlKCksbz1lLnNsaWNlKCk7blswXT1OcyhuWzBdK18vMiwxLCExKSxvWzBdPU5zKG9bMF0tXy8yLDEsITApLGk/dC5wdXNoKG4sbyk6dC5wdXNoKG8sbil9ZnVuY3Rpb24gdih0LGUsaSl7dmFyIG49Zyh0LGkpLG89ZyhlLGkpO3JldHVybiBuWzBdLT1fLzIsb1swXS09Xy8yLHt4Om5bMF0seTpuWzFdLHdpZHRoOl8saGVpZ2h0Om9bMV0tblsxXX19ZnVuY3Rpb24geSh0KXtyZXR1cm4gdFswXT1Ocyh0WzBdLDEpLHR9fX19fTtmdW5jdGlvbiBVUyh0LGUsaSxuLG8pe3JldHVybiBuPGk/LTE6aTxuPzE6MDxlP3QuZ2V0KG8sZS0xKTw9bj8xOi0xOjF9ZmYoZnVuY3Rpb24odCl7dCYmayh0LnNlcmllcykmJkUodC5zZXJpZXMsZnVuY3Rpb24odCl7Uih0KSYmImsiPT09dC50eXBlJiYodC50eXBlPSJjYW5kbGVzdGljayIpfSl9KSx5ZihXUyksdmYoWlMpLGljLmV4dGVuZCh7dHlwZToic2VyaWVzLmVmZmVjdFNjYXR0ZXIiLGRlcGVuZGVuY2llczpbImdyaWQiLCJwb2xhciJdLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGhwKHRoaXMuZ2V0U291cmNlKCksdGhpcyx7dXNlRW5jb2RlRGVmYXVsdGVyOiEwfSl9LGJydXNoU2VsZWN0b3I6InBvaW50IixkZWZhdWx0T3B0aW9uOntjb29yZGluYXRlU3lzdGVtOiJjYXJ0ZXNpYW4yZCIsemxldmVsOjAsejoyLGxlZ2VuZEhvdmVyTGluazohMCxlZmZlY3RUeXBlOiJyaXBwbGUiLHByb2dyZXNzaXZlOjAsc2hvd0VmZmVjdE9uOiJyZW5kZXIiLHJpcHBsZUVmZmVjdDp7cGVyaW9kOjQsc2NhbGU6Mi41LGJydXNoVHlwZToiZmlsbCJ9LHN5bWJvbFNpemU6MTB9fSk7ZnVuY3Rpb24gWFModCxlKXt2YXIgaT1lLnJpcHBsZUVmZmVjdENvbG9yfHxlLmNvbG9yO3QuZWFjaENoaWxkKGZ1bmN0aW9uKHQpe3QuYXR0cih7ejplLnosemxldmVsOmUuemxldmVsLHN0eWxlOntzdHJva2U6InN0cm9rZSI9PT1lLmJydXNoVHlwZT9pOm51bGwsZmlsbDoiZmlsbCI9PT1lLmJydXNoVHlwZT9pOm51bGx9fSl9KX1mdW5jdGlvbiBZUyh0LGUpe0lpLmNhbGwodGhpcyk7dmFyIGk9bmV3IEZnKHQsZSksbj1uZXcgSWk7dGhpcy5hZGQoaSksdGhpcy5hZGQobiksbi5iZWZvcmVVcGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmF0dHIoaS5nZXRTY2FsZSgpKX0sdGhpcy51cGRhdGVEYXRhKHQsZSl9dmFyIGpTPVlTLnByb3RvdHlwZTtqUy5zdG9wRWZmZWN0QW5pbWF0aW9uPWZ1bmN0aW9uKCl7dGhpcy5jaGlsZEF0KDEpLnJlbW92ZUFsbCgpfSxqUy5zdGFydEVmZmVjdEFuaW1hdGlvbj1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5zeW1ib2xUeXBlLGk9dC5jb2xvcixuPXRoaXMuY2hpbGRBdCgxKSxvPTA7bzwzO28rKyl7dmFyIGE9bWcoZSwtMSwtMSwyLDIsaSk7YS5hdHRyKHtzdHlsZTp7c3Ryb2tlTm9TY2FsZTohMH0sejI6OTksc2lsZW50OiEwLHNjYWxlOlsuNSwuNV19KTt2YXIgcj0tby8zKnQucGVyaW9kK3QuZWZmZWN0T2Zmc2V0O2EuYW5pbWF0ZSgiIiwhMCkud2hlbih0LnBlcmlvZCx7c2NhbGU6W3QucmlwcGxlU2NhbGUvMix0LnJpcHBsZVNjYWxlLzJdfSkuZGVsYXkocikuc3RhcnQoKSxhLmFuaW1hdGVTdHlsZSghMCkud2hlbih0LnBlcmlvZCx7b3BhY2l0eTowfSkuZGVsYXkocikuc3RhcnQoKSxuLmFkZChhKX1YUyhuLHQpfSxqUy51cGRhdGVFZmZlY3RBbmltYXRpb249ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX2VmZmVjdENmZyxpPXRoaXMuY2hpbGRBdCgxKSxuPVsic3ltYm9sVHlwZSIsInBlcmlvZCIsInJpcHBsZVNjYWxlIl0sbz0wO288bi5sZW5ndGg7bysrKXt2YXIgYT1uW29dO2lmKGVbYV0hPT10W2FdKXJldHVybiB0aGlzLnN0b3BFZmZlY3RBbmltYXRpb24oKSx2b2lkIHRoaXMuc3RhcnRFZmZlY3RBbmltYXRpb24odCl9WFMoaSx0KX0salMuaGlnaGxpZ2h0PWZ1bmN0aW9uKCl7dGhpcy50cmlnZ2VyKCJlbXBoYXNpcyIpfSxqUy5kb3ducGxheT1mdW5jdGlvbigpe3RoaXMudHJpZ2dlcigibm9ybWFsIil9LGpTLnVwZGF0ZURhdGE9ZnVuY3Rpb24odCxlKXt2YXIgaT10Lmhvc3RNb2RlbDt0aGlzLmNoaWxkQXQoMCkudXBkYXRlRGF0YSh0LGUpO3ZhciBuPXRoaXMuY2hpbGRBdCgxKSxvPXQuZ2V0SXRlbU1vZGVsKGUpLGE9dC5nZXRJdGVtVmlzdWFsKGUsInN5bWJvbCIpLHI9ZnVuY3Rpb24odCl7cmV0dXJuIGsodCl8fCh0PVsrdCwrdF0pLHR9KHQuZ2V0SXRlbVZpc3VhbChlLCJzeW1ib2xTaXplIikpLHM9dC5nZXRJdGVtVmlzdWFsKGUsImNvbG9yIik7bi5hdHRyKCJzY2FsZSIsciksbi50cmF2ZXJzZShmdW5jdGlvbih0KXt0LmF0dHIoe2ZpbGw6c30pfSk7dmFyIGw9by5nZXRTaGFsbG93KCJzeW1ib2xPZmZzZXQiKTtpZihsKXt2YXIgdT1uLnBvc2l0aW9uO3VbMF09UGwobFswXSxyWzBdKSx1WzFdPVBsKGxbMV0sclsxXSl9bi5yb3RhdGlvbj0oby5nZXRTaGFsbG93KCJzeW1ib2xSb3RhdGUiKXx8MCkqTWF0aC5QSS8xODB8fDA7dmFyIGg9e307aWYoaC5zaG93RWZmZWN0T249aS5nZXQoInNob3dFZmZlY3RPbiIpLGgucmlwcGxlU2NhbGU9by5nZXQoInJpcHBsZUVmZmVjdC5zY2FsZSIpLGguYnJ1c2hUeXBlPW8uZ2V0KCJyaXBwbGVFZmZlY3QuYnJ1c2hUeXBlIiksaC5wZXJpb2Q9MWUzKm8uZ2V0KCJyaXBwbGVFZmZlY3QucGVyaW9kIiksaC5lZmZlY3RPZmZzZXQ9ZS90LmNvdW50KCksaC56PW8uZ2V0U2hhbGxvdygieiIpfHwwLGguemxldmVsPW8uZ2V0U2hhbGxvdygiemxldmVsIil8fDAsaC5zeW1ib2xUeXBlPWEsaC5jb2xvcj1zLGgucmlwcGxlRWZmZWN0Q29sb3I9by5nZXQoInJpcHBsZUVmZmVjdC5jb2xvciIpLHRoaXMub2ZmKCJtb3VzZW92ZXIiKS5vZmYoIm1vdXNlb3V0Iikub2ZmKCJlbXBoYXNpcyIpLm9mZigibm9ybWFsIiksInJlbmRlciI9PT1oLnNob3dFZmZlY3RPbil0aGlzLl9lZmZlY3RDZmc/dGhpcy51cGRhdGVFZmZlY3RBbmltYXRpb24oaCk6dGhpcy5zdGFydEVmZmVjdEFuaW1hdGlvbihoKSx0aGlzLl9lZmZlY3RDZmc9aDtlbHNle3RoaXMuX2VmZmVjdENmZz1udWxsLHRoaXMuc3RvcEVmZmVjdEFuaW1hdGlvbigpO3ZhciBjPXRoaXMuY2hpbGRBdCgwKSxkPWZ1bmN0aW9uKCl7Yy5oaWdobGlnaHQoKSwicmVuZGVyIiE9PWguc2hvd0VmZmVjdE9uJiZ0aGlzLnN0YXJ0RWZmZWN0QW5pbWF0aW9uKGgpfSxmPWZ1bmN0aW9uKCl7Yy5kb3ducGxheSgpLCJyZW5kZXIiIT09aC5zaG93RWZmZWN0T24mJnRoaXMuc3RvcEVmZmVjdEFuaW1hdGlvbigpfTt0aGlzLm9uKCJtb3VzZW92ZXIiLGQsdGhpcykub24oIm1vdXNlb3V0IixmLHRoaXMpLm9uKCJlbXBoYXNpcyIsZCx0aGlzKS5vbigibm9ybWFsIixmLHRoaXMpfXRoaXMuX2VmZmVjdENmZz1ofSxqUy5mYWRlT3V0PWZ1bmN0aW9uKHQpe3RoaXMub2ZmKCJtb3VzZW92ZXIiKS5vZmYoIm1vdXNlb3V0Iikub2ZmKCJlbXBoYXNpcyIpLm9mZigibm9ybWFsIiksdCYmdCgpfSx3KFlTLElpKSxNZih7dHlwZToiZWZmZWN0U2NhdHRlciIsaW5pdDpmdW5jdGlvbigpe3RoaXMuX3N5bWJvbERyYXc9bmV3ICRnKFlTKX0scmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKSxvPXRoaXMuX3N5bWJvbERyYXc7by51cGRhdGVEYXRhKG4pLHRoaXMuZ3JvdXAuYWRkKG8uZ3JvdXApfSx1cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuZ2V0RGF0YSgpO3RoaXMuZ3JvdXAuZGlydHkoKTt2YXIgbz1JbSgpLnJlc2V0KHQpO28ucHJvZ3Jlc3MmJm8ucHJvZ3Jlc3Moe3N0YXJ0OjAsZW5kOm4uY291bnQoKX0sbiksdGhpcy5fc3ltYm9sRHJhdy51cGRhdGVMYXlvdXQobil9LF91cGRhdGVHcm91cFRyYW5zZm9ybTpmdW5jdGlvbih0KXt2YXIgZT10LmNvb3JkaW5hdGVTeXN0ZW07ZSYmZS5nZXRSb2FtVHJhbnNmb3JtJiYodGhpcy5ncm91cC50cmFuc2Zvcm09dWUoZS5nZXRSb2FtVHJhbnNmb3JtKCkpLHRoaXMuZ3JvdXAuZGVjb21wb3NlVHJhbnNmb3JtKCkpfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt0aGlzLl9zeW1ib2xEcmF3JiZ0aGlzLl9zeW1ib2xEcmF3LnJlbW92ZShlKX0sZGlzcG9zZTpmdW5jdGlvbigpe319KSx5ZihNbSgiZWZmZWN0U2NhdHRlciIsImNpcmNsZSIpKSx2ZihJbSgiZWZmZWN0U2NhdHRlciIpKTt2YXIgcVM9InVuZGVmaW5lZCI9PXR5cGVvZiBVaW50MzJBcnJheT9BcnJheTpVaW50MzJBcnJheSxLUz0idW5kZWZpbmVkIj09dHlwZW9mIEZsb2F0NjRBcnJheT9BcnJheTpGbG9hdDY0QXJyYXk7ZnVuY3Rpb24gJFModCl7dmFyIGU9dC5kYXRhO2UmJmVbMF0mJmVbMF1bMF0mJmVbMF1bMF0uY29vcmQmJih0LmRhdGE9TihlLGZ1bmN0aW9uKHQpe3ZhciBlPXtjb29yZHM6W3RbMF0uY29vcmQsdFsxXS5jb29yZF19O3JldHVybiB0WzBdLm5hbWUmJihlLmZyb21OYW1lPXRbMF0ubmFtZSksdFsxXS5uYW1lJiYoZS50b05hbWU9dFsxXS5uYW1lKSxwKFtlLHRbMF0sdFsxXV0pfSkpfXZhciBKUz1pYy5leHRlbmQoe3R5cGU6InNlcmllcy5saW5lcyIsZGVwZW5kZW5jaWVzOlsiZ3JpZCIsInBvbGFyIl0sdmlzdWFsQ29sb3JBY2Nlc3NQYXRoOiJsaW5lU3R5bGUuY29sb3IiLGluaXQ6ZnVuY3Rpb24odCl7dC5kYXRhPXQuZGF0YXx8W10sJFModCk7dmFyIGU9dGhpcy5fcHJvY2Vzc0ZsYXRDb29yZHNBcnJheSh0LmRhdGEpO3RoaXMuX2ZsYXRDb29yZHM9ZS5mbGF0Q29vcmRzLHRoaXMuX2ZsYXRDb29yZHNPZmZzZXQ9ZS5mbGF0Q29vcmRzT2Zmc2V0LGUuZmxhdENvb3JkcyYmKHQuZGF0YT1uZXcgRmxvYXQzMkFycmF5KGUuY291bnQpKSxKUy5zdXBlckFwcGx5KHRoaXMsImluaXQiLGFyZ3VtZW50cyl9LG1lcmdlT3B0aW9uOmZ1bmN0aW9uKHQpe2lmKHQuZGF0YT10LmRhdGF8fFtdLCRTKHQpLHQuZGF0YSl7dmFyIGU9dGhpcy5fcHJvY2Vzc0ZsYXRDb29yZHNBcnJheSh0LmRhdGEpO3RoaXMuX2ZsYXRDb29yZHM9ZS5mbGF0Q29vcmRzLHRoaXMuX2ZsYXRDb29yZHNPZmZzZXQ9ZS5mbGF0Q29vcmRzT2Zmc2V0LGUuZmxhdENvb3JkcyYmKHQuZGF0YT1uZXcgRmxvYXQzMkFycmF5KGUuY291bnQpKX1KUy5zdXBlckFwcGx5KHRoaXMsIm1lcmdlT3B0aW9uIixhcmd1bWVudHMpfSxhcHBlbmREYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3Byb2Nlc3NGbGF0Q29vcmRzQXJyYXkodC5kYXRhKTtlLmZsYXRDb29yZHMmJih0aGlzLl9mbGF0Q29vcmRzPyh0aGlzLl9mbGF0Q29vcmRzPXR0KHRoaXMuX2ZsYXRDb29yZHMsZS5mbGF0Q29vcmRzKSx0aGlzLl9mbGF0Q29vcmRzT2Zmc2V0PXR0KHRoaXMuX2ZsYXRDb29yZHNPZmZzZXQsZS5mbGF0Q29vcmRzT2Zmc2V0KSk6KHRoaXMuX2ZsYXRDb29yZHM9ZS5mbGF0Q29vcmRzLHRoaXMuX2ZsYXRDb29yZHNPZmZzZXQ9ZS5mbGF0Q29vcmRzT2Zmc2V0KSx0LmRhdGE9bmV3IEZsb2F0MzJBcnJheShlLmNvdW50KSksdGhpcy5nZXRSYXdEYXRhKCkuYXBwZW5kRGF0YSh0LmRhdGEpfSxfZ2V0Q29vcmRzRnJvbUl0ZW1Nb2RlbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGEoKS5nZXRJdGVtTW9kZWwodCk7cmV0dXJuIGUub3B0aW9uIGluc3RhbmNlb2YgQXJyYXk/ZS5vcHRpb246ZS5nZXRTaGFsbG93KCJjb29yZHMiKX0sZ2V0TGluZUNvb3Jkc0NvdW50OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9mbGF0Q29vcmRzT2Zmc2V0P3RoaXMuX2ZsYXRDb29yZHNPZmZzZXRbMip0KzFdOnRoaXMuX2dldENvb3Jkc0Zyb21JdGVtTW9kZWwodCkubGVuZ3RofSxnZXRMaW5lQ29vcmRzOmZ1bmN0aW9uKHQsZSl7aWYodGhpcy5fZmxhdENvb3Jkc09mZnNldCl7Zm9yKHZhciBpPXRoaXMuX2ZsYXRDb29yZHNPZmZzZXRbMip0XSxuPXRoaXMuX2ZsYXRDb29yZHNPZmZzZXRbMip0KzFdLG89MDtvPG47bysrKWVbb109ZVtvXXx8W10sZVtvXVswXT10aGlzLl9mbGF0Q29vcmRzW2krMipvXSxlW29dWzFdPXRoaXMuX2ZsYXRDb29yZHNbaSsyKm8rMV07cmV0dXJuIG59dmFyIGE9dGhpcy5fZ2V0Q29vcmRzRnJvbUl0ZW1Nb2RlbCh0KTtmb3Iobz0wO288YS5sZW5ndGg7bysrKWVbb109ZVtvXXx8W10sZVtvXVswXT1hW29dWzBdLGVbb11bMV09YVtvXVsxXTtyZXR1cm4gYS5sZW5ndGh9LF9wcm9jZXNzRmxhdENvb3Jkc0FycmF5OmZ1bmN0aW9uKHQpe3ZhciBlPTA7aWYodGhpcy5fZmxhdENvb3JkcyYmKGU9dGhpcy5fZmxhdENvb3Jkcy5sZW5ndGgpLCJudW1iZXIiIT10eXBlb2YgdFswXSlyZXR1cm57ZmxhdENvb3Jkc09mZnNldDpudWxsLGZsYXRDb29yZHM6bnVsbCxjb3VudDp0Lmxlbmd0aH07Zm9yKHZhciBpPXQubGVuZ3RoLG49bmV3IHFTKGkpLG89bmV3IEtTKGkpLGE9MCxyPTAscz0wLGw9MDtsPGk7KXtzKys7dmFyIHU9dFtsKytdO25bcisrXT1hK2UsbltyKytdPXU7Zm9yKHZhciBoPTA7aDx1O2grKyl7dmFyIGM9dFtsKytdLGQ9dFtsKytdO29bYSsrXT1jLG9bYSsrXT1kfX1yZXR1cm57ZmxhdENvb3Jkc09mZnNldDpuZXcgVWludDMyQXJyYXkobi5idWZmZXIsMCxyKSxmbGF0Q29vcmRzOm8sY291bnQ6c319LGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7dmFyIGE9bmV3IFdmKFsidmFsdWUiXSx0aGlzKTtyZXR1cm4gYS5oYXNJdGVtT3B0aW9uPSExLGEuaW5pdERhdGEodC5kYXRhLFtdLGZ1bmN0aW9uKHQsZSxpLG4pe2lmKHQgaW5zdGFuY2VvZiBBcnJheSlyZXR1cm4gTmFOO2EuaGFzSXRlbU9wdGlvbj0hMDt2YXIgbz10LnZhbHVlO3JldHVybiBudWxsIT1vP28gaW5zdGFuY2VvZiBBcnJheT9vW25dOm86dm9pZCAwfSksYX0sZm9ybWF0VG9vbHRpcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGEoKS5nZXRJdGVtTW9kZWwodCksaT1lLmdldCgibmFtZSIpO2lmKGkpcmV0dXJuIGk7dmFyIG49ZS5nZXQoImZyb21OYW1lIiksbz1lLmdldCgidG9OYW1lIiksYT1bXTtyZXR1cm4gbnVsbCE9biYmYS5wdXNoKG4pLG51bGwhPW8mJmEucHVzaChvKSxldShhLmpvaW4oIiA+ICIpKX0scHJldmVudEluY3JlbWVudGFsOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmdldCgiZWZmZWN0LnNob3ciKX0sZ2V0UHJvZ3Jlc3NpdmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbi5wcm9ncmVzc2l2ZTtyZXR1cm4gbnVsbD09dD90aGlzLm9wdGlvbi5sYXJnZT8xZTQ6dGhpcy5nZXQoInByb2dyZXNzaXZlIik6dH0sZ2V0UHJvZ3Jlc3NpdmVUaHJlc2hvbGQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbi5wcm9ncmVzc2l2ZVRocmVzaG9sZDtyZXR1cm4gbnVsbD09dD90aGlzLm9wdGlvbi5sYXJnZT8yZTQ6dGhpcy5nZXQoInByb2dyZXNzaXZlVGhyZXNob2xkIik6dH0sZGVmYXVsdE9wdGlvbjp7Y29vcmRpbmF0ZVN5c3RlbToiZ2VvIix6bGV2ZWw6MCx6OjIsbGVnZW5kSG92ZXJMaW5rOiEwLGhvdmVyQW5pbWF0aW9uOiEwLHhBeGlzSW5kZXg6MCx5QXhpc0luZGV4OjAsc3ltYm9sOlsibm9uZSIsIm5vbmUiXSxzeW1ib2xTaXplOlsxMCwxMF0sZ2VvSW5kZXg6MCxlZmZlY3Q6e3Nob3c6ITEscGVyaW9kOjQsY29uc3RhbnRTcGVlZDowLHN5bWJvbDoiY2lyY2xlIixzeW1ib2xTaXplOjMsbG9vcDohMCx0cmFpbExlbmd0aDouMn0sbGFyZ2U6ITEsbGFyZ2VUaHJlc2hvbGQ6MmUzLHBvbHlsaW5lOiExLGNsaXA6ITAsbGFiZWw6e3Nob3c6ITEscG9zaXRpb246ImVuZCJ9LGxpbmVTdHlsZTp7b3BhY2l0eTouNX19fSk7ZnVuY3Rpb24gUVModCxlLGkpe0lpLmNhbGwodGhpcyksdGhpcy5hZGQodGhpcy5jcmVhdGVMaW5lKHQsZSxpKSksdGhpcy5fdXBkYXRlRWZmZWN0U3ltYm9sKHQsZSl9dmFyIHRNPVFTLnByb3RvdHlwZTtmdW5jdGlvbiBlTSh0LGUsaSl7SWkuY2FsbCh0aGlzKSx0aGlzLl9jcmVhdGVQb2x5bGluZSh0LGUsaSl9dE0uY3JlYXRlTGluZT1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIG5ldyBpdyh0LGUsaSl9LHRNLl91cGRhdGVFZmZlY3RTeW1ib2w9ZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldEl0ZW1Nb2RlbChlKS5nZXRNb2RlbCgiZWZmZWN0Iiksbj1pLmdldCgic3ltYm9sU2l6ZSIpLG89aS5nZXQoInN5bWJvbCIpO2sobil8fChuPVtuLG5dKTt2YXIgYT1pLmdldCgiY29sb3IiKXx8dC5nZXRJdGVtVmlzdWFsKGUsImNvbG9yIikscj10aGlzLmNoaWxkQXQoMSk7dGhpcy5fc3ltYm9sVHlwZSE9PW8mJih0aGlzLnJlbW92ZShyKSwocj1tZyhvLC0uNSwtLjUsMSwxLGEpKS56Mj0xMDAsci5jdWxsaW5nPSEwLHRoaXMuYWRkKHIpKSxyJiYoci5zZXRTdHlsZSgic2hhZG93Q29sb3IiLGEpLHIuc2V0U3R5bGUoaS5nZXRJdGVtU3R5bGUoWyJjb2xvciJdKSksci5hdHRyKCJzY2FsZSIsbiksci5zZXRDb2xvcihhKSxyLmF0dHIoInNjYWxlIixuKSx0aGlzLl9zeW1ib2xUeXBlPW8sdGhpcy5fdXBkYXRlRWZmZWN0QW5pbWF0aW9uKHQsaSxlKSl9LHRNLl91cGRhdGVFZmZlY3RBbmltYXRpb249ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXRoaXMuY2hpbGRBdCgxKTtpZihuKXt2YXIgbz10aGlzLGE9ZS5nZXRJdGVtTGF5b3V0KGkpLHI9MWUzKnQuZ2V0KCJwZXJpb2QiKSxzPXQuZ2V0KCJsb29wIiksbD10LmdldCgiY29uc3RhbnRTcGVlZCIpLHU9Vyh0LmdldCgiZGVsYXkiKSxmdW5jdGlvbih0KXtyZXR1cm4gdC9lLmNvdW50KCkqci8zfSksaD0iZnVuY3Rpb24iPT10eXBlb2YgdTtpZihuLmlnbm9yZT0hMCx0aGlzLnVwZGF0ZUFuaW1hdGlvblBvaW50cyhuLGEpLDA8bCYmKHI9dGhpcy5nZXRMaW5lTGVuZ3RoKG4pL2wqMWUzKSxyIT09dGhpcy5fcGVyaW9kfHxzIT09dGhpcy5fbG9vcCl7bi5zdG9wQW5pbWF0aW9uKCk7dmFyIGM9dTtoJiYoYz11KGkpKSwwPG4uX190JiYoYz0tcipuLl9fdCksbi5fX3Q9MDt2YXIgZD1uLmFuaW1hdGUoIiIscykud2hlbihyLHtfX3Q6MX0pLmRlbGF5KGMpLmR1cmluZyhmdW5jdGlvbigpe28udXBkYXRlU3ltYm9sUG9zaXRpb24obil9KTtzfHxkLmRvbmUoZnVuY3Rpb24oKXtvLnJlbW92ZShuKX0pLGQuc3RhcnQoKX10aGlzLl9wZXJpb2Q9cix0aGlzLl9sb29wPXN9fSx0TS5nZXRMaW5lTGVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiB5dCh0Ll9fcDEsdC5fX2NwMSkreXQodC5fX2NwMSx0Ll9fcDIpfSx0TS51cGRhdGVBbmltYXRpb25Qb2ludHM9ZnVuY3Rpb24odCxlKXt0Ll9fcDE9ZVswXSx0Ll9fcDI9ZVsxXSx0Ll9fY3AxPWVbMl18fFsoZVswXVswXStlWzFdWzBdKS8yLChlWzBdWzFdK2VbMV1bMV0pLzJdfSx0TS51cGRhdGVEYXRhPWZ1bmN0aW9uKHQsZSxpKXt0aGlzLmNoaWxkQXQoMCkudXBkYXRlRGF0YSh0LGUsaSksdGhpcy5fdXBkYXRlRWZmZWN0U3ltYm9sKHQsZSl9LHRNLnVwZGF0ZVN5bWJvbFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXQuX19wMSxpPXQuX19wMixuPXQuX19jcDEsbz10Ll9fdCxhPXQucG9zaXRpb24scj1UYSxzPUFhO2FbMF09cihlWzBdLG5bMF0saVswXSxvKSxhWzFdPXIoZVsxXSxuWzFdLGlbMV0sbyk7dmFyIGw9cyhlWzBdLG5bMF0saVswXSxvKSx1PXMoZVsxXSxuWzFdLGlbMV0sbyk7dC5yb3RhdGlvbj0tTWF0aC5hdGFuMih1LGwpLU1hdGguUEkvMix0Lmlnbm9yZT0hMX0sdE0udXBkYXRlTGF5b3V0PWZ1bmN0aW9uKHQsZSl7dGhpcy5jaGlsZEF0KDApLnVwZGF0ZUxheW91dCh0LGUpO3ZhciBpPXQuZ2V0SXRlbU1vZGVsKGUpLmdldE1vZGVsKCJlZmZlY3QiKTt0aGlzLl91cGRhdGVFZmZlY3RBbmltYXRpb24odCxpLGUpfSx3KFFTLElpKTt2YXIgaU09ZU0ucHJvdG90eXBlO2Z1bmN0aW9uIG5NKHQsZSxpKXtRUy5jYWxsKHRoaXMsdCxlLGkpLHRoaXMuX2xhc3RGcmFtZT0wLHRoaXMuX2xhc3RGcmFtZVBlcmNlbnQ9MH1pTS5fY3JlYXRlUG9seWxpbmU9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuZ2V0SXRlbUxheW91dChlKSxvPW5ldyBLcih7c2hhcGU6e3BvaW50czpufX0pO3RoaXMuYWRkKG8pLHRoaXMuX3VwZGF0ZUNvbW1vblN0bCh0LGUsaSl9LGlNLnVwZGF0ZURhdGE9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuaG9zdE1vZGVsO3NsKHRoaXMuY2hpbGRBdCgwKSx7c2hhcGU6e3BvaW50czp0LmdldEl0ZW1MYXlvdXQoZSl9fSxuLGUpLHRoaXMuX3VwZGF0ZUNvbW1vblN0bCh0LGUsaSl9LGlNLl91cGRhdGVDb21tb25TdGw9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuY2hpbGRBdCgwKSxvPXQuZ2V0SXRlbU1vZGVsKGUpLGE9dC5nZXRJdGVtVmlzdWFsKGUsImNvbG9yIikscj1pJiZpLmxpbmVTdHlsZSxzPWkmJmkuaG92ZXJMaW5lU3R5bGU7aSYmIXQuaGFzSXRlbU9wdGlvbnx8KHI9by5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCkscz1vLmdldE1vZGVsKCJlbXBoYXNpcy5saW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSksbi51c2VTdHlsZShDKHtzdHJva2VOb1NjYWxlOiEwLGZpbGw6Im5vbmUiLHN0cm9rZTphfSxyKSksbi5ob3ZlclN0eWxlPXMsWXModGhpcyl9LGlNLnVwZGF0ZUxheW91dD1mdW5jdGlvbih0LGUpe3RoaXMuY2hpbGRBdCgwKS5zZXRTaGFwZSgicG9pbnRzIix0LmdldEl0ZW1MYXlvdXQoZSkpfSx3KGVNLElpKTt2YXIgb009bk0ucHJvdG90eXBlO29NLmNyZWF0ZUxpbmU9ZnVuY3Rpb24odCxlLGkpe3JldHVybiBuZXcgZU0odCxlLGkpfSxvTS51cGRhdGVBbmltYXRpb25Qb2ludHM9ZnVuY3Rpb24odCxlKXt0aGlzLl9wb2ludHM9ZTtmb3IodmFyIGk9WzBdLG49MCxvPTE7bzxlLmxlbmd0aDtvKyspe3ZhciBhPWVbby0xXSxyPWVbb107bis9eXQoYSxyKSxpLnB1c2gobil9aWYoMCE9PW4pe2ZvcihvPTA7bzxpLmxlbmd0aDtvKyspaVtvXS89bjt0aGlzLl9vZmZzZXRzPWksdGhpcy5fbGVuZ3RoPW59fSxvTS5nZXRMaW5lTGVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9sZW5ndGh9LG9NLnVwZGF0ZVN5bWJvbFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXQuX190LGk9dGhpcy5fcG9pbnRzLG49dGhpcy5fb2Zmc2V0cyxvPWkubGVuZ3RoO2lmKG4pe3ZhciBhPXRoaXMuX2xhc3RGcmFtZTtpZihlPHRoaXMuX2xhc3RGcmFtZVBlcmNlbnQpe2ZvcihyPU1hdGgubWluKGErMSxvLTEpOzA8PXImJiEobltyXTw9ZSk7ci0tKTtyPU1hdGgubWluKHIsby0yKX1lbHNle2Zvcih2YXIgcj1hO3I8byYmIShuW3JdPmUpO3IrKyk7cj1NYXRoLm1pbihyLTEsby0yKX13dCh0LnBvc2l0aW9uLGlbcl0saVtyKzFdLChlLW5bcl0pLyhuW3IrMV0tbltyXSkpO3ZhciBzPWlbcisxXVswXS1pW3JdWzBdLGw9aVtyKzFdWzFdLWlbcl1bMV07dC5yb3RhdGlvbj0tTWF0aC5hdGFuMihsLHMpLU1hdGguUEkvMix0aGlzLl9sYXN0RnJhbWU9cix0aGlzLl9sYXN0RnJhbWVQZXJjZW50PWUsdC5pZ25vcmU9ITF9fSx3KG5NLFFTKTt2YXIgYU09SXMoe3NoYXBlOntwb2x5bGluZTohMSxjdXJ2ZW5lc3M6MCxzZWdzOltdfSxidWlsZFBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLnNlZ3Msbj1lLmN1cnZlbmVzcztpZihlLnBvbHlsaW5lKWZvcih2YXIgbz0wO288aS5sZW5ndGg7KXt2YXIgYT1pW28rK107aWYoMDxhKXt0Lm1vdmVUbyhpW28rK10saVtvKytdKTtmb3IodmFyIHI9MTtyPGE7cisrKXQubGluZVRvKGlbbysrXSxpW28rK10pfX1lbHNlIGZvcihvPTA7bzxpLmxlbmd0aDspe3ZhciBzPWlbbysrXSxsPWlbbysrXSx1PWlbbysrXSxoPWlbbysrXTtpZih0Lm1vdmVUbyhzLGwpLDA8bil7dmFyIGM9KHMrdSkvMi0obC1oKSpuLGQ9KGwraCkvMi0odS1zKSpuO3QucXVhZHJhdGljQ3VydmVUbyhjLGQsdSxoKX1lbHNlIHQubGluZVRvKHUsaCl9fSxmaW5kRGF0YUluZGV4OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5zaGFwZSxuPWkuc2VncyxvPWkuY3VydmVuZXNzO2lmKGkucG9seWxpbmUpZm9yKHZhciBhPTAscj0wO3I8bi5sZW5ndGg7KXt2YXIgcz1uW3IrK107aWYoMDxzKWZvcih2YXIgbD1uW3IrK10sdT1uW3IrK10saD0xO2g8cztoKyspe2lmKG5yKGwsdSxjPW5bcisrXSxkPW5bcisrXSkpcmV0dXJuIGF9YSsrfWVsc2UgZm9yKGE9MCxyPTA7cjxuLmxlbmd0aDspe2w9bltyKytdLHU9bltyKytdO3ZhciBjPW5bcisrXSxkPW5bcisrXTtpZigwPG8pe2lmKGFyKGwsdSwobCtjKS8yLSh1LWQpKm8sKHUrZCkvMi0oYy1sKSpvLGMsZCkpcmV0dXJuIGF9ZWxzZSBpZihucihsLHUsYyxkKSlyZXR1cm4gYTthKyt9cmV0dXJuLTF9fSk7ZnVuY3Rpb24gck0oKXt0aGlzLmdyb3VwPW5ldyBJaX12YXIgc009ck0ucHJvdG90eXBlO3NNLmlzUGVyc2lzdGVudD1mdW5jdGlvbigpe3JldHVybiF0aGlzLl9pbmNyZW1lbnRhbH0sc00udXBkYXRlRGF0YT1mdW5jdGlvbih0KXt0aGlzLmdyb3VwLnJlbW92ZUFsbCgpO3ZhciBlPW5ldyBhTSh7cmVjdEhvdmVyOiEwLGN1cnNvcjoiZGVmYXVsdCJ9KTtlLnNldFNoYXBlKHtzZWdzOnQuZ2V0TGF5b3V0KCJsaW5lc1BvaW50cyIpfSksdGhpcy5fc2V0Q29tbW9uKGUsdCksdGhpcy5ncm91cC5hZGQoZSksdGhpcy5faW5jcmVtZW50YWw9bnVsbH0sc00uaW5jcmVtZW50YWxQcmVwYXJlVXBkYXRlPWZ1bmN0aW9uKHQpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fY2xlYXJJbmNyZW1lbnRhbCgpLDVlNTx0LmNvdW50KCk/KHRoaXMuX2luY3JlbWVudGFsfHwodGhpcy5faW5jcmVtZW50YWw9bmV3IGZzKHtzaWxlbnQ6ITB9KSksdGhpcy5ncm91cC5hZGQodGhpcy5faW5jcmVtZW50YWwpKTp0aGlzLl9pbmNyZW1lbnRhbD1udWxsfSxzTS5pbmNyZW1lbnRhbFVwZGF0ZT1mdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBhTTtpLnNldFNoYXBlKHtzZWdzOmUuZ2V0TGF5b3V0KCJsaW5lc1BvaW50cyIpfSksdGhpcy5fc2V0Q29tbW9uKGksZSwhIXRoaXMuX2luY3JlbWVudGFsKSx0aGlzLl9pbmNyZW1lbnRhbD90aGlzLl9pbmNyZW1lbnRhbC5hZGREaXNwbGF5YWJsZShpLCEwKTooaS5yZWN0SG92ZXI9ITAsaS5jdXJzb3I9ImRlZmF1bHQiLGkuX19zdGFydEluZGV4PXQuc3RhcnQsdGhpcy5ncm91cC5hZGQoaSkpfSxzTS5yZW1vdmU9ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckluY3JlbWVudGFsKCksdGhpcy5faW5jcmVtZW50YWw9bnVsbCx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpfSxzTS5fc2V0Q29tbW9uPWZ1bmN0aW9uKGksdCxlKXt2YXIgbj10Lmhvc3RNb2RlbDtpLnNldFNoYXBlKHtwb2x5bGluZTpuLmdldCgicG9seWxpbmUiKSxjdXJ2ZW5lc3M6bi5nZXQoImxpbmVTdHlsZS5jdXJ2ZW5lc3MiKX0pLGkudXNlU3R5bGUobi5nZXRNb2RlbCgibGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCkpLGkuc3R5bGUuc3Ryb2tlTm9TY2FsZT0hMDt2YXIgbz10LmdldFZpc3VhbCgiY29sb3IiKTtvJiZpLnNldFN0eWxlKCJzdHJva2UiLG8pLGkuc2V0U3R5bGUoImZpbGwiKSxlfHwoaS5zZXJpZXNJbmRleD1uLnNlcmllc0luZGV4LGkub24oIm1vdXNlbW92ZSIsZnVuY3Rpb24odCl7aS5kYXRhSW5kZXg9bnVsbDt2YXIgZT1pLmZpbmREYXRhSW5kZXgodC5vZmZzZXRYLHQub2Zmc2V0WSk7MDxlJiYoaS5kYXRhSW5kZXg9ZStpLl9fc3RhcnRJbmRleCl9KSl9LHNNLl9jbGVhckluY3JlbWVudGFsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5faW5jcmVtZW50YWw7dCYmdC5jbGVhckRpc3BsYXlibGVzKCl9O3ZhciBsTT17c2VyaWVzVHlwZToibGluZXMiLHBsYW46ZGMoKSxyZXNldDpmdW5jdGlvbihnKXt2YXIgbT1nLmNvb3JkaW5hdGVTeXN0ZW0sdj1nLmdldCgicG9seWxpbmUiKSx5PWcucGlwZWxpbmVDb250ZXh0LmxhcmdlO3JldHVybntwcm9ncmVzczpmdW5jdGlvbih0LGUpe3ZhciBpPVtdO2lmKHkpe3ZhciBuLG89dC5lbmQtdC5zdGFydDtpZih2KXtmb3IodmFyIGE9MCxyPXQuc3RhcnQ7cjx0LmVuZDtyKyspYSs9Zy5nZXRMaW5lQ29vcmRzQ291bnQocik7bj1uZXcgRmxvYXQzMkFycmF5KG8rMiphKX1lbHNlIG49bmV3IEZsb2F0MzJBcnJheSg0Km8pO3ZhciBzPTAsbD1bXTtmb3Iocj10LnN0YXJ0O3I8dC5lbmQ7cisrKXt2YXIgdT1nLmdldExpbmVDb29yZHMocixpKTt2JiYobltzKytdPXUpO2Zvcih2YXIgaD0wO2g8dTtoKyspbD1tLmRhdGFUb1BvaW50KGlbaF0sITEsbCksbltzKytdPWxbMF0sbltzKytdPWxbMV19ZS5zZXRMYXlvdXQoImxpbmVzUG9pbnRzIixuKX1lbHNlIGZvcihyPXQuc3RhcnQ7cjx0LmVuZDtyKyspe3ZhciBjPWUuZ2V0SXRlbU1vZGVsKHIpLGQ9KHU9Zy5nZXRMaW5lQ29vcmRzKHIsaSksW10pO2lmKHYpZm9yKHZhciBmPTA7Zjx1O2YrKylkLnB1c2gobS5kYXRhVG9Qb2ludChpW2ZdKSk7ZWxzZXtkWzBdPW0uZGF0YVRvUG9pbnQoaVswXSksZFsxXT1tLmRhdGFUb1BvaW50KGlbMV0pO3ZhciBwPWMuZ2V0KCJsaW5lU3R5bGUuY3VydmVuZXNzIik7K3AmJihkWzJdPVsoZFswXVswXStkWzFdWzBdKS8yLShkWzBdWzFdLWRbMV1bMV0pKnAsKGRbMF1bMV0rZFsxXVsxXSkvMi0oZFsxXVswXS1kWzBdWzBdKSpwXSl9ZS5zZXRJdGVtTGF5b3V0KHIsZCl9fX19fTtmdW5jdGlvbiB1TSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIEFycmF5fHwodD1bdCx0XSksdH1NZih7dHlwZToibGluZXMiLGluaXQ6ZnVuY3Rpb24oKXt9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5nZXREYXRhKCksbz10aGlzLl91cGRhdGVMaW5lRHJhdyhuLHQpLGE9dC5nZXQoInpsZXZlbCIpLHI9dC5nZXQoImVmZmVjdC50cmFpbExlbmd0aCIpLHM9aS5nZXRacigpLGw9InN2ZyI9PT1zLnBhaW50ZXIuZ2V0VHlwZSgpO2x8fHMucGFpbnRlci5nZXRMYXllcihhKS5jbGVhcighMCksbnVsbD09dGhpcy5fbGFzdFpsZXZlbHx8bHx8cy5jb25maWdMYXllcih0aGlzLl9sYXN0WmxldmVsLHttb3Rpb25CbHVyOiExfSksdGhpcy5fc2hvd0VmZmVjdCh0KSYmciYmKGx8fHMuY29uZmlnTGF5ZXIoYSx7bW90aW9uQmx1cjohMCxsYXN0RnJhbWVBbHBoYTpNYXRoLm1heChNYXRoLm1pbihyLzEwKy45LDEpLDApfSkpLG8udXBkYXRlRGF0YShuKTt2YXIgdT10LmdldCgiY2xpcCIsITApJiZ5bSh0LmNvb3JkaW5hdGVTeXN0ZW0sITEsdCk7dT90aGlzLmdyb3VwLnNldENsaXBQYXRoKHUpOnRoaXMuZ3JvdXAucmVtb3ZlQ2xpcFBhdGgoKSx0aGlzLl9sYXN0WmxldmVsPWEsdGhpcy5fZmluaXNoZWQ9ITB9LGluY3JlbWVudGFsUHJlcGFyZVJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5nZXREYXRhKCk7dGhpcy5fdXBkYXRlTGluZURyYXcobix0KS5pbmNyZW1lbnRhbFByZXBhcmVVcGRhdGUobiksdGhpcy5fY2xlYXJMYXllcihpKSx0aGlzLl9maW5pc2hlZD0hMX0saW5jcmVtZW50YWxSZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuX2xpbmVEcmF3LmluY3JlbWVudGFsVXBkYXRlKHQsZS5nZXREYXRhKCkpLHRoaXMuX2ZpbmlzaGVkPXQuZW5kPT09ZS5nZXREYXRhKCkuY291bnQoKX0sdXBkYXRlVHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmdldERhdGEoKSxvPXQucGlwZWxpbmVDb250ZXh0O2lmKCF0aGlzLl9maW5pc2hlZHx8by5sYXJnZXx8by5wcm9ncmVzc2l2ZVJlbmRlcilyZXR1cm57dXBkYXRlOiEwfTt2YXIgYT1sTS5yZXNldCh0KTthLnByb2dyZXNzJiZhLnByb2dyZXNzKHtzdGFydDowLGVuZDpuLmNvdW50KCl9LG4pLHRoaXMuX2xpbmVEcmF3LnVwZGF0ZUxheW91dCgpLHRoaXMuX2NsZWFyTGF5ZXIoaSl9LF91cGRhdGVMaW5lRHJhdzpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2xpbmVEcmF3LG49dGhpcy5fc2hvd0VmZmVjdChlKSxvPSEhZS5nZXQoInBvbHlsaW5lIiksYT1lLnBpcGVsaW5lQ29udGV4dC5sYXJnZTtyZXR1cm4gaSYmbj09PXRoaXMuX2hhc0VmZmV0JiZvPT09dGhpcy5faXNQb2x5bGluZSYmYT09PXRoaXMuX2lzTGFyZ2VEcmF3fHwoaSYmaS5yZW1vdmUoKSxpPXRoaXMuX2xpbmVEcmF3PWE/bmV3IHJNOm5ldyBvdyhvP24/bk06ZU06bj9RUzppdyksdGhpcy5faGFzRWZmZXQ9bix0aGlzLl9pc1BvbHlsaW5lPW8sdGhpcy5faXNMYXJnZURyYXc9YSx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpKSx0aGlzLmdyb3VwLmFkZChpLmdyb3VwKSxpfSxfc2hvd0VmZmVjdDpmdW5jdGlvbih0KXtyZXR1cm4hIXQuZ2V0KCJlZmZlY3Quc2hvdyIpfSxfY2xlYXJMYXllcjpmdW5jdGlvbih0KXt2YXIgZT10LmdldFpyKCk7InN2ZyI9PT1lLnBhaW50ZXIuZ2V0VHlwZSgpfHxudWxsPT10aGlzLl9sYXN0WmxldmVsfHxlLnBhaW50ZXIuZ2V0TGF5ZXIodGhpcy5fbGFzdFpsZXZlbCkuY2xlYXIoITApfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt0aGlzLl9saW5lRHJhdyYmdGhpcy5fbGluZURyYXcucmVtb3ZlKCksdGhpcy5fbGluZURyYXc9bnVsbCx0aGlzLl9jbGVhckxheWVyKGUpfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fX0pO3ZhciBoTT0ibGluZVN0eWxlLm9wYWNpdHkiLnNwbGl0KCIuIiksY009e3Nlcmllc1R5cGU6ImxpbmVzIixyZXNldDpmdW5jdGlvbih0LGUsaSl7dmFyIG49dU0odC5nZXQoInN5bWJvbCIpKSxvPXVNKHQuZ2V0KCJzeW1ib2xTaXplIikpLGE9dC5nZXREYXRhKCk7cmV0dXJuIGEuc2V0VmlzdWFsKCJmcm9tU3ltYm9sIixuJiZuWzBdKSxhLnNldFZpc3VhbCgidG9TeW1ib2wiLG4mJm5bMV0pLGEuc2V0VmlzdWFsKCJmcm9tU3ltYm9sU2l6ZSIsbyYmb1swXSksYS5zZXRWaXN1YWwoInRvU3ltYm9sU2l6ZSIsbyYmb1sxXSksYS5zZXRWaXN1YWwoIm9wYWNpdHkiLHQuZ2V0KGhNKSkse2RhdGFFYWNoOmEuaGFzSXRlbU9wdGlvbj9mdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0SXRlbU1vZGVsKGUpLG49dU0oaS5nZXRTaGFsbG93KCJzeW1ib2wiLCEwKSksbz11TShpLmdldFNoYWxsb3coInN5bWJvbFNpemUiLCEwKSksYT1pLmdldChoTSk7blswXSYmdC5zZXRJdGVtVmlzdWFsKGUsImZyb21TeW1ib2wiLG5bMF0pLG5bMV0mJnQuc2V0SXRlbVZpc3VhbChlLCJ0b1N5bWJvbCIsblsxXSksb1swXSYmdC5zZXRJdGVtVmlzdWFsKGUsImZyb21TeW1ib2xTaXplIixvWzBdKSxvWzFdJiZ0LnNldEl0ZW1WaXN1YWwoZSwidG9TeW1ib2xTaXplIixvWzFdKSx0LnNldEl0ZW1WaXN1YWwoZSwib3BhY2l0eSIsYSl9Om51bGx9fX07dmYobE0pLHlmKGNNKSxpYy5leHRlbmQoe3R5cGU6InNlcmllcy5oZWF0bWFwIixnZXRJbml0aWFsRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBocCh0aGlzLmdldFNvdXJjZSgpLHRoaXMse2dlbmVyYXRlQ29vcmQ6InZhbHVlIn0pfSxwcmV2ZW50SW5jcmVtZW50YWw6ZnVuY3Rpb24oKXt2YXIgdD1uaC5nZXQodGhpcy5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSk7aWYodCYmdC5kaW1lbnNpb25zKXJldHVybiJsbmciPT09dC5kaW1lbnNpb25zWzBdJiYibGF0Ij09PXQuZGltZW5zaW9uc1sxXX0sZGVmYXVsdE9wdGlvbjp7Y29vcmRpbmF0ZVN5c3RlbToiY2FydGVzaWFuMmQiLHpsZXZlbDowLHo6MixnZW9JbmRleDowLGJsdXJTaXplOjMwLHBvaW50U2l6ZToyMCxtYXhPcGFjaXR5OjEsbWluT3BhY2l0eTowfX0pO2Z1bmN0aW9uIGRNKCl7dmFyIHQ9ZygpO3RoaXMuY2FudmFzPXQsdGhpcy5ibHVyU2l6ZT0zMCx0aGlzLnBvaW50U2l6ZT0yMCx0aGlzLm1heE9wYWNpdHk9MSx0aGlzLm1pbk9wYWNpdHk9MCx0aGlzLl9ncmFkaWVudFBpeGVscz17fX1kTS5wcm90b3R5cGU9e3VwZGF0ZTpmdW5jdGlvbih0LGUsaSxuLG8sYSl7dmFyIHI9dGhpcy5fZ2V0QnJ1c2goKSxzPXRoaXMuX2dldEdyYWRpZW50KHQsbywiaW5SYW5nZSIpLGw9dGhpcy5fZ2V0R3JhZGllbnQodCxvLCJvdXRPZlJhbmdlIiksdT10aGlzLnBvaW50U2l6ZSt0aGlzLmJsdXJTaXplLGg9dGhpcy5jYW52YXMsYz1oLmdldENvbnRleHQoIjJkIiksZD10Lmxlbmd0aDtoLndpZHRoPWUsaC5oZWlnaHQ9aTtmb3IodmFyIGY9MDtmPGQ7KytmKXt2YXIgcD10W2ZdLGc9cFswXSxtPXBbMV0sdj1uKHBbMl0pO2MuZ2xvYmFsQWxwaGE9dixjLmRyYXdJbWFnZShyLGctdSxtLXUpfWlmKCFoLndpZHRofHwhaC5oZWlnaHQpcmV0dXJuIGg7Zm9yKHZhciB5PWMuZ2V0SW1hZ2VEYXRhKDAsMCxoLndpZHRoLGguaGVpZ2h0KSx4PXkuZGF0YSxfPTAsdz14Lmxlbmd0aCxiPXRoaXMubWluT3BhY2l0eSxTPXRoaXMubWF4T3BhY2l0eS1iO188dzspe3Y9eFtfKzNdLzI1Njt2YXIgTT00Kk1hdGguZmxvb3IoMjU1KnYpO2lmKDA8dil7dmFyIEk9YSh2KT9zOmw7MDx2JiYodj12KlMrYikseFtfKytdPUlbTV0seFtfKytdPUlbMStNXSx4W18rK109SVsyK01dLHhbXysrXT1JWzMrTV0qdioyNTZ9ZWxzZSBfKz00fXJldHVybiBjLnB1dEltYWdlRGF0YSh5LDAsMCksaH0sX2dldEJydXNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fYnJ1c2hDYW52YXN8fCh0aGlzLl9icnVzaENhbnZhcz1nKCkpLGU9dGhpcy5wb2ludFNpemUrdGhpcy5ibHVyU2l6ZSxpPTIqZTt0LndpZHRoPWksdC5oZWlnaHQ9aTt2YXIgbj10LmdldENvbnRleHQoIjJkIik7cmV0dXJuIG4uY2xlYXJSZWN0KDAsMCxpLGkpLG4uc2hhZG93T2Zmc2V0WD1pLG4uc2hhZG93Qmx1cj10aGlzLmJsdXJTaXplLG4uc2hhZG93Q29sb3I9IiMwMDAiLG4uYmVnaW5QYXRoKCksbi5hcmMoLWUsZSx0aGlzLnBvaW50U2l6ZSwwLDIqTWF0aC5QSSwhMCksbi5jbG9zZVBhdGgoKSxuLmZpbGwoKSx0fSxfZ2V0R3JhZGllbnQ6ZnVuY3Rpb24odCxlLGkpe2Zvcih2YXIgbj10aGlzLl9ncmFkaWVudFBpeGVscyxvPW5baV18fChuW2ldPW5ldyBVaW50OENsYW1wZWRBcnJheSgxMDI0KSksYT1bMCwwLDAsMF0scj0wLHM9MDtzPDI1NjtzKyspZVtpXShzLzI1NSwhMCxhKSxvW3IrK109YVswXSxvW3IrK109YVsxXSxvW3IrK109YVsyXSxvW3IrK109YVszXTtyZXR1cm4gb319LE1mKHt0eXBlOiJoZWF0bWFwIixyZW5kZXI6ZnVuY3Rpb24oaSx0LGUpe3ZhciBuO3QuZWFjaENvbXBvbmVudCgidmlzdWFsTWFwIixmdW5jdGlvbihlKXtlLmVhY2hUYXJnZXRTZXJpZXMoZnVuY3Rpb24odCl7dD09PWkmJihuPWUpfSl9KSx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX2luY3JlbWVudGFsRGlzcGxheWFibGU9bnVsbDt2YXIgbz1pLmNvb3JkaW5hdGVTeXN0ZW07ImNhcnRlc2lhbjJkIj09PW8udHlwZXx8ImNhbGVuZGFyIj09PW8udHlwZT90aGlzLl9yZW5kZXJPbkNhcnRlc2lhbkFuZENhbGVuZGFyKGksZSwwLGkuZ2V0RGF0YSgpLmNvdW50KCkpOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZGltZW5zaW9ucztyZXR1cm4ibG5nIj09PWVbMF0mJiJsYXQiPT09ZVsxXX0obykmJnRoaXMuX3JlbmRlck9uR2VvKG8saSxuLGUpfSxpbmNyZW1lbnRhbFByZXBhcmVSZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCl9LGluY3JlbWVudGFsUmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe2UuY29vcmRpbmF0ZVN5c3RlbSYmdGhpcy5fcmVuZGVyT25DYXJ0ZXNpYW5BbmRDYWxlbmRhcihlLG4sdC5zdGFydCx0LmVuZCwhMCl9LF9yZW5kZXJPbkNhcnRlc2lhbkFuZENhbGVuZGFyOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGEscixzPXQuY29vcmRpbmF0ZVN5c3RlbTtpZigiY2FydGVzaWFuMmQiPT09cy50eXBlKXt2YXIgbD1zLmdldEF4aXMoIngiKSx1PXMuZ2V0QXhpcygieSIpO2E9bC5nZXRCYW5kV2lkdGgoKSxyPXUuZ2V0QmFuZFdpZHRoKCl9Zm9yKHZhciBoPXRoaXMuZ3JvdXAsYz10LmdldERhdGEoKSxkPSJlbXBoYXNpcy5pdGVtU3R5bGUiLGY9ImVtcGhhc2lzLmxhYmVsIixwPXQuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZShbImNvbG9yIl0pLGc9dC5nZXRNb2RlbChkKS5nZXRJdGVtU3R5bGUoKSxtPXQuZ2V0TW9kZWwoImxhYmVsIiksdj10LmdldE1vZGVsKGYpLHk9cy50eXBlLHg9ImNhcnRlc2lhbjJkIj09PXk/W2MubWFwRGltZW5zaW9uKCJ4IiksYy5tYXBEaW1lbnNpb24oInkiKSxjLm1hcERpbWVuc2lvbigidmFsdWUiKV06W2MubWFwRGltZW5zaW9uKCJ0aW1lIiksYy5tYXBEaW1lbnNpb24oInZhbHVlIildLF89aTtfPG47XysrKXt2YXIgdztpZigiY2FydGVzaWFuMmQiPT09eSl7aWYoaXNOYU4oYy5nZXQoeFsyXSxfKSkpY29udGludWU7dmFyIGI9cy5kYXRhVG9Qb2ludChbYy5nZXQoeFswXSxfKSxjLmdldCh4WzFdLF8pXSk7dz1uZXcgaXMoe3NoYXBlOnt4Ok1hdGguZmxvb3IoYlswXS1hLzIpLHk6TWF0aC5mbG9vcihiWzFdLXIvMiksd2lkdGg6TWF0aC5jZWlsKGEpLGhlaWdodDpNYXRoLmNlaWwocil9LHN0eWxlOntmaWxsOmMuZ2V0SXRlbVZpc3VhbChfLCJjb2xvciIpLG9wYWNpdHk6Yy5nZXRJdGVtVmlzdWFsKF8sIm9wYWNpdHkiKX19KX1lbHNle2lmKGlzTmFOKGMuZ2V0KHhbMV0sXykpKWNvbnRpbnVlO3c9bmV3IGlzKHt6MjoxLHNoYXBlOnMuZGF0YVRvUmVjdChbYy5nZXQoeFswXSxfKV0pLmNvbnRlbnRTaGFwZSxzdHlsZTp7ZmlsbDpjLmdldEl0ZW1WaXN1YWwoXywiY29sb3IiKSxvcGFjaXR5OmMuZ2V0SXRlbVZpc3VhbChfLCJvcGFjaXR5Iil9fSl9dmFyIFM9Yy5nZXRJdGVtTW9kZWwoXyk7Yy5oYXNJdGVtT3B0aW9uJiYocD1TLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoWyJjb2xvciJdKSxnPVMuZ2V0TW9kZWwoZCkuZ2V0SXRlbVN0eWxlKCksbT1TLmdldE1vZGVsKCJsYWJlbCIpLHY9Uy5nZXRNb2RlbChmKSk7dmFyIE09dC5nZXRSYXdWYWx1ZShfKSxJPSItIjtNJiZudWxsIT1NWzJdJiYoST1NWzJdKSwkcyhwLGcsbSx2LHtsYWJlbEZldGNoZXI6dCxsYWJlbERhdGFJbmRleDpfLGRlZmF1bHRUZXh0OkksaXNSZWN0VGV4dDohMH0pLHcuc2V0U3R5bGUocCksWXModyxjLmhhc0l0ZW1PcHRpb24/ZzpMKHt9LGcpKSwody5pbmNyZW1lbnRhbD1vKSYmKHcudXNlSG92ZXJMYXllcj0hMCksaC5hZGQodyksYy5zZXRJdGVtR3JhcGhpY0VsKF8sdyl9fSxfcmVuZGVyT25HZW86ZnVuY3Rpb24obyx0LGUsaSl7dmFyIG49ZS50YXJnZXRWaXN1YWxzLmluUmFuZ2UsYT1lLnRhcmdldFZpc3VhbHMub3V0T2ZSYW5nZSxyPXQuZ2V0RGF0YSgpLHM9dGhpcy5faG1MYXllcnx8dGhpcy5faG1MYXllcnx8bmV3IGRNO3MuYmx1clNpemU9dC5nZXQoImJsdXJTaXplIikscy5wb2ludFNpemU9dC5nZXQoInBvaW50U2l6ZSIpLHMubWluT3BhY2l0eT10LmdldCgibWluT3BhY2l0eSIpLHMubWF4T3BhY2l0eT10LmdldCgibWF4T3BhY2l0eSIpO3ZhciBsPW8uZ2V0Vmlld1JlY3QoKS5jbG9uZSgpLHU9by5nZXRSb2FtVHJhbnNmb3JtKCk7bC5hcHBseVRyYW5zZm9ybSh1KTt2YXIgaD1NYXRoLm1heChsLngsMCksYz1NYXRoLm1heChsLnksMCksZD1NYXRoLm1pbihsLndpZHRoK2wueCxpLmdldFdpZHRoKCkpLGY9TWF0aC5taW4obC5oZWlnaHQrbC55LGkuZ2V0SGVpZ2h0KCkpLHA9ZC1oLGc9Zi1jLG09W3IubWFwRGltZW5zaW9uKCJsbmciKSxyLm1hcERpbWVuc2lvbigibGF0Iiksci5tYXBEaW1lbnNpb24oInZhbHVlIildLHY9ci5tYXBBcnJheShtLGZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1vLmRhdGFUb1BvaW50KFt0LGVdKTtyZXR1cm4gblswXS09aCxuWzFdLT1jLG4ucHVzaChpKSxufSkseT1lLmdldEV4dGVudCgpLHg9InZpc3VhbE1hcC5jb250aW51b3VzIj09PWUudHlwZT9mdW5jdGlvbih0LGUpe3ZhciBpPXRbMV0tdFswXTtyZXR1cm4gZT1bKGVbMF0tdFswXSkvaSwoZVsxXS10WzBdKS9pXSxmdW5jdGlvbih0KXtyZXR1cm4gdD49ZVswXSYmdDw9ZVsxXX19KHksZS5vcHRpb24ucmFuZ2UpOmZ1bmN0aW9uKGUsbixvKXt2YXIgaT1lWzFdLWVbMF0sYT0obj1OKG4sZnVuY3Rpb24odCl7cmV0dXJue2ludGVydmFsOlsodC5pbnRlcnZhbFswXS1lWzBdKS9pLCh0LmludGVydmFsWzFdLWVbMF0pL2ldfX0pKS5sZW5ndGgscj0wO3JldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9cjtlPGE7ZSsrKXtpZigoaT1uW2VdLmludGVydmFsKVswXTw9dCYmdDw9aVsxXSl7cj1lO2JyZWFrfX1pZihlPT09YSlmb3IoZT1yLTE7MDw9ZTtlLS0pe3ZhciBpO2lmKChpPW5bZV0uaW50ZXJ2YWwpWzBdPD10JiZ0PD1pWzFdKXtyPWU7YnJlYWt9fXJldHVybiAwPD1lJiZlPGEmJm9bZV19fSh5LGUuZ2V0UGllY2VMaXN0KCksZS5vcHRpb24uc2VsZWN0ZWQpO3MudXBkYXRlKHYscCxnLG4uY29sb3IuZ2V0Tm9ybWFsaXplcigpLHtpblJhbmdlOm4uY29sb3IuZ2V0Q29sb3JNYXBwZXIoKSxvdXRPZlJhbmdlOmEuY29sb3IuZ2V0Q29sb3JNYXBwZXIoKX0seCk7dmFyIF89bmV3IHFuKHtzdHlsZTp7d2lkdGg6cCxoZWlnaHQ6Zyx4OmgseTpjLGltYWdlOnMuY2FudmFzfSxzaWxlbnQ6ITB9KTt0aGlzLmdyb3VwLmFkZChfKX0sZGlzcG9zZTpmdW5jdGlvbigpe319KTt2YXIgZk09eXYuZXh0ZW5kKHt0eXBlOiJzZXJpZXMucGljdG9yaWFsQmFyIixkZXBlbmRlbmNpZXM6WyJncmlkIl0sZGVmYXVsdE9wdGlvbjp7c3ltYm9sOiJjaXJjbGUiLHN5bWJvbFNpemU6bnVsbCxzeW1ib2xSb3RhdGU6bnVsbCxzeW1ib2xQb3NpdGlvbjpudWxsLHN5bWJvbE9mZnNldDpudWxsLHN5bWJvbE1hcmdpbjpudWxsLHN5bWJvbFJlcGVhdDohMSxzeW1ib2xSZXBlYXREaXJlY3Rpb246ImVuZCIsc3ltYm9sQ2xpcDohMSxzeW1ib2xCb3VuZGluZ0RhdGE6bnVsbCxzeW1ib2xQYXR0ZXJuU2l6ZTo0MDAsYmFyR2FwOiItMTAwJSIscHJvZ3Jlc3NpdmU6MCxob3ZlckFuaW1hdGlvbjohMX0sZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RhY2s9bnVsbCxmTS5zdXBlckFwcGx5KHRoaXMsImdldEluaXRpYWxEYXRhIixhcmd1bWVudHMpfX0pLHBNPVsiaXRlbVN0eWxlIiwiYm9yZGVyV2lkdGgiXSxnTT1be3h5OiJ4Iix3aDoid2lkdGgiLGluZGV4OjAscG9zRGVzYzpbImxlZnQiLCJyaWdodCJdfSx7eHk6InkiLHdoOiJoZWlnaHQiLGluZGV4OjEscG9zRGVzYzpbInRvcCIsImJvdHRvbSJdfV0sbU09bmV3IEhyO01mKHt0eXBlOiJwaWN0b3JpYWxCYXIiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIHI9dGhpcy5ncm91cCxzPXQuZ2V0RGF0YSgpLGw9dGhpcy5fZGF0YSxuPXQuY29vcmRpbmF0ZVN5c3RlbSxvPSEhbi5nZXRCYXNlQXhpcygpLmlzSG9yaXpvbnRhbCgpLGE9bi5ncmlkLmdldFJlY3QoKSx1PXtlY1NpemU6e3dpZHRoOmkuZ2V0V2lkdGgoKSxoZWlnaHQ6aS5nZXRIZWlnaHQoKX0sc2VyaWVzTW9kZWw6dCxjb29yZFN5czpuLGNvb3JkU3lzRXh0ZW50OltbYS54LGEueCthLndpZHRoXSxbYS55LGEueSthLmhlaWdodF1dLGlzSG9yaXpvbnRhbDpvLHZhbHVlRGltOmdNWytvXSxjYXRlZ29yeURpbTpnTVsxLW9dfTtyZXR1cm4gcy5kaWZmKGwpLmFkZChmdW5jdGlvbih0KXtpZihzLmhhc1ZhbHVlKHQpKXt2YXIgZT1NTShzLHQpLGk9dk0ocyx0LGUsdSksbj1ETShzLHUsaSk7cy5zZXRJdGVtR3JhcGhpY0VsKHQsbiksci5hZGQobiksTk0obix1LGkpfX0pLnVwZGF0ZShmdW5jdGlvbih0LGUpe3ZhciBpPWwuZ2V0SXRlbUdyYXBoaWNFbChlKTtpZihzLmhhc1ZhbHVlKHQpKXt2YXIgbj1NTShzLHQpLG89dk0ocyx0LG4sdSksYT1MTShzLG8pO2kmJmEhPT1pLl9fcGljdG9yaWFsU2hhcGVTdHImJihyLnJlbW92ZShpKSxzLnNldEl0ZW1HcmFwaGljRWwodCxudWxsKSxpPW51bGwpLGk/ZnVuY3Rpb24odCxlLGkpe3ZhciBuPWkuYW5pbWF0aW9uTW9kZWwsbz1pLmRhdGFJbmRleDtzbCh0Ll9fcGljdG9yaWFsQnVuZGxlLHtwb3NpdGlvbjppLmJ1bmRsZVBvc2l0aW9uLnNsaWNlKCl9LG4sbyksaS5zeW1ib2xSZXBlYXQ/X00odCxlLGksITApOndNKHQsZSxpLCEwKTtiTSh0LGksITApLFNNKHQsZSxpLCEwKX0oaSx1LG8pOmk9RE0ocyx1LG8sITApLHMuc2V0SXRlbUdyYXBoaWNFbCh0LGkpLGkuX19waWN0b3JpYWxTeW1ib2xNZXRhPW8sci5hZGQoaSksTk0oaSx1LG8pfWVsc2Ugci5yZW1vdmUoaSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7dmFyIGU9bC5nZXRJdGVtR3JhcGhpY0VsKHQpO2UmJkNNKGwsdCxlLl9fcGljdG9yaWFsU3ltYm9sTWV0YS5hbmltYXRpb25Nb2RlbCxlKX0pLmV4ZWN1dGUoKSx0aGlzLl9kYXRhPXMsdGhpcy5ncm91cH0sZGlzcG9zZTpldCxyZW1vdmU6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLmdyb3VwLG49dGhpcy5fZGF0YTtlLmdldCgiYW5pbWF0aW9uIik/biYmbi5lYWNoSXRlbUdyYXBoaWNFbChmdW5jdGlvbih0KXtDTShuLHQuZGF0YUluZGV4LGUsdCl9KTppLnJlbW92ZUFsbCgpfX0pO2Z1bmN0aW9uIHZNKHQsZSxpLG4pe3ZhciBvPXQuZ2V0SXRlbUxheW91dChlKSxhPWkuZ2V0KCJzeW1ib2xSZXBlYXQiKSxyPWkuZ2V0KCJzeW1ib2xDbGlwIikscz1pLmdldCgic3ltYm9sUG9zaXRpb24iKXx8InN0YXJ0IixsPShpLmdldCgic3ltYm9sUm90YXRlIil8fDApKk1hdGguUEkvMTgwfHwwLHU9aS5nZXQoInN5bWJvbFBhdHRlcm5TaXplIil8fDIsaD1pLmlzQW5pbWF0aW9uRW5hYmxlZCgpLGM9e2RhdGFJbmRleDplLGxheW91dDpvLGl0ZW1Nb2RlbDppLHN5bWJvbFR5cGU6dC5nZXRJdGVtVmlzdWFsKGUsInN5bWJvbCIpfHwiY2lyY2xlIixjb2xvcjp0LmdldEl0ZW1WaXN1YWwoZSwiY29sb3IiKSxzeW1ib2xDbGlwOnIsc3ltYm9sUmVwZWF0OmEsc3ltYm9sUmVwZWF0RGlyZWN0aW9uOmkuZ2V0KCJzeW1ib2xSZXBlYXREaXJlY3Rpb24iKSxzeW1ib2xQYXR0ZXJuU2l6ZTp1LHJvdGF0aW9uOmwsYW5pbWF0aW9uTW9kZWw6aD9pOm51bGwsaG92ZXJBbmltYXRpb246aCYmaS5nZXQoImhvdmVyQW5pbWF0aW9uIiksejI6aS5nZXRTaGFsbG93KCJ6IiwhMCl8fDB9OyFmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhLHI9bi52YWx1ZURpbSxzPXQuZ2V0KCJzeW1ib2xCb3VuZGluZ0RhdGEiKSxsPW4uY29vcmRTeXMuZ2V0T3RoZXJBeGlzKG4uY29vcmRTeXMuZ2V0QmFzZUF4aXMoKSksdT1sLnRvR2xvYmFsQ29vcmQobC5kYXRhVG9Db29yZCgwKSksaD0xLSsoaVtyLndoXTw9MCk7aWYoayhzKSl7dmFyIGM9W3lNKGwsc1swXSktdSx5TShsLHNbMV0pLXVdO2NbMV08Y1swXSYmYy5yZXZlcnNlKCksYT1jW2hdfWVsc2UgYT1udWxsIT1zP3lNKGwscyktdTplP24uY29vcmRTeXNFeHRlbnRbci5pbmRleF1baF0tdTppW3Iud2hdO28uYm91bmRpbmdMZW5ndGg9YSxlJiYoby5yZXBlYXRDdXRMZW5ndGg9aVtyLndoXSk7by5weFNpZ249MDxhPzE6YTwwPy0xOjB9KGksYSxvLG4sYyksZnVuY3Rpb24odCxlLGksbixvLGEscixzLGwsdSl7dmFyIGg9bC52YWx1ZURpbSxjPWwuY2F0ZWdvcnlEaW0sZD1NYXRoLmFicyhpW2Mud2hdKSxmPXQuZ2V0SXRlbVZpc3VhbChlLCJzeW1ib2xTaXplIik7Zj1rKGYpP2Yuc2xpY2UoKToobnVsbD09ZiYmKGY9IjEwMCUiKSxbZixmXSk7ZltjLmluZGV4XT1QbChmW2MuaW5kZXhdLGQpLGZbaC5pbmRleF09UGwoZltoLmluZGV4XSxuP2Q6TWF0aC5hYnMoYSkpLHUuc3ltYm9sU2l6ZT1mLCh1LnN5bWJvbFNjYWxlPVtmWzBdL3MsZlsxXS9zXSlbaC5pbmRleF0qPShsLmlzSG9yaXpvbnRhbD8tMToxKSpyfSh0LGUsbyxhLDAsYy5ib3VuZGluZ0xlbmd0aCxjLnB4U2lnbix1LG4sYyksZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT10LmdldChwTSl8fDA7YSYmKG1NLmF0dHIoe3NjYWxlOmUuc2xpY2UoKSxyb3RhdGlvbjppfSksbU0udXBkYXRlVHJhbnNmb3JtKCksYS89bU0uZ2V0TGluZVNjYWxlKCksYSo9ZVtuLnZhbHVlRGltLmluZGV4XSk7by52YWx1ZUxpbmVXaWR0aD1hfShpLGMuc3ltYm9sU2NhbGUsbCxuLGMpO3ZhciBkPWMuc3ltYm9sU2l6ZSxmPWkuZ2V0KCJzeW1ib2xPZmZzZXQiKTtyZXR1cm4gayhmKSYmKGY9W1BsKGZbMF0sZFswXSksUGwoZlsxXSxkWzFdKV0pLGZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIscyxsLHUsaCxjKXt2YXIgZD1oLmNhdGVnb3J5RGltLGY9aC52YWx1ZURpbSxwPWMucHhTaWduLGc9TWF0aC5tYXgoZVtmLmluZGV4XStzLDApLG09ZztpZihuKXt2YXIgdj1NYXRoLmFicyhsKSx5PVcodC5nZXQoInN5bWJvbE1hcmdpbiIpLCIxNSUiKSsiIix4PSExO3kubGFzdEluZGV4T2YoIiEiKT09PXkubGVuZ3RoLTEmJih4PSEwLHk9eS5zbGljZSgwLHkubGVuZ3RoLTEpKSx5PVBsKHksZVtmLmluZGV4XSk7dmFyIF89TWF0aC5tYXgoZysyKnksMCksdz14PzA6Mip5LGI9amwobiksUz1iP246T00oKHYrdykvXyk7Xz1nKzIqKHk9KHYtUypnKS8yLyh4P1M6Uy0xKSksdz14PzA6Mip5LGJ8fCJmaXhlZCI9PT1ufHwoUz11P09NKChNYXRoLmFicyh1KSt3KS9fKTowKSxtPVMqXy13LGMucmVwZWF0VGltZXM9UyxjLnN5bWJvbE1hcmdpbj15fXZhciBNPXAqKG0vMiksST1jLnBhdGhQb3NpdGlvbj1bXTtJW2QuaW5kZXhdPWlbZC53aF0vMixJW2YuaW5kZXhdPSJzdGFydCI9PT1yP006ImVuZCI9PT1yP2wtTTpsLzIsYSYmKElbMF0rPWFbMF0sSVsxXSs9YVsxXSk7dmFyIFQ9Yy5idW5kbGVQb3NpdGlvbj1bXTtUW2QuaW5kZXhdPWlbZC54eV0sVFtmLmluZGV4XT1pW2YueHldO3ZhciBBPWMuYmFyUmVjdFNoYXBlPUwoe30saSk7QVtmLndoXT1wKk1hdGgubWF4KE1hdGguYWJzKGlbZi53aF0pLE1hdGguYWJzKElbZi5pbmRleF0rTSkpLEFbZC53aF09aVtkLndoXTt2YXIgRD1jLmNsaXBTaGFwZT17fTtEW2QueHldPS1pW2QueHldLERbZC53aF09aC5lY1NpemVbZC53aF0sRFtmLnh5XT0wLERbZi53aF09aVtmLndoXX0oaSxkLG8sYSwwLGYscyxjLnZhbHVlTGluZVdpZHRoLGMuYm91bmRpbmdMZW5ndGgsYy5yZXBlYXRDdXRMZW5ndGgsbixjKSxjfWZ1bmN0aW9uIHlNKHQsZSl7cmV0dXJuIHQudG9HbG9iYWxDb29yZCh0LmRhdGFUb0Nvb3JkKHQuc2NhbGUucGFyc2UoZSkpKX1mdW5jdGlvbiB4TSh0KXt2YXIgZT10LnN5bWJvbFBhdHRlcm5TaXplLGk9bWcodC5zeW1ib2xUeXBlLC1lLzIsLWUvMixlLGUsdC5jb2xvcik7cmV0dXJuIGkuYXR0cih7Y3VsbGluZzohMH0pLCJpbWFnZSIhPT1pLnR5cGUmJmkuc2V0U3R5bGUoe3N0cm9rZU5vU2NhbGU6ITB9KSxpfWZ1bmN0aW9uIF9NKHQsZSxvLGkpe3ZhciBuPXQuX19waWN0b3JpYWxCdW5kbGUsYT1vLnN5bWJvbFNpemUscj1vLnZhbHVlTGluZVdpZHRoLHM9by5wYXRoUG9zaXRpb24sbD1lLnZhbHVlRGltLHU9by5yZXBlYXRUaW1lc3x8MCxoPTAsYz1hW2UudmFsdWVEaW0uaW5kZXhdK3IrMipvLnN5bWJvbE1hcmdpbjtmb3Ioa00odCxmdW5jdGlvbih0KXt0Ll9fcGljdG9yaWFsQW5pbWF0aW9uSW5kZXg9aCx0Ll9fcGljdG9yaWFsUmVwZWF0VGltZXM9dSxoPHU/UE0odCxudWxsLHAoaCksbyxpKTpQTSh0LG51bGwse3NjYWxlOlswLDBdfSxvLGksZnVuY3Rpb24oKXtuLnJlbW92ZSh0KX0pLEFNKHQsbyksaCsrfSk7aDx1O2grKyl7dmFyIGQ9eE0obyk7ZC5fX3BpY3RvcmlhbEFuaW1hdGlvbkluZGV4PWgsZC5fX3BpY3RvcmlhbFJlcGVhdFRpbWVzPXUsbi5hZGQoZCk7dmFyIGY9cChoKTtQTShkLHtwb3NpdGlvbjpmLnBvc2l0aW9uLHNjYWxlOlswLDBdfSx7c2NhbGU6Zi5zY2FsZSxyb3RhdGlvbjpmLnJvdGF0aW9ufSxvLGkpLGQub24oIm1vdXNlb3ZlciIsZykub24oIm1vdXNlb3V0IixtKSxBTShkLG8pfWZ1bmN0aW9uIHAodCl7dmFyIGU9cy5zbGljZSgpLGk9by5weFNpZ24sbj10O3JldHVybigic3RhcnQiPT09by5zeW1ib2xSZXBlYXREaXJlY3Rpb24/MDxpOmk8MCkmJihuPXUtMS10KSxlW2wuaW5kZXhdPWMqKG4tdS8yKy41KStzW2wuaW5kZXhdLHtwb3NpdGlvbjplLHNjYWxlOm8uc3ltYm9sU2NhbGUuc2xpY2UoKSxyb3RhdGlvbjpvLnJvdGF0aW9ufX1mdW5jdGlvbiBnKCl7a00odCxmdW5jdGlvbih0KXt0LnRyaWdnZXIoImVtcGhhc2lzIil9KX1mdW5jdGlvbiBtKCl7a00odCxmdW5jdGlvbih0KXt0LnRyaWdnZXIoIm5vcm1hbCIpfSl9fWZ1bmN0aW9uIHdNKHQsZSxpLG4pe3ZhciBvPXQuX19waWN0b3JpYWxCdW5kbGUsYT10Ll9fcGljdG9yaWFsTWFpblBhdGg7YT9QTShhLG51bGwse3Bvc2l0aW9uOmkucGF0aFBvc2l0aW9uLnNsaWNlKCksc2NhbGU6aS5zeW1ib2xTY2FsZS5zbGljZSgpLHJvdGF0aW9uOmkucm90YXRpb259LGksbik6KGE9dC5fX3BpY3RvcmlhbE1haW5QYXRoPXhNKGkpLG8uYWRkKGEpLFBNKGEse3Bvc2l0aW9uOmkucGF0aFBvc2l0aW9uLnNsaWNlKCksc2NhbGU6WzAsMF0scm90YXRpb246aS5yb3RhdGlvbn0se3NjYWxlOmkuc3ltYm9sU2NhbGUuc2xpY2UoKX0saSxuKSxhLm9uKCJtb3VzZW92ZXIiLGZ1bmN0aW9uKCl7dGhpcy50cmlnZ2VyKCJlbXBoYXNpcyIpfSkub24oIm1vdXNlb3V0IixmdW5jdGlvbigpe3RoaXMudHJpZ2dlcigibm9ybWFsIil9KSksQU0oYSxpKX1mdW5jdGlvbiBiTSh0LGUsaSl7dmFyIG49TCh7fSxlLmJhclJlY3RTaGFwZSksbz10Ll9fcGljdG9yaWFsQmFyUmVjdDtvP1BNKG8sbnVsbCx7c2hhcGU6bn0sZSxpKToobz10Ll9fcGljdG9yaWFsQmFyUmVjdD1uZXcgaXMoe3oyOjIsc2hhcGU6bixzaWxlbnQ6ITAsc3R5bGU6e3N0cm9rZToidHJhbnNwYXJlbnQiLGZpbGw6InRyYW5zcGFyZW50IixsaW5lV2lkdGg6MH19KSx0LmFkZChvKSl9ZnVuY3Rpb24gU00odCxlLGksbil7aWYoaS5zeW1ib2xDbGlwKXt2YXIgbz10Ll9fcGljdG9yaWFsQ2xpcFBhdGgsYT1MKHt9LGkuY2xpcFNoYXBlKSxyPWUudmFsdWVEaW0scz1pLmFuaW1hdGlvbk1vZGVsLGw9aS5kYXRhSW5kZXg7aWYobylzbChvLHtzaGFwZTphfSxzLGwpO2Vsc2V7YVtyLndoXT0wLG89bmV3IGlzKHtzaGFwZTphfSksdC5fX3BpY3RvcmlhbEJ1bmRsZS5zZXRDbGlwUGF0aChvKSx0Ll9fcGljdG9yaWFsQ2xpcFBhdGg9bzt2YXIgdT17fTt1W3Iud2hdPWkuY2xpcFNoYXBlW3Iud2hdLHlsW24/InVwZGF0ZVByb3BzIjoiaW5pdFByb3BzIl0obyx7c2hhcGU6dX0scyxsKX19fWZ1bmN0aW9uIE1NKHQsZSl7dmFyIGk9dC5nZXRJdGVtTW9kZWwoZSk7cmV0dXJuIGkuZ2V0QW5pbWF0aW9uRGVsYXlQYXJhbXM9SU0saS5pc0FuaW1hdGlvbkVuYWJsZWQ9VE0saX1mdW5jdGlvbiBJTSh0KXtyZXR1cm57aW5kZXg6dC5fX3BpY3RvcmlhbEFuaW1hdGlvbkluZGV4LGNvdW50OnQuX19waWN0b3JpYWxSZXBlYXRUaW1lc319ZnVuY3Rpb24gVE0oKXtyZXR1cm4gdGhpcy5wYXJlbnRNb2RlbC5pc0FuaW1hdGlvbkVuYWJsZWQoKSYmISF0aGlzLmdldFNoYWxsb3coImFuaW1hdGlvbiIpfWZ1bmN0aW9uIEFNKHQsZSl7dC5vZmYoImVtcGhhc2lzIikub2ZmKCJub3JtYWwiKTt2YXIgaT1lLnN5bWJvbFNjYWxlLnNsaWNlKCk7ZS5ob3ZlckFuaW1hdGlvbiYmdC5vbigiZW1waGFzaXMiLGZ1bmN0aW9uKCl7dGhpcy5hbmltYXRlVG8oe3NjYWxlOlsxLjEqaVswXSwxLjEqaVsxXV19LDQwMCwiZWxhc3RpY091dCIpfSkub24oIm5vcm1hbCIsZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGVUbyh7c2NhbGU6aS5zbGljZSgpfSw0MDAsImVsYXN0aWNPdXQiKX0pfWZ1bmN0aW9uIERNKHQsZSxpLG4pe3ZhciBvPW5ldyBJaSxhPW5ldyBJaTtyZXR1cm4gby5hZGQoYSksKG8uX19waWN0b3JpYWxCdW5kbGU9YSkuYXR0cigicG9zaXRpb24iLGkuYnVuZGxlUG9zaXRpb24uc2xpY2UoKSksaS5zeW1ib2xSZXBlYXQ/X00obyxlLGkpOndNKG8sMCxpKSxiTShvLGksbiksU00obyxlLGksbiksby5fX3BpY3RvcmlhbFNoYXBlU3RyPUxNKHQsaSksby5fX3BpY3RvcmlhbFN5bWJvbE1ldGE9aSxvfWZ1bmN0aW9uIENNKHQsZSxpLG4pe3ZhciBvPW4uX19waWN0b3JpYWxCYXJSZWN0O28mJihvLnN0eWxlLnRleHQ9bnVsbCk7dmFyIGE9W107a00obixmdW5jdGlvbih0KXthLnB1c2godCl9KSxuLl9fcGljdG9yaWFsTWFpblBhdGgmJmEucHVzaChuLl9fcGljdG9yaWFsTWFpblBhdGgpLG4uX19waWN0b3JpYWxDbGlwUGF0aCYmKGk9bnVsbCksRShhLGZ1bmN0aW9uKHQpe3NsKHQse3NjYWxlOlswLDBdfSxpLGUsZnVuY3Rpb24oKXtuLnBhcmVudCYmbi5wYXJlbnQucmVtb3ZlKG4pfSl9KSx0LnNldEl0ZW1HcmFwaGljRWwoZSxudWxsKX1mdW5jdGlvbiBMTSh0LGUpe3JldHVyblt0LmdldEl0ZW1WaXN1YWwoZS5kYXRhSW5kZXgsInN5bWJvbCIpfHwibm9uZSIsISFlLnN5bWJvbFJlcGVhdCwhIWUuc3ltYm9sQ2xpcF0uam9pbigiOiIpfWZ1bmN0aW9uIGtNKGUsaSxuKXtFKGUuX19waWN0b3JpYWxCdW5kbGUuY2hpbGRyZW4oKSxmdW5jdGlvbih0KXt0IT09ZS5fX3BpY3RvcmlhbEJhclJlY3QmJmkuY2FsbChuLHQpfSl9ZnVuY3Rpb24gUE0odCxlLGksbixvLGEpe2UmJnQuYXR0cihlKSxuLnN5bWJvbENsaXAmJiFvP2kmJnQuYXR0cihpKTppJiZ5bFtvPyJ1cGRhdGVQcm9wcyI6ImluaXRQcm9wcyJdKHQsaSxuLmFuaW1hdGlvbk1vZGVsLG4uZGF0YUluZGV4LGEpfWZ1bmN0aW9uIE5NKHQsZSxpKXt2YXIgbj1pLmNvbG9yLG89aS5kYXRhSW5kZXgsYT1pLml0ZW1Nb2RlbCxyPWEuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZShbImNvbG9yIl0pLHM9YS5nZXRNb2RlbCgiZW1waGFzaXMuaXRlbVN0eWxlIikuZ2V0SXRlbVN0eWxlKCksbD1hLmdldFNoYWxsb3coImN1cnNvciIpO2tNKHQsZnVuY3Rpb24odCl7dC5zZXRDb2xvcihuKSx0LnNldFN0eWxlKEMoe2ZpbGw6bixvcGFjaXR5Omkub3BhY2l0eX0scikpLFlzKHQscyksbCYmKHQuY3Vyc29yPWwpLHQuejI9aS56Mn0pO3ZhciB1PXt9LGg9KGUudmFsdWVEaW0ucG9zRGVzY1srKDA8aS5ib3VuZGluZ0xlbmd0aCldLHQuX19waWN0b3JpYWxCYXJSZWN0KTt4dihoLnN0eWxlLHUsYSxuLGUuc2VyaWVzTW9kZWwsbyksWXMoaCx1KX1mdW5jdGlvbiBPTSh0KXt2YXIgZT1NYXRoLnJvdW5kKHQpO3JldHVybiBNYXRoLmFicyh0LWUpPDFlLTQ/ZTpNYXRoLmNlaWwodCl9dmYoVChQcCwicGljdG9yaWFsQmFyIikpLHlmKE1tKCJwaWN0b3JpYWxCYXIiLCJyb3VuZFJlY3QiKSk7ZnVuY3Rpb24gRU0odCxlLGksbixvKXtFZy5jYWxsKHRoaXMsdCxlLGkpLHRoaXMudHlwZT1ufHwidmFsdWUiLHRoaXMucG9zaXRpb249b3x8ImJvdHRvbSIsdGhpcy5vcmllbnQ9bnVsbH1mdW5jdGlvbiB6TSh0LGUsaSl7dGhpcy5kaW1lbnNpb249InNpbmdsZSIsdGhpcy5kaW1lbnNpb25zPVsic2luZ2xlIl0sdGhpcy5fYXhpcz1udWxsLHRoaXMuX3JlY3QsdGhpcy5faW5pdCh0LGUsaSksdGhpcy5tb2RlbD10fWZ1bmN0aW9uIFJNKHQsZSl7ZT1lfHx7fTt2YXIgaT10LmNvb3JkaW5hdGVTeXN0ZW0sbj10LmF4aXMsbz17fSxhPW4ucG9zaXRpb24scj1uLm9yaWVudCxzPWkuZ2V0UmVjdCgpLGw9W3MueCxzLngrcy53aWR0aCxzLnkscy55K3MuaGVpZ2h0XSx1PXtob3Jpem9udGFsOnt0b3A6bFsyXSxib3R0b206bFszXX0sdmVydGljYWw6e2xlZnQ6bFswXSxyaWdodDpsWzFdfX07by5wb3NpdGlvbj1bInZlcnRpY2FsIj09PXI/dS52ZXJ0aWNhbFthXTpsWzBdLCJob3Jpem9udGFsIj09PXI/dS5ob3Jpem9udGFsW2FdOmxbM11dO28ucm90YXRpb249TWF0aC5QSS8yKntob3Jpem9udGFsOjAsdmVydGljYWw6MX1bcl07by5sYWJlbERpcmVjdGlvbj1vLnRpY2tEaXJlY3Rpb249by5uYW1lRGlyZWN0aW9uPXt0b3A6LTEsYm90dG9tOjEscmlnaHQ6MSxsZWZ0Oi0xfVthXSx0LmdldCgiYXhpc1RpY2suaW5zaWRlIikmJihvLnRpY2tEaXJlY3Rpb249LW8udGlja0RpcmVjdGlvbiksVyhlLmxhYmVsSW5zaWRlLHQuZ2V0KCJheGlzTGFiZWwuaW5zaWRlIikpJiYoby5sYWJlbERpcmVjdGlvbj0tby5sYWJlbERpcmVjdGlvbik7dmFyIGg9ZS5yb3RhdGU7cmV0dXJuIG51bGw9PWgmJihoPXQuZ2V0KCJheGlzTGFiZWwucm90YXRlIikpLG8ubGFiZWxSb3RhdGlvbj0idG9wIj09PWE/LWg6aCxvLnoyPTEsb31FTS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkVNLG1vZGVsOm51bGwsaXNIb3Jpem9udGFsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wb3NpdGlvbjtyZXR1cm4idG9wIj09PXR8fCJib3R0b20iPT09dH0scG9pbnRUb0RhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5jb29yZGluYXRlU3lzdGVtLnBvaW50VG9EYXRhKHQsZSlbMF19LHRvR2xvYmFsQ29vcmQ6bnVsbCx0b0xvY2FsQ29vcmQ6bnVsbH0sdyhFTSxFZyksbmgucmVnaXN0ZXIoInNpbmdsZSIse2NyZWF0ZTpmdW5jdGlvbihuLG8pe3ZhciBhPVtdO3JldHVybiBuLmVhY2hDb21wb25lbnQoInNpbmdsZUF4aXMiLGZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IHpNKHQsbixvKTtpLm5hbWU9InNpbmdsZV8iK2UsaS5yZXNpemUodCxvKSx0LmNvb3JkaW5hdGVTeXN0ZW09aSxhLnB1c2goaSl9KSxuLmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7aWYoInNpbmdsZUF4aXMiPT09dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSl7dmFyIGU9bi5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJzaW5nbGVBeGlzIixpbmRleDp0LmdldCgic2luZ2xlQXhpc0luZGV4IiksaWQ6dC5nZXQoInNpbmdsZUF4aXNJZCIpfSlbMF07dC5jb29yZGluYXRlU3lzdGVtPWUmJmUuY29vcmRpbmF0ZVN5c3RlbX19KSxhfSxkaW1lbnNpb25zOih6TS5wcm90b3R5cGU9e3R5cGU6InNpbmdsZUF4aXMiLGF4aXNQb2ludGVyRW5hYmxlZDohMCxjb25zdHJ1Y3Rvcjp6TSxfaW5pdDpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5kaW1lbnNpb24sbz1uZXcgRU0obixpZyh0KSxbMCwwXSx0LmdldCgidHlwZSIpLHQuZ2V0KCJwb3NpdGlvbiIpKSxhPSJjYXRlZ29yeSI9PT1vLnR5cGU7by5vbkJhbmQ9YSYmdC5nZXQoImJvdW5kYXJ5R2FwIiksby5pbnZlcnNlPXQuZ2V0KCJpbnZlcnNlIiksby5vcmllbnQ9dC5nZXQoIm9yaWVudCIpLCh0LmF4aXM9bykubW9kZWw9dCwoby5jb29yZGluYXRlU3lzdGVtPXRoaXMpLl9heGlzPW99LHVwZGF0ZTpmdW5jdGlvbih0LGUpe3QuZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZih0LmNvb3JkaW5hdGVTeXN0ZW09PT10aGlzKXt2YXIgZT10LmdldERhdGEoKTtFKGUubWFwRGltZW5zaW9uKHRoaXMuZGltZW5zaW9uLCEwKSxmdW5jdGlvbih0KXt0aGlzLl9heGlzLnNjYWxlLnVuaW9uRXh0ZW50RnJvbURhdGEoZSx0KX0sdGhpcyksZWcodGhpcy5fYXhpcy5zY2FsZSx0aGlzLl9heGlzLm1vZGVsKX19LHRoaXMpfSxyZXNpemU6ZnVuY3Rpb24odCxlKXt0aGlzLl9yZWN0PXZ1KHtsZWZ0OnQuZ2V0KCJsZWZ0IiksdG9wOnQuZ2V0KCJ0b3AiKSxyaWdodDp0LmdldCgicmlnaHQiKSxib3R0b206dC5nZXQoImJvdHRvbSIpLHdpZHRoOnQuZ2V0KCJ3aWR0aCIpLGhlaWdodDp0LmdldCgiaGVpZ2h0Iil9LHt3aWR0aDplLmdldFdpZHRoKCksaGVpZ2h0OmUuZ2V0SGVpZ2h0KCl9KSx0aGlzLl9hZGp1c3RBeGlzKCl9LGdldFJlY3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdH0sX2FkanVzdEF4aXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yZWN0LGU9dGhpcy5fYXhpcyxpPWUuaXNIb3Jpem9udGFsKCksbj1pP1swLHQud2lkdGhdOlswLHQuaGVpZ2h0XSxvPWUucmV2ZXJzZT8xOjA7ZS5zZXRFeHRlbnQobltvXSxuWzEtb10pLHRoaXMuX3VwZGF0ZUF4aXNUcmFuc2Zvcm0oZSxpP3QueDp0LnkpfSxfdXBkYXRlQXhpc1RyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0RXh0ZW50KCksbj1pWzBdK2lbMV0sbz10LmlzSG9yaXpvbnRhbCgpO3QudG9HbG9iYWxDb29yZD1vP2Z1bmN0aW9uKHQpe3JldHVybiB0K2V9OmZ1bmN0aW9uKHQpe3JldHVybiBuLXQrZX0sdC50b0xvY2FsQ29vcmQ9bz9mdW5jdGlvbih0KXtyZXR1cm4gdC1lfTpmdW5jdGlvbih0KXtyZXR1cm4gbi10K2V9fSxnZXRBeGlzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2F4aXN9LGdldEJhc2VBeGlzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2F4aXN9LGdldEF4ZXM6ZnVuY3Rpb24oKXtyZXR1cm5bdGhpcy5fYXhpc119LGdldFRvb2x0aXBBeGVzOmZ1bmN0aW9uKCl7cmV0dXJue2Jhc2VBeGVzOlt0aGlzLmdldEF4aXMoKV19fSxjb250YWluUG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRSZWN0KCksaT10aGlzLmdldEF4aXMoKTtyZXR1cm4iaG9yaXpvbnRhbCI9PT1pLm9yaWVudD9pLmNvbnRhaW4oaS50b0xvY2FsQ29vcmQodFswXSkpJiZ0WzFdPj1lLnkmJnRbMV08PWUueStlLmhlaWdodDppLmNvbnRhaW4oaS50b0xvY2FsQ29vcmQodFsxXSkpJiZ0WzBdPj1lLnkmJnRbMF08PWUueStlLmhlaWdodH0scG9pbnRUb0RhdGE6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRBeGlzKCk7cmV0dXJuW2UuY29vcmRUb0RhdGEoZS50b0xvY2FsQ29vcmQodFsiaG9yaXpvbnRhbCI9PT1lLm9yaWVudD8wOjFdKSldfSxkYXRhVG9Qb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldEF4aXMoKSxpPXRoaXMuZ2V0UmVjdCgpLG49W10sbz0iaG9yaXpvbnRhbCI9PT1lLm9yaWVudD8wOjE7cmV0dXJuIHQgaW5zdGFuY2VvZiBBcnJheSYmKHQ9dFswXSksbltvXT1lLnRvR2xvYmFsQ29vcmQoZS5kYXRhVG9Db29yZCgrdCkpLG5bMS1vXT0wPT1vP2kueStpLmhlaWdodC8yOmkueCtpLndpZHRoLzIsbn19KS5kaW1lbnNpb25zfSk7dmFyIEJNPVsiYXhpc0xpbmUiLCJheGlzVGlja0xhYmVsIiwiYXhpc05hbWUiXSxWTT0ic3BsaXRMaW5lIixHTT1odi5leHRlbmQoe3R5cGU6InNpbmdsZUF4aXMiLGF4aXNQb2ludGVyQ2xhc3M6IlNpbmdsZUF4aXNQb2ludGVyIixyZW5kZXI6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5ncm91cDtvLnJlbW92ZUFsbCgpO3ZhciBhPVJNKHQpLHI9bmV3IFltKHQsYSk7RShCTSxyLmFkZCxyKSxvLmFkZChyLmdldEdyb3VwKCkpLHQuZ2V0KFZNKyIuc2hvdyIpJiZ0aGlzWyJfIitWTV0odCksR00uc3VwZXJDYWxsKHRoaXMsInJlbmRlciIsdCxlLGksbil9LF9zcGxpdExpbmU6ZnVuY3Rpb24odCl7dmFyIGU9dC5heGlzO2lmKCFlLnNjYWxlLmlzQmxhbmsoKSl7dmFyIGk9dC5nZXRNb2RlbCgic3BsaXRMaW5lIiksbj1pLmdldE1vZGVsKCJsaW5lU3R5bGUiKSxvPW4uZ2V0KCJ3aWR0aCIpLGE9bi5nZXQoImNvbG9yIik7YT1hIGluc3RhbmNlb2YgQXJyYXk/YTpbYV07Zm9yKHZhciByPXQuY29vcmRpbmF0ZVN5c3RlbS5nZXRSZWN0KCkscz1lLmlzSG9yaXpvbnRhbCgpLGw9W10sdT0wLGg9ZS5nZXRUaWNrc0Nvb3Jkcyh7dGlja01vZGVsOml9KSxjPVtdLGQ9W10sZj0wO2Y8aC5sZW5ndGg7KytmKXt2YXIgcD1lLnRvR2xvYmFsQ29vcmQoaFtmXS5jb29yZCk7cz8oY1swXT1wLGNbMV09ci55LGRbMF09cCxkWzFdPXIueStyLmhlaWdodCk6KGNbMF09ci54LGNbMV09cCxkWzBdPXIueCtyLndpZHRoLGRbMV09cCk7dmFyIGc9dSsrJWEubGVuZ3RoO2xbZ109bFtnXXx8W10sbFtnXS5wdXNoKG5ldyBvcyh7c3ViUGl4ZWxPcHRpbWl6ZTohMCxzaGFwZTp7eDE6Y1swXSx5MTpjWzFdLHgyOmRbMF0seTI6ZFsxXX0sc3R5bGU6e2xpbmVXaWR0aDpvfSxzaWxlbnQ6ITB9KSl9Zm9yKGY9MDtmPGwubGVuZ3RoOysrZil0aGlzLmdyb3VwLmFkZChrcyhsW2ZdLHtzdHlsZTp7c3Ryb2tlOmFbZiVhLmxlbmd0aF0sbGluZURhc2g6bi5nZXRMaW5lRGFzaChvKSxsaW5lV2lkdGg6b30sc2lsZW50OiEwfSkpfX19KSxGTT1UdS5leHRlbmQoe3R5cGU6InNpbmdsZUF4aXMiLGxheW91dE1vZGU6ImJveCIsYXhpczpudWxsLGNvb3JkaW5hdGVTeXN0ZW06bnVsbCxnZXRDb29yZFN5c01vZGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSk7bShGTS5wcm90b3R5cGUsc2cpLE9tKCJzaW5nbGUiLEZNLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUudHlwZXx8KGUuZGF0YT8iY2F0ZWdvcnkiOiJ2YWx1ZSIpfSx7bGVmdDoiNSUiLHRvcDoiNSUiLHJpZ2h0OiI1JSIsYm90dG9tOiI1JSIsdHlwZToidmFsdWUiLHBvc2l0aW9uOiJib3R0b20iLG9yaWVudDoiaG9yaXpvbnRhbCIsYXhpc0xpbmU6e3Nob3c6ITAsbGluZVN0eWxlOnt3aWR0aDoxLHR5cGU6InNvbGlkIn19LHRvb2x0aXA6e3Nob3c6ITB9LGF4aXNUaWNrOntzaG93OiEwLGxlbmd0aDo2LGxpbmVTdHlsZTp7d2lkdGg6MX19LGF4aXNMYWJlbDp7c2hvdzohMCxpbnRlcnZhbDoiYXV0byJ9LHNwbGl0TGluZTp7c2hvdzohMCxsaW5lU3R5bGU6e3R5cGU6ImRhc2hlZCIsb3BhY2l0eTouMn19fSk7ZnVuY3Rpb24gV00odCxlKXt2YXIgaSxuPVtdLG89dC5zZXJpZXNJbmRleDtpZihudWxsPT1vfHwhKGk9ZS5nZXRTZXJpZXNCeUluZGV4KG8pKSlyZXR1cm57cG9pbnQ6W119O3ZhciBhPWkuZ2V0RGF0YSgpLHI9SG8oYSx0KTtpZihudWxsPT1yfHxyPDB8fGsocikpcmV0dXJue3BvaW50OltdfTt2YXIgcz1hLmdldEl0ZW1HcmFwaGljRWwociksbD1pLmNvb3JkaW5hdGVTeXN0ZW07aWYoaS5nZXRUb29sdGlwUG9zaXRpb24pbj1pLmdldFRvb2x0aXBQb3NpdGlvbihyKXx8W107ZWxzZSBpZihsJiZsLmRhdGFUb1BvaW50KW49bC5kYXRhVG9Qb2ludChhLmdldFZhbHVlcyhOKGwuZGltZW5zaW9ucyxmdW5jdGlvbih0KXtyZXR1cm4gYS5tYXBEaW1lbnNpb24odCl9KSxyLCEwKSl8fFtdO2Vsc2UgaWYocyl7dmFyIHU9cy5nZXRCb3VuZGluZ1JlY3QoKS5jbG9uZSgpO3UuYXBwbHlUcmFuc2Zvcm0ocy50cmFuc2Zvcm0pLG49W3UueCt1LndpZHRoLzIsdS55K3UuaGVpZ2h0LzJdfXJldHVybntwb2ludDpuLGVsOnN9fXZhciBITT1FLFpNPVQsVU09Wm8oKTtmdW5jdGlvbiBYTSh0LGUsaSxuLG8pe3ZhciBhPXQuYXhpcztpZighYS5zY2FsZS5pc0JsYW5rKCkmJmEuY29udGFpbkRhdGEoZSkpaWYodC5pbnZvbHZlU2VyaWVzKXt2YXIgcj1mdW5jdGlvbihsLHQpe3ZhciB1PXQuYXhpcyxoPXUuZGltLGM9bCxkPVtdLGY9TnVtYmVyLk1BWF9WQUxVRSxwPS0xO3JldHVybiBITSh0LnNlcmllc01vZGVscyxmdW5jdGlvbihlLHQpe3ZhciBpLG4sbz1lLmdldERhdGEoKS5tYXBEaW1lbnNpb24oaCwhMCk7aWYoZS5nZXRBeGlzVG9vbHRpcERhdGEpe3ZhciBhPWUuZ2V0QXhpc1Rvb2x0aXBEYXRhKG8sbCx1KTtuPWEuZGF0YUluZGljZXMsaT1hLm5lc3Rlc3RWYWx1ZX1lbHNle2lmKCEobj1lLmdldERhdGEoKS5pbmRpY2VzT2ZOZWFyZXN0KG9bMF0sbCwiY2F0ZWdvcnkiPT09dS50eXBlPy41Om51bGwpKS5sZW5ndGgpcmV0dXJuO2k9ZS5nZXREYXRhKCkuZ2V0KG9bMF0sblswXSl9aWYobnVsbCE9aSYmaXNGaW5pdGUoaSkpe3ZhciByPWwtaSxzPU1hdGguYWJzKHIpO3M8PWYmJigoczxmfHwwPD1yJiZwPDApJiYoZj1zLHA9cixjPWksZC5sZW5ndGg9MCksSE0obixmdW5jdGlvbih0KXtkLnB1c2goe3Nlcmllc0luZGV4OmUuc2VyaWVzSW5kZXgsZGF0YUluZGV4SW5zaWRlOnQsZGF0YUluZGV4OmUuZ2V0RGF0YSgpLmdldFJhd0luZGV4KHQpfSl9KSl9fSkse3BheWxvYWRCYXRjaDpkLHNuYXBUb1ZhbHVlOmN9fShlLHQpLHM9ci5wYXlsb2FkQmF0Y2gsbD1yLnNuYXBUb1ZhbHVlO3NbMF0mJm51bGw9PW8uc2VyaWVzSW5kZXgmJkwobyxzWzBdKSwhbiYmdC5zbmFwJiZhLmNvbnRhaW5EYXRhKGwpJiZudWxsIT1sJiYoZT1sKSxpLnNob3dQb2ludGVyKHQsZSxzLG8pLGkuc2hvd1Rvb2x0aXAodCxyLGwpfWVsc2UgaS5zaG93UG9pbnRlcih0LGUpfWZ1bmN0aW9uIFlNKHQsZSxpLG4pe3RbZS5rZXldPXt2YWx1ZTppLHBheWxvYWRCYXRjaDpufX1mdW5jdGlvbiBqTSh0LGUsaSxuKXt2YXIgbz1pLnBheWxvYWRCYXRjaCxhPWUuYXhpcyxyPWEubW9kZWwscz1lLmF4aXNQb2ludGVyTW9kZWw7aWYoZS50cmlnZ2VyVG9vbHRpcCYmby5sZW5ndGgpe3ZhciBsPWUuY29vcmRTeXMubW9kZWwsdT11dihsKSxoPXQubWFwW3VdO2h8fChoPXQubWFwW3VdPXtjb29yZFN5c0lkOmwuaWQsY29vcmRTeXNJbmRleDpsLmNvbXBvbmVudEluZGV4LGNvb3JkU3lzVHlwZTpsLnR5cGUsY29vcmRTeXNNYWluVHlwZTpsLm1haW5UeXBlLGRhdGFCeUF4aXM6W119LHQubGlzdC5wdXNoKGgpKSxoLmRhdGFCeUF4aXMucHVzaCh7YXhpc0RpbTphLmRpbSxheGlzSW5kZXg6ci5jb21wb25lbnRJbmRleCxheGlzVHlwZTpyLnR5cGUsYXhpc0lkOnIuaWQsdmFsdWU6bix2YWx1ZUxhYmVsT3B0OntwcmVjaXNpb246cy5nZXQoImxhYmVsLnByZWNpc2lvbiIpLGZvcm1hdHRlcjpzLmdldCgibGFiZWwuZm9ybWF0dGVyIil9LHNlcmllc0RhdGFJbmRpY2VzOm8uc2xpY2UoKX0pfX1mdW5jdGlvbiBxTSh0KXt2YXIgZT10LmF4aXMubW9kZWwsaT17fSxuPWkuYXhpc0RpbT10LmF4aXMuZGltO3JldHVybiBpLmF4aXNJbmRleD1pW24rIkF4aXNJbmRleCJdPWUuY29tcG9uZW50SW5kZXgsaS5heGlzTmFtZT1pW24rIkF4aXNOYW1lIl09ZS5uYW1lLGkuYXhpc0lkPWlbbisiQXhpc0lkIl09ZS5pZCxpfWZ1bmN0aW9uIEtNKHQpe3JldHVybiF0fHxudWxsPT10WzBdfHxpc05hTih0WzBdKXx8bnVsbD09dFsxXXx8aXNOYU4odFsxXSl9d2Yoe3R5cGU6ImF4aXNQb2ludGVyIixjb29yZFN5c0F4ZXNJbmZvOm51bGwsZGVmYXVsdE9wdGlvbjp7c2hvdzoiYXV0byIsdHJpZ2dlck9uOm51bGwsemxldmVsOjAsejo1MCx0eXBlOiJsaW5lIixzbmFwOiExLHRyaWdnZXJUb29sdGlwOiEwLHZhbHVlOm51bGwsc3RhdHVzOm51bGwsbGluazpbXSxhbmltYXRpb246bnVsbCxhbmltYXRpb25EdXJhdGlvblVwZGF0ZToyMDAsbGluZVN0eWxlOntjb2xvcjoiI2FhYSIsd2lkdGg6MSx0eXBlOiJzb2xpZCJ9LHNoYWRvd1N0eWxlOntjb2xvcjoicmdiYSgxNTAsMTUwLDE1MCwwLjMpIn0sbGFiZWw6e3Nob3c6ITAsZm9ybWF0dGVyOm51bGwscHJlY2lzaW9uOiJhdXRvIixtYXJnaW46Myxjb2xvcjoiI2ZmZiIscGFkZGluZzpbNSw3LDUsN10sYmFja2dyb3VuZENvbG9yOiJhdXRvIixib3JkZXJDb2xvcjpudWxsLGJvcmRlcldpZHRoOjAsc2hhZG93Qmx1cjozLHNoYWRvd0NvbG9yOiIjYWFhIn0saGFuZGxlOntzaG93OiExLGljb246Ik0xMC43LDExLjl2LTEuM0g5LjN2MS4zYy00LjksMC4zLTguOCw0LjQtOC44LDkuNGMwLDUsMy45LDkuMSw4LjgsOS40aDEuM2M0LjktMC4zLDguOC00LjQsOC44LTkuNEMxOS41LDE2LjMsMTUuNiwxMi4yLDEwLjcsMTEuOXogTTEzLjMsMjQuNEg2Ljd2LTEuMmg2LjZ6IE0xMy4zLDIySDYuN3YtMS4yaDYuNnogTTEzLjMsMTkuNkg2Ljd2LTEuMmg2LjZ6IixzaXplOjQ1LG1hcmdpbjo1MCxjb2xvcjoiIzMzMyIsc2hhZG93Qmx1cjozLHNoYWRvd0NvbG9yOiIjYWFhIixzaGFkb3dPZmZzZXRYOjAsc2hhZG93T2Zmc2V0WToyLHRocm90dGxlOjQwfX19KTt2YXIgJE09Wm8oKSxKTT1FO2Z1bmN0aW9uIFFNKHQsZSxpKXtpZighdi5ub2RlKXt2YXIgbj1lLmdldFpyKCk7JE0obikucmVjb3Jkc3x8KCRNKG4pLnJlY29yZHM9e30pLGZ1bmN0aW9uKG8sYSl7aWYoJE0obykuaW5pdGlhbGl6ZWQpcmV0dXJuO2Z1bmN0aW9uIHQodCxuKXtvLm9uKHQsZnVuY3Rpb24oZSl7dmFyIGk9ZnVuY3Rpb24oaSl7dmFyIG49e3Nob3dUaXA6W10saGlkZVRpcDpbXX0sbz1mdW5jdGlvbih0KXt2YXIgZT1uW3QudHlwZV07ZT9lLnB1c2godCk6KHQuZGlzcGF0Y2hBY3Rpb249byxpLmRpc3BhdGNoQWN0aW9uKHQpKX07cmV0dXJue2Rpc3BhdGNoQWN0aW9uOm8scGVuZGluZ3M6bn19KGEpO0pNKCRNKG8pLnJlY29yZHMsZnVuY3Rpb24odCl7dCYmbih0LGUsaS5kaXNwYXRjaEFjdGlvbil9KSxmdW5jdGlvbih0LGUpe3ZhciBpLG49dC5zaG93VGlwLmxlbmd0aCxvPXQuaGlkZVRpcC5sZW5ndGg7bj9pPXQuc2hvd1RpcFtuLTFdOm8mJihpPXQuaGlkZVRpcFtvLTFdKTtpJiYoaS5kaXNwYXRjaEFjdGlvbj1udWxsLGUuZGlzcGF0Y2hBY3Rpb24oaSkpfShpLnBlbmRpbmdzLGEpfSl9JE0obykuaW5pdGlhbGl6ZWQ9ITAsdCgiY2xpY2siLFQoZUksImNsaWNrIikpLHQoIm1vdXNlbW92ZSIsVChlSSwibW91c2Vtb3ZlIikpLHQoImdsb2JhbG91dCIsdEkpfShuLGUpLCgkTShuKS5yZWNvcmRzW3RdfHwoJE0obikucmVjb3Jkc1t0XT17fSkpLmhhbmRsZXI9aX19ZnVuY3Rpb24gdEkodCxlLGkpe3QuaGFuZGxlcigibGVhdmUiLG51bGwsaSl9ZnVuY3Rpb24gZUkodCxlLGksbil7ZS5oYW5kbGVyKHQsaSxuKX1mdW5jdGlvbiBpSSh0LGUpe2lmKCF2Lm5vZGUpe3ZhciBpPWUuZ2V0WnIoKTsoJE0oaSkucmVjb3Jkc3x8e30pW3RdJiYoJE0oaSkucmVjb3Jkc1t0XT1udWxsKX19dmFyIG5JPWJmKHt0eXBlOiJheGlzUG9pbnRlciIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lLmdldENvbXBvbmVudCgidG9vbHRpcCIpLG89dC5nZXQoInRyaWdnZXJPbiIpfHxuJiZuLmdldCgidHJpZ2dlck9uIil8fCJtb3VzZW1vdmV8Y2xpY2siO1FNKCJheGlzUG9pbnRlciIsaSxmdW5jdGlvbih0LGUsaSl7Im5vbmUiIT09byYmKCJsZWF2ZSI9PT10fHwwPD1vLmluZGV4T2YodCkpJiZpKHt0eXBlOiJ1cGRhdGVBeGlzUG9pbnRlciIsY3VyclRyaWdnZXI6dCx4OmUmJmUub2Zmc2V0WCx5OmUmJmUub2Zmc2V0WX0pfSl9LHJlbW92ZTpmdW5jdGlvbih0LGUpe2lJKGUuZ2V0WnIoKSwiYXhpc1BvaW50ZXIiKSxuSS5zdXBlckFwcGx5KHRoaXMuX21vZGVsLCJyZW1vdmUiLGFyZ3VtZW50cyl9LGRpc3Bvc2U6ZnVuY3Rpb24odCxlKXtpSSgiYXhpc1BvaW50ZXIiLGUpLG5JLnN1cGVyQXBwbHkodGhpcy5fbW9kZWwsImRpc3Bvc2UiLGFyZ3VtZW50cyl9fSksb0k9Wm8oKSxhST1ELHJJPUE7ZnVuY3Rpb24gc0koKXt9ZnVuY3Rpb24gbEkodCxlLGksbil7IWZ1bmN0aW9uIGkobix0KXt7aWYoUihuKSYmUih0KSl7dmFyIG89ITA7cmV0dXJuIEUodCxmdW5jdGlvbih0LGUpe289byYmaShuW2VdLHQpfSksISFvfXJldHVybiBuPT09dH19KG9JKGkpLmxhc3RQcm9wLG4pJiYob0koaSkubGFzdFByb3A9bixlP3NsKGksbix0KTooaS5zdG9wQW5pbWF0aW9uKCksaS5hdHRyKG4pKSl9ZnVuY3Rpb24gdUkodCxlKXt0W2UuZ2V0KCJsYWJlbC5zaG93Iik/InNob3ciOiJoaWRlIl0oKX1mdW5jdGlvbiBoSSh0KXtyZXR1cm57cG9zaXRpb246dC5wb3NpdGlvbi5zbGljZSgpLHJvdGF0aW9uOnQucm90YXRpb258fDB9fWZ1bmN0aW9uIGNJKHQsZSxpKXt2YXIgbj1lLmdldCgieiIpLG89ZS5nZXQoInpsZXZlbCIpO3QmJnQudHJhdmVyc2UoZnVuY3Rpb24odCl7Imdyb3VwIiE9PXQudHlwZSYmKG51bGwhPW4mJih0Lno9biksbnVsbCE9byYmKHQuemxldmVsPW8pLHQuc2lsZW50PWkpfSl9ZnVuY3Rpb24gZEkodCl7dmFyIGUsaT10LmdldCgidHlwZSIpLG49dC5nZXRNb2RlbChpKyJTdHlsZSIpO3JldHVybiJsaW5lIj09PWk/KGU9bi5nZXRMaW5lU3R5bGUoKSkuZmlsbD1udWxsOiJzaGFkb3ciPT09aSYmKChlPW4uZ2V0QXJlYVN0eWxlKCkpLnN0cm9rZT1udWxsKSxlfWZ1bmN0aW9uIGZJKHQsZSxpLG4sbyl7dmFyIGE9cEkoaS5nZXQoInZhbHVlIiksZS5heGlzLGUuZWNNb2RlbCxpLmdldCgic2VyaWVzRGF0YUluZGljZXMiKSx7cHJlY2lzaW9uOmkuZ2V0KCJsYWJlbC5wcmVjaXNpb24iKSxmb3JtYXR0ZXI6aS5nZXQoImxhYmVsLmZvcm1hdHRlciIpfSkscj1pLmdldE1vZGVsKCJsYWJlbCIpLHM9Smwoci5nZXQoInBhZGRpbmciKXx8MCksbD1yLmdldEZvbnQoKSx1PWNuKGEsbCksaD1vLnBvc2l0aW9uLGM9dS53aWR0aCtzWzFdK3NbM10sZD11LmhlaWdodCtzWzBdK3NbMl0sZj1vLmFsaWduOyJyaWdodCI9PT1mJiYoaFswXS09YyksImNlbnRlciI9PT1mJiYoaFswXS09Yy8yKTt2YXIgcD1vLnZlcnRpY2FsQWxpZ247ImJvdHRvbSI9PT1wJiYoaFsxXS09ZCksIm1pZGRsZSI9PT1wJiYoaFsxXS09ZC8yKSxmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1uLmdldFdpZHRoKCksYT1uLmdldEhlaWdodCgpO3RbMF09TWF0aC5taW4odFswXStlLG8pLWUsdFsxXT1NYXRoLm1pbih0WzFdK2ksYSktaSx0WzBdPU1hdGgubWF4KHRbMF0sMCksdFsxXT1NYXRoLm1heCh0WzFdLDApfShoLGMsZCxuKTt2YXIgZz1yLmdldCgiYmFja2dyb3VuZENvbG9yIik7ZyYmImF1dG8iIT09Z3x8KGc9ZS5nZXQoImF4aXNMaW5lLmxpbmVTdHlsZS5jb2xvciIpKSx0LmxhYmVsPXtzaGFwZTp7eDowLHk6MCx3aWR0aDpjLGhlaWdodDpkLHI6ci5nZXQoImJvcmRlclJhZGl1cyIpfSxwb3NpdGlvbjpoLnNsaWNlKCksc3R5bGU6e3RleHQ6YSx0ZXh0Rm9udDpsLHRleHRGaWxsOnIuZ2V0VGV4dENvbG9yKCksdGV4dFBvc2l0aW9uOiJpbnNpZGUiLHRleHRQYWRkaW5nOnMsZmlsbDpnLHN0cm9rZTpyLmdldCgiYm9yZGVyQ29sb3IiKXx8InRyYW5zcGFyZW50IixsaW5lV2lkdGg6ci5nZXQoImJvcmRlcldpZHRoIil8fDAsc2hhZG93Qmx1cjpyLmdldCgic2hhZG93Qmx1ciIpLHNoYWRvd0NvbG9yOnIuZ2V0KCJzaGFkb3dDb2xvciIpLHNoYWRvd09mZnNldFg6ci5nZXQoInNoYWRvd09mZnNldFgiKSxzaGFkb3dPZmZzZXRZOnIuZ2V0KCJzaGFkb3dPZmZzZXRZIil9LHoyOjEwfX1mdW5jdGlvbiBwSSh0LGUsbyxpLG4pe3Q9ZS5zY2FsZS5wYXJzZSh0KTt2YXIgYT1lLnNjYWxlLmdldExhYmVsKHQse3ByZWNpc2lvbjpuLnByZWNpc2lvbn0pLHI9bi5mb3JtYXR0ZXI7aWYocil7dmFyIHM9e3ZhbHVlOm9nKGUsdCksYXhpc0RpbWVuc2lvbjplLmRpbSxheGlzSW5kZXg6ZS5pbmRleCxzZXJpZXNEYXRhOltdfTtFKGksZnVuY3Rpb24odCl7dmFyIGU9by5nZXRTZXJpZXNCeUluZGV4KHQuc2VyaWVzSW5kZXgpLGk9dC5kYXRhSW5kZXhJbnNpZGUsbj1lJiZlLmdldERhdGFQYXJhbXMoaSk7biYmcy5zZXJpZXNEYXRhLnB1c2gobil9KSx6KHIpP2E9ci5yZXBsYWNlKCJ7dmFsdWV9IixhKTpPKHIpJiYoYT1yKHMpKX1yZXR1cm4gYX1mdW5jdGlvbiBnSSh0LGUsaSl7dmFyIG49ZWUoKTtyZXR1cm4gcmUobixuLGkucm90YXRpb24pLGFlKG4sbixpLnBvc2l0aW9uKSxobChbdC5kYXRhVG9Db29yZChlKSwoaS5sYWJlbE9mZnNldHx8MCkrKGkubGFiZWxEaXJlY3Rpb258fDEpKihpLmxhYmVsTWFyZ2lufHwwKV0sbil9ZnVuY3Rpb24gbUkodCxlLGksbixvLGEpe3ZhciByPVltLmlubmVyVGV4dExheW91dChpLnJvdGF0aW9uLDAsaS5sYWJlbERpcmVjdGlvbik7aS5sYWJlbE1hcmdpbj1vLmdldCgibGFiZWwubWFyZ2luIiksZkkoZSxuLG8sYSx7cG9zaXRpb246Z0kobi5heGlzLHQsaSksYWxpZ246ci50ZXh0QWxpZ24sdmVydGljYWxBbGlnbjpyLnRleHRWZXJ0aWNhbEFsaWdufSl9ZnVuY3Rpb24gdkkodCxlLGkpe3JldHVybnt4MTp0W2k9aXx8MF0seTE6dFsxLWldLHgyOmVbaV0seTI6ZVsxLWldfX1mdW5jdGlvbiB5SSh0LGUsaSl7cmV0dXJue3g6dFtpPWl8fDBdLHk6dFsxLWldLHdpZHRoOmVbaV0saGVpZ2h0OmVbMS1pXX19ZnVuY3Rpb24geEkodCxlLGksbixvLGEpe3JldHVybntjeDp0LGN5OmUscjA6aSxyOm4sc3RhcnRBbmdsZTpvLGVuZEFuZ2xlOmEsY2xvY2t3aXNlOiEwfX10YSgoc0kucHJvdG90eXBlPXtfZ3JvdXA6bnVsbCxfbGFzdEdyYXBoaWNLZXk6bnVsbCxfaGFuZGxlOm51bGwsX2RyYWdnaW5nOiExLF9sYXN0VmFsdWU6bnVsbCxfbGFzdFN0YXR1czpudWxsLF9wYXlsb2FkSW5mbzpudWxsLGFuaW1hdGlvblRocmVzaG9sZDoxNSxyZW5kZXI6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89ZS5nZXQoInZhbHVlIiksYT1lLmdldCgic3RhdHVzIik7aWYodGhpcy5fYXhpc01vZGVsPXQsdGhpcy5fYXhpc1BvaW50ZXJNb2RlbD1lLHRoaXMuX2FwaT1pLG58fHRoaXMuX2xhc3RWYWx1ZSE9PW98fHRoaXMuX2xhc3RTdGF0dXMhPT1hKXt0aGlzLl9sYXN0VmFsdWU9byx0aGlzLl9sYXN0U3RhdHVzPWE7dmFyIHI9dGhpcy5fZ3JvdXAscz10aGlzLl9oYW5kbGU7aWYoIWF8fCJoaWRlIj09PWEpcmV0dXJuIHImJnIuaGlkZSgpLHZvaWQocyYmcy5oaWRlKCkpO3ImJnIuc2hvdygpLHMmJnMuc2hvdygpO3ZhciBsPXt9O3RoaXMubWFrZUVsT3B0aW9uKGwsbyx0LGUsaSk7dmFyIHU9bC5ncmFwaGljS2V5O3UhPT10aGlzLl9sYXN0R3JhcGhpY0tleSYmdGhpcy5jbGVhcihpKSx0aGlzLl9sYXN0R3JhcGhpY0tleT11O3ZhciBoPXRoaXMuX21vdmVBbmltYXRpb249dGhpcy5kZXRlcm1pbmVBbmltYXRpb24odCxlKTtpZihyKXt2YXIgYz1UKGxJLGUsaCk7dGhpcy51cGRhdGVQb2ludGVyRWwocixsLGMsZSksdGhpcy51cGRhdGVMYWJlbEVsKHIsbCxjLGUpfWVsc2Ugcj10aGlzLl9ncm91cD1uZXcgSWksdGhpcy5jcmVhdGVQb2ludGVyRWwocixsLHQsZSksdGhpcy5jcmVhdGVMYWJlbEVsKHIsbCx0LGUpLGkuZ2V0WnIoKS5hZGQocik7Y0kocixlLCEwKSx0aGlzLl9yZW5kZXJIYW5kbGUobyl9fSxyZW1vdmU6ZnVuY3Rpb24odCl7dGhpcy5jbGVhcih0KX0sZGlzcG9zZTpmdW5jdGlvbih0KXt0aGlzLmNsZWFyKHQpfSxkZXRlcm1pbmVBbmltYXRpb246ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmdldCgiYW5pbWF0aW9uIiksbj10LmF4aXMsbz0iY2F0ZWdvcnkiPT09bi50eXBlLGE9ZS5nZXQoInNuYXAiKTtpZighYSYmIW8pcmV0dXJuITE7aWYoImF1dG8iIT09aSYmbnVsbCE9aSlyZXR1cm4hMD09PWk7dmFyIHI9dGhpcy5hbmltYXRpb25UaHJlc2hvbGQ7aWYobyYmbi5nZXRCYW5kV2lkdGgoKT5yKXJldHVybiEwO2lmKGEpe3ZhciBzPXN2KHQpLnNlcmllc0RhdGFDb3VudCxsPW4uZ2V0RXh0ZW50KCk7cmV0dXJuIE1hdGguYWJzKGxbMF0tbFsxXSkvcz5yfXJldHVybiExfSxtYWtlRWxPcHRpb246ZnVuY3Rpb24odCxlLGksbixvKXt9LGNyZWF0ZVBvaW50ZXJFbDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1lLnBvaW50ZXI7aWYobyl7dmFyIGE9b0kodCkucG9pbnRlckVsPW5ldyB5bFtvLnR5cGVdKGFJKGUucG9pbnRlcikpO3QuYWRkKGEpfX0sY3JlYXRlTGFiZWxFbDpmdW5jdGlvbih0LGUsaSxuKXtpZihlLmxhYmVsKXt2YXIgbz1vSSh0KS5sYWJlbEVsPW5ldyBpcyhhSShlLmxhYmVsKSk7dC5hZGQobyksdUkobyxuKX19LHVwZGF0ZVBvaW50ZXJFbDpmdW5jdGlvbih0LGUsaSl7dmFyIG49b0kodCkucG9pbnRlckVsO24mJmUucG9pbnRlciYmKG4uc2V0U3R5bGUoZS5wb2ludGVyLnN0eWxlKSxpKG4se3NoYXBlOmUucG9pbnRlci5zaGFwZX0pKX0sdXBkYXRlTGFiZWxFbDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1vSSh0KS5sYWJlbEVsO28mJihvLnNldFN0eWxlKGUubGFiZWwuc3R5bGUpLGkobyx7c2hhcGU6ZS5sYWJlbC5zaGFwZSxwb3NpdGlvbjplLmxhYmVsLnBvc2l0aW9ufSksdUkobyxuKSl9LF9yZW5kZXJIYW5kbGU6ZnVuY3Rpb24odCl7aWYoIXRoaXMuX2RyYWdnaW5nJiZ0aGlzLnVwZGF0ZUhhbmRsZVRyYW5zZm9ybSl7dmFyIGUsaT10aGlzLl9heGlzUG9pbnRlck1vZGVsLG49dGhpcy5fYXBpLmdldFpyKCksbz10aGlzLl9oYW5kbGUsYT1pLmdldE1vZGVsKCJoYW5kbGUiKSxyPWkuZ2V0KCJzdGF0dXMiKTtpZighYS5nZXQoInNob3ciKXx8IXJ8fCJoaWRlIj09PXIpcmV0dXJuIG8mJm4ucmVtb3ZlKG8pLHZvaWQodGhpcy5faGFuZGxlPW51bGwpO3RoaXMuX2hhbmRsZXx8KGU9ITAsbz10aGlzLl9oYW5kbGU9cGwoYS5nZXQoImljb24iKSx7Y3Vyc29yOiJtb3ZlIixkcmFnZ2FibGU6ITAsb25tb3VzZW1vdmU6ZnVuY3Rpb24odCl7V3QodC5ldmVudCl9LG9ubW91c2Vkb3duOnJJKHRoaXMuX29uSGFuZGxlRHJhZ01vdmUsdGhpcywwLDApLGRyaWZ0OnJJKHRoaXMuX29uSGFuZGxlRHJhZ01vdmUsdGhpcyksb25kcmFnZW5kOnJJKHRoaXMuX29uSGFuZGxlRHJhZ0VuZCx0aGlzKX0pLG4uYWRkKG8pKSxjSShvLGksITEpO28uc2V0U3R5bGUoYS5nZXRJdGVtU3R5bGUobnVsbCxbImNvbG9yIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCIsIm9wYWNpdHkiLCJzaGFkb3dDb2xvciIsInNoYWRvd0JsdXIiLCJzaGFkb3dPZmZzZXRYIiwic2hhZG93T2Zmc2V0WSJdKSk7dmFyIHM9YS5nZXQoInNpemUiKTtrKHMpfHwocz1bcyxzXSksby5hdHRyKCJzY2FsZSIsW3NbMF0vMixzWzFdLzJdKSxUYyh0aGlzLCJfZG9EaXNwYXRjaEF4aXNQb2ludGVyIixhLmdldCgidGhyb3R0bGUiKXx8MCwiZml4UmF0ZSIpLHRoaXMuX21vdmVIYW5kbGVUb1ZhbHVlKHQsZSl9fSxfbW92ZUhhbmRsZVRvVmFsdWU6ZnVuY3Rpb24odCxlKXtsSSh0aGlzLl9heGlzUG9pbnRlck1vZGVsLCFlJiZ0aGlzLl9tb3ZlQW5pbWF0aW9uLHRoaXMuX2hhbmRsZSxoSSh0aGlzLmdldEhhbmRsZVRyYW5zZm9ybSh0LHRoaXMuX2F4aXNNb2RlbCx0aGlzLl9heGlzUG9pbnRlck1vZGVsKSkpfSxfb25IYW5kbGVEcmFnTW92ZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2hhbmRsZTtpZihpKXt0aGlzLl9kcmFnZ2luZz0hMDt2YXIgbj10aGlzLnVwZGF0ZUhhbmRsZVRyYW5zZm9ybShoSShpKSxbdCxlXSx0aGlzLl9heGlzTW9kZWwsdGhpcy5fYXhpc1BvaW50ZXJNb2RlbCk7dGhpcy5fcGF5bG9hZEluZm89bixpLnN0b3BBbmltYXRpb24oKSxpLmF0dHIoaEkobikpLG9JKGkpLmxhc3RQcm9wPW51bGwsdGhpcy5fZG9EaXNwYXRjaEF4aXNQb2ludGVyKCl9fSxfZG9EaXNwYXRjaEF4aXNQb2ludGVyOmZ1bmN0aW9uKCl7aWYodGhpcy5faGFuZGxlKXt2YXIgdD10aGlzLl9wYXlsb2FkSW5mbyxlPXRoaXMuX2F4aXNNb2RlbDt0aGlzLl9hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InVwZGF0ZUF4aXNQb2ludGVyIix4OnQuY3Vyc29yUG9pbnRbMF0seTp0LmN1cnNvclBvaW50WzFdLHRvb2x0aXBPcHRpb246dC50b29sdGlwT3B0aW9uLGF4ZXNJbmZvOlt7YXhpc0RpbTplLmF4aXMuZGltLGF4aXNJbmRleDplLmNvbXBvbmVudEluZGV4fV19KX19LF9vbkhhbmRsZURyYWdFbmQ6ZnVuY3Rpb24odCl7aWYodGhpcy5fZHJhZ2dpbmc9ITEsdGhpcy5faGFuZGxlKXt2YXIgZT10aGlzLl9heGlzUG9pbnRlck1vZGVsLmdldCgidmFsdWUiKTt0aGlzLl9tb3ZlSGFuZGxlVG9WYWx1ZShlKSx0aGlzLl9hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImhpZGVUaXAifSl9fSxnZXRIYW5kbGVUcmFuc2Zvcm06bnVsbCx1cGRhdGVIYW5kbGVUcmFuc2Zvcm06bnVsbCxjbGVhcjpmdW5jdGlvbih0KXt0aGlzLl9sYXN0VmFsdWU9bnVsbCx0aGlzLl9sYXN0U3RhdHVzPW51bGw7dmFyIGU9dC5nZXRacigpLGk9dGhpcy5fZ3JvdXAsbj10aGlzLl9oYW5kbGU7ZSYmaSYmKHRoaXMuX2xhc3RHcmFwaGljS2V5PW51bGwsaSYmZS5yZW1vdmUoaSksbiYmZS5yZW1vdmUobiksdGhpcy5fZ3JvdXA9bnVsbCx0aGlzLl9oYW5kbGU9bnVsbCx0aGlzLl9wYXlsb2FkSW5mbz1udWxsKX0sZG9DbGVhcjpmdW5jdGlvbigpe30sYnVpbGRMYWJlbDpmdW5jdGlvbih0LGUsaSl7cmV0dXJue3g6dFtpPWl8fDBdLHk6dFsxLWldLHdpZHRoOmVbaV0saGVpZ2h0OmVbMS1pXX19fSkuY29uc3RydWN0b3I9c0kpO3ZhciBfST1zSS5leHRlbmQoe21ha2VFbE9wdGlvbjpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPWkuYXhpcyxyPWEuZ3JpZCxzPW4uZ2V0KCJ0eXBlIiksbD13SShyLGEpLmdldE90aGVyQXhpcyhhKS5nZXRHbG9iYWxFeHRlbnQoKSx1PWEudG9HbG9iYWxDb29yZChhLmRhdGFUb0Nvb3JkKGUsITApKTtpZihzJiYibm9uZSIhPT1zKXt2YXIgaD1kSShuKSxjPWJJW3NdKGEsdSxsKTtjLnN0eWxlPWgsdC5ncmFwaGljS2V5PWMudHlwZSx0LnBvaW50ZXI9Y31tSShlLHQscHYoci5tb2RlbCxpKSxpLG4sbyl9LGdldEhhbmRsZVRyYW5zZm9ybTpmdW5jdGlvbih0LGUsaSl7dmFyIG49cHYoZS5heGlzLmdyaWQubW9kZWwsZSx7bGFiZWxJbnNpZGU6ITF9KTtyZXR1cm4gbi5sYWJlbE1hcmdpbj1pLmdldCgiaGFuZGxlLm1hcmdpbiIpLHtwb3NpdGlvbjpnSShlLmF4aXMsdCxuKSxyb3RhdGlvbjpuLnJvdGF0aW9uKyhuLmxhYmVsRGlyZWN0aW9uPDA/TWF0aC5QSTowKX19LHVwZGF0ZUhhbmRsZVRyYW5zZm9ybTpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1pLmF4aXMsYT1vLmdyaWQscj1vLmdldEdsb2JhbEV4dGVudCghMCkscz13SShhLG8pLmdldE90aGVyQXhpcyhvKS5nZXRHbG9iYWxFeHRlbnQoKSxsPSJ4Ij09PW8uZGltPzA6MSx1PXQucG9zaXRpb247dVtsXSs9ZVtsXSx1W2xdPU1hdGgubWluKHJbMV0sdVtsXSksdVtsXT1NYXRoLm1heChyWzBdLHVbbF0pO3ZhciBoPShzWzFdK3NbMF0pLzIsYz1baCxoXTtjW2xdPXVbbF07cmV0dXJue3Bvc2l0aW9uOnUscm90YXRpb246dC5yb3RhdGlvbixjdXJzb3JQb2ludDpjLHRvb2x0aXBPcHRpb246W3t2ZXJ0aWNhbEFsaWduOiJtaWRkbGUifSx7YWxpZ246ImNlbnRlciJ9XVtsXX19fSk7ZnVuY3Rpb24gd0kodCxlKXt2YXIgaT17fTtyZXR1cm4gaVtlLmRpbSsiQXhpc0luZGV4Il09ZS5pbmRleCx0LmdldENhcnRlc2lhbihpKX12YXIgYkk9e2xpbmU6ZnVuY3Rpb24odCxlLGkpe3JldHVybnt0eXBlOiJMaW5lIixzdWJQaXhlbE9wdGltaXplOiEwLHNoYXBlOnZJKFtlLGlbMF1dLFtlLGlbMV1dLFNJKHQpKX19LHNoYWRvdzpmdW5jdGlvbih0LGUsaSl7dmFyIG49TWF0aC5tYXgoMSx0LmdldEJhbmRXaWR0aCgpKSxvPWlbMV0taVswXTtyZXR1cm57dHlwZToiUmVjdCIsc2hhcGU6eUkoW2Utbi8yLGlbMF1dLFtuLG9dLFNJKHQpKX19fTtmdW5jdGlvbiBTSSh0KXtyZXR1cm4ieCI9PT10LmRpbT8wOjF9aHYucmVnaXN0ZXJBeGlzUG9pbnRlckNsYXNzKCJDYXJ0ZXNpYW5BeGlzUG9pbnRlciIsX0kpLGZmKGZ1bmN0aW9uKHQpe2lmKHQpe3QuYXhpc1BvaW50ZXImJjAhPT10LmF4aXNQb2ludGVyLmxlbmd0aHx8KHQuYXhpc1BvaW50ZXI9e30pO3ZhciBlPXQuYXhpc1BvaW50ZXIubGluaztlJiYhayhlKSYmKHQuYXhpc1BvaW50ZXIubGluaz1bZV0pfX0pLHBmKElkLlBST0NFU1NPUi5TVEFUSVNUSUMsZnVuY3Rpb24odCxlKXt0LmdldENvbXBvbmVudCgiYXhpc1BvaW50ZXIiKS5jb29yZFN5c0F4ZXNJbmZvPWF2KHQsZSl9KSxnZih7dHlwZToidXBkYXRlQXhpc1BvaW50ZXIiLGV2ZW50OiJ1cGRhdGVBeGlzUG9pbnRlciIsdXBkYXRlOiI6dXBkYXRlQXhpc1BvaW50ZXIifSxmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5jdXJyVHJpZ2dlcixyPVt0LngsdC55XSxvPXQsYT10LmRpc3BhdGNoQWN0aW9ufHxBKGkuZGlzcGF0Y2hBY3Rpb24saSkscz1lLmdldENvbXBvbmVudCgiYXhpc1BvaW50ZXIiKS5jb29yZFN5c0F4ZXNJbmZvO2lmKHMpe0tNKHIpJiYocj1XTSh7c2VyaWVzSW5kZXg6by5zZXJpZXNJbmRleCxkYXRhSW5kZXg6by5kYXRhSW5kZXh9LGUpLnBvaW50KTt2YXIgbD1LTShyKSx1PW8uYXhlc0luZm8saD1zLmF4ZXNJbmZvLGM9ImxlYXZlIj09PW58fEtNKHIpLGQ9e30sZj17fSxwPXtsaXN0OltdLG1hcDp7fX0sZz17c2hvd1BvaW50ZXI6Wk0oWU0sZiksc2hvd1Rvb2x0aXA6Wk0oak0scCl9O0hNKHMuY29vcmRTeXNNYXAsZnVuY3Rpb24odCxlKXt2YXIgYT1sfHx0LmNvbnRhaW5Qb2ludChyKTtITShzLmNvb3JkU3lzQXhlc0luZm9bZV0sZnVuY3Rpb24odCxlKXt2YXIgaT10LmF4aXMsbj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT0wO2k8KHR8fFtdKS5sZW5ndGg7aSsrKXt2YXIgbj10W2ldO2lmKGUuYXhpcy5kaW09PT1uLmF4aXNEaW0mJmUuYXhpcy5tb2RlbC5jb21wb25lbnRJbmRleD09PW4uYXhpc0luZGV4KXJldHVybiBufX0odSx0KTtpZighYyYmYSYmKCF1fHxuKSl7dmFyIG89biYmbi52YWx1ZTtudWxsIT1vfHxsfHwobz1pLnBvaW50VG9EYXRhKHIpKSxudWxsIT1vJiZYTSh0LG8sZywhMSxkKX19KX0pO3ZhciBtPXt9O3JldHVybiBITShoLGZ1bmN0aW9uKG8sdCl7dmFyIGE9by5saW5rR3JvdXA7YSYmIWZbdF0mJkhNKGEuYXhlc0luZm8sZnVuY3Rpb24odCxlKXt2YXIgaT1mW2VdO2lmKHQhPT1vJiZpKXt2YXIgbj1pLnZhbHVlO2EubWFwcGVyJiYobj1vLmF4aXMuc2NhbGUucGFyc2UoYS5tYXBwZXIobixxTSh0KSxxTShvKSkpKSxtW28ua2V5XT1ufX0pfSksSE0obSxmdW5jdGlvbih0LGUpe1hNKGhbZV0sdCxnLCEwLGQpfSksZnVuY3Rpb24obyx0LGUpe3ZhciBhPWUuYXhlc0luZm89W107SE0odCxmdW5jdGlvbih0LGUpe3ZhciBpPXQuYXhpc1BvaW50ZXJNb2RlbC5vcHRpb24sbj1vW2VdO24/KHQudXNlSGFuZGxlfHwoaS5zdGF0dXM9InNob3ciKSxpLnZhbHVlPW4udmFsdWUsaS5zZXJpZXNEYXRhSW5kaWNlcz0obi5wYXlsb2FkQmF0Y2h8fFtdKS5zbGljZSgpKTp0LnVzZUhhbmRsZXx8KGkuc3RhdHVzPSJoaWRlIiksInNob3ciPT09aS5zdGF0dXMmJmEucHVzaCh7YXhpc0RpbTp0LmF4aXMuZGltLGF4aXNJbmRleDp0LmF4aXMubW9kZWwuY29tcG9uZW50SW5kZXgsdmFsdWU6aS52YWx1ZX0pfSl9KGYsaCxkKSxmdW5jdGlvbih0LGUsaSxuKXtpZihLTShlKXx8IXQubGlzdC5sZW5ndGgpcmV0dXJuIG4oe3R5cGU6ImhpZGVUaXAifSk7dmFyIG89KCh0Lmxpc3RbMF0uZGF0YUJ5QXhpc1swXXx8e30pLnNlcmllc0RhdGFJbmRpY2VzfHxbXSlbMF18fHt9O24oe3R5cGU6InNob3dUaXAiLGVzY2FwZUNvbm5lY3Q6ITAseDplWzBdLHk6ZVsxXSx0b29sdGlwT3B0aW9uOmkudG9vbHRpcE9wdGlvbixwb3NpdGlvbjppLnBvc2l0aW9uLGRhdGFJbmRleEluc2lkZTpvLmRhdGFJbmRleEluc2lkZSxkYXRhSW5kZXg6by5kYXRhSW5kZXgsc2VyaWVzSW5kZXg6by5zZXJpZXNJbmRleCxkYXRhQnlDb29yZFN5czp0Lmxpc3R9KX0ocCxyLHQsYSksZnVuY3Rpb24odCxlLGkpe3ZhciBuPWkuZ2V0WnIoKSxvPSJheGlzUG9pbnRlckxhc3RIaWdobGlnaHRzIixhPVVNKG4pW29dfHx7fSxyPVVNKG4pW29dPXt9O0hNKHQsZnVuY3Rpb24odCxlKXt2YXIgaT10LmF4aXNQb2ludGVyTW9kZWwub3B0aW9uOyJzaG93Ij09PWkuc3RhdHVzJiZITShpLnNlcmllc0RhdGFJbmRpY2VzLGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2VyaWVzSW5kZXgrIiB8ICIrdC5kYXRhSW5kZXg7cltlXT10fSl9KTt2YXIgcz1bXSxsPVtdO0UoYSxmdW5jdGlvbih0LGUpe3JbZV18fGwucHVzaCh0KX0pLEUocixmdW5jdGlvbih0LGUpe2FbZV18fHMucHVzaCh0KX0pLGwubGVuZ3RoJiZpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJkb3ducGxheSIsZXNjYXBlQ29ubmVjdDohMCxiYXRjaDpsfSkscy5sZW5ndGgmJmkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImhpZ2hsaWdodCIsZXNjYXBlQ29ubmVjdDohMCxiYXRjaDpzfSl9KGgsMCxpKSxkfX0pO3ZhciBNST1bIngiLCJ5Il0sSUk9WyJ3aWR0aCIsImhlaWdodCJdLFRJPXNJLmV4dGVuZCh7bWFrZUVsT3B0aW9uOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9aS5heGlzLHI9YS5jb29yZGluYXRlU3lzdGVtLHM9Q0kociwxLURJKGEpKSxsPXIuZGF0YVRvUG9pbnQoZSlbMF0sdT1uLmdldCgidHlwZSIpO2lmKHUmJiJub25lIiE9PXUpe3ZhciBoPWRJKG4pLGM9QUlbdV0oYSxsLHMpO2Muc3R5bGU9aCx0LmdyYXBoaWNLZXk9Yy50eXBlLHQucG9pbnRlcj1jfW1JKGUsdCxSTShpKSxpLG4sbyl9LGdldEhhbmRsZVRyYW5zZm9ybTpmdW5jdGlvbih0LGUsaSl7dmFyIG49Uk0oZSx7bGFiZWxJbnNpZGU6ITF9KTtyZXR1cm4gbi5sYWJlbE1hcmdpbj1pLmdldCgiaGFuZGxlLm1hcmdpbiIpLHtwb3NpdGlvbjpnSShlLmF4aXMsdCxuKSxyb3RhdGlvbjpuLnJvdGF0aW9uKyhuLmxhYmVsRGlyZWN0aW9uPDA/TWF0aC5QSTowKX19LHVwZGF0ZUhhbmRsZVRyYW5zZm9ybTpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1pLmF4aXMsYT1vLmNvb3JkaW5hdGVTeXN0ZW0scj1ESShvKSxzPUNJKGEsciksbD10LnBvc2l0aW9uO2xbcl0rPWVbcl0sbFtyXT1NYXRoLm1pbihzWzFdLGxbcl0pLGxbcl09TWF0aC5tYXgoc1swXSxsW3JdKTt2YXIgdT1DSShhLDEtciksaD0odVsxXSt1WzBdKS8yLGM9W2gsaF07cmV0dXJuIGNbcl09bFtyXSx7cG9zaXRpb246bCxyb3RhdGlvbjp0LnJvdGF0aW9uLGN1cnNvclBvaW50OmMsdG9vbHRpcE9wdGlvbjp7dmVydGljYWxBbGlnbjoibWlkZGxlIn19fX0pLEFJPXtsaW5lOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm57dHlwZToiTGluZSIsc3ViUGl4ZWxPcHRpbWl6ZTohMCxzaGFwZTp2SShbZSxpWzBdXSxbZSxpWzFdXSxESSh0KSl9fSxzaGFkb3c6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuZ2V0QmFuZFdpZHRoKCksbz1pWzFdLWlbMF07cmV0dXJue3R5cGU6IlJlY3QiLHNoYXBlOnlJKFtlLW4vMixpWzBdXSxbbixvXSxESSh0KSl9fX07ZnVuY3Rpb24gREkodCl7cmV0dXJuIHQuaXNIb3Jpem9udGFsKCk/MDoxfWZ1bmN0aW9uIENJKHQsZSl7dmFyIGk9dC5nZXRSZWN0KCk7cmV0dXJuW2lbTUlbZV1dLGlbTUlbZV1dK2lbSUlbZV1dXX1odi5yZWdpc3RlckF4aXNQb2ludGVyQ2xhc3MoIlNpbmdsZUF4aXNQb2ludGVyIixUSSksYmYoe3R5cGU6InNpbmdsZSJ9KTt2YXIgTEk9aWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMudGhlbWVSaXZlciIsZGVwZW5kZW5jaWVzOlsic2luZ2xlQXhpcyJdLG5hbWVNYXA6bnVsbCxpbml0OmZ1bmN0aW9uKHQpe0xJLnN1cGVyQXBwbHkodGhpcywiaW5pdCIsYXJndW1lbnRzKSx0aGlzLmxlZ2VuZFZpc3VhbFByb3ZpZGVyPW5ldyBHdihBKHRoaXMuZ2V0RGF0YSx0aGlzKSxBKHRoaXMuZ2V0UmF3RGF0YSx0aGlzKSl9LGZpeERhdGE6ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGgsaT1Lbyh0LGZ1bmN0aW9uKHQpe3JldHVybiB0WzJdfSksbj1bXTtpLmJ1Y2tldHMuZWFjaChmdW5jdGlvbih0LGUpe24ucHVzaCh7bmFtZTplLGRhdGFMaXN0OnR9KX0pO2Zvcih2YXIgbz1uLmxlbmd0aCxhPS0xLHI9LTEscz0wO3M8bzsrK3Mpe3ZhciBsPW5bc10uZGF0YUxpc3QubGVuZ3RoO2E8bCYmKGE9bCxyPXMpfWZvcih2YXIgdT0wO3U8bzsrK3UpaWYodSE9PXIpZm9yKHZhciBoPW5bdV0ubmFtZSxjPTA7YzxhOysrYyl7Zm9yKHZhciBkPW5bcl0uZGF0YUxpc3RbY11bMF0sZj1uW3VdLmRhdGFMaXN0Lmxlbmd0aCxwPS0xLGc9MDtnPGY7KytnKXtpZihuW3VdLmRhdGFMaXN0W2ddWzBdPT09ZCl7cD1nO2JyZWFrfX0tMT09PXAmJih0W2VdPVtdLHRbZV1bMF09ZCx0W2VdWzFdPTAsdFtlXVsyXT1oLGUrKyl9cmV0dXJuIHR9LGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPWUucXVlcnlDb21wb25lbnRzKHttYWluVHlwZToic2luZ2xlQXhpcyIsaW5kZXg6dGhpcy5nZXQoInNpbmdsZUF4aXNJbmRleCIpLGlkOnRoaXMuZ2V0KCJzaW5nbGVBeGlzSWQiKX0pWzBdLmdldCgidHlwZSIpLG49TSh0LmRhdGEsZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXRbMl19KSxvPXRoaXMuZml4RGF0YShufHxbXSksYT1bXSxyPXRoaXMubmFtZU1hcD1RKCkscz0wLGw9MDtsPG8ubGVuZ3RoOysrbClhLnB1c2gob1tsXVsyXSksci5nZXQob1tsXVsyXSl8fChyLnNldChvW2xdWzJdLHMpLHMrKyk7dmFyIHU9bnAobyx7Y29vcmREaW1lbnNpb25zOlsic2luZ2xlIl0sZGltZW5zaW9uc0RlZmluZTpbe25hbWU6InRpbWUiLHR5cGU6TGYoaSl9LHtuYW1lOiJ2YWx1ZSIsdHlwZToiZmxvYXQifSx7bmFtZToibmFtZSIsdHlwZToib3JkaW5hbCJ9XSxlbmNvZGVEZWZpbmU6e3NpbmdsZTowLHZhbHVlOjEsaXRlbU5hbWU6Mn19KSxoPW5ldyBXZih1LHRoaXMpO3JldHVybiBoLmluaXREYXRhKG8pLGh9LGdldExheWVyU2VyaWVzOmZ1bmN0aW9uKCl7Zm9yKHZhciBpPXRoaXMuZ2V0RGF0YSgpLHQ9aS5jb3VudCgpLGU9W10sbj0wO248dDsrK24pZVtuXT1uO3ZhciBvPWkubWFwRGltZW5zaW9uKCJzaW5nbGUiKSxhPUtvKGUsZnVuY3Rpb24odCl7cmV0dXJuIGkuZ2V0KCJuYW1lIix0KX0pLHI9W107cmV0dXJuIGEuYnVja2V0cy5lYWNoKGZ1bmN0aW9uKHQsZSl7dC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkuZ2V0KG8sdCktaS5nZXQobyxlKX0pLHIucHVzaCh7bmFtZTplLGluZGljZXM6dH0pfSkscn0sZ2V0QXhpc1Rvb2x0aXBEYXRhOmZ1bmN0aW9uKHQsZSxpKXtrKHQpfHwodD10P1t0XTpbXSk7Zm9yKHZhciBuLG89dGhpcy5nZXREYXRhKCksYT10aGlzLmdldExheWVyU2VyaWVzKCkscj1bXSxzPWEubGVuZ3RoLGw9MDtsPHM7KytsKXtmb3IodmFyIHU9TnVtYmVyLk1BWF9WQUxVRSxoPS0xLGM9YVtsXS5pbmRpY2VzLmxlbmd0aCxkPTA7ZDxjOysrZCl7dmFyIGY9by5nZXQodFswXSxhW2xdLmluZGljZXNbZF0pLHA9TWF0aC5hYnMoZi1lKTtwPD11JiYobj1mLHU9cCxoPWFbbF0uaW5kaWNlc1tkXSl9ci5wdXNoKGgpfXJldHVybntkYXRhSW5kaWNlczpyLG5lc3Rlc3RWYWx1ZTpufX0sZm9ybWF0VG9vbHRpcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGEoKSxpPWUuZ2V0TmFtZSh0KSxuPWUuZ2V0KGUubWFwRGltZW5zaW9uKCJ2YWx1ZSIpLHQpO3JldHVybiFpc05hTihuKSYmbnVsbCE9bnx8KG49Ii0iKSxldShpKyIgOiAiK24pfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjIsY29vcmRpbmF0ZVN5c3RlbToic2luZ2xlQXhpcyIsYm91bmRhcnlHYXA6WyIxMCUiLCIxMCUiXSxzaW5nbGVBeGlzSW5kZXg6MCxhbmltYXRpb25FYXNpbmc6ImxpbmVhciIsbGFiZWw6e21hcmdpbjo0LHNob3c6ITAscG9zaXRpb246ImxlZnQiLGNvbG9yOiIjMDAwIixmb250U2l6ZToxMX0sZW1waGFzaXM6e2xhYmVsOntzaG93OiEwfX19fSk7TWYoe3R5cGU6InRoZW1lUml2ZXIiLGluaXQ6ZnVuY3Rpb24oKXt0aGlzLl9sYXllcnM9W119LHJlbmRlcjpmdW5jdGlvbihiLHQsZSl7dmFyIFM9Yi5nZXREYXRhKCksTT10aGlzLmdyb3VwLEk9Yi5nZXRMYXllclNlcmllcygpLGk9Uy5nZXRMYXlvdXQoImxheW91dEluZm8iKSxuPWkucmVjdCxvPWkuYm91bmRhcnlHYXA7ZnVuY3Rpb24gYSh0KXtyZXR1cm4gdC5uYW1lfU0uYXR0cigicG9zaXRpb24iLFswLG4ueStvWzBdXSk7dmFyIHI9bmV3IFRmKHRoaXMuX2xheWVyc1Nlcmllc3x8W10sSSxhLGEpLFQ9e307ZnVuY3Rpb24gcyh0LGUsaSl7dmFyIG49dGhpcy5fbGF5ZXJzO2lmKCJyZW1vdmUiIT09dCl7Zm9yKHZhciBvLGEscixzPVtdLGw9W10sdT1JW2VdLmluZGljZXMsaD0wO2g8dS5sZW5ndGg7aCsrKXt2YXIgYz1TLmdldEl0ZW1MYXlvdXQodVtoXSksZD1jLngsZj1jLnkwLHA9Yy55O3MucHVzaChbZCxmXSksbC5wdXNoKFtkLGYrcF0pLG89Uy5nZXRJdGVtVmlzdWFsKHVbaF0sImNvbG9yIil9dmFyIGc9Uy5nZXRJdGVtTGF5b3V0KHVbMF0pLG09Uy5nZXRJdGVtTW9kZWwodVtoLTFdKSx2PW0uZ2V0TW9kZWwoImxhYmVsIikseT12LmdldCgibWFyZ2luIik7aWYoImFkZCI9PT10KXt2YXIgeD1UW2VdPW5ldyBJaTthPW5ldyBnbSh7c2hhcGU6e3BvaW50czpzLHN0YWNrZWRPblBvaW50czpsLHNtb290aDouNCxzdGFja2VkT25TbW9vdGg6LjQsc21vb3RoQ29uc3RyYWludDohMX0sejI6MH0pLHI9bmV3IEZyKHtzdHlsZTp7eDpnLngteSx5OmcueTArZy55LzJ9fSkseC5hZGQoYSkseC5hZGQociksTS5hZGQoeCksYS5zZXRDbGlwUGF0aChmdW5jdGlvbih0LGUsaSl7dmFyIG49bmV3IGlzKHtzaGFwZTp7eDp0LngtMTAseTp0LnktMTAsd2lkdGg6MCxoZWlnaHQ6dC5oZWlnaHQrMjB9fSk7cmV0dXJuIGxsKG4se3NoYXBlOnt3aWR0aDp0LndpZHRoKzIwLGhlaWdodDp0LmhlaWdodCsyMH19LGUsaSksbn0oYS5nZXRCb3VuZGluZ1JlY3QoKSxiLGZ1bmN0aW9uKCl7YS5yZW1vdmVDbGlwUGF0aCgpfSkpfWVsc2V7eD1uW2ldO2E9eC5jaGlsZEF0KDApLHI9eC5jaGlsZEF0KDEpLE0uYWRkKHgpLFRbZV09eCxzbChhLHtzaGFwZTp7cG9pbnRzOnMsc3RhY2tlZE9uUG9pbnRzOmx9fSxiKSxzbChyLHtzdHlsZTp7eDpnLngteSx5OmcueTArZy55LzJ9fSxiKX12YXIgXz1tLmdldE1vZGVsKCJlbXBoYXNpcy5pdGVtU3R5bGUiKSx3PW0uZ2V0TW9kZWwoIml0ZW1TdHlsZSIpO1FzKHIuc3R5bGUsdix7dGV4dDp2LmdldCgic2hvdyIpP2IuZ2V0Rm9ybWF0dGVkTGFiZWwodVtoLTFdLCJub3JtYWwiKXx8Uy5nZXROYW1lKHVbaC0xXSk6bnVsbCx0ZXh0VmVydGljYWxBbGlnbjoibWlkZGxlIn0pLGEuc2V0U3R5bGUoTCh7ZmlsbDpvfSx3LmdldEl0ZW1TdHlsZShbImNvbG9yIl0pKSksWXMoYSxfLmdldEl0ZW1TdHlsZSgpKX1lbHNlIE0ucmVtb3ZlKG5bZV0pfXIuYWRkKEEocyx0aGlzLCJhZGQiKSkudXBkYXRlKEEocyx0aGlzLCJ1cGRhdGUiKSkucmVtb3ZlKEEocyx0aGlzLCJyZW1vdmUiKSkuZXhlY3V0ZSgpLHRoaXMuX2xheWVyc1Nlcmllcz1JLHRoaXMuX2xheWVycz1UfSxkaXNwb3NlOmZ1bmN0aW9uKCl7fX0pO2Z1bmN0aW9uIGtJKGksdCxlKXtpZihpLmNvdW50KCkpZm9yKHZhciBuLG89dC5jb29yZGluYXRlU3lzdGVtLGE9dC5nZXRMYXllclNlcmllcygpLHI9aS5tYXBEaW1lbnNpb24oInNpbmdsZSIpLHM9aS5tYXBEaW1lbnNpb24oInZhbHVlIiksbD1OKGEsZnVuY3Rpb24odCl7cmV0dXJuIE4odC5pbmRpY2VzLGZ1bmN0aW9uKHQpe3ZhciBlPW8uZGF0YVRvUG9pbnQoaS5nZXQocix0KSk7cmV0dXJuIGVbMV09aS5nZXQocyx0KSxlfSl9KSx1PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10Lmxlbmd0aCxpPXRbMF0ubGVuZ3RoLG49W10sbz1bXSxhPTAscj17fSxzPTA7czxpOysrcyl7Zm9yKHZhciBsPTAsdT0wO2w8ZTsrK2wpdSs9dFtsXVtzXVsxXTthPHUmJihhPXUpLG4ucHVzaCh1KX1mb3IodmFyIGg9MDtoPGk7KytoKW9baF09KGEtbltoXSkvMjtmb3IodmFyIGM9YT0wO2M8aTsrK2Mpe3ZhciBkPW5bY10rb1tjXTthPGQmJihhPWQpfXJldHVybiByLnkwPW8sci5tYXg9YSxyfShsKSxoPXUueTAsYz1lL3UubWF4LGQ9YS5sZW5ndGgsZj1hWzBdLmluZGljZXMubGVuZ3RoLHA9MDtwPGY7KytwKXtuPWhbcF0qYyxpLnNldEl0ZW1MYXlvdXQoYVswXS5pbmRpY2VzW3BdLHtsYXllckluZGV4OjAseDpsWzBdW3BdWzBdLHkwOm4seTpsWzBdW3BdWzFdKmN9KTtmb3IodmFyIGc9MTtnPGQ7KytnKW4rPWxbZy0xXVtwXVsxXSpjLGkuc2V0SXRlbUxheW91dChhW2ddLmluZGljZXNbcF0se2xheWVySW5kZXg6Zyx4OmxbZ11bcF1bMF0seTA6bix5OmxbZ11bcF1bMV0qY30pfX12ZihmdW5jdGlvbih0LGUpe3QuZWFjaFNlcmllc0J5VHlwZSgidGhlbWVSaXZlciIsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXREYXRhKCksaT10LmNvb3JkaW5hdGVTeXN0ZW0sbj17fSxvPWkuZ2V0UmVjdCgpO24ucmVjdD1vO3ZhciBhPXQuZ2V0KCJib3VuZGFyeUdhcCIpLHI9aS5nZXRBeGlzKCk7KG4uYm91bmRhcnlHYXA9YSwiaG9yaXpvbnRhbCI9PT1yLm9yaWVudCk/KGFbMF09UGwoYVswXSxvLmhlaWdodCksYVsxXT1QbChhWzFdLG8uaGVpZ2h0KSxrSShlLHQsby5oZWlnaHQtYVswXS1hWzFdKSk6KGFbMF09UGwoYVswXSxvLndpZHRoKSxhWzFdPVBsKGFbMV0sby53aWR0aCksa0koZSx0LG8ud2lkdGgtYVswXS1hWzFdKSk7ZS5zZXRMYXlvdXQoImxheW91dEluZm8iLG4pfSl9KSx5ZihmdW5jdGlvbih0KXt0LmVhY2hTZXJpZXNCeVR5cGUoInRoZW1lUml2ZXIiLGZ1bmN0aW9uKG8pe3ZhciBhPW8uZ2V0RGF0YSgpLHI9by5nZXRSYXdEYXRhKCkscz1vLmdldCgiY29sb3IiKSxsPVEoKTthLmVhY2goZnVuY3Rpb24odCl7bC5zZXQoYS5nZXRSYXdJbmRleCh0KSx0KX0pLHIuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1yLmdldE5hbWUodCksaT1zWyhvLm5hbWVNYXAuZ2V0KGUpLTEpJXMubGVuZ3RoXTtyLnNldEl0ZW1WaXN1YWwodCwiY29sb3IiLGkpO3ZhciBuPWwuZ2V0KHQpO251bGwhPW4mJmEuc2V0SXRlbVZpc3VhbChuLCJjb2xvciIsaSl9KX0pfSkscGYodHkoInRoZW1lUml2ZXIiKSksaWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuc3VuYnVyc3QiLF92aWV3Um9vdDpudWxsLGdldEluaXRpYWxEYXRhOmZ1bmN0aW9uKHQsZSl7dmFyIGk9e25hbWU6dC5uYW1lLGNoaWxkcmVuOnQuZGF0YX07IWZ1bmN0aW9uIGkodCl7dmFyIG49MDtFKHQuY2hpbGRyZW4sZnVuY3Rpb24odCl7aSh0KTt2YXIgZT10LnZhbHVlO2soZSkmJihlPWVbMF0pLG4rPWV9KTt2YXIgZT10LnZhbHVlO2soZSkmJihlPWVbMF0pO251bGwhPWUmJiFpc05hTihlKXx8KGU9bik7ZTwwJiYoZT0wKTtrKHQudmFsdWUpP3QudmFsdWVbMF09ZTp0LnZhbHVlPWV9KGkpO3ZhciBuPXQubGV2ZWxzfHxbXSxvPXt9O3JldHVybiBvLmxldmVscz1uLHZ4LmNyZWF0ZVRyZWUoaSx0aGlzLG8pLmRhdGF9LG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24oKXt0aGlzLnJlc2V0Vmlld1Jvb3QoKX0sZ2V0RGF0YVBhcmFtczpmdW5jdGlvbih0KXt2YXIgZT1pYy5wcm90b3R5cGUuZ2V0RGF0YVBhcmFtcy5hcHBseSh0aGlzLGFyZ3VtZW50cyksaT10aGlzLmdldERhdGEoKS50cmVlLmdldE5vZGVCeURhdGFJbmRleCh0KTtyZXR1cm4gZS50cmVlUGF0aEluZm89UngoaSx0aGlzKSxlfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjIsY2VudGVyOlsiNTAlIiwiNTAlIl0scmFkaXVzOlswLCI3NSUiXSxjbG9ja3dpc2U6ITAsc3RhcnRBbmdsZTo5MCxtaW5BbmdsZTowLHBlcmNlbnRQcmVjaXNpb246MixzdGlsbFNob3daZXJvU3VtOiEwLGhpZ2hsaWdodFBvbGljeToiZGVzY2VuZGFudCIsbm9kZUNsaWNrOiJyb290VG9Ob2RlIixyZW5kZXJMYWJlbEZvclplcm9EYXRhOiExLGxhYmVsOntyb3RhdGU6InJhZGlhbCIsc2hvdzohMCxvcGFjaXR5OjEsYWxpZ246ImNlbnRlciIscG9zaXRpb246Imluc2lkZSIsZGlzdGFuY2U6NSxzaWxlbnQ6ITAsZW1waGFzaXM6e319LGl0ZW1TdHlsZTp7Ym9yZGVyV2lkdGg6MSxib3JkZXJDb2xvcjoid2hpdGUiLGJvcmRlclR5cGU6InNvbGlkIixzaGFkb3dCbHVyOjAsc2hhZG93Q29sb3I6InJnYmEoMCwgMCwgMCwgMC4yKSIsc2hhZG93T2Zmc2V0WDowLHNoYWRvd09mZnNldFk6MCxvcGFjaXR5OjEsZW1waGFzaXM6e30saGlnaGxpZ2h0OntvcGFjaXR5OjF9LGRvd25wbGF5OntvcGFjaXR5Oi45fX0sYW5pbWF0aW9uVHlwZToiZXhwYW5zaW9uIixhbmltYXRpb25EdXJhdGlvbjoxZTMsYW5pbWF0aW9uRHVyYXRpb25VcGRhdGU6NTAwLGFuaW1hdGlvbkVhc2luZzoiY3ViaWNPdXQiLGRhdGE6W10sbGV2ZWxzOltdLHNvcnQ6ImRlc2MifSxnZXRWaWV3Um9vdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3Um9vdH0scmVzZXRWaWV3Um9vdDpmdW5jdGlvbih0KXt0P3RoaXMuX3ZpZXdSb290PXQ6dD10aGlzLl92aWV3Um9vdDt2YXIgZT10aGlzLmdldFJhd0RhdGEoKS50cmVlLnJvb3Q7dCYmKHQ9PT1lfHxlLmNvbnRhaW5zKHQpKXx8KHRoaXMuX3ZpZXdSb290PWUpfX0pO3ZhciBQST0ibm9uZSIsTkk9ImFuY2VzdG9yIixPST0ic2VsZiIsRUk9Mix6ST00O2Z1bmN0aW9uIFJJKHQsZSxpKXtJaS5jYWxsKHRoaXMpO3ZhciBuPW5ldyBVcih7ejI6RUl9KTtuLnNlcmllc0luZGV4PWUuc2VyaWVzSW5kZXg7dmFyIG89bmV3IEZyKHt6Mjp6SSxzaWxlbnQ6dC5nZXRNb2RlbCgibGFiZWwiKS5nZXQoInNpbGVudCIpfSk7ZnVuY3Rpb24gYSgpe28uaWdub3JlPW8uaG92ZXJJZ25vcmV9ZnVuY3Rpb24gcigpe28uaWdub3JlPW8ubm9ybWFsSWdub3JlfXRoaXMuYWRkKG4pLHRoaXMuYWRkKG8pLHRoaXMudXBkYXRlRGF0YSghMCx0LCJub3JtYWwiLGUsaSksdGhpcy5vbigiZW1waGFzaXMiLGEpLm9uKCJub3JtYWwiLHIpLm9uKCJtb3VzZW92ZXIiLGEpLm9uKCJtb3VzZW91dCIscil9dmFyIEJJPVJJLnByb3RvdHlwZTtCSS51cGRhdGVEYXRhPWZ1bmN0aW9uKHQsZSxpLG4sbyl7KHRoaXMubm9kZT1lKS5waWVjZT10aGlzLG49bnx8dGhpcy5fc2VyaWVzTW9kZWwsbz1vfHx0aGlzLl9lY01vZGVsO3ZhciBhPXRoaXMuY2hpbGRBdCgwKTthLmRhdGFJbmRleD1lLmRhdGFJbmRleDt2YXIgcj1lLmdldE1vZGVsKCkscz1lLmdldExheW91dCgpLGw9TCh7fSxzKTtsLmxhYmVsPW51bGw7dmFyIHU9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQuZ2V0VmlzdWFsKCJjb2xvciIpLG89dC5nZXRWaXN1YWwoInZpc3VhbE1ldGEiKTtvJiYwIT09by5sZW5ndGh8fChuPW51bGwpO3ZhciBhPXQuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLmdldCgiY29sb3IiKTt7aWYoYSlyZXR1cm4gYTtpZihuKXJldHVybiBuO2lmKDA9PT10LmRlcHRoKXJldHVybiBpLm9wdGlvbi5jb2xvclswXTt2YXIgcj1pLm9wdGlvbi5jb2xvci5sZW5ndGg7YT1pLm9wdGlvbi5jb2xvcltmdW5jdGlvbih0KXt2YXIgZT10O2Zvcig7MTxlLmRlcHRoOyllPWUucGFyZW50Tm9kZTtyZXR1cm4gXyh0LmdldEFuY2VzdG9ycygpWzBdLmNoaWxkcmVuLGUpfSh0KSVyXX1yZXR1cm4gYX0oZSwwLG8pOyFmdW5jdGlvbih0LGUsaSl7ZS5nZXREYXRhKCkuc2V0SXRlbVZpc3VhbCh0LmRhdGFJbmRleCwiY29sb3IiLGkpfShlLG4sdSk7dmFyIGgsYz1yLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKTsibm9ybWFsIj09PWk/aD1jOmg9bShyLmdldE1vZGVsKGkrIi5pdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSxjKTtoPUMoe2xpbmVKb2luOiJiZXZlbCIsZmlsbDpoLmZpbGx8fHV9LGgpLHQ/KGEuc2V0U2hhcGUobCksYS5zaGFwZS5yPXMucjAsc2woYSx7c2hhcGU6e3I6cy5yfX0sbixlLmRhdGFJbmRleCksYS51c2VTdHlsZShoKSk6Im9iamVjdCI9PXR5cGVvZiBoLmZpbGwmJmguZmlsbC50eXBlfHwib2JqZWN0Ij09dHlwZW9mIGEuc3R5bGUuZmlsbCYmYS5zdHlsZS5maWxsLnR5cGU/KHNsKGEse3NoYXBlOmx9LG4pLGEudXNlU3R5bGUoaCkpOnNsKGEse3NoYXBlOmwsc3R5bGU6aH0sbiksdGhpcy5fdXBkYXRlTGFiZWwobix1LGkpO3ZhciBkPXIuZ2V0U2hhbGxvdygiY3Vyc29yIik7aWYoZCYmYS5hdHRyKCJjdXJzb3IiLGQpLHQpe3ZhciBmPW4uZ2V0U2hhbGxvdygiaGlnaGxpZ2h0UG9saWN5Iik7dGhpcy5faW5pdEV2ZW50cyhhLGUsbixmKX10aGlzLl9zZXJpZXNNb2RlbD1ufHx0aGlzLl9zZXJpZXNNb2RlbCx0aGlzLl9lY01vZGVsPW98fHRoaXMuX2VjTW9kZWx9LEJJLm9uRW1waGFzaXM9ZnVuY3Rpb24oZSl7dmFyIGk9dGhpczt0aGlzLm5vZGUuaG9zdFRyZWUucm9vdC5lYWNoTm9kZShmdW5jdGlvbih0KXt0LnBpZWNlJiYoaS5ub2RlPT09dD90LnBpZWNlLnVwZGF0ZURhdGEoITEsdCwiZW1waGFzaXMiKTohZnVuY3Rpb24odCxlLGkpe3JldHVybiBpIT09UEkmJihpPT09T0k/dD09PWU6aT09PU5JP3Q9PT1lfHx0LmlzQW5jZXN0b3JPZihlKTp0PT09ZXx8dC5pc0Rlc2NlbmRhbnRPZihlKSl9KHQsaS5ub2RlLGUpP2UhPT1QSSYmdC5waWVjZS5jaGlsZEF0KDApLnRyaWdnZXIoImRvd25wbGF5Iik6dC5waWVjZS5jaGlsZEF0KDApLnRyaWdnZXIoImhpZ2hsaWdodCIpKX0pfSxCSS5vbk5vcm1hbD1mdW5jdGlvbigpe3RoaXMubm9kZS5ob3N0VHJlZS5yb290LmVhY2hOb2RlKGZ1bmN0aW9uKHQpe3QucGllY2UmJnQucGllY2UudXBkYXRlRGF0YSghMSx0LCJub3JtYWwiKX0pfSxCSS5vbkhpZ2hsaWdodD1mdW5jdGlvbigpe3RoaXMudXBkYXRlRGF0YSghMSx0aGlzLm5vZGUsImhpZ2hsaWdodCIpfSxCSS5vbkRvd25wbGF5PWZ1bmN0aW9uKCl7dGhpcy51cGRhdGVEYXRhKCExLHRoaXMubm9kZSwiZG93bnBsYXkiKX0sQkkuX3VwZGF0ZUxhYmVsPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLm5vZGUuZ2V0TW9kZWwoKSxvPW4uZ2V0TW9kZWwoImxhYmVsIiksYT0ibm9ybWFsIj09PWl8fCJlbXBoYXNpcyI9PT1pP286bi5nZXRNb2RlbChpKyIubGFiZWwiKSxyPW4uZ2V0TW9kZWwoImVtcGhhc2lzLmxhYmVsIikscz1XKHQuZ2V0Rm9ybWF0dGVkTGFiZWwodGhpcy5ub2RlLmRhdGFJbmRleCxpLG51bGwsbnVsbCwibGFiZWwiKSx0aGlzLm5vZGUubmFtZSk7ITE9PT1TKCJzaG93IikmJihzPSIiKTt2YXIgbD10aGlzLm5vZGUuZ2V0TGF5b3V0KCksdT1hLmdldCgibWluQW5nbGUiKTtudWxsPT11JiYodT1vLmdldCgibWluQW5nbGUiKSksdT11LzE4MCpNYXRoLlBJO3ZhciBoPWwuZW5kQW5nbGUtbC5zdGFydEFuZ2xlO251bGwhPXUmJk1hdGguYWJzKGgpPHUmJihzPSIiKTt2YXIgYz10aGlzLmNoaWxkQXQoMSk7JHMoYy5zdHlsZSxjLmhvdmVyU3R5bGV8fHt9LG8scix7ZGVmYXVsdFRleHQ6YS5nZXRTaGFsbG93KCJzaG93Iik/czpudWxsLGF1dG9Db2xvcjplLHVzZUluc2lkZVN0eWxlOiEwfSk7dmFyIGQsZj0obC5zdGFydEFuZ2xlK2wuZW5kQW5nbGUpLzIscD1NYXRoLmNvcyhmKSxnPU1hdGguc2luKGYpLG09UygicG9zaXRpb24iKSx2PVMoImRpc3RhbmNlIil8fDAseT1TKCJhbGlnbiIpOyJvdXRzaWRlIj09PW0/KGQ9bC5yK3YseT1mPk1hdGguUEkvMj8icmlnaHQiOiJsZWZ0Iik6eSYmImNlbnRlciIhPT15PyJsZWZ0Ij09PXk/KGQ9bC5yMCt2LGY+TWF0aC5QSS8yJiYoeT0icmlnaHQiKSk6InJpZ2h0Ij09PXkmJihkPWwuci12LGY+TWF0aC5QSS8yJiYoeT0ibGVmdCIpKTooZD0obC5yK2wucjApLzIseT0iY2VudGVyIiksYy5hdHRyKCJzdHlsZSIse3RleHQ6cyx0ZXh0QWxpZ246eSx0ZXh0VmVydGljYWxBbGlnbjpTKCJ2ZXJ0aWNhbEFsaWduIil8fCJtaWRkbGUiLG9wYWNpdHk6Uygib3BhY2l0eSIpfSk7dmFyIHg9ZCpwK2wuY3gsXz1kKmcrbC5jeTtjLmF0dHIoInBvc2l0aW9uIixbeCxfXSk7dmFyIHc9Uygicm90YXRlIiksYj0wO2Z1bmN0aW9uIFModCl7dmFyIGU9YS5nZXQodCk7cmV0dXJuIG51bGw9PWU/by5nZXQodCk6ZX0icmFkaWFsIj09PXc/KGI9LWYpPC1NYXRoLlBJLzImJihiKz1NYXRoLlBJKToidGFuZ2VudGlhbCI9PT13PyhiPU1hdGguUEkvMi1mKT5NYXRoLlBJLzI/Yi09TWF0aC5QSTpiPC1NYXRoLlBJLzImJihiKz1NYXRoLlBJKToibnVtYmVyIj09dHlwZW9mIHcmJihiPXcqTWF0aC5QSS8xODApLGMuYXR0cigicm90YXRpb24iLGIpfSxCSS5faW5pdEV2ZW50cz1mdW5jdGlvbih0LGUsaSxuKXt0Lm9mZigibW91c2VvdmVyIikub2ZmKCJtb3VzZW91dCIpLm9mZigiZW1waGFzaXMiKS5vZmYoIm5vcm1hbCIpO2Z1bmN0aW9uIG8oKXtyLm9uRW1waGFzaXMobil9ZnVuY3Rpb24gYSgpe3Iub25Ob3JtYWwoKX12YXIgcj10aGlzO2kuaXNBbmltYXRpb25FbmFibGVkKCkmJnQub24oIm1vdXNlb3ZlciIsbykub24oIm1vdXNlb3V0IixhKS5vbigiZW1waGFzaXMiLG8pLm9uKCJub3JtYWwiLGEpLm9uKCJkb3ducGxheSIsZnVuY3Rpb24oKXtyLm9uRG93bnBsYXkoKX0pLm9uKCJoaWdobGlnaHQiLGZ1bmN0aW9uKCl7ci5vbkhpZ2hsaWdodCgpfSl9LHcoUkksSWkpO2djLmV4dGVuZCh7dHlwZToic3VuYnVyc3QiLGluaXQ6ZnVuY3Rpb24oKXt9LHJlbmRlcjpmdW5jdGlvbihvLGEsdCxlKXt2YXIgbj10aGlzO3RoaXMuc2VyaWVzTW9kZWw9byx0aGlzLmFwaT10LHRoaXMuZWNNb2RlbD1hO3ZhciByPW8uZ2V0RGF0YSgpLHM9ci50cmVlLnJvb3QsaT1vLmdldFZpZXdSb290KCksbD10aGlzLmdyb3VwLHU9by5nZXQoInJlbmRlckxhYmVsRm9yWmVyb0RhdGEiKSxoPVtdO2kuZWFjaE5vZGUoZnVuY3Rpb24odCl7aC5wdXNoKHQpfSk7dmFyIGM9dGhpcy5fb2xkQ2hpbGRyZW58fFtdO2lmKGZ1bmN0aW9uKGksbil7aWYoMD09PWkubGVuZ3RoJiYwPT09bi5sZW5ndGgpcmV0dXJuO2Z1bmN0aW9uIHQodCl7cmV0dXJuIHQuZ2V0SWQoKX1mdW5jdGlvbiBlKHQsZSl7IWZ1bmN0aW9uKHQsZSl7dXx8IXR8fHQuZ2V0VmFsdWUoKXx8KHQ9bnVsbCk7aWYodCE9PXMmJmUhPT1zKWlmKGUmJmUucGllY2UpdD8oZS5waWVjZS51cGRhdGVEYXRhKCExLHQsIm5vcm1hbCIsbyxhKSxyLnNldEl0ZW1HcmFwaGljRWwodC5kYXRhSW5kZXgsZS5waWVjZSkpOmZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybjt0LnBpZWNlJiYobC5yZW1vdmUodC5waWVjZSksdC5waWVjZT1udWxsKX0oZSk7ZWxzZSBpZih0KXt2YXIgaT1uZXcgUkkodCxvLGEpO2wuYWRkKGkpLHIuc2V0SXRlbUdyYXBoaWNFbCh0LmRhdGFJbmRleCxpKX19KG51bGw9PXQ/bnVsbDppW3RdLG51bGw9PWU/bnVsbDpuW2VdKX1uZXcgVGYobixpLHQsdCkuYWRkKGUpLnVwZGF0ZShlKS5yZW1vdmUoVChlLG51bGwpKS5leGVjdXRlKCl9KGgsYyksZnVuY3Rpb24odCxlKXtpZigwPGUuZGVwdGgpe24udmlydHVhbFBpZWNlP24udmlydHVhbFBpZWNlLnVwZGF0ZURhdGEoITEsdCwibm9ybWFsIixvLGEpOihuLnZpcnR1YWxQaWVjZT1uZXcgUkkodCxvLGEpLGwuYWRkKG4udmlydHVhbFBpZWNlKSksZS5waWVjZS5fb25jbGlja0V2ZW50JiZlLnBpZWNlLm9mZigiY2xpY2siLGUucGllY2UuX29uY2xpY2tFdmVudCk7dmFyIGk9ZnVuY3Rpb24odCl7bi5fcm9vdFRvTm9kZShlLnBhcmVudE5vZGUpfTtlLnBpZWNlLl9vbmNsaWNrRXZlbnQ9aSxuLnZpcnR1YWxQaWVjZS5vbigiY2xpY2siLGkpfWVsc2Ugbi52aXJ0dWFsUGllY2UmJihsLnJlbW92ZShuLnZpcnR1YWxQaWVjZSksbi52aXJ0dWFsUGllY2U9bnVsbCl9KHMsaSksZSYmZS5oaWdobGlnaHQmJmUuaGlnaGxpZ2h0LnBpZWNlKXt2YXIgZD1vLmdldFNoYWxsb3coImhpZ2hsaWdodFBvbGljeSIpO2UuaGlnaGxpZ2h0LnBpZWNlLm9uRW1waGFzaXMoZCl9ZWxzZSBpZihlJiZlLnVuaGlnaGxpZ2h0KXt2YXIgZj10aGlzLnZpcnR1YWxQaWVjZTshZiYmcy5jaGlsZHJlbi5sZW5ndGgmJihmPXMuY2hpbGRyZW5bMF0ucGllY2UpLGYmJmYub25Ob3JtYWwoKX10aGlzLl9pbml0RXZlbnRzKCksdGhpcy5fb2xkQ2hpbGRyZW49aH0sZGlzcG9zZTpmdW5jdGlvbigpe30sX2luaXRFdmVudHM6ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGEpe3ZhciByPSExO3Muc2VyaWVzTW9kZWwuZ2V0Vmlld1Jvb3QoKS5lYWNoTm9kZShmdW5jdGlvbih0KXtpZighciYmdC5waWVjZSYmdC5waWVjZS5jaGlsZEF0KDApPT09YS50YXJnZXQpe3ZhciBlPXQuZ2V0TW9kZWwoKS5nZXQoIm5vZGVDbGljayIpO2lmKCJyb290VG9Ob2RlIj09PWUpcy5fcm9vdFRvTm9kZSh0KTtlbHNlIGlmKCJsaW5rIj09PWUpe3ZhciBpPXQuZ2V0TW9kZWwoKSxuPWkuZ2V0KCJsaW5rIik7aWYobil7dmFyIG89aS5nZXQoInRhcmdldCIsITApfHwiX2JsYW5rIjt3aW5kb3cub3BlbihuLG8pfX1yPSEwfX0pfXZhciBzPXRoaXM7dGhpcy5ncm91cC5fb25jbGlja0V2ZW50JiZ0aGlzLmdyb3VwLm9mZigiY2xpY2siLHRoaXMuZ3JvdXAuX29uY2xpY2tFdmVudCksdGhpcy5ncm91cC5vbigiY2xpY2siLHQpLHRoaXMuZ3JvdXAuX29uY2xpY2tFdmVudD10fSxfcm9vdFRvTm9kZTpmdW5jdGlvbih0KXt0IT09dGhpcy5zZXJpZXNNb2RlbC5nZXRWaWV3Um9vdCgpJiZ0aGlzLmFwaS5kaXNwYXRjaEFjdGlvbih7dHlwZToic3VuYnVyc3RSb290VG9Ob2RlIixmcm9tOnRoaXMudWlkLHNlcmllc0lkOnRoaXMuc2VyaWVzTW9kZWwuaWQsdGFyZ2V0Tm9kZTp0fSl9LGNvbnRhaW5Qb2ludDpmdW5jdGlvbih0LGUpe3ZhciBpPWUuZ2V0RGF0YSgpLmdldEl0ZW1MYXlvdXQoMCk7aWYoaSl7dmFyIG49dFswXS1pLmN4LG89dFsxXS1pLmN5LGE9TWF0aC5zcXJ0KG4qbitvKm8pO3JldHVybiBhPD1pLnImJmE+PWkucjB9fX0pO3ZhciBWST0ic3VuYnVyc3RSb290VG9Ob2RlIjtnZih7dHlwZTpWSSx1cGRhdGU6InVwZGF0ZVZpZXcifSxmdW5jdGlvbihvLHQpe3QuZWFjaENvbXBvbmVudCh7bWFpblR5cGU6InNlcmllcyIsc3ViVHlwZToic3VuYnVyc3QiLHF1ZXJ5Om99LGZ1bmN0aW9uKHQsZSl7dmFyIGk9T3gobyxbVkldLHQpO2lmKGkpe3ZhciBuPXQuZ2V0Vmlld1Jvb3QoKTtuJiYoby5kaXJlY3Rpb249engobixpLm5vZGUpPyJyb2xsVXAiOiJkcmlsbERvd24iKSx0LnJlc2V0Vmlld1Jvb3QoaS5ub2RlKX19KX0pO3ZhciBHST0ic3VuYnVyc3RIaWdobGlnaHQiO2dmKHt0eXBlOkdJLHVwZGF0ZToidXBkYXRlVmlldyJ9LGZ1bmN0aW9uKG4sdCl7dC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToic2VyaWVzIixzdWJUeXBlOiJzdW5idXJzdCIscXVlcnk6bn0sZnVuY3Rpb24odCxlKXt2YXIgaT1PeChuLFtHSV0sdCk7aSYmKG4uaGlnaGxpZ2h0PWkubm9kZSl9KX0pO2dmKHt0eXBlOiJzdW5idXJzdFVuaGlnaGxpZ2h0Iix1cGRhdGU6InVwZGF0ZVZpZXcifSxmdW5jdGlvbihpLHQpe3QuZWFjaENvbXBvbmVudCh7bWFpblR5cGU6InNlcmllcyIsc3ViVHlwZToic3VuYnVyc3QiLHF1ZXJ5Oml9LGZ1bmN0aW9uKHQsZSl7aS51bmhpZ2hsaWdodD0hMH0pfSk7dmFyIEZJPU1hdGguUEkvMTgwO2Z1bmN0aW9uIFdJKHQsZSl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGUpcmV0dXJuIHQuc29ydChlKTt2YXIgbj0iYXNjIj09PWU7cmV0dXJuIHQuc29ydChmdW5jdGlvbih0LGUpe3ZhciBpPSh0LmdldFZhbHVlKCktZS5nZXRWYWx1ZSgpKSoobj8xOi0xKTtyZXR1cm4gMD09aT8odC5kYXRhSW5kZXgtZS5kYXRhSW5kZXgpKihuPy0xOjEpOml9KX1mdW5jdGlvbiBISShhLHIpe3JldHVybiByPXJ8fFswLDBdLE4oWyJ4IiwieSJdLGZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5nZXRBeGlzKHQpLG49cltlXSxvPWFbZV0vMjtyZXR1cm4iY2F0ZWdvcnkiPT09aS50eXBlP2kuZ2V0QmFuZFdpZHRoKCk6TWF0aC5hYnMoaS5kYXRhVG9Db29yZChuLW8pLWkuZGF0YVRvQ29vcmQobitvKSl9LHRoaXMpfXlmKFQoWXYsInN1bmJ1cnN0IikpLHZmKFQoZnVuY3Rpb24odCxlLEMsaSl7ZS5lYWNoU2VyaWVzQnlUeXBlKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQoImNlbnRlciIpLGk9dC5nZXQoInJhZGl1cyIpO2soaSl8fChpPVswLGldKSxrKGUpfHwoZT1bZSxlXSk7dmFyIG49Qy5nZXRXaWR0aCgpLG89Qy5nZXRIZWlnaHQoKSxoPU1hdGgubWluKG4sbyksYz1QbChlWzBdLG4pLGQ9UGwoZVsxXSxvKSxmPVBsKGlbMF0saC8yKSxhPVBsKGlbMV0saC8yKSxyPS10LmdldCgic3RhcnRBbmdsZSIpKkZJLHA9dC5nZXQoIm1pbkFuZ2xlIikqRkksZz10LmdldERhdGEoKS50cmVlLnJvb3Qscz10LmdldFZpZXdSb290KCksbT1zLmRlcHRoLGw9dC5nZXQoInNvcnQiKTtudWxsIT1sJiYhZnVuY3Rpb24gZSh0LGkpe3ZhciBuPXQuY2hpbGRyZW58fFtdO3QuY2hpbGRyZW49V0kobixpKTtuLmxlbmd0aCYmRSh0LmNoaWxkcmVuLGZ1bmN0aW9uKHQpe2UodCxpKX0pfShzLGwpO3ZhciB1PTA7RShzLmNoaWxkcmVuLGZ1bmN0aW9uKHQpe2lzTmFOKHQuZ2V0VmFsdWUoKSl8fHUrK30pO3ZhciB2PXMuZ2V0VmFsdWUoKSx5PU1hdGguUEkvKHZ8fHUpKjIseD0wPHMuZGVwdGgsXz1zLmhlaWdodC0oeD8tMToxKSx3PShhLWYpLyhffHwxKSxiPXQuZ2V0KCJjbG9ja3dpc2UiKSxTPXQuZ2V0KCJzdGlsbFNob3daZXJvU3VtIiksTT1iPzE6LTEsST1mdW5jdGlvbih0LGUpe2lmKHQpe3ZhciBpPWU7aWYodCE9PWcpe3ZhciBuPXQuZ2V0VmFsdWUoKSxvPTA9PT12JiZTP3k6bip5O288cCYmKG89cCksaT1lK00qbzt2YXIgYT10LmRlcHRoLW0tKHg/LTE6MSkscj1mK3cqYSxzPWYrdyooMSthKSxsPXQuZ2V0TW9kZWwoKTtudWxsIT1sLmdldCgicjAiKSYmKHI9UGwobC5nZXQoInIwIiksaC8yKSksbnVsbCE9bC5nZXQoInIiKSYmKHM9UGwobC5nZXQoInIiKSxoLzIpKSx0LnNldExheW91dCh7YW5nbGU6byxzdGFydEFuZ2xlOmUsZW5kQW5nbGU6aSxjbG9ja3dpc2U6YixjeDpjLGN5OmQscjA6cixyOnN9KX1pZih0LmNoaWxkcmVuJiZ0LmNoaWxkcmVuLmxlbmd0aCl7dmFyIHU9MDtFKHQuY2hpbGRyZW4sZnVuY3Rpb24odCl7dSs9SSh0LGUrdSl9KX1yZXR1cm4gaS1lfX07aWYoeCl7dmFyIFQ9ZixBPWYrdyxEPTIqTWF0aC5QSTtnLnNldExheW91dCh7YW5nbGU6RCxzdGFydEFuZ2xlOnIsZW5kQW5nbGU6citELGNsb2Nrd2lzZTpiLGN4OmMsY3k6ZCxyMDpULHI6QX0pfUkocyxyKX0pfSwic3VuYnVyc3QiKSkscGYoVCh0eSwic3VuYnVyc3QiKSk7ZnVuY3Rpb24gWkkoYSxyKXtyZXR1cm4gcj1yfHxbMCwwXSxOKFswLDFdLGZ1bmN0aW9uKHQpe3ZhciBlPXJbdF0saT1hW3RdLzIsbj1bXSxvPVtdO3JldHVybiBuW3RdPWUtaSxvW3RdPWUraSxuWzEtdF09b1sxLXRdPXJbMS10XSxNYXRoLmFicyh0aGlzLmRhdGFUb1BvaW50KG4pW3RdLXRoaXMuZGF0YVRvUG9pbnQobylbdF0pfSx0aGlzKX1mdW5jdGlvbiBVSSh0LGUpe3ZhciBpPXRoaXMuZ2V0QXhpcygpLG49ZSBpbnN0YW5jZW9mIEFycmF5P2VbMF06ZSxvPSh0IGluc3RhbmNlb2YgQXJyYXk/dFswXTp0KS8yO3JldHVybiJjYXRlZ29yeSI9PT1pLnR5cGU/aS5nZXRCYW5kV2lkdGgoKTpNYXRoLmFicyhpLmRhdGFUb0Nvb3JkKG4tbyktaS5kYXRhVG9Db29yZChuK28pKX1mdW5jdGlvbiBYSShzLGwpe3JldHVybiBOKFsiUmFkaXVzIiwiQW5nbGUiXSxmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXNbImdldCIrdCsiQXhpcyJdKCksbj1sW2VdLG89c1tlXS8yLGE9ImRhdGFUbyIrdCxyPSJjYXRlZ29yeSI9PT1pLnR5cGU/aS5nZXRCYW5kV2lkdGgoKTpNYXRoLmFicyhpW2FdKG4tbyktaVthXShuK28pKTtyZXR1cm4iQW5nbGUiPT09dCYmKHI9cipNYXRoLlBJLzE4MCkscn0sdGhpcyl9dmFyIFlJPXhzLGpJPVsiaXRlbVN0eWxlIl0scUk9WyJlbXBoYXNpcyIsIml0ZW1TdHlsZSJdLEtJPVsibGFiZWwiXSwkST1bImVtcGhhc2lzIiwibGFiZWwiXSxKST0iZVwwXDAiLFFJPXtjYXJ0ZXNpYW4yZDpmdW5jdGlvbihlKXt2YXIgdD1lLmdyaWQuZ2V0UmVjdCgpO3JldHVybntjb29yZFN5czp7dHlwZToiY2FydGVzaWFuMmQiLHg6dC54LHk6dC55LHdpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0fSxhcGk6e2Nvb3JkOmZ1bmN0aW9uKHQpe3JldHVybiBlLmRhdGFUb1BvaW50KHQpfSxzaXplOkEoSEksZSl9fX0sZ2VvOmZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0Qm91bmRpbmdSZWN0KCk7cmV0dXJue2Nvb3JkU3lzOnt0eXBlOiJnZW8iLHg6dC54LHk6dC55LHdpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0LHpvb206ZS5nZXRab29tKCl9LGFwaTp7Y29vcmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGUuZGF0YVRvUG9pbnQodCl9LHNpemU6QShaSSxlKX19fSxzaW5nbGVBeGlzOmZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0UmVjdCgpO3JldHVybntjb29yZFN5czp7dHlwZToic2luZ2xlQXhpcyIseDp0LngseTp0Lnksd2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHR9LGFwaTp7Y29vcmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGUuZGF0YVRvUG9pbnQodCl9LHNpemU6QShVSSxlKX19fSxwb2xhcjpmdW5jdGlvbihvKXt2YXIgYT1vLmdldFJhZGl1c0F4aXMoKSxyPW8uZ2V0QW5nbGVBeGlzKCksdD1hLmdldEV4dGVudCgpO3JldHVybiB0WzBdPnRbMV0mJnQucmV2ZXJzZSgpLHtjb29yZFN5czp7dHlwZToicG9sYXIiLGN4Om8uY3gsY3k6by5jeSxyOnRbMV0scjA6dFswXX0sYXBpOntjb29yZDpBKGZ1bmN0aW9uKHQpe3ZhciBlPWEuZGF0YVRvUmFkaXVzKHRbMF0pLGk9ci5kYXRhVG9BbmdsZSh0WzFdKSxuPW8uY29vcmRUb1BvaW50KFtlLGldKTtyZXR1cm4gbi5wdXNoKGUsaSpNYXRoLlBJLzE4MCksbn0pLHNpemU6QShYSSxvKX19fSxjYWxlbmRhcjpmdW5jdGlvbihpKXt2YXIgdD1pLmdldFJlY3QoKSxlPWkuZ2V0UmFuZ2VJbmZvKCk7cmV0dXJue2Nvb3JkU3lzOnt0eXBlOiJjYWxlbmRhciIseDp0LngseTp0Lnksd2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHQsY2VsbFdpZHRoOmkuZ2V0Q2VsbFdpZHRoKCksY2VsbEhlaWdodDppLmdldENlbGxIZWlnaHQoKSxyYW5nZUluZm86e3N0YXJ0OmUuc3RhcnQsZW5kOmUuZW5kLHdlZWtzOmUud2Vla3MsZGF5Q291bnQ6ZS5hbGxEYXl9fSxhcGk6e2Nvb3JkOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkuZGF0YVRvUG9pbnQodCxlKX19fX19O2Z1bmN0aW9uIHRUKHQsZSxpLG4sbyl7bnVsbD09aVt0XXx8b3x8KGVbdF09aVt0XSxpW3RdPW5bdF0pfWZ1bmN0aW9uIGVUKGEscixlLHQpe3ZhciBpPWEuZ2V0KCJyZW5kZXJJdGVtIiksbj1hLmNvb3JkaW5hdGVTeXN0ZW0sbz17fTtuJiYobz1uLnByZXBhcmVDdXN0b21zP24ucHJlcGFyZUN1c3RvbXMoKTpRSVtuLnR5cGVdKG4pKTt2YXIgcyxsLHUsaCxjLGQ9Qyh7Z2V0V2lkdGg6dC5nZXRXaWR0aCxnZXRIZWlnaHQ6dC5nZXRIZWlnaHQsZ2V0WnI6dC5nZXRacixnZXREZXZpY2VQaXhlbFJhdGlvOnQuZ2V0RGV2aWNlUGl4ZWxSYXRpbyx2YWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT1lJiYoZT1zKSxyLmdldChyLmdldERpbWVuc2lvbih0fHwwKSxlKX0sc3R5bGU6ZnVuY3Rpb24odCxlKXtudWxsPT1lJiYoZT1zKSxnKGUpO3ZhciBpPWwuZ2V0TW9kZWwoakkpLmdldEl0ZW1TdHlsZSgpO251bGwhPWMmJihpLmZpbGw9Yyk7dmFyIG49ci5nZXRJdGVtVmlzdWFsKGUsIm9wYWNpdHkiKTtudWxsIT1uJiYoaS5vcGFjaXR5PW4pO3ZhciBvPXQ/clQodCx1KTp1O3JldHVybiBRcyhpLG8sbnVsbCx7YXV0b0NvbG9yOmMsaXNSZWN0VGV4dDohMH0pLGkudGV4dD1vLmdldFNoYWxsb3coInNob3ciKT9IKGEuZ2V0Rm9ybWF0dGVkTGFiZWwoZSwibm9ybWFsIiksR2cocixlKSk6bnVsbCx0JiZzVChpLHQpLGl9LHN0eWxlRW1waGFzaXM6ZnVuY3Rpb24odCxlKXtudWxsPT1lJiYoZT1zKSxnKGUpO3ZhciBpPWwuZ2V0TW9kZWwocUkpLmdldEl0ZW1TdHlsZSgpLG49dD9yVCh0LGgpOmg7cmV0dXJuIFFzKGksbixudWxsLHtpc1JlY3RUZXh0OiEwfSwhMCksaS50ZXh0PW4uZ2V0U2hhbGxvdygic2hvdyIpP1ooYS5nZXRGb3JtYXR0ZWRMYWJlbChlLCJlbXBoYXNpcyIpLGEuZ2V0Rm9ybWF0dGVkTGFiZWwoZSwibm9ybWFsIiksR2cocixlKSk6bnVsbCx0JiZzVChpLHQpLGl9LHZpc3VhbDpmdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT1lJiYoZT1zKSxyLmdldEl0ZW1WaXN1YWwoZSx0KX0sYmFyTGF5b3V0OmZ1bmN0aW9uKHQpe2lmKG4uZ2V0QmFzZUF4aXMpe3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT1bXSxpPXQuYXhpcztpZigiY2F0ZWdvcnkiPT09aS50eXBlKXtmb3IodmFyIG49aS5nZXRCYW5kV2lkdGgoKSxvPTA7bzx0LmNvdW50O28rKyllLnB1c2goQyh7YmFuZFdpZHRoOm4sYXhpc0tleToiYXhpczAiLHN0YWNrSWQ6TXArb30sdCkpO3ZhciBhPUxwKGUpLHI9W107Zm9yKG89MDtvPHQuY291bnQ7bysrKXt2YXIgcz1hLmF4aXMwW01wK29dO3Mub2Zmc2V0Q2VudGVyPXMub2Zmc2V0K3Mud2lkdGgvMixyLnB1c2gocyl9cmV0dXJuIHJ9fShDKHtheGlzOm4uZ2V0QmFzZUF4aXMoKX0sdCkpfX0sY3VycmVudFNlcmllc0luZGljZXM6ZnVuY3Rpb24oKXtyZXR1cm4gZS5nZXRDdXJyZW50U2VyaWVzSW5kaWNlcygpfSxmb250OmZ1bmN0aW9uKHQpe3JldHVybiBhbCh0LGUpfX0sby5hcGl8fHt9KSxmPXtjb250ZXh0Ont9LHNlcmllc0lkOmEuaWQsc2VyaWVzTmFtZTphLm5hbWUsc2VyaWVzSW5kZXg6YS5zZXJpZXNJbmRleCxjb29yZFN5czpvLmNvb3JkU3lzLGRhdGFJbnNpZGVMZW5ndGg6ci5jb3VudCgpLGVuY29kZTpmdW5jdGlvbihvKXt2YXIgYT17fTtyZXR1cm4gRShvLmRpbWVuc2lvbnMsZnVuY3Rpb24odCxlKXt2YXIgaT1vLmdldERpbWVuc2lvbkluZm8odCk7aWYoIWkuaXNFeHRyYUNvb3JkKXt2YXIgbj1pLmNvb3JkRGltOyhhW25dPWFbbl18fFtdKVtpLmNvb3JkRGltSW5kZXhdPWV9fSksYX0oYS5nZXREYXRhKCkpfSxwPSEwO3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBzPXQscD0hMCxpJiZpKEMoe2RhdGFJbmRleEluc2lkZTp0LGRhdGFJbmRleDpyLmdldFJhd0luZGV4KHQpLGFjdGlvblR5cGU6ZT9lLnR5cGU6bnVsbH0sZiksZCl9O2Z1bmN0aW9uIGcodCl7bnVsbD09dCYmKHQ9cykscCYmKGw9ci5nZXRJdGVtTW9kZWwodCksdT1sLmdldE1vZGVsKEtJKSxoPWwuZ2V0TW9kZWwoJEkpLGM9ci5nZXRJdGVtVmlzdWFsKHQsImNvbG9yIikscD0hMSl9fWZ1bmN0aW9uIGlUKHQsZSxpLG4sbyxhKXtyZXR1cm4odD1uVCh0LGUsaSxuLG8sYSwhMCkpJiZhLnNldEl0ZW1HcmFwaGljRWwoZSx0KSx0fWZ1bmN0aW9uIG5UKHQsZSxpLG4sbyxhLHIpe3ZhciBzPSFpLGw9KGk9aXx8e30pLnR5cGUsdT1pLnNoYXBlLGg9aS5zdHlsZTtpZih0JiYoc3x8bnVsbCE9bCYmbCE9PXQuX19jdXN0b21HcmFwaGljVHlwZXx8InBhdGgiPT09bCYmZnVuY3Rpb24odCl7cmV0dXJuIHQmJih0Lmhhc093blByb3BlcnR5KCJwYXRoRGF0YSIpfHx0Lmhhc093blByb3BlcnR5KCJkIikpfSh1KSYmdVQodSkhPT10Ll9fY3VzdG9tUGF0aERhdGF8fCJpbWFnZSI9PT1sJiZoVChoLCJpbWFnZSIpJiZoLmltYWdlIT09dC5fX2N1c3RvbUltYWdlUGF0aHx8InRleHQiPT09bCYmaFQodSwidGV4dCIpJiZoLnRleHQhPT10Ll9fY3VzdG9tVGV4dCkmJihvLnJlbW92ZSh0KSx0PW51bGwpLCFzKXt2YXIgYz0hdDtyZXR1cm4gZnVuY3Rpb24oZSx0LGksbixvLGEscil7dmFyIHM9e30sbD1pLnN0eWxlfHx7fTtpZihpLnNoYXBlJiYocy5zaGFwZT1EKGkuc2hhcGUpKSxpLnBvc2l0aW9uJiYocy5wb3NpdGlvbj1pLnBvc2l0aW9uLnNsaWNlKCkpLGkuc2NhbGUmJihzLnNjYWxlPWkuc2NhbGUuc2xpY2UoKSksaS5vcmlnaW4mJihzLm9yaWdpbj1pLm9yaWdpbi5zbGljZSgpKSxpLnJvdGF0aW9uJiYocy5yb3RhdGlvbj1pLnJvdGF0aW9uKSwiaW1hZ2UiPT09ZS50eXBlJiZpLnN0eWxlKXt2YXIgdT1zLnN0eWxlPXt9O0UoWyJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0Il0sZnVuY3Rpb24odCl7dFQodCx1LGwsZS5zdHlsZSxhKX0pfWlmKCJ0ZXh0Ij09PWUudHlwZSYmaS5zdHlsZSl7dT1zLnN0eWxlPXt9O0UoWyJ4IiwieSJdLGZ1bmN0aW9uKHQpe3RUKHQsdSxsLGUuc3R5bGUsYSl9KSwhbC5oYXNPd25Qcm9wZXJ0eSgidGV4dEZpbGwiKSYmbC5maWxsJiYobC50ZXh0RmlsbD1sLmZpbGwpLCFsLmhhc093blByb3BlcnR5KCJ0ZXh0U3Ryb2tlIikmJmwuc3Ryb2tlJiYobC50ZXh0U3Ryb2tlPWwuc3Ryb2tlKX1pZigiZ3JvdXAiIT09ZS50eXBlJiYoZS51c2VTdHlsZShsKSxhKSl7ZS5zdHlsZS5vcGFjaXR5PTA7dmFyIGg9bC5vcGFjaXR5O251bGw9PWgmJihoPTEpLGxsKGUse3N0eWxlOntvcGFjaXR5Omh9fSxuLHQpfWE/ZS5hdHRyKHMpOnNsKGUscyxuLHQpLGkuaGFzT3duUHJvcGVydHkoInoyIikmJmUuYXR0cigiejIiLGkuejJ8fDApLGkuaGFzT3duUHJvcGVydHkoInNpbGVudCIpJiZlLmF0dHIoInNpbGVudCIsaS5zaWxlbnQpLGkuaGFzT3duUHJvcGVydHkoImludmlzaWJsZSIpJiZlLmF0dHIoImludmlzaWJsZSIsaS5pbnZpc2libGUpLGkuaGFzT3duUHJvcGVydHkoImlnbm9yZSIpJiZlLmF0dHIoImlnbm9yZSIsaS5pZ25vcmUpLGkuaGFzT3duUHJvcGVydHkoImluZm8iKSYmZS5hdHRyKCJpbmZvIixpLmluZm8pO3ZhciBjPWkuc3R5bGVFbXBoYXNpcztGcyhlLGMpLHImJmpzKGUsITEhPT1jKX0odD10fHxmdW5jdGlvbih0KXt2YXIgZSxpPXQudHlwZTtpZigicGF0aCI9PT1pKXt2YXIgbj10LnNoYXBlLG89bnVsbCE9bi53aWR0aCYmbnVsbCE9bi5oZWlnaHQ/e3g6bi54fHwwLHk6bi55fHwwLHdpZHRoOm4ud2lkdGgsaGVpZ2h0Om4uaGVpZ2h0fTpudWxsLGE9dVQobik7KGU9RHMoYSxudWxsLG8sbi5sYXlvdXR8fCJjZW50ZXIiKSkuX19jdXN0b21QYXRoRGF0YT1hfWVsc2UgaWYoImltYWdlIj09PWkpKGU9bmV3IHFuKHt9KSkuX19jdXN0b21JbWFnZVBhdGg9dC5zdHlsZS5pbWFnZTtlbHNlIGlmKCJ0ZXh0Ij09PWkpKGU9bmV3IEZyKHt9KSkuX19jdXN0b21UZXh0PXQuc3R5bGUudGV4dDtlbHNlIGlmKCJncm91cCI9PT1pKWU9bmV3IElpO2Vsc2V7aWYoImNvbXBvdW5kUGF0aCI9PT1pKXRocm93IG5ldyBFcnJvcignImNvbXBvdW5kUGF0aCIgaXMgbm90IHN1cHBvcnRlZCB5ZXQuJyk7ZT1uZXcoQXMoaSkpfXJldHVybiBlLl9fY3VzdG9tR3JhcGhpY1R5cGU9aSxlLm5hbWU9dC5uYW1lLGV9KGkpLGUsaSxuLDAsYyxyKSwiZ3JvdXAiPT09bCYmZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1pLmNoaWxkcmVuLHI9YT9hLmxlbmd0aDowLHM9aS4kbWVyZ2VDaGlsZHJlbixsPSJieU5hbWUiPT09c3x8aS5kaWZmQ2hpbGRyZW5CeU5hbWUsdT0hMT09PXM7aWYoIXImJiFsJiYhdSlyZXR1cm47aWYobClyZXR1cm4gZnVuY3Rpb24odCl7bmV3IFRmKHQub2xkQ2hpbGRyZW4sdC5uZXdDaGlsZHJlbixvVCxvVCx0KS5hZGQoYVQpLnVwZGF0ZShhVCkucmVtb3ZlKGxUKS5leGVjdXRlKCl9KHtvbGRDaGlsZHJlbjp0LmNoaWxkcmVuKCl8fFtdLG5ld0NoaWxkcmVuOmF8fFtdLGRhdGFJbmRleDplLGFuaW1hdGFibGVNb2RlbDpuLGdyb3VwOnQsZGF0YTpvfSk7dSYmdC5yZW1vdmVBbGwoKTtmb3IodmFyIGg9MDtoPHI7aCsrKWFbaF0mJm5UKHQuY2hpbGRBdChoKSxlLGFbaF0sbix0LG8pfSh0LGUsaSxuLGEpLG8uYWRkKHQpLHR9fWZ1bmN0aW9uIG9UKHQsZSl7dmFyIGk9dCYmdC5uYW1lO3JldHVybiBudWxsIT1pP2k6SkkrZX1mdW5jdGlvbiBhVCh0LGUpe3ZhciBpPXRoaXMuY29udGV4dCxuPW51bGwhPXQ/aS5uZXdDaGlsZHJlblt0XTpudWxsO25UKG51bGwhPWU/aS5vbGRDaGlsZHJlbltlXTpudWxsLGkuZGF0YUluZGV4LG4saS5hbmltYXRhYmxlTW9kZWwsaS5ncm91cCxpLmRhdGEpfWZ1bmN0aW9uIHJUKGksdCl7dmFyIG49bmV3IElsKHt9LHQpO3JldHVybiBFKFlJLGZ1bmN0aW9uKHQsZSl7aS5oYXNPd25Qcm9wZXJ0eSh0KSYmKG4ub3B0aW9uW2VdPWlbdF0pfSksbn1mdW5jdGlvbiBzVCh0LGUpe2Zvcih2YXIgaSBpbiBlKSFlLmhhc093blByb3BlcnR5KGkpJiZZSS5oYXNPd25Qcm9wZXJ0eShpKXx8KHRbaV09ZVtpXSl9ZnVuY3Rpb24gbFQodCl7dmFyIGU9dGhpcy5jb250ZXh0LGk9ZS5vbGRDaGlsZHJlblt0XTtpJiZlLmdyb3VwLnJlbW92ZShpKX1mdW5jdGlvbiB1VCh0KXtyZXR1cm4gdCYmKHQucGF0aERhdGF8fHQuZCl9ZnVuY3Rpb24gaFQodCxlKXtyZXR1cm4gdCYmdC5oYXNPd25Qcm9wZXJ0eShlKX1mdW5jdGlvbiBjVCh0KXtyZXR1cm4gdC5nZXQoInN0YWNrIil8fCJfX2VjX3N0YWNrXyIrdC5zZXJpZXNJbmRleH1mdW5jdGlvbiBkVCh0LGUpe3JldHVybiBlLmRpbSt0Lm1vZGVsLmNvbXBvbmVudEluZGV4fWZ1bmN0aW9uIGZUKHQsZSl7RWcuY2FsbCh0aGlzLCJyYWRpdXMiLHQsZSksdGhpcy50eXBlPSJjYXRlZ29yeSJ9aWMuZXh0ZW5kKHt0eXBlOiJzZXJpZXMuY3VzdG9tIixkZXBlbmRlbmNpZXM6WyJncmlkIiwicG9sYXIiLCJnZW8iLCJzaW5nbGVBeGlzIiwiY2FsZW5kYXIiXSxkZWZhdWx0T3B0aW9uOntjb29yZGluYXRlU3lzdGVtOiJjYXJ0ZXNpYW4yZCIsemxldmVsOjAsejoyLGxlZ2VuZEhvdmVyTGluazohMCx1c2VUcmFuc2Zvcm06ITAsY2xpcDohMX0sZ2V0SW5pdGlhbERhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gaHAodGhpcy5nZXRTb3VyY2UoKSx0aGlzKX0sZ2V0RGF0YVBhcmFtczpmdW5jdGlvbih0LGUsaSl7dmFyIG49aWMucHJvdG90eXBlLmdldERhdGFQYXJhbXMuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBpJiYobi5pbmZvPWkuaW5mbyksbn19KSxnYy5leHRlbmQoe3R5cGU6ImN1c3RvbSIsX2RhdGE6bnVsbCxyZW5kZXI6ZnVuY3Rpb24oaSx0LGUsbil7dmFyIG89dGhpcy5fZGF0YSxhPWkuZ2V0RGF0YSgpLHI9dGhpcy5ncm91cCxzPWVUKGksYSx0LGUpO2EuZGlmZihvKS5hZGQoZnVuY3Rpb24odCl7aVQobnVsbCx0LHModCxuKSxpLHIsYSl9KS51cGRhdGUoZnVuY3Rpb24odCxlKXtpVChvLmdldEl0ZW1HcmFwaGljRWwoZSksdCxzKHQsbiksaSxyLGEpfSkucmVtb3ZlKGZ1bmN0aW9uKHQpe3ZhciBlPW8uZ2V0SXRlbUdyYXBoaWNFbCh0KTtlJiZyLnJlbW92ZShlKX0pLmV4ZWN1dGUoKTt2YXIgbD1pLmdldCgiY2xpcCIsITApP3ltKGkuY29vcmRpbmF0ZVN5c3RlbSwhMSxpKTpudWxsO2w/ci5zZXRDbGlwUGF0aChsKTpyLnJlbW92ZUNsaXBQYXRoKCksdGhpcy5fZGF0YT1hfSxpbmNyZW1lbnRhbFByZXBhcmVSZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuZ3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fZGF0YT1udWxsfSxpbmNyZW1lbnRhbFJlbmRlcjpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPWUuZ2V0RGF0YSgpLHI9ZVQoZSxhLGksbik7ZnVuY3Rpb24gcyh0KXt0LmlzR3JvdXB8fCh0LmluY3JlbWVudGFsPSEwLHQudXNlSG92ZXJMYXllcj0hMCl9Zm9yKHZhciBsPXQuc3RhcnQ7bDx0LmVuZDtsKyspe2lUKG51bGwsbCxyKGwsbyksZSx0aGlzLmdyb3VwLGEpLnRyYXZlcnNlKHMpfX0sZGlzcG9zZTpldCxmaWx0ZXJGb3JFeHBvc2VkRXZlbnQ6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89ZS5lbGVtZW50O2lmKG51bGw9PW98fGkubmFtZT09PW8pcmV0dXJuITA7Zm9yKDsoaT1pLnBhcmVudCkmJmkhPT10aGlzLmdyb3VwOylpZihpLm5hbWU9PT1vKXJldHVybiEwO3JldHVybiExfX0pLGZULnByb3RvdHlwZT17Y29uc3RydWN0b3I6ZlQscG9pbnRUb0RhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wb2xhci5wb2ludFRvRGF0YSh0LGUpWyJyYWRpdXMiPT09dGhpcy5kaW0/MDoxXX0sZGF0YVRvUmFkaXVzOkVnLnByb3RvdHlwZS5kYXRhVG9Db29yZCxyYWRpdXNUb0RhdGE6RWcucHJvdG90eXBlLmNvb3JkVG9EYXRhfSx3KGZULEVnKTt2YXIgcFQ9Wm8oKTtmdW5jdGlvbiBnVCh0LGUpe2U9ZXx8WzAsMzYwXSxFZy5jYWxsKHRoaXMsImFuZ2xlIix0LGUpLHRoaXMudHlwZT0iY2F0ZWdvcnkifWdULnByb3RvdHlwZT17Y29uc3RydWN0b3I6Z1QscG9pbnRUb0RhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wb2xhci5wb2ludFRvRGF0YSh0LGUpWyJyYWRpdXMiPT09dGhpcy5kaW0/MDoxXX0sZGF0YVRvQW5nbGU6RWcucHJvdG90eXBlLmRhdGFUb0Nvb3JkLGFuZ2xlVG9EYXRhOkVnLnByb3RvdHlwZS5jb29yZFRvRGF0YSxjYWxjdWxhdGVDYXRlZ29yeUludGVydmFsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRMYWJlbE1vZGVsKCksZT10aGlzLnNjYWxlLGk9ZS5nZXRFeHRlbnQoKSxuPWUuY291bnQoKTtpZihpWzFdLWlbMF08MSlyZXR1cm4gMDt2YXIgbz1pWzBdLGE9dGhpcy5kYXRhVG9Db29yZChvKzEpLXRoaXMuZGF0YVRvQ29vcmQobykscj1NYXRoLmFicyhhKSxzPWNuKG8sdC5nZXRGb250KCksImNlbnRlciIsInRvcCIpLGw9TWF0aC5tYXgocy5oZWlnaHQsNykvcjtpc05hTihsKSYmKGw9MS8wKTt2YXIgdT1NYXRoLm1heCgwLE1hdGguZmxvb3IobCkpLGg9cFQodGhpcy5tb2RlbCksYz1oLmxhc3RBdXRvSW50ZXJ2YWwsZD1oLmxhc3RUaWNrQ291bnQ7cmV0dXJuIG51bGwhPWMmJm51bGwhPWQmJk1hdGguYWJzKGMtdSk8PTEmJk1hdGguYWJzKGQtbik8PTEmJnU8Yz91PWM6KGgubGFzdFRpY2tDb3VudD1uLGgubGFzdEF1dG9JbnRlcnZhbD11KSx1fX0sdyhnVCxFZyk7ZnVuY3Rpb24gbVQodCl7dGhpcy5uYW1lPXR8fCIiLHRoaXMuY3g9MCx0aGlzLmN5PTAsdGhpcy5fcmFkaXVzQXhpcz1uZXcgZlQsdGhpcy5fYW5nbGVBeGlzPW5ldyBnVCx0aGlzLl9yYWRpdXNBeGlzLnBvbGFyPXRoaXMuX2FuZ2xlQXhpcy5wb2xhcj10aGlzfW1ULnByb3RvdHlwZT17dHlwZToicG9sYXIiLGF4aXNQb2ludGVyRW5hYmxlZDohMCxjb25zdHJ1Y3RvcjptVCxkaW1lbnNpb25zOlsicmFkaXVzIiwiYW5nbGUiXSxtb2RlbDpudWxsLGNvbnRhaW5Qb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBvaW50VG9Db29yZCh0KTtyZXR1cm4gdGhpcy5fcmFkaXVzQXhpcy5jb250YWluKGVbMF0pJiZ0aGlzLl9hbmdsZUF4aXMuY29udGFpbihlWzFdKX0sY29udGFpbkRhdGE6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3JhZGl1c0F4aXMuY29udGFpbkRhdGEodFswXSkmJnRoaXMuX2FuZ2xlQXhpcy5jb250YWluRGF0YSh0WzFdKX0sZ2V0QXhpczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpc1siXyIrdCsiQXhpcyJdfSxnZXRBeGVzOmZ1bmN0aW9uKCl7cmV0dXJuW3RoaXMuX3JhZGl1c0F4aXMsdGhpcy5fYW5nbGVBeGlzXX0sZ2V0QXhlc0J5U2NhbGU6ZnVuY3Rpb24odCl7dmFyIGU9W10saT10aGlzLl9hbmdsZUF4aXMsbj10aGlzLl9yYWRpdXNBeGlzO3JldHVybiBpLnNjYWxlLnR5cGU9PT10JiZlLnB1c2goaSksbi5zY2FsZS50eXBlPT09dCYmZS5wdXNoKG4pLGV9LGdldEFuZ2xlQXhpczpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbmdsZUF4aXN9LGdldFJhZGl1c0F4aXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFkaXVzQXhpc30sZ2V0T3RoZXJBeGlzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2FuZ2xlQXhpcztyZXR1cm4gdD09PWU/dGhpcy5fcmFkaXVzQXhpczplfSxnZXRCYXNlQXhpczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEF4ZXNCeVNjYWxlKCJvcmRpbmFsIilbMF18fHRoaXMuZ2V0QXhlc0J5U2NhbGUoInRpbWUiKVswXXx8dGhpcy5nZXRBbmdsZUF4aXMoKX0sZ2V0VG9vbHRpcEF4ZXM6ZnVuY3Rpb24odCl7dmFyIGU9bnVsbCE9dCYmImF1dG8iIT09dD90aGlzLmdldEF4aXModCk6dGhpcy5nZXRCYXNlQXhpcygpO3JldHVybntiYXNlQXhlczpbZV0sb3RoZXJBeGVzOlt0aGlzLmdldE90aGVyQXhpcyhlKV19fSxkYXRhVG9Qb2ludDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNvb3JkVG9Qb2ludChbdGhpcy5fcmFkaXVzQXhpcy5kYXRhVG9SYWRpdXModFswXSxlKSx0aGlzLl9hbmdsZUF4aXMuZGF0YVRvQW5nbGUodFsxXSxlKV0pfSxwb2ludFRvRGF0YTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMucG9pbnRUb0Nvb3JkKHQpO3JldHVyblt0aGlzLl9yYWRpdXNBeGlzLnJhZGl1c1RvRGF0YShpWzBdLGUpLHRoaXMuX2FuZ2xlQXhpcy5hbmdsZVRvRGF0YShpWzFdLGUpXX0scG9pbnRUb0Nvb3JkOmZ1bmN0aW9uKHQpe3ZhciBlPXRbMF0tdGhpcy5jeCxpPXRbMV0tdGhpcy5jeSxuPXRoaXMuZ2V0QW5nbGVBeGlzKCksbz1uLmdldEV4dGVudCgpLGE9TWF0aC5taW4ob1swXSxvWzFdKSxyPU1hdGgubWF4KG9bMF0sb1sxXSk7bi5pbnZlcnNlP2E9ci0zNjA6cj1hKzM2MDt2YXIgcz1NYXRoLnNxcnQoZSplK2kqaSk7ZS89cyxpLz1zO2Zvcih2YXIgbD1NYXRoLmF0YW4yKC1pLGUpL01hdGguUEkqMTgwLHU9bDxhPzE6LTE7bDxhfHxyPGw7KWwrPTM2MCp1O3JldHVybltzLGxdfSxjb29yZFRvUG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dFswXSxpPXRbMV0vMTgwKk1hdGguUEk7cmV0dXJuW01hdGguY29zKGkpKmUrdGhpcy5jeCwtTWF0aC5zaW4oaSkqZSt0aGlzLmN5XX0sZ2V0QXJlYTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0QW5nbGVBeGlzKCksZT10aGlzLmdldFJhZGl1c0F4aXMoKS5nZXRFeHRlbnQoKS5zbGljZSgpO2VbMF0+ZVsxXSYmZS5yZXZlcnNlKCk7dmFyIGk9dC5nZXRFeHRlbnQoKSxuPU1hdGguUEkvMTgwO3JldHVybntjeDp0aGlzLmN4LGN5OnRoaXMuY3kscjA6ZVswXSxyOmVbMV0sc3RhcnRBbmdsZTotaVswXSpuLGVuZEFuZ2xlOi1pWzFdKm4sY2xvY2t3aXNlOnQuaW52ZXJzZSxjb250YWluOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC10aGlzLmN4LG49ZS10aGlzLmN5LG89aSppK24qbixhPXRoaXMucixyPXRoaXMucjA7cmV0dXJuIG88PWEqYSYmcipyPD1vfX19fTt2YXIgdlQ9VHUuZXh0ZW5kKHt0eXBlOiJwb2xhckF4aXMiLGF4aXM6bnVsbCxnZXRDb29yZFN5c01vZGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWNNb2RlbC5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJwb2xhciIsaW5kZXg6dGhpcy5vcHRpb24ucG9sYXJJbmRleCxpZDp0aGlzLm9wdGlvbi5wb2xhcklkfSlbMF19fSk7bSh2VC5wcm90b3R5cGUsc2cpO3ZhciB5VD17c3BsaXROdW1iZXI6NX07ZnVuY3Rpb24geFQodCxlKXtyZXR1cm4gZS50eXBlfHwoZS5kYXRhPyJjYXRlZ29yeSI6InZhbHVlIil9ZnVuY3Rpb24gX1QodCxlKXt2YXIgaT10aGlzLG49aS5nZXRBbmdsZUF4aXMoKSxvPWkuZ2V0UmFkaXVzQXhpcygpO2lmKG4uc2NhbGUuc2V0RXh0ZW50KDEvMCwtMS8wKSxvLnNjYWxlLnNldEV4dGVudCgxLzAsLTEvMCksdC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQpe2lmKHQuY29vcmRpbmF0ZVN5c3RlbT09PWkpe3ZhciBlPXQuZ2V0RGF0YSgpO0UoZS5tYXBEaW1lbnNpb24oInJhZGl1cyIsITApLGZ1bmN0aW9uKHQpe28uc2NhbGUudW5pb25FeHRlbnRGcm9tRGF0YShlLHVwKGUsdCkpfSksRShlLm1hcERpbWVuc2lvbigiYW5nbGUiLCEwKSxmdW5jdGlvbih0KXtuLnNjYWxlLnVuaW9uRXh0ZW50RnJvbURhdGEoZSx1cChlLHQpKX0pfX0pLGVnKG4uc2NhbGUsbi5tb2RlbCksZWcoby5zY2FsZSxvLm1vZGVsKSwiY2F0ZWdvcnkiPT09bi50eXBlJiYhbi5vbkJhbmQpe3ZhciBhPW4uZ2V0RXh0ZW50KCkscj0zNjAvbi5zY2FsZS5jb3VudCgpO24uaW52ZXJzZT9hWzFdKz1yOmFbMV0tPXIsbi5zZXRFeHRlbnQoYVswXSxhWzFdKX19ZnVuY3Rpb24gd1QodCxlKXtpZih0LnR5cGU9ZS5nZXQoInR5cGUiKSx0LnNjYWxlPWlnKGUpLHQub25CYW5kPWUuZ2V0KCJib3VuZGFyeUdhcCIpJiYiY2F0ZWdvcnkiPT09dC50eXBlLHQuaW52ZXJzZT1lLmdldCgiaW52ZXJzZSIpLCJhbmdsZUF4aXMiPT09ZS5tYWluVHlwZSl7dC5pbnZlcnNlXj1lLmdldCgiY2xvY2t3aXNlIik7dmFyIGk9ZS5nZXQoInN0YXJ0QW5nbGUiKTt0LnNldEV4dGVudChpLGkrKHQuaW52ZXJzZT8tMzYwOjM2MCkpfShlLmF4aXM9dCkubW9kZWw9ZX1PbSgiYW5nbGUiLHZULHhULHtzdGFydEFuZ2xlOjkwLGNsb2Nrd2lzZTohMCxzcGxpdE51bWJlcjoxMixheGlzTGFiZWw6e3JvdGF0ZTohMX19KSxPbSgicmFkaXVzIix2VCx4VCx5VCksd2Yoe3R5cGU6InBvbGFyIixkZXBlbmRlbmNpZXM6WyJwb2xhckF4aXMiLCJhbmdsZUF4aXMiXSxjb29yZGluYXRlU3lzdGVtOm51bGwsZmluZEF4aXNNb2RlbDpmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gdGhpcy5lY01vZGVsLmVhY2hDb21wb25lbnQodCxmdW5jdGlvbih0KXt0LmdldENvb3JkU3lzTW9kZWwoKT09PXRoaXMmJihlPXQpfSx0aGlzKSxlfSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjAsY2VudGVyOlsiNTAlIiwiNTAlIl0scmFkaXVzOiI4MCUifX0pLG5oLnJlZ2lzdGVyKCJwb2xhciIse2RpbWVuc2lvbnM6bVQucHJvdG90eXBlLmRpbWVuc2lvbnMsY3JlYXRlOmZ1bmN0aW9uKGkscyl7dmFyIGw9W107cmV0dXJuIGkuZWFjaENvbXBvbmVudCgicG9sYXIiLGZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IG1UKGUpO2kudXBkYXRlPV9UO3ZhciBuPWkuZ2V0UmFkaXVzQXhpcygpLG89aS5nZXRBbmdsZUF4aXMoKSxhPXQuZmluZEF4aXNNb2RlbCgicmFkaXVzQXhpcyIpLHI9dC5maW5kQXhpc01vZGVsKCJhbmdsZUF4aXMiKTt3VChuLGEpLHdUKG8sciksZnVuY3Rpb24odCxlLGkpe3ZhciBuPWUuZ2V0KCJjZW50ZXIiKSxvPWkuZ2V0V2lkdGgoKSxhPWkuZ2V0SGVpZ2h0KCk7dC5jeD1QbChuWzBdLG8pLHQuY3k9UGwoblsxXSxhKTt2YXIgcj10LmdldFJhZGl1c0F4aXMoKSxzPU1hdGgubWluKG8sYSkvMixsPWUuZ2V0KCJyYWRpdXMiKTtudWxsPT1sP2w9WzAsIjEwMCUiXTprKGwpfHwobD1bMCxsXSksbD1bUGwobFswXSxzKSxQbChsWzFdLHMpXSxyLmludmVyc2U/ci5zZXRFeHRlbnQobFsxXSxsWzBdKTpyLnNldEV4dGVudChsWzBdLGxbMV0pfShpLHQscyksbC5wdXNoKGkpLCh0LmNvb3JkaW5hdGVTeXN0ZW09aSkubW9kZWw9dH0pLGkuZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZigicG9sYXIiPT09dC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSl7dmFyIGU9aS5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJwb2xhciIsaW5kZXg6dC5nZXQoInBvbGFySW5kZXgiKSxpZDp0LmdldCgicG9sYXJJZCIpfSlbMF07dC5jb29yZGluYXRlU3lzdGVtPWUuY29vcmRpbmF0ZVN5c3RlbX19KSxsfX0pO3ZhciBiVD1bImF4aXNMaW5lIiwiYXhpc0xhYmVsIiwiYXhpc1RpY2siLCJtaW5vclRpY2siLCJzcGxpdExpbmUiLCJtaW5vclNwbGl0TGluZSIsInNwbGl0QXJlYSJdO2Z1bmN0aW9uIFNUKHQsZSxpKXtlWzFdPmVbMF0mJihlPWUuc2xpY2UoKS5yZXZlcnNlKCkpO3ZhciBuPXQuY29vcmRUb1BvaW50KFtlWzBdLGldKSxvPXQuY29vcmRUb1BvaW50KFtlWzFdLGldKTtyZXR1cm57eDE6blswXSx5MTpuWzFdLHgyOm9bMF0seTI6b1sxXX19ZnVuY3Rpb24gTVQodCl7cmV0dXJuIHQuZ2V0UmFkaXVzQXhpcygpLmludmVyc2U/MDoxfWZ1bmN0aW9uIElUKHQpe3ZhciBlPXRbMF0saT10W3QubGVuZ3RoLTFdO2UmJmkmJk1hdGguYWJzKE1hdGguYWJzKGUuY29vcmQtaS5jb29yZCktMzYwKTwxZS00JiZ0LnBvcCgpfWh2LmV4dGVuZCh7dHlwZToiYW5nbGVBeGlzIixheGlzUG9pbnRlckNsYXNzOiJQb2xhckF4aXNQb2ludGVyIixyZW5kZXI6ZnVuY3Rpb24oZSx0KXtpZih0aGlzLmdyb3VwLnJlbW92ZUFsbCgpLGUuZ2V0KCJzaG93Iikpe3ZhciBpPWUuYXhpcyxuPWkucG9sYXIsbz1uLmdldFJhZGl1c0F4aXMoKS5nZXRFeHRlbnQoKSxhPWkuZ2V0VGlja3NDb29yZHMoKSxyPWkuZ2V0TWlub3JUaWNrc0Nvb3JkcygpLHM9TihpLmdldFZpZXdMYWJlbHMoKSxmdW5jdGlvbih0KXtyZXR1cm4odD1EKHQpKS5jb29yZD1pLmRhdGFUb0Nvb3JkKHQudGlja1ZhbHVlKSx0fSk7SVQocyksSVQoYSksRShiVCxmdW5jdGlvbih0KXshZS5nZXQodCsiLnNob3ciKXx8aS5zY2FsZS5pc0JsYW5rKCkmJiJheGlzTGluZSIhPT10fHx0aGlzWyJfIit0XShlLG4sYSxyLG8scyl9LHRoaXMpfX0sX2F4aXNMaW5lOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGEscj10LmdldE1vZGVsKCJheGlzTGluZS5saW5lU3R5bGUiKSxzPU1UKGUpLGw9cz8wOjE7KGE9MD09PW9bbF0/bmV3IEhyKHtzaGFwZTp7Y3g6ZS5jeCxjeTplLmN5LHI6b1tzXX0sc3R5bGU6ci5nZXRMaW5lU3R5bGUoKSx6MjoxLHNpbGVudDohMH0pOm5ldyBYcih7c2hhcGU6e2N4OmUuY3gsY3k6ZS5jeSxyOm9bc10scjA6b1tsXX0sc3R5bGU6ci5nZXRMaW5lU3R5bGUoKSx6MjoxLHNpbGVudDohMH0pKS5zdHlsZS5maWxsPW51bGwsdGhpcy5ncm91cC5hZGQoYSl9LF9heGlzVGljazpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPXQuZ2V0TW9kZWwoImF4aXNUaWNrIikscj0oYS5nZXQoImluc2lkZSIpPy0xOjEpKmEuZ2V0KCJsZW5ndGgiKSxzPW9bTVQoZSldLGw9TihpLGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgb3Moe3NoYXBlOlNUKGUsW3MscytyXSx0LmNvb3JkKX0pfSk7dGhpcy5ncm91cC5hZGQoa3MobCx7c3R5bGU6QyhhLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSx7c3Ryb2tlOnQuZ2V0KCJheGlzTGluZS5saW5lU3R5bGUuY29sb3IiKX0pfSkpfSxfbWlub3JUaWNrOmZ1bmN0aW9uKHQsZSxpLG4sbyl7aWYobi5sZW5ndGgpe2Zvcih2YXIgYT10LmdldE1vZGVsKCJheGlzVGljayIpLHI9dC5nZXRNb2RlbCgibWlub3JUaWNrIikscz0oYS5nZXQoImluc2lkZSIpPy0xOjEpKnIuZ2V0KCJsZW5ndGgiKSxsPW9bTVQoZSldLHU9W10saD0wO2g8bi5sZW5ndGg7aCsrKWZvcih2YXIgYz0wO2M8bltoXS5sZW5ndGg7YysrKXUucHVzaChuZXcgb3Moe3NoYXBlOlNUKGUsW2wsbCtzXSxuW2hdW2NdLmNvb3JkKX0pKTt0aGlzLmdyb3VwLmFkZChrcyh1LHtzdHlsZTpDKHIuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLmdldExpbmVTdHlsZSgpLEMoYS5nZXRMaW5lU3R5bGUoKSx7c3Ryb2tlOnQuZ2V0KCJheGlzTGluZS5saW5lU3R5bGUuY29sb3IiKX0pKX0pKX19LF9heGlzTGFiZWw6ZnVuY3Rpb24oYyxkLHQsZSxmLGkpe3ZhciBwPWMuZ2V0Q2F0ZWdvcmllcyghMCksZz1jLmdldE1vZGVsKCJheGlzTGFiZWwiKSxtPWcuZ2V0KCJtYXJnaW4iKSx2PWMuZ2V0KCJ0cmlnZ2VyRXZlbnQiKTtFKGksZnVuY3Rpb24odCxlKXt2YXIgaT1nLG49dC50aWNrVmFsdWUsbz1mW01UKGQpXSxhPWQuY29vcmRUb1BvaW50KFtvK20sdC5jb29yZF0pLHI9ZC5jeCxzPWQuY3ksbD1NYXRoLmFicyhhWzBdLXIpL288LjM/ImNlbnRlciI6YVswXT5yPyJsZWZ0IjoicmlnaHQiLHU9TWF0aC5hYnMoYVsxXS1zKS9vPC4zPyJtaWRkbGUiOmFbMV0+cz8idG9wIjoiYm90dG9tIjtwJiZwW25dJiZwW25dLnRleHRTdHlsZSYmKGk9bmV3IElsKHBbbl0udGV4dFN0eWxlLGcsZy5lY01vZGVsKSk7dmFyIGg9bmV3IEZyKHtzaWxlbnQ6WW0uaXNMYWJlbFNpbGVudChjKX0pO3RoaXMuZ3JvdXAuYWRkKGgpLFFzKGguc3R5bGUsaSx7eDphWzBdLHk6YVsxXSx0ZXh0RmlsbDppLmdldFRleHRDb2xvcigpfHxjLmdldCgiYXhpc0xpbmUubGluZVN0eWxlLmNvbG9yIiksdGV4dDp0LmZvcm1hdHRlZExhYmVsLHRleHRBbGlnbjpsLHRleHRWZXJ0aWNhbEFsaWduOnV9KSx2JiYoaC5ldmVudERhdGE9WW0ubWFrZUF4aXNFdmVudERhdGFCYXNlKGMpLGguZXZlbnREYXRhLnRhcmdldFR5cGU9ImF4aXNMYWJlbCIsaC5ldmVudERhdGEudmFsdWU9dC5yYXdMYWJlbCl9LHRoaXMpfSxfc3BsaXRMaW5lOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9dC5nZXRNb2RlbCgic3BsaXRMaW5lIikuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLHI9YS5nZXQoImNvbG9yIikscz0wO3I9ciBpbnN0YW5jZW9mIEFycmF5P3I6W3JdO2Zvcih2YXIgbD1bXSx1PTA7dTxpLmxlbmd0aDt1Kyspe3ZhciBoPXMrKyVyLmxlbmd0aDtsW2hdPWxbaF18fFtdLGxbaF0ucHVzaChuZXcgb3Moe3NoYXBlOlNUKGUsbyxpW3VdLmNvb3JkKX0pKX1mb3IodT0wO3U8bC5sZW5ndGg7dSsrKXRoaXMuZ3JvdXAuYWRkKGtzKGxbdV0se3N0eWxlOkMoe3N0cm9rZTpyW3Ulci5sZW5ndGhdfSxhLmdldExpbmVTdHlsZSgpKSxzaWxlbnQ6ITAsejp0LmdldCgieiIpfSkpfSxfbWlub3JTcGxpdExpbmU6ZnVuY3Rpb24odCxlLGksbixvKXtpZihuLmxlbmd0aCl7Zm9yKHZhciBhPXQuZ2V0TW9kZWwoIm1pbm9yU3BsaXRMaW5lIikuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLHI9W10scz0wO3M8bi5sZW5ndGg7cysrKWZvcih2YXIgbD0wO2w8bltzXS5sZW5ndGg7bCsrKXIucHVzaChuZXcgb3Moe3NoYXBlOlNUKGUsbyxuW3NdW2xdLmNvb3JkKX0pKTt0aGlzLmdyb3VwLmFkZChrcyhyLHtzdHlsZTphLmdldExpbmVTdHlsZSgpLHNpbGVudDohMCx6OnQuZ2V0KCJ6Iil9KSl9fSxfc3BsaXRBcmVhOmZ1bmN0aW9uKHQsZSxpLG4sbyl7aWYoaS5sZW5ndGgpe3ZhciBhPXQuZ2V0TW9kZWwoInNwbGl0QXJlYSIpLmdldE1vZGVsKCJhcmVhU3R5bGUiKSxyPWEuZ2V0KCJjb2xvciIpLHM9MDtyPXIgaW5zdGFuY2VvZiBBcnJheT9yOltyXTtmb3IodmFyIGw9W10sdT1NYXRoLlBJLzE4MCxoPS1pWzBdLmNvb3JkKnUsYz1NYXRoLm1pbihvWzBdLG9bMV0pLGQ9TWF0aC5tYXgob1swXSxvWzFdKSxmPXQuZ2V0KCJjbG9ja3dpc2UiKSxwPTE7cDxpLmxlbmd0aDtwKyspe3ZhciBnPXMrKyVyLmxlbmd0aDtsW2ddPWxbZ118fFtdLGxbZ10ucHVzaChuZXcgVXIoe3NoYXBlOntjeDplLmN4LGN5OmUuY3kscjA6YyxyOmQsc3RhcnRBbmdsZTpoLGVuZEFuZ2xlOi1pW3BdLmNvb3JkKnUsY2xvY2t3aXNlOmZ9LHNpbGVudDohMH0pKSxoPS1pW3BdLmNvb3JkKnV9Zm9yKHA9MDtwPGwubGVuZ3RoO3ArKyl0aGlzLmdyb3VwLmFkZChrcyhsW3BdLHtzdHlsZTpDKHtmaWxsOnJbcCVyLmxlbmd0aF19LGEuZ2V0QXJlYVN0eWxlKCkpLHNpbGVudDohMH0pKX19fSk7dmFyIFRUPVsiYXhpc0xpbmUiLCJheGlzVGlja0xhYmVsIiwiYXhpc05hbWUiXSxBVD1bInNwbGl0TGluZSIsInNwbGl0QXJlYSIsIm1pbm9yU3BsaXRMaW5lIl07aHYuZXh0ZW5kKHt0eXBlOiJyYWRpdXNBeGlzIixheGlzUG9pbnRlckNsYXNzOiJQb2xhckF4aXNQb2ludGVyIixyZW5kZXI6ZnVuY3Rpb24oZSx0KXtpZih0aGlzLmdyb3VwLnJlbW92ZUFsbCgpLGUuZ2V0KCJzaG93Iikpe3ZhciBpPWUuYXhpcyxuPWkucG9sYXIsbz1uLmdldEFuZ2xlQXhpcygpLGE9aS5nZXRUaWNrc0Nvb3JkcygpLHI9aS5nZXRNaW5vclRpY2tzQ29vcmRzKCkscz1vLmdldEV4dGVudCgpWzBdLGw9aS5nZXRFeHRlbnQoKSx1PWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm57cG9zaXRpb246W3QuY3gsdC5jeV0scm90YXRpb246aS8xODAqTWF0aC5QSSxsYWJlbERpcmVjdGlvbjotMSx0aWNrRGlyZWN0aW9uOi0xLG5hbWVEaXJlY3Rpb246MSxsYWJlbFJvdGF0ZTplLmdldE1vZGVsKCJheGlzTGFiZWwiKS5nZXQoInJvdGF0ZSIpLHoyOjF9fShuLGUscyksaD1uZXcgWW0oZSx1KTtFKFRULGguYWRkLGgpLHRoaXMuZ3JvdXAuYWRkKGguZ2V0R3JvdXAoKSksRShBVCxmdW5jdGlvbih0KXtlLmdldCh0KyIuc2hvdyIpJiYhaS5zY2FsZS5pc0JsYW5rKCkmJnRoaXNbIl8iK3RdKGUsbixzLGwsYSxyKX0sdGhpcyl9fSxfc3BsaXRMaW5lOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9dC5nZXRNb2RlbCgic3BsaXRMaW5lIikuZ2V0TW9kZWwoImxpbmVTdHlsZSIpLHI9YS5nZXQoImNvbG9yIikscz0wO3I9ciBpbnN0YW5jZW9mIEFycmF5P3I6W3JdO2Zvcih2YXIgbD1bXSx1PTA7dTxvLmxlbmd0aDt1Kyspe3ZhciBoPXMrKyVyLmxlbmd0aDtsW2hdPWxbaF18fFtdLGxbaF0ucHVzaChuZXcgSHIoe3NoYXBlOntjeDplLmN4LGN5OmUuY3kscjpvW3VdLmNvb3JkfX0pKX1mb3IodT0wO3U8bC5sZW5ndGg7dSsrKXRoaXMuZ3JvdXAuYWRkKGtzKGxbdV0se3N0eWxlOkMoe3N0cm9rZTpyW3Ulci5sZW5ndGhdLGZpbGw6bnVsbH0sYS5nZXRMaW5lU3R5bGUoKSksc2lsZW50OiEwfSkpfSxfbWlub3JTcGxpdExpbmU6ZnVuY3Rpb24odCxlLGksbixvLGEpe2lmKGEubGVuZ3RoKXtmb3IodmFyIHI9dC5nZXRNb2RlbCgibWlub3JTcGxpdExpbmUiKS5nZXRNb2RlbCgibGluZVN0eWxlIikscz1bXSxsPTA7bDxhLmxlbmd0aDtsKyspZm9yKHZhciB1PTA7dTxhW2xdLmxlbmd0aDt1Kyspcy5wdXNoKG5ldyBIcih7c2hhcGU6e2N4OmUuY3gsY3k6ZS5jeSxyOmFbbF1bdV0uY29vcmR9fSkpO3RoaXMuZ3JvdXAuYWRkKGtzKHMse3N0eWxlOkMoe2ZpbGw6bnVsbH0sci5nZXRMaW5lU3R5bGUoKSksc2lsZW50OiEwfSkpfX0sX3NwbGl0QXJlYTpmdW5jdGlvbih0LGUsaSxuLG8pe2lmKG8ubGVuZ3RoKXt2YXIgYT10LmdldE1vZGVsKCJzcGxpdEFyZWEiKS5nZXRNb2RlbCgiYXJlYVN0eWxlIikscj1hLmdldCgiY29sb3IiKSxzPTA7cj1yIGluc3RhbmNlb2YgQXJyYXk/cjpbcl07Zm9yKHZhciBsPVtdLHU9b1swXS5jb29yZCxoPTE7aDxvLmxlbmd0aDtoKyspe3ZhciBjPXMrKyVyLmxlbmd0aDtsW2NdPWxbY118fFtdLGxbY10ucHVzaChuZXcgVXIoe3NoYXBlOntjeDplLmN4LGN5OmUuY3kscjA6dSxyOm9baF0uY29vcmQsc3RhcnRBbmdsZTowLGVuZEFuZ2xlOjIqTWF0aC5QSX0sc2lsZW50OiEwfSkpLHU9b1toXS5jb29yZH1mb3IoaD0wO2g8bC5sZW5ndGg7aCsrKXRoaXMuZ3JvdXAuYWRkKGtzKGxbaF0se3N0eWxlOkMoe2ZpbGw6cltoJXIubGVuZ3RoXX0sYS5nZXRBcmVhU3R5bGUoKSksc2lsZW50OiEwfSkpfX19KTt2YXIgRFQ9c0kuZXh0ZW5kKHttYWtlRWxPcHRpb246ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1pLmF4aXM7ImFuZ2xlIj09PWEuZGltJiYodGhpcy5hbmltYXRpb25UaHJlc2hvbGQ9TWF0aC5QSS8xOCk7dmFyIHIscz1hLnBvbGFyLGw9cy5nZXRPdGhlckF4aXMoYSkuZ2V0RXh0ZW50KCk7cj1hWyJkYXRhVG8iK3V1KGEuZGltKV0oZSk7dmFyIHU9bi5nZXQoInR5cGUiKTtpZih1JiYibm9uZSIhPT11KXt2YXIgaD1kSShuKSxjPUNUW3VdKGEscyxyLGwsaCk7Yy5zdHlsZT1oLHQuZ3JhcGhpY0tleT1jLnR5cGUsdC5wb2ludGVyPWN9dmFyIGQ9bi5nZXQoImxhYmVsLm1hcmdpbiIpO2ZJKHQsaSxuLG8sZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1lLmF4aXMscj1hLmRhdGFUb0Nvb3JkKHQpLHM9bi5nZXRBbmdsZUF4aXMoKS5nZXRFeHRlbnQoKVswXTtzPXMvMTgwKk1hdGguUEk7dmFyIGwsdSxoLGM9bi5nZXRSYWRpdXNBeGlzKCkuZ2V0RXh0ZW50KCk7aWYoInJhZGl1cyI9PT1hLmRpbSl7dmFyIGQ9ZWUoKTtyZShkLGQscyksYWUoZCxkLFtuLmN4LG4uY3ldKSxsPWhsKFtyLC1vXSxkKTt2YXIgZj1lLmdldE1vZGVsKCJheGlzTGFiZWwiKS5nZXQoInJvdGF0ZSIpfHwwLHA9WW0uaW5uZXJUZXh0TGF5b3V0KHMsZipNYXRoLlBJLzE4MCwtMSk7dT1wLnRleHRBbGlnbixoPXAudGV4dFZlcnRpY2FsQWxpZ259ZWxzZXt2YXIgZz1jWzFdO2w9bi5jb29yZFRvUG9pbnQoW2crbyxyXSk7dmFyIG09bi5jeCx2PW4uY3k7dT1NYXRoLmFicyhsWzBdLW0pL2c8LjM/ImNlbnRlciI6bFswXT5tPyJsZWZ0IjoicmlnaHQiLGg9TWF0aC5hYnMobFsxXS12KS9nPC4zPyJtaWRkbGUiOmxbMV0+dj8idG9wIjoiYm90dG9tIn1yZXR1cm57cG9zaXRpb246bCxhbGlnbjp1LHZlcnRpY2FsQWxpZ246aH19KGUsaSwwLHMsZCkpfX0pO3ZhciBDVD17bGluZTpmdW5jdGlvbih0LGUsaSxuLG8pe3JldHVybiJhbmdsZSI9PT10LmRpbT97dHlwZToiTGluZSIsc2hhcGU6dkkoZS5jb29yZFRvUG9pbnQoW25bMF0saV0pLGUuY29vcmRUb1BvaW50KFtuWzFdLGldKSl9Ont0eXBlOiJDaXJjbGUiLHNoYXBlOntjeDplLmN4LGN5OmUuY3kscjppfX19LHNoYWRvdzpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPU1hdGgubWF4KDEsdC5nZXRCYW5kV2lkdGgoKSkscj1NYXRoLlBJLzE4MDtyZXR1cm4iYW5nbGUiPT09dC5kaW0/e3R5cGU6IlNlY3RvciIsc2hhcGU6eEkoZS5jeCxlLmN5LG5bMF0sblsxXSwoLWktYS8yKSpyLChhLzItaSkqcil9Ont0eXBlOiJTZWN0b3IiLHNoYXBlOnhJKGUuY3gsZS5jeSxpLWEvMixpK2EvMiwwLDIqTWF0aC5QSSl9fX07ZnVuY3Rpb24gTFQobix0KXt0LnVwZGF0ZT0idXBkYXRlVmlldyIsZ2YodCxmdW5jdGlvbih0LGUpe3ZhciBpPXt9O3JldHVybiBlLmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJnZW8iLHF1ZXJ5OnR9LGZ1bmN0aW9uKGUpe2Vbbl0odC5uYW1lKSxFKGUuY29vcmRpbmF0ZVN5c3RlbS5yZWdpb25zLGZ1bmN0aW9uKHQpe2lbdC5uYW1lXT1lLmlzU2VsZWN0ZWQodC5uYW1lKXx8ITF9KX0pLHtzZWxlY3RlZDppLG5hbWU6dC5uYW1lfX0pfWh2LnJlZ2lzdGVyQXhpc1BvaW50ZXJDbGFzcygiUG9sYXJBeGlzUG9pbnRlciIsRFQpLHZmKFQoZnVuY3Rpb24odCxlLGkpe3ZhciBOPXt9LE89ZnVuY3Rpb24odCl7dmFyIGc9e307RSh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXREYXRhKCksbj10LmNvb3JkaW5hdGVTeXN0ZW0sbz1uLmdldEJhc2VBeGlzKCksYT1kVChuLG8pLHI9by5nZXRFeHRlbnQoKSxzPSJjYXRlZ29yeSI9PT1vLnR5cGU/by5nZXRCYW5kV2lkdGgoKTpNYXRoLmFicyhyWzFdLXJbMF0pL2kuY291bnQoKSxsPWdbYV18fHtiYW5kV2lkdGg6cyxyZW1haW5lZFdpZHRoOnMsYXV0b1dpZHRoQ291bnQ6MCxjYXRlZ29yeUdhcDoiMjAlIixnYXA6IjMwJSIsc3RhY2tzOnt9fSx1PWwuc3RhY2tzO2dbYV09bDt2YXIgaD1jVCh0KTt1W2hdfHxsLmF1dG9XaWR0aENvdW50KyssdVtoXT11W2hdfHx7d2lkdGg6MCxtYXhXaWR0aDowfTt2YXIgYz1QbCh0LmdldCgiYmFyV2lkdGgiKSxzKSxkPVBsKHQuZ2V0KCJiYXJNYXhXaWR0aCIpLHMpLGY9dC5nZXQoImJhckdhcCIpLHA9dC5nZXQoImJhckNhdGVnb3J5R2FwIik7YyYmIXVbaF0ud2lkdGgmJihjPU1hdGgubWluKGwucmVtYWluZWRXaWR0aCxjKSx1W2hdLndpZHRoPWMsbC5yZW1haW5lZFdpZHRoLT1jKSxkJiYodVtoXS5tYXhXaWR0aD1kKSxudWxsIT1mJiYobC5nYXA9ZiksbnVsbCE9cCYmKGwuY2F0ZWdvcnlHYXA9cCl9KTt2YXIgZD17fTtyZXR1cm4gRShnLGZ1bmN0aW9uKHQsaSl7ZFtpXT17fTt2YXIgZT10LnN0YWNrcyxuPXQuYmFuZFdpZHRoLG89UGwodC5jYXRlZ29yeUdhcCxuKSxhPVBsKHQuZ2FwLDEpLHI9dC5yZW1haW5lZFdpZHRoLHM9dC5hdXRvV2lkdGhDb3VudCxsPShyLW8pLyhzKyhzLTEpKmEpO2w9TWF0aC5tYXgobCwwKSxFKGUsZnVuY3Rpb24odCxlKXt2YXIgaT10Lm1heFdpZHRoO2kmJmk8bCYmKGk9TWF0aC5taW4oaSxyKSx0LndpZHRoJiYoaT1NYXRoLm1pbihpLHQud2lkdGgpKSxyLT1pLHQud2lkdGg9aSxzLS0pfSksbD0oci1vKS8ocysocy0xKSphKSxsPU1hdGgubWF4KGwsMCk7dmFyIHUsaD0wO0UoZSxmdW5jdGlvbih0LGUpe3Qud2lkdGh8fCh0LndpZHRoPWwpLGgrPSh1PXQpLndpZHRoKigxK2EpfSksdSYmKGgtPXUud2lkdGgqYSk7dmFyIGM9LWgvMjtFKGUsZnVuY3Rpb24odCxlKXtkW2ldW2VdPWRbaV1bZV18fHtvZmZzZXQ6Yyx3aWR0aDp0LndpZHRofSxjKz10LndpZHRoKigxK2EpfSl9KSxkfShNKGUuZ2V0U2VyaWVzQnlUeXBlKHQpLGZ1bmN0aW9uKHQpe3JldHVybiFlLmlzU2VyaWVzRmlsdGVyZWQodCkmJnQuY29vcmRpbmF0ZVN5c3RlbSYmInBvbGFyIj09PXQuY29vcmRpbmF0ZVN5c3RlbS50eXBlfSkpO2UuZWFjaFNlcmllc0J5VHlwZSh0LGZ1bmN0aW9uKHQpe2lmKCJwb2xhciI9PT10LmNvb3JkaW5hdGVTeXN0ZW0udHlwZSl7dmFyIGU9dC5nZXREYXRhKCksaT10LmNvb3JkaW5hdGVTeXN0ZW0sbj1pLmdldEJhc2VBeGlzKCksbz1kVChpLG4pLGE9Y1QodCkscj1PW29dW2FdLHM9ci5vZmZzZXQsbD1yLndpZHRoLHU9aS5nZXRPdGhlckF4aXMobiksaD10LmNvb3JkaW5hdGVTeXN0ZW0uY3gsYz10LmNvb3JkaW5hdGVTeXN0ZW0uY3ksZD10LmdldCgiYmFyTWluSGVpZ2h0Iil8fDAsZj10LmdldCgiYmFyTWluQW5nbGUiKXx8MDtOW2FdPU5bYV18fFtdO2Zvcih2YXIgcD1lLm1hcERpbWVuc2lvbih1LmRpbSksZz1lLm1hcERpbWVuc2lvbihuLmRpbSksbT1scChlLHApLHY9InJhZGl1cyIhPT1uLmRpbXx8IXQuZ2V0KCJyb3VuZENhcCIsITApLHk9dS5nZXRFeHRlbnQoKVswXSx4PTAsXz1lLmNvdW50KCk7eDxfO3grKyl7dmFyIHc9ZS5nZXQocCx4KSxiPWUuZ2V0KGcseCk7aWYoIWlzTmFOKHcpKXt2YXIgUyxNLEksVCxBPTA8PXc/InAiOiJuIixEPXk7aWYobSYmKE5bYV1bYl18fChOW2FdW2JdPXtwOnksbjp5fSksRD1OW2FdW2JdW0FdKSwicmFkaXVzIj09PXUuZGltKXt2YXIgQz11LmRhdGFUb1JhZGl1cyh3KS15LEw9bi5kYXRhVG9BbmdsZShiKTtNYXRoLmFicyhDKTxkJiYoQz0oQzwwPy0xOjEpKmQpLE09KFM9RCkrQyxUPShJPUwtcyktbCxtJiYoTlthXVtiXVtBXT1NKX1lbHNle3ZhciBrPXUuZGF0YVRvQW5nbGUodyx2KS15LFA9bi5kYXRhVG9SYWRpdXMoYik7TWF0aC5hYnMoayk8ZiYmKGs9KGs8MD8tMToxKSpmKSxNPShTPVArcykrbCxUPShJPUQpK2ssbSYmKE5bYV1bYl1bQV09VCl9ZS5zZXRJdGVtTGF5b3V0KHgse2N4OmgsY3k6YyxyMDpTLHI6TSxzdGFydEFuZ2xlOi1JKk1hdGguUEkvMTgwLGVuZEFuZ2xlOi1UKk1hdGguUEkvMTgwfSl9fX19LHRoaXMpfSwiYmFyIikpLGJmKHt0eXBlOiJwb2xhciJ9KSxiKFR1LmV4dGVuZCh7dHlwZToiZ2VvIixjb29yZGluYXRlU3lzdGVtOm51bGwsbGF5b3V0TW9kZToiYm94Iixpbml0OmZ1bmN0aW9uKHQpe1R1LnByb3RvdHlwZS5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx6byh0LCJsYWJlbCIsWyJzaG93Il0pfSxvcHRpb25VcGRhdGVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb24saT10aGlzO3QucmVnaW9ucz1heC5nZXRGaWxsZWRSZWdpb25zKHQucmVnaW9ucyx0Lm1hcCx0Lm5hbWVNYXApLHRoaXMuX29wdGlvbk1vZGVsTWFwPVModC5yZWdpb25zfHxbXSxmdW5jdGlvbih0LGUpe3JldHVybiBlLm5hbWUmJnQuc2V0KGUubmFtZSxuZXcgSWwoZSxpKSksdH0sUSgpKSx0aGlzLnVwZGF0ZVNlbGVjdGVkTWFwKHQucmVnaW9ucyl9LGRlZmF1bHRPcHRpb246e3psZXZlbDowLHo6MCxzaG93OiEwLGxlZnQ6ImNlbnRlciIsdG9wOiJjZW50ZXIiLGFzcGVjdFNjYWxlOm51bGwsc2lsZW50OiExLG1hcDoiIixib3VuZGluZ0Nvb3JkczpudWxsLGNlbnRlcjpudWxsLHpvb206MSxzY2FsZUxpbWl0Om51bGwsbGFiZWw6e3Nob3c6ITEsY29sb3I6IiMwMDAifSxpdGVtU3R5bGU6e2JvcmRlcldpZHRoOi41LGJvcmRlckNvbG9yOiIjNDQ0Iixjb2xvcjoiI2VlZSJ9LGVtcGhhc2lzOntsYWJlbDp7c2hvdzohMCxjb2xvcjoicmdiKDEwMCwwLDApIn0saXRlbVN0eWxlOntjb2xvcjoicmdiYSgyNTUsMjE1LDAsMC44KSJ9fSxyZWdpb25zOltdfSxnZXRSZWdpb25Nb2RlbDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fb3B0aW9uTW9kZWxNYXAuZ2V0KHQpfHxuZXcgSWwobnVsbCx0aGlzLHRoaXMuZWNNb2RlbCl9LGdldEZvcm1hdHRlZExhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5nZXRSZWdpb25Nb2RlbCh0KS5nZXQoImxhYmVsIisoIm5vcm1hbCI9PT1lPyIuIjplKyIuIikrImZvcm1hdHRlciIpLG49e25hbWU6dH07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGk/KG4uc3RhdHVzPWUsaShuKSk6InN0cmluZyI9PXR5cGVvZiBpP2kucmVwbGFjZSgie2F9IixudWxsIT10P3Q6IiIpOnZvaWQgMH0sc2V0Wm9vbTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbi56b29tPXR9LHNldENlbnRlcjpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbi5jZW50ZXI9dH19KSxWdiksYmYoe3R5cGU6ImdlbyIsaW5pdDpmdW5jdGlvbih0LGUpe3ZhciBpPW5ldyBVeShlLCEwKTt0aGlzLl9tYXBEcmF3PWksdGhpcy5ncm91cC5hZGQoaS5ncm91cCl9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSxuKXtpZighbnx8Imdlb1RvZ2dsZVNlbGVjdCIhPT1uLnR5cGV8fG4uZnJvbSE9PXRoaXMudWlkKXt2YXIgbz10aGlzLl9tYXBEcmF3O3QuZ2V0KCJzaG93Iik/by5kcmF3KHQsZSxpLHRoaXMsbik6dGhpcy5fbWFwRHJhdy5ncm91cC5yZW1vdmVBbGwoKSx0aGlzLmdyb3VwLnNpbGVudD10LmdldCgic2lsZW50Iil9fSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5fbWFwRHJhdyYmdGhpcy5fbWFwRHJhdy5yZW1vdmUoKX19KSxMVCgidG9nZ2xlU2VsZWN0ZWQiLHt0eXBlOiJnZW9Ub2dnbGVTZWxlY3QiLGV2ZW50OiJnZW9zZWxlY3RjaGFuZ2VkIn0pLExUKCJzZWxlY3QiLHt0eXBlOiJnZW9TZWxlY3QiLGV2ZW50OiJnZW9zZWxlY3RlZCJ9KSxMVCgidW5TZWxlY3QiLHt0eXBlOiJnZW9VblNlbGVjdCIsZXZlbnQ6Imdlb3Vuc2VsZWN0ZWQifSk7ZnVuY3Rpb24ga1QodCxlLGkpe3RoaXMuX21vZGVsPXR9ZnVuY3Rpb24gUFQodCxlLGksbil7dmFyIG89aS5jYWxlbmRhck1vZGVsLGE9aS5zZXJpZXNNb2RlbCxyPW8/by5jb29yZGluYXRlU3lzdGVtOmE/YS5jb29yZGluYXRlU3lzdGVtOm51bGw7cmV0dXJuIHI9PT10aGlzP3JbdF0obik6bnVsbH1rVC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmtULHR5cGU6ImNhbGVuZGFyIixkaW1lbnNpb25zOlsidGltZSIsInZhbHVlIl0sZ2V0RGltZW5zaW9uc0luZm86ZnVuY3Rpb24oKXtyZXR1cm5be25hbWU6InRpbWUiLHR5cGU6InRpbWUifSwidmFsdWUiXX0sZ2V0UmFuZ2VJbmZvOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JhbmdlSW5mb30sZ2V0TW9kZWw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZWx9LGdldFJlY3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdH0sZ2V0Q2VsbFdpZHRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N3fSxnZXRDZWxsSGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NofSxnZXRPcmllbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3JpZW50fSxnZXRGaXJzdERheU9mV2VlazpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9maXJzdERheU9mV2Vla30sZ2V0RGF0ZUluZm86ZnVuY3Rpb24odCl7dmFyIGU9KHQ9SGwodCkpLmdldEZ1bGxZZWFyKCksaT10LmdldE1vbnRoKCkrMTtpPWk8MTA/IjAiK2k6aTt2YXIgbj10LmdldERhdGUoKTtuPW48MTA/IjAiK246bjt2YXIgbz10LmdldERheSgpO3JldHVybnt5OmUsbTppLGQ6bixkYXk6bz1NYXRoLmFicygobys3LXRoaXMuZ2V0Rmlyc3REYXlPZldlZWsoKSklNyksdGltZTp0LmdldFRpbWUoKSxmb3JtYXRlZERhdGU6ZSsiLSIraSsiLSIrbixkYXRlOnR9fSxnZXROZXh0TkRheTpmdW5jdGlvbih0LGUpe3JldHVybiAwPT09KGU9ZXx8MCl8fCh0PW5ldyBEYXRlKHRoaXMuZ2V0RGF0ZUluZm8odCkudGltZSkpLnNldERhdGUodC5nZXREYXRlKCkrZSksdGhpcy5nZXREYXRlSW5mbyh0KX0sdXBkYXRlOmZ1bmN0aW9uKHQsZSl7dGhpcy5fZmlyc3REYXlPZldlZWs9K3RoaXMuX21vZGVsLmdldE1vZGVsKCJkYXlMYWJlbCIpLmdldCgiZmlyc3REYXkiKSx0aGlzLl9vcmllbnQ9dGhpcy5fbW9kZWwuZ2V0KCJvcmllbnQiKSx0aGlzLl9saW5lV2lkdGg9dGhpcy5fbW9kZWwuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLmdldEl0ZW1TdHlsZSgpLmxpbmVXaWR0aHx8MCx0aGlzLl9yYW5nZUluZm89dGhpcy5fZ2V0UmFuZ2VJbmZvKHRoaXMuX2luaXRSYW5nZU9wdGlvbigpKTt2YXIgaT10aGlzLl9yYW5nZUluZm8ud2Vla3N8fDEsbj1bIndpZHRoIiwiaGVpZ2h0Il0sbz10aGlzLl9tb2RlbC5nZXQoImNlbGxTaXplIikuc2xpY2UoKSxhPXRoaXMuX21vZGVsLmdldEJveExheW91dFBhcmFtcygpLHI9Imhvcml6b250YWwiPT09dGhpcy5fb3JpZW50P1tpLDddOls3LGldO0UoWzAsMV0sZnVuY3Rpb24odCl7dShvLHQpJiYoYVtuW3RdXT1vW3RdKnJbdF0pfSk7dmFyIHM9e3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0sbD10aGlzLl9yZWN0PXZ1KGEscyk7ZnVuY3Rpb24gdSh0LGUpe3JldHVybiBudWxsIT10W2VdJiYiYXV0byIhPT10W2VdfUUoWzAsMV0sZnVuY3Rpb24odCl7dShvLHQpfHwob1t0XT1sW25bdF1dL3JbdF0pfSksdGhpcy5fc3c9b1swXSx0aGlzLl9zaD1vWzFdfSxkYXRhVG9Qb2ludDpmdW5jdGlvbih0LGUpe2sodCkmJih0PXRbMF0pLG51bGw9PWUmJihlPSEwKTt2YXIgaT10aGlzLmdldERhdGVJbmZvKHQpLG49dGhpcy5fcmFuZ2VJbmZvLG89aS5mb3JtYXRlZERhdGU7aWYoZSYmIShpLnRpbWU+PW4uc3RhcnQudGltZSYmaS50aW1lPG4uZW5kLnRpbWUrODY0ZTUpKXJldHVybltOYU4sTmFOXTt2YXIgYT1pLmRheSxyPXRoaXMuX2dldFJhbmdlSW5mbyhbbi5zdGFydC50aW1lLG9dKS5udGhXZWVrO3JldHVybiJ2ZXJ0aWNhbCI9PT10aGlzLl9vcmllbnQ/W3RoaXMuX3JlY3QueCthKnRoaXMuX3N3K3RoaXMuX3N3LzIsdGhpcy5fcmVjdC55K3IqdGhpcy5fc2grdGhpcy5fc2gvMl06W3RoaXMuX3JlY3QueCtyKnRoaXMuX3N3K3RoaXMuX3N3LzIsdGhpcy5fcmVjdC55K2EqdGhpcy5fc2grdGhpcy5fc2gvMl19LHBvaW50VG9EYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucG9pbnRUb0RhdGUodCk7cmV0dXJuIGUmJmUudGltZX0sZGF0YVRvUmVjdDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuZGF0YVRvUG9pbnQodCxlKTtyZXR1cm57Y29udGVudFNoYXBlOnt4OmlbMF0tKHRoaXMuX3N3LXRoaXMuX2xpbmVXaWR0aCkvMix5OmlbMV0tKHRoaXMuX3NoLXRoaXMuX2xpbmVXaWR0aCkvMix3aWR0aDp0aGlzLl9zdy10aGlzLl9saW5lV2lkdGgsaGVpZ2h0OnRoaXMuX3NoLXRoaXMuX2xpbmVXaWR0aH0sY2VudGVyOmksdGw6W2lbMF0tdGhpcy5fc3cvMixpWzFdLXRoaXMuX3NoLzJdLHRyOltpWzBdK3RoaXMuX3N3LzIsaVsxXS10aGlzLl9zaC8yXSxicjpbaVswXSt0aGlzLl9zdy8yLGlbMV0rdGhpcy5fc2gvMl0sYmw6W2lbMF0tdGhpcy5fc3cvMixpWzFdK3RoaXMuX3NoLzJdfX0scG9pbnRUb0RhdGU6ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5mbG9vcigodFswXS10aGlzLl9yZWN0LngpL3RoaXMuX3N3KSsxLGk9TWF0aC5mbG9vcigodFsxXS10aGlzLl9yZWN0LnkpL3RoaXMuX3NoKSsxLG49dGhpcy5fcmFuZ2VJbmZvLnJhbmdlO3JldHVybiJ2ZXJ0aWNhbCI9PT10aGlzLl9vcmllbnQ/dGhpcy5fZ2V0RGF0ZUJ5V2Vla3NBbmREYXkoaSxlLTEsbik6dGhpcy5fZ2V0RGF0ZUJ5V2Vla3NBbmREYXkoZSxpLTEsbil9LGNvbnZlcnRUb1BpeGVsOlQoUFQsImRhdGFUb1BvaW50IiksY29udmVydEZyb21QaXhlbDpUKFBULCJwb2ludFRvRGF0YSIpLF9pbml0UmFuZ2VPcHRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9tb2RlbC5nZXQoInJhbmdlIiksZT10O2lmKGsoZSkmJjE9PT1lLmxlbmd0aCYmKGU9ZVswXSksL15cZHs0fSQvLnRlc3QoZSkmJih0PVtlKyItMDEtMDEiLGUrIi0xMi0zMSJdKSwvXlxkezR9W1wvfC1dXGR7MSwyfSQvLnRlc3QoZSkpe3ZhciBpPXRoaXMuZ2V0RGF0ZUluZm8oZSksbj1pLmRhdGU7bi5zZXRNb250aChuLmdldE1vbnRoKCkrMSk7dmFyIG89dGhpcy5nZXROZXh0TkRheShuLC0xKTt0PVtpLmZvcm1hdGVkRGF0ZSxvLmZvcm1hdGVkRGF0ZV19L15cZHs0fVtcL3wtXVxkezEsMn1bXC98LV1cZHsxLDJ9JC8udGVzdChlKSYmKHQ9W2UsZV0pO3ZhciBhPXRoaXMuX2dldFJhbmdlSW5mbyh0KTtyZXR1cm4gYS5zdGFydC50aW1lPmEuZW5kLnRpbWUmJnQucmV2ZXJzZSgpLHR9LF9nZXRSYW5nZUluZm86ZnVuY3Rpb24odCl7dmFyIGU7KHQ9W3RoaXMuZ2V0RGF0ZUluZm8odFswXSksdGhpcy5nZXREYXRlSW5mbyh0WzFdKV0pWzBdLnRpbWU+dFsxXS50aW1lJiYoZT0hMCx0LnJldmVyc2UoKSk7dmFyIGk9TWF0aC5mbG9vcih0WzFdLnRpbWUvODY0ZTUpLU1hdGguZmxvb3IodFswXS50aW1lLzg2NGU1KSsxLG49bmV3IERhdGUodFswXS50aW1lKSxvPW4uZ2V0RGF0ZSgpLGE9dFsxXS5kYXRlLmdldERhdGUoKTtpZihuLnNldERhdGUobytpLTEpLG4uZ2V0RGF0ZSgpIT09YSlmb3IodmFyIHI9MDxuLmdldFRpbWUoKS10WzFdLnRpbWU/MTotMTtuLmdldERhdGUoKSE9PWEmJjA8KG4uZ2V0VGltZSgpLXRbMV0udGltZSkqcjspaS09cixuLnNldERhdGUobytpLTEpO3ZhciBzPU1hdGguZmxvb3IoKGkrdFswXS5kYXkrNikvNyksbD1lPzEtczpzLTE7cmV0dXJuIGUmJnQucmV2ZXJzZSgpLHtyYW5nZTpbdFswXS5mb3JtYXRlZERhdGUsdFsxXS5mb3JtYXRlZERhdGVdLHN0YXJ0OnRbMF0sZW5kOnRbMV0sYWxsRGF5Omksd2Vla3M6cyxudGhXZWVrOmwsZndlZWs6dFswXS5kYXksbHdlZWs6dFsxXS5kYXl9fSxfZ2V0RGF0ZUJ5V2Vla3NBbmREYXk6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX2dldFJhbmdlSW5mbyhpKTtpZih0Pm4ud2Vla3N8fDA9PT10JiZlPG4uZndlZWt8fHQ9PT1uLndlZWtzJiZlPm4ubHdlZWspcmV0dXJuITE7dmFyIG89NyoodC0xKS1uLmZ3ZWVrK2UsYT1uZXcgRGF0ZShuLnN0YXJ0LnRpbWUpO3JldHVybiBhLnNldERhdGUobi5zdGFydC5kK28pLHRoaXMuZ2V0RGF0ZUluZm8oYSl9fSxrVC5kaW1lbnNpb25zPWtULnByb3RvdHlwZS5kaW1lbnNpb25zLGtULmdldERpbWVuc2lvbnNJbmZvPWtULnByb3RvdHlwZS5nZXREaW1lbnNpb25zSW5mbyxrVC5jcmVhdGU9ZnVuY3Rpb24oaSxuKXt2YXIgbz1bXTtyZXR1cm4gaS5lYWNoQ29tcG9uZW50KCJjYWxlbmRhciIsZnVuY3Rpb24odCl7dmFyIGU9bmV3IGtUKHQsaSxuKTtvLnB1c2goZSksdC5jb29yZGluYXRlU3lzdGVtPWV9KSxpLmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7ImNhbGVuZGFyIj09PXQuZ2V0KCJjb29yZGluYXRlU3lzdGVtIikmJih0LmNvb3JkaW5hdGVTeXN0ZW09b1t0LmdldCgiY2FsZW5kYXJJbmRleCIpfHwwXSl9KSxvfSxuaC5yZWdpc3RlcigiY2FsZW5kYXIiLGtUKTt2YXIgTlQ9VHUuZXh0ZW5kKHt0eXBlOiJjYWxlbmRhciIsY29vcmRpbmF0ZVN5c3RlbTpudWxsLGRlZmF1bHRPcHRpb246e3psZXZlbDowLHo6MixsZWZ0OjgwLHRvcDo2MCxjZWxsU2l6ZToyMCxvcmllbnQ6Imhvcml6b250YWwiLHNwbGl0TGluZTp7c2hvdzohMCxsaW5lU3R5bGU6e2NvbG9yOiIjMDAwIix3aWR0aDoxLHR5cGU6InNvbGlkIn19LGl0ZW1TdHlsZTp7Y29sb3I6IiNmZmYiLGJvcmRlcldpZHRoOjEsYm9yZGVyQ29sb3I6IiNjY2MifSxkYXlMYWJlbDp7c2hvdzohMCxmaXJzdERheTowLHBvc2l0aW9uOiJzdGFydCIsbWFyZ2luOiI1MCUiLG5hbWVNYXA6ImVuIixjb2xvcjoiIzAwMCJ9LG1vbnRoTGFiZWw6e3Nob3c6ITAscG9zaXRpb246InN0YXJ0IixtYXJnaW46NSxhbGlnbjoiY2VudGVyIixuYW1lTWFwOiJlbiIsZm9ybWF0dGVyOm51bGwsY29sb3I6IiMwMDAifSx5ZWFyTGFiZWw6e3Nob3c6ITAscG9zaXRpb246bnVsbCxtYXJnaW46MzAsZm9ybWF0dGVyOm51bGwsY29sb3I6IiNjY2MiLGZvbnRGYW1pbHk6InNhbnMtc2VyaWYiLGZvbnRXZWlnaHQ6ImJvbGRlciIsZm9udFNpemU6MjB9fSxpbml0OmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPV91KHQpO05ULnN1cGVyQXBwbHkodGhpcywiaW5pdCIsYXJndW1lbnRzKSxPVCh0LG8pfSxtZXJnZU9wdGlvbjpmdW5jdGlvbih0LGUpe05ULnN1cGVyQXBwbHkodGhpcywibWVyZ2VPcHRpb24iLGFyZ3VtZW50cyksT1QodGhpcy5vcHRpb24sdCl9fSk7ZnVuY3Rpb24gT1QodCxlKXt2YXIgaT10LmNlbGxTaXplO2soaSk/MT09PWkubGVuZ3RoJiYoaVsxXT1pWzBdKTppPXQuY2VsbFNpemU9W2ksaV07dmFyIG49TihbMCwxXSxmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbCE9dFtwdVtlXVswXV18fG51bGwhPXRbcHVbZV1bMV1dJiZudWxsIT10W3B1W2VdWzJdXX0oZSx0KSYmKGlbdF09ImF1dG8iKSxudWxsIT1pW3RdJiYiYXV0byIhPT1pW3RdfSk7eHUodCxlLHt0eXBlOiJib3giLGlnbm9yZVNpemU6bn0pfXZhciBFVD17RU46WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXSxDTjpbIuS4gOaciCIsIuS6jOaciCIsIuS4ieaciCIsIuWbm+aciCIsIuS6lOaciCIsIuWFreaciCIsIuS4g+aciCIsIuWFq+aciCIsIuS5neaciCIsIuWNgeaciCIsIuWNgeS4gOaciCIsIuWNgeS6jOaciCJdfSx6VD17RU46WyJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIl0sQ046WyLml6UiLCLkuIAiLCLkuowiLCLkuIkiLCLlm5siLCLkupQiLCLlha0iXX07YmYoe3R5cGU6ImNhbGVuZGFyIixfdGxwb2ludHM6bnVsbCxfYmxwb2ludHM6bnVsbCxfZmlyc3REYXlPZk1vbnRoOm51bGwsX2ZpcnN0RGF5UG9pbnRzOm51bGwscmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLmdyb3VwO24ucmVtb3ZlQWxsKCk7dmFyIG89dC5jb29yZGluYXRlU3lzdGVtLGE9by5nZXRSYW5nZUluZm8oKSxyPW8uZ2V0T3JpZW50KCk7dGhpcy5fcmVuZGVyRGF5UmVjdCh0LGEsbiksdGhpcy5fcmVuZGVyTGluZXModCxhLHIsbiksdGhpcy5fcmVuZGVyWWVhclRleHQodCxhLHIsbiksdGhpcy5fcmVuZGVyTW9udGhUZXh0KHQscixuKSx0aGlzLl9yZW5kZXJXZWVrVGV4dCh0LGEscixuKX0sX3JlbmRlckRheVJlY3Q6ZnVuY3Rpb24odCxlLGkpe2Zvcih2YXIgbj10LmNvb3JkaW5hdGVTeXN0ZW0sbz10LmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSxhPW4uZ2V0Q2VsbFdpZHRoKCkscj1uLmdldENlbGxIZWlnaHQoKSxzPWUuc3RhcnQudGltZTtzPD1lLmVuZC50aW1lO3M9bi5nZXROZXh0TkRheShzLDEpLnRpbWUpe3ZhciBsPW4uZGF0YVRvUmVjdChbc10sITEpLnRsLHU9bmV3IGlzKHtzaGFwZTp7eDpsWzBdLHk6bFsxXSx3aWR0aDphLGhlaWdodDpyfSxjdXJzb3I6ImRlZmF1bHQiLHN0eWxlOm99KTtpLmFkZCh1KX19LF9yZW5kZXJMaW5lczpmdW5jdGlvbihpLHQsbixvKXt2YXIgYT10aGlzLHI9aS5jb29yZGluYXRlU3lzdGVtLHM9aS5nZXRNb2RlbCgic3BsaXRMaW5lLmxpbmVTdHlsZSIpLmdldExpbmVTdHlsZSgpLGw9aS5nZXQoInNwbGl0TGluZS5zaG93IiksZT1zLmxpbmVXaWR0aDt0aGlzLl90bHBvaW50cz1bXSx0aGlzLl9ibHBvaW50cz1bXSx0aGlzLl9maXJzdERheU9mTW9udGg9W10sdGhpcy5fZmlyc3REYXlQb2ludHM9W107Zm9yKHZhciB1PXQuc3RhcnQsaD0wO3UudGltZTw9dC5lbmQudGltZTtoKyspe2QodS5mb3JtYXRlZERhdGUpLDA9PT1oJiYodT1yLmdldERhdGVJbmZvKHQuc3RhcnQueSsiLSIrdC5zdGFydC5tKSk7dmFyIGM9dS5kYXRlO2Muc2V0TW9udGgoYy5nZXRNb250aCgpKzEpLHU9ci5nZXREYXRlSW5mbyhjKX1mdW5jdGlvbiBkKHQpe2EuX2ZpcnN0RGF5T2ZNb250aC5wdXNoKHIuZ2V0RGF0ZUluZm8odCkpLGEuX2ZpcnN0RGF5UG9pbnRzLnB1c2goci5kYXRhVG9SZWN0KFt0XSwhMSkudGwpO3ZhciBlPWEuX2dldExpbmVQb2ludHNPZk9uZVdlZWsoaSx0LG4pO2EuX3RscG9pbnRzLnB1c2goZVswXSksYS5fYmxwb2ludHMucHVzaChlW2UubGVuZ3RoLTFdKSxsJiZhLl9kcmF3U3BsaXRsaW5lKGUscyxvKX1kKHIuZ2V0TmV4dE5EYXkodC5lbmQudGltZSwxKS5mb3JtYXRlZERhdGUpLGwmJnRoaXMuX2RyYXdTcGxpdGxpbmUoYS5fZ2V0RWRnZXNQb2ludHMoYS5fdGxwb2ludHMsZSxuKSxzLG8pLGwmJnRoaXMuX2RyYXdTcGxpdGxpbmUoYS5fZ2V0RWRnZXNQb2ludHMoYS5fYmxwb2ludHMsZSxuKSxzLG8pfSxfZ2V0RWRnZXNQb2ludHM6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPVt0WzBdLnNsaWNlKCksdFt0Lmxlbmd0aC0xXS5zbGljZSgpXSxvPSJob3Jpem9udGFsIj09PWk/MDoxO3JldHVybiBuWzBdW29dPW5bMF1bb10tZS8yLG5bMV1bb109blsxXVtvXStlLzIsbn0sX2RyYXdTcGxpdGxpbmU6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPW5ldyBLcih7ejI6MjAsc2hhcGU6e3BvaW50czp0fSxzdHlsZTplfSk7aS5hZGQobil9LF9nZXRMaW5lUG9pbnRzT2ZPbmVXZWVrOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10LmNvb3JkaW5hdGVTeXN0ZW07ZT1uLmdldERhdGVJbmZvKGUpO2Zvcih2YXIgbz1bXSxhPTA7YTw3O2ErKyl7dmFyIHI9bi5nZXROZXh0TkRheShlLnRpbWUsYSkscz1uLmRhdGFUb1JlY3QoW3IudGltZV0sITEpO29bMipyLmRheV09cy50bCxvWzIqci5kYXkrMV09c1siaG9yaXpvbnRhbCI9PT1pPyJibCI6InRyIl19cmV0dXJuIG99LF9mb3JtYXR0ZXJMYWJlbDpmdW5jdGlvbih0LGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdCYmdD9hdSh0LGUpOiJmdW5jdGlvbiI9PXR5cGVvZiB0P3QoZSk6ZS5uYW1lTWFwfSxfeWVhclRleHRQb3NpdGlvbkNvbnRyb2w6ZnVuY3Rpb24odCxlLGksbixvKXtlPWUuc2xpY2UoKTt2YXIgYT1bImNlbnRlciIsImJvdHRvbSJdOyJib3R0b20iPT09bj8oZVsxXSs9byxhPVsiY2VudGVyIiwidG9wIl0pOiJsZWZ0Ij09PW4/ZVswXS09bzoicmlnaHQiPT09bj8oZVswXSs9byxhPVsiY2VudGVyIiwidG9wIl0pOmVbMV0tPW87dmFyIHI9MDtyZXR1cm4ibGVmdCIhPT1uJiYicmlnaHQiIT09bnx8KHI9TWF0aC5QSS8yKSx7cm90YXRpb246cixwb3NpdGlvbjplLHN0eWxlOnt0ZXh0QWxpZ246YVswXSx0ZXh0VmVydGljYWxBbGlnbjphWzFdfX19LF9yZW5kZXJZZWFyVGV4dDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10LmdldE1vZGVsKCJ5ZWFyTGFiZWwiKTtpZihvLmdldCgic2hvdyIpKXt2YXIgYT1vLmdldCgibWFyZ2luIikscj1vLmdldCgicG9zaXRpb24iKTtyPXJ8fCgiaG9yaXpvbnRhbCIhPT1pPyJ0b3AiOiJsZWZ0Iik7dmFyIHM9W3RoaXMuX3RscG9pbnRzW3RoaXMuX3RscG9pbnRzLmxlbmd0aC0xXSx0aGlzLl9ibHBvaW50c1swXV0sbD0oc1swXVswXStzWzFdWzBdKS8yLHU9KHNbMF1bMV0rc1sxXVsxXSkvMixoPSJob3Jpem9udGFsIj09PWk/MDoxLGM9e3RvcDpbbCxzW2hdWzFdXSxib3R0b206W2wsc1sxLWhdWzFdXSxsZWZ0OltzWzEtaF1bMF0sdV0scmlnaHQ6W3NbaF1bMF0sdV19LGQ9ZS5zdGFydC55OytlLmVuZC55PitlLnN0YXJ0LnkmJihkPWQrIi0iK2UuZW5kLnkpO3ZhciBmPW8uZ2V0KCJmb3JtYXR0ZXIiKSxwPXtzdGFydDplLnN0YXJ0LnksZW5kOmUuZW5kLnksbmFtZU1hcDpkfSxnPXRoaXMuX2Zvcm1hdHRlckxhYmVsKGYscCksbT1uZXcgRnIoe3oyOjMwfSk7UXMobS5zdHlsZSxvLHt0ZXh0Omd9KSxtLmF0dHIodGhpcy5feWVhclRleHRQb3NpdGlvbkNvbnRyb2wobSxjW3JdLGkscixhKSksbi5hZGQobSl9fSxfbW9udGhUZXh0UG9zaXRpb25Db250cm9sOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9ImxlZnQiLHI9InRvcCIscz10WzBdLGw9dFsxXTtyZXR1cm4iaG9yaXpvbnRhbCI9PT1pPyhsKz1vLGUmJihhPSJjZW50ZXIiKSwic3RhcnQiPT09biYmKHI9ImJvdHRvbSIpKToocys9byxlJiYocj0ibWlkZGxlIiksInN0YXJ0Ij09PW4mJihhPSJyaWdodCIpKSx7eDpzLHk6bCx0ZXh0QWxpZ246YSx0ZXh0VmVydGljYWxBbGlnbjpyfX0sX3JlbmRlck1vbnRoVGV4dDpmdW5jdGlvbih0LGUsaSl7dmFyIG49dC5nZXRNb2RlbCgibW9udGhMYWJlbCIpO2lmKG4uZ2V0KCJzaG93Iikpe3ZhciBvPW4uZ2V0KCJuYW1lTWFwIiksYT1uLmdldCgibWFyZ2luIikscj1uLmdldCgicG9zaXRpb24iKSxzPW4uZ2V0KCJhbGlnbiIpLGw9W3RoaXMuX3RscG9pbnRzLHRoaXMuX2JscG9pbnRzXTt6KG8pJiYobz1FVFtvLnRvVXBwZXJDYXNlKCldfHxbXSk7dmFyIHU9InN0YXJ0Ij09PXI/MDoxLGg9Imhvcml6b250YWwiPT09ZT8wOjE7YT0ic3RhcnQiPT09cj8tYTphO2Zvcih2YXIgYz0iY2VudGVyIj09PXMsZD0wO2Q8bFt1XS5sZW5ndGgtMTtkKyspe3ZhciBmPWxbdV1bZF0uc2xpY2UoKSxwPXRoaXMuX2ZpcnN0RGF5T2ZNb250aFtkXTtpZihjKXt2YXIgZz10aGlzLl9maXJzdERheVBvaW50c1tkXTtmW2hdPShnW2hdK2xbMF1bZCsxXVtoXSkvMn12YXIgbT1uLmdldCgiZm9ybWF0dGVyIiksdj1vWytwLm0tMV0seT17eXl5eTpwLnkseXk6KHAueSsiIikuc2xpY2UoMiksTU06cC5tLE06K3AubSxuYW1lTWFwOnZ9LHg9dGhpcy5fZm9ybWF0dGVyTGFiZWwobSx5KSxfPW5ldyBGcih7ejI6MzB9KTtMKFFzKF8uc3R5bGUsbix7dGV4dDp4fSksdGhpcy5fbW9udGhUZXh0UG9zaXRpb25Db250cm9sKGYsYyxlLHIsYSkpLGkuYWRkKF8pfX19LF93ZWVrVGV4dFBvc2l0aW9uQ29udHJvbDpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPSJjZW50ZXIiLHI9Im1pZGRsZSIscz10WzBdLGw9dFsxXSx1PSJzdGFydCI9PT1pO3JldHVybiJob3Jpem9udGFsIj09PWU/KHM9cytuKyh1PzE6LTEpKm9bMF0vMixhPXU/InJpZ2h0IjoibGVmdCIpOihsPWwrbisodT8xOi0xKSpvWzFdLzIscj11PyJib3R0b20iOiJ0b3AiKSx7eDpzLHk6bCx0ZXh0QWxpZ246YSx0ZXh0VmVydGljYWxBbGlnbjpyfX0sX3JlbmRlcldlZWtUZXh0OmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXQuZ2V0TW9kZWwoImRheUxhYmVsIik7aWYoby5nZXQoInNob3ciKSl7dmFyIGE9dC5jb29yZGluYXRlU3lzdGVtLHI9by5nZXQoInBvc2l0aW9uIikscz1vLmdldCgibmFtZU1hcCIpLGw9by5nZXQoIm1hcmdpbiIpLHU9YS5nZXRGaXJzdERheU9mV2VlaygpO3oocykmJihzPXpUW3MudG9VcHBlckNhc2UoKV18fFtdKTt2YXIgaD1hLmdldE5leHRORGF5KGUuZW5kLnRpbWUsNy1lLmx3ZWVrKS50aW1lLGM9W2EuZ2V0Q2VsbFdpZHRoKCksYS5nZXRDZWxsSGVpZ2h0KCldO2w9UGwobCxjWyJob3Jpem9udGFsIj09PWk/MDoxXSksInN0YXJ0Ij09PXImJihoPWEuZ2V0TmV4dE5EYXkoZS5zdGFydC50aW1lLC0oNytlLmZ3ZWVrKSkudGltZSxsPS1sKTtmb3IodmFyIGQ9MDtkPDc7ZCsrKXt2YXIgZixwPWEuZ2V0TmV4dE5EYXkoaCxkKSxnPWEuZGF0YVRvUmVjdChbcC50aW1lXSwhMSkuY2VudGVyO2Y9TWF0aC5hYnMoKGQrdSklNyk7dmFyIG09bmV3IEZyKHt6MjozMH0pO0woUXMobS5zdHlsZSxvLHt0ZXh0OnNbZl19KSx0aGlzLl93ZWVrVGV4dFBvc2l0aW9uQ29udHJvbChnLGkscixsLGMpKSxuLmFkZChtKX19fX0pO3ZhciBSVD17cGF0aDpudWxsLGNvbXBvdW5kUGF0aDpudWxsLGdyb3VwOklpLGltYWdlOnFuLHRleHQ6RnJ9O2ZmKGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ3JhcGhpYztrKGUpP2VbMF0mJmVbMF0uZWxlbWVudHM/dC5ncmFwaGljPVt0LmdyYXBoaWNbMF1dOnQuZ3JhcGhpYz1be2VsZW1lbnRzOmV9XTplJiYhZS5lbGVtZW50cyYmKHQuZ3JhcGhpYz1be2VsZW1lbnRzOltlXX1dKX0pO3ZhciBCVD13Zih7dHlwZToiZ3JhcGhpYyIsZGVmYXVsdE9wdGlvbjp7ZWxlbWVudHM6W10scGFyZW50SWQ6bnVsbH0sX2VsT3B0aW9uc1RvVXBkYXRlOm51bGwsbWVyZ2VPcHRpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb24uZWxlbWVudHM7dGhpcy5vcHRpb24uZWxlbWVudHM9bnVsbCxCVC5zdXBlckFwcGx5KHRoaXMsIm1lcmdlT3B0aW9uIixhcmd1bWVudHMpLHRoaXMub3B0aW9uLmVsZW1lbnRzPWV9LG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9wdGlvbixuPShlP2k6dCkuZWxlbWVudHMsbz1pLmVsZW1lbnRzPWU/W106aS5lbGVtZW50cyxhPVtdO3RoaXMuX2ZsYXR0ZW4obixhKTt2YXIgcj1WbyhvLGEpO0dvKHIpO3ZhciBzPXRoaXMuX2VsT3B0aW9uc1RvVXBkYXRlPVtdO0UocixmdW5jdGlvbih0LGUpe3ZhciBpPXQub3B0aW9uO2kmJihzLnB1c2goaSksZnVuY3Rpb24odCxlKXt2YXIgaT10LmV4aXN0O2lmKGUuaWQ9dC5rZXlJbmZvLmlkLCFlLnR5cGUmJmkmJihlLnR5cGU9aS50eXBlKSxudWxsPT1lLnBhcmVudElkKXt2YXIgbj1lLnBhcmVudE9wdGlvbjtuP2UucGFyZW50SWQ9bi5pZDppJiYoZS5wYXJlbnRJZD1pLnBhcmVudElkKX1lLnBhcmVudE9wdGlvbj1udWxsfSh0LGkpLGZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1MKHt9LGkpLG89dFtlXSxhPWkuJGFjdGlvbnx8Im1lcmdlIjsibWVyZ2UiPT09YT9vPyhtKG8sbiwhMCkseHUobyxuLHtpZ25vcmVTaXplOiEwfSksd3UoaSxvKSk6dFtlXT1uOiJyZXBsYWNlIj09PWE/dFtlXT1uOiJyZW1vdmUiPT09YSYmbyYmKHRbZV09bnVsbCl9KG8sZSxpKSxmdW5jdGlvbih0LGUpe2lmKCF0KXJldHVybjt0Lmh2PWUuaHY9W0ZUKGUsWyJsZWZ0IiwicmlnaHQiXSksRlQoZSxbInRvcCIsImJvdHRvbSJdKV0sImdyb3VwIj09PXQudHlwZSYmKG51bGw9PXQud2lkdGgmJih0LndpZHRoPWUud2lkdGg9MCksbnVsbD09dC5oZWlnaHQmJih0LmhlaWdodD1lLmhlaWdodD0wKSl9KG9bZV0saSkpfSx0aGlzKTtmb3IodmFyIGw9by5sZW5ndGgtMTswPD1sO2wtLSludWxsPT1vW2xdP28uc3BsaWNlKGwsMSk6ZGVsZXRlIG9bbF0uJGFjdGlvbn0sX2ZsYXR0ZW46ZnVuY3Rpb24odCxpLG4pe0UodCxmdW5jdGlvbih0KXtpZih0KXtuJiYodC5wYXJlbnRPcHRpb249biksaS5wdXNoKHQpO3ZhciBlPXQuY2hpbGRyZW47Imdyb3VwIj09PXQudHlwZSYmZSYmdGhpcy5fZmxhdHRlbihlLGksdCksZGVsZXRlIHQuY2hpbGRyZW59fSx0aGlzKX0sdXNlRWxPcHRpb25zVG9VcGRhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9lbE9wdGlvbnNUb1VwZGF0ZTtyZXR1cm4gdGhpcy5fZWxPcHRpb25zVG9VcGRhdGU9bnVsbCx0fX0pO2Z1bmN0aW9uIFZUKHQsZSxpLG4pe3ZhciBvPWkudHlwZSxhPW5ldyhSVC5oYXNPd25Qcm9wZXJ0eShvKT9SVFtvXTpBcyhvKSkoaSk7ZS5hZGQoYSksbi5zZXQodCxhKSxhLl9fZWNHcmFwaGljSWQ9dH1mdW5jdGlvbiBHVCh0LGUpe3ZhciBpPXQmJnQucGFyZW50O2kmJigiZ3JvdXAiPT09dC50eXBlJiZ0LnRyYXZlcnNlKGZ1bmN0aW9uKHQpe0dUKHQsZSl9KSxlLnJlbW92ZUtleSh0Ll9fZWNHcmFwaGljSWQpLGkucmVtb3ZlKHQpKX1mdW5jdGlvbiBGVChlLHQpe3ZhciBpO3JldHVybiBFKHQsZnVuY3Rpb24odCl7bnVsbCE9ZVt0XSYmImF1dG8iIT09ZVt0XSYmKGk9ITApfSksaX1iZih7dHlwZToiZ3JhcGhpYyIsaW5pdDpmdW5jdGlvbih0LGUpe3RoaXMuX2VsTWFwPVEoKSx0aGlzLl9sYXN0R3JhcGhpY01vZGVsfSxyZW5kZXI6ZnVuY3Rpb24odCxlLGkpe3QhPT10aGlzLl9sYXN0R3JhcGhpY01vZGVsJiZ0aGlzLl9jbGVhcigpLHRoaXMuX2xhc3RHcmFwaGljTW9kZWw9dCx0aGlzLl91cGRhdGVFbGVtZW50cyh0KSx0aGlzLl9yZWxvY2F0ZSh0LGkpfSxfdXBkYXRlRWxlbWVudHM6ZnVuY3Rpb24odSl7dmFyIHQ9dS51c2VFbE9wdGlvbnNUb1VwZGF0ZSgpO2lmKHQpe3ZhciBoPXRoaXMuX2VsTWFwLGM9dGhpcy5ncm91cDtFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC4kYWN0aW9uLGk9dC5pZCxuPWguZ2V0KGkpLG89dC5wYXJlbnRJZCxhPW51bGwhPW8/aC5nZXQobyk6YyxyPXQuc3R5bGU7InRleHQiPT09dC50eXBlJiZyJiYodC5odiYmdC5odlsxXSYmKHIudGV4dFZlcnRpY2FsQWxpZ249ci50ZXh0QmFzZWxpbmU9bnVsbCksIXIuaGFzT3duUHJvcGVydHkoInRleHRGaWxsIikmJnIuZmlsbCYmKHIudGV4dEZpbGw9ci5maWxsKSwhci5oYXNPd25Qcm9wZXJ0eSgidGV4dFN0cm9rZSIpJiZyLnN0cm9rZSYmKHIudGV4dFN0cm9rZT1yLnN0cm9rZSkpO3ZhciBzPWZ1bmN0aW9uKGUpe3JldHVybiBlPUwoe30sZSksRShbImlkIiwicGFyZW50SWQiLCIkYWN0aW9uIiwiaHYiLCJib3VuZGluZyJdLmNvbmNhdChmdSksZnVuY3Rpb24odCl7ZGVsZXRlIGVbdF19KSxlfSh0KTtlJiYibWVyZ2UiIT09ZT8icmVwbGFjZSI9PT1lPyhHVChuLGgpLFZUKGksYSxzLGgpKToicmVtb3ZlIj09PWUmJkdUKG4saCk6bj9uLmF0dHIocyk6VlQoaSxhLHMsaCk7dmFyIGw9aC5nZXQoaSk7bCYmKGwuX19lY0dyYXBoaWNXaWR0aE9wdGlvbj10LndpZHRoLGwuX19lY0dyYXBoaWNIZWlnaHRPcHRpb249dC5oZWlnaHQsZnVuY3Rpb24odCxlKXt2YXIgaT10LmV2ZW50RGF0YTt0LnNpbGVudHx8dC5pZ25vcmV8fGl8fChpPXQuZXZlbnREYXRhPXtjb21wb25lbnRUeXBlOiJncmFwaGljIixjb21wb25lbnRJbmRleDplLmNvbXBvbmVudEluZGV4LG5hbWU6dC5uYW1lfSk7aSYmKGkuaW5mbz10LmluZm8pfShsLHUpKX0pfX0sX3JlbG9jYXRlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXQub3B0aW9uLmVsZW1lbnRzLG49dGhpcy5ncm91cCxvPXRoaXMuX2VsTWFwLGE9ZS5nZXRXaWR0aCgpLHI9ZS5nZXRIZWlnaHQoKSxzPTA7czxpLmxlbmd0aDtzKyspe3ZhciBsPWlbc107aWYoKGg9by5nZXQobC5pZCkpJiZoLmlzR3JvdXApe3ZhciB1PShjPWgucGFyZW50KT09PW47aC5fX2VjR3JhcGhpY1dpZHRoPVBsKGguX19lY0dyYXBoaWNXaWR0aE9wdGlvbix1P2E6Yy5fX2VjR3JhcGhpY1dpZHRoKXx8MCxoLl9fZWNHcmFwaGljSGVpZ2h0PVBsKGguX19lY0dyYXBoaWNIZWlnaHRPcHRpb24sdT9yOmMuX19lY0dyYXBoaWNIZWlnaHQpfHwwfX1mb3Iocz1pLmxlbmd0aC0xOzA8PXM7cy0tKXt2YXIgaCxjO2w9aVtzXTtpZihoPW8uZ2V0KGwuaWQpKXl1KGgsbCwoYz1oLnBhcmVudCk9PT1uP3t3aWR0aDphLGhlaWdodDpyfTp7d2lkdGg6Yy5fX2VjR3JhcGhpY1dpZHRoLGhlaWdodDpjLl9fZWNHcmFwaGljSGVpZ2h0fSxudWxsLHtodjpsLmh2LGJvdW5kaW5nTW9kZTpsLmJvdW5kaW5nfSl9fSxfY2xlYXI6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9lbE1hcDtlLmVhY2goZnVuY3Rpb24odCl7R1QodCxlKX0pLHRoaXMuX2VsTWFwPVEoKX0sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuX2NsZWFyKCl9fSk7dmFyIFdUPXt9O2Z1bmN0aW9uIEhUKHQsZSl7V1RbdF09ZX1mdW5jdGlvbiBaVCh0KXtyZXR1cm4gV1RbdF19dmFyIFVUPXdmKHt0eXBlOiJ0b29sYm94IixsYXlvdXRNb2RlOnt0eXBlOiJib3giLGlnbm9yZVNpemU6ITB9LG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24oKXtVVC5zdXBlckFwcGx5KHRoaXMsIm9wdGlvblVwZGF0ZWQiLGFyZ3VtZW50cyksRSh0aGlzLm9wdGlvbi5mZWF0dXJlLGZ1bmN0aW9uKHQsZSl7dmFyIGk9WlQoZSk7aSYmbSh0LGkuZGVmYXVsdE9wdGlvbil9KX0sZGVmYXVsdE9wdGlvbjp7c2hvdzohMCx6OjYsemxldmVsOjAsb3JpZW50OiJob3Jpem9udGFsIixsZWZ0OiJyaWdodCIsdG9wOiJ0b3AiLGJhY2tncm91bmRDb2xvcjoidHJhbnNwYXJlbnQiLGJvcmRlckNvbG9yOiIjY2NjIixib3JkZXJSYWRpdXM6MCxib3JkZXJXaWR0aDowLHBhZGRpbmc6NSxpdGVtU2l6ZToxNSxpdGVtR2FwOjgsc2hvd1RpdGxlOiEwLGljb25TdHlsZTp7Ym9yZGVyQ29sb3I6IiM2NjYiLGNvbG9yOiJub25lIn0sZW1waGFzaXM6e2ljb25TdHlsZTp7Ym9yZGVyQ29sb3I6IiMzRTk4QzUifX0sdG9vbHRpcDp7c2hvdzohMX19fSk7ZnVuY3Rpb24gWFQodCxlKXt2YXIgaT1KbChlLmdldCgicGFkZGluZyIpKSxuPWUuZ2V0SXRlbVN0eWxlKFsiY29sb3IiLCJvcGFjaXR5Il0pO3JldHVybiBuLmZpbGw9ZS5nZXQoImJhY2tncm91bmRDb2xvciIpLHQ9bmV3IGlzKHtzaGFwZTp7eDp0LngtaVszXSx5OnQueS1pWzBdLHdpZHRoOnQud2lkdGgraVsxXStpWzNdLGhlaWdodDp0LmhlaWdodCtpWzBdK2lbMl0scjplLmdldCgiYm9yZGVyUmFkaXVzIil9LHN0eWxlOm4sc2lsZW50OiEwLHoyOi0xfSl9YmYoe3R5cGU6InRvb2xib3giLHJlbmRlcjpmdW5jdGlvbihoLGMsZCxsKXt2YXIgZj10aGlzLmdyb3VwO2lmKGYucmVtb3ZlQWxsKCksaC5nZXQoInNob3ciKSl7dmFyIHA9K2guZ2V0KCJpdGVtU2l6ZSIpLHU9aC5nZXQoImZlYXR1cmUiKXx8e30sZz10aGlzLl9mZWF0dXJlc3x8KHRoaXMuX2ZlYXR1cmVzPXt9KSxtPVtdO0UodSxmdW5jdGlvbih0LGUpe20ucHVzaChlKX0pLG5ldyBUZih0aGlzLl9mZWF0dXJlTmFtZXN8fFtdLG0pLmFkZCh0KS51cGRhdGUodCkucmVtb3ZlKFQodCxudWxsKSkuZXhlY3V0ZSgpLHRoaXMuX2ZlYXR1cmVOYW1lcz1tLGZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lLmdldEJveExheW91dFBhcmFtcygpLG89ZS5nZXQoInBhZGRpbmciKSxhPXt3aWR0aDppLmdldFdpZHRoKCksaGVpZ2h0OmkuZ2V0SGVpZ2h0KCl9LHI9dnUobixhLG8pO211KGUuZ2V0KCJvcmllbnQiKSx0LGUuZ2V0KCJpdGVtR2FwIiksci53aWR0aCxyLmhlaWdodCkseXUodCxuLGEsbyl9KGYsaCxkKSxmLmFkZChYVChmLmdldEJvdW5kaW5nUmVjdCgpLGgpKSxmLmVhY2hDaGlsZChmdW5jdGlvbih0KXt2YXIgZT10Ll9fdGl0bGUsaT10LmhvdmVyU3R5bGU7aWYoaSYmZSl7dmFyIG49Y24oZSxTbihpKSksbz10LnBvc2l0aW9uWzBdK2YucG9zaXRpb25bMF0sYT0hMTt0LnBvc2l0aW9uWzFdK2YucG9zaXRpb25bMV0rcCtuLmhlaWdodD5kLmdldEhlaWdodCgpJiYoaS50ZXh0UG9zaXRpb249InRvcCIsYT0hMCk7dmFyIHI9YT8tNS1uLmhlaWdodDpwKzg7bytuLndpZHRoLzI+ZC5nZXRXaWR0aCgpPyhpLnRleHRQb3NpdGlvbj1bIjEwMCUiLHJdLGkudGV4dEFsaWduPSJyaWdodCIpOm8tbi53aWR0aC8yPDAmJihpLnRleHRQb3NpdGlvbj1bMCxyXSxpLnRleHRBbGlnbj0ibGVmdCIpfX0pfWZ1bmN0aW9uIHQodCxlKXt2YXIgaSxuPW1bdF0sbz1tW2VdLGE9dVtuXSxyPW5ldyBJbChhLGgsaC5lY01vZGVsKTtpZihsJiZudWxsIT1sLm5ld1RpdGxlJiYoYS50aXRsZT1sLm5ld1RpdGxlKSxuJiYhbyl7aWYoZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10LmluZGV4T2YoIm15Iil9KG4pKWk9e21vZGVsOnIsb25jbGljazpyLm9wdGlvbi5vbmNsaWNrLGZlYXR1cmVOYW1lOm59O2Vsc2V7dmFyIHM9WlQobik7aWYoIXMpcmV0dXJuO2k9bmV3IHMocixjLGQpfWdbbl09aX1lbHNle2lmKCEoaT1nW29dKSlyZXR1cm47aS5tb2RlbD1yLGkuZWNNb2RlbD1jLGkuYXBpPWR9bnx8IW8/ci5nZXQoInNob3ciKSYmIWkudW51c2FibGU/KGZ1bmN0aW9uKG8sYSx0KXt2YXIgcj1vLmdldE1vZGVsKCJpY29uU3R5bGUiKSxzPW8uZ2V0TW9kZWwoImVtcGhhc2lzLmljb25TdHlsZSIpLGU9YS5nZXRJY29ucz9hLmdldEljb25zKCk6by5nZXQoImljb24iKSxsPW8uZ2V0KCJ0aXRsZSIpfHx7fTtpZigic3RyaW5nIj09dHlwZW9mIGUpe3ZhciBpPWUsbj1sO2w9e30sKGU9e30pW3RdPWksbFt0XT1ufXZhciB1PW8uaWNvblBhdGhzPXt9O0UoZSxmdW5jdGlvbih0LGUpe3ZhciBpPXBsKHQse30se3g6LXAvMix5Oi1wLzIsd2lkdGg6cCxoZWlnaHQ6cH0pO2kuc2V0U3R5bGUoci5nZXRJdGVtU3R5bGUoKSksaS5ob3ZlclN0eWxlPXMuZ2V0SXRlbVN0eWxlKCksaS5zZXRTdHlsZSh7dGV4dDpsW2VdLHRleHRBbGlnbjpzLmdldCgidGV4dEFsaWduIiksdGV4dEJvcmRlclJhZGl1czpzLmdldCgidGV4dEJvcmRlclJhZGl1cyIpLHRleHRQYWRkaW5nOnMuZ2V0KCJ0ZXh0UGFkZGluZyIpLHRleHRGaWxsOm51bGx9KTt2YXIgbj1oLmdldE1vZGVsKCJ0b29sdGlwIik7biYmbi5nZXQoInNob3ciKSYmaS5hdHRyKCJ0b29sdGlwIixMKHtjb250ZW50OmxbZV0sZm9ybWF0dGVyOm4uZ2V0KCJmb3JtYXR0ZXIiLCEwKXx8ZnVuY3Rpb24oKXtyZXR1cm4gbFtlXX0sZm9ybWF0dGVyUGFyYW1zOntjb21wb25lbnRUeXBlOiJ0b29sYm94IixuYW1lOmUsdGl0bGU6bFtlXSwkdmFyczpbIm5hbWUiLCJ0aXRsZSJdfSxwb3NpdGlvbjpuLmdldCgicG9zaXRpb24iLCEwKXx8ImJvdHRvbSJ9LG4ub3B0aW9uKSksWXMoaSksaC5nZXQoInNob3dUaXRsZSIpJiYoaS5fX3RpdGxlPWxbZV0saS5vbigibW91c2VvdmVyIixmdW5jdGlvbigpe3ZhciB0PXMuZ2V0SXRlbVN0eWxlKCksZT0idmVydGljYWwiPT09aC5nZXQoIm9yaWVudCIpP251bGw9PWguZ2V0KCJyaWdodCIpPyJyaWdodCI6ImxlZnQiOm51bGw9PWguZ2V0KCJib3R0b20iKT8iYm90dG9tIjoidG9wIjtpLnNldFN0eWxlKHt0ZXh0RmlsbDpzLmdldCgidGV4dEZpbGwiKXx8dC5maWxsfHx0LnN0cm9rZXx8IiMwMDAiLHRleHRCYWNrZ3JvdW5kQ29sb3I6cy5nZXQoInRleHRCYWNrZ3JvdW5kQ29sb3IiKSx0ZXh0UG9zaXRpb246cy5nZXQoInRleHRQb3NpdGlvbiIpfHxlfSl9KS5vbigibW91c2VvdXQiLGZ1bmN0aW9uKCl7aS5zZXRTdHlsZSh7dGV4dEZpbGw6bnVsbCx0ZXh0QmFja2dyb3VuZENvbG9yOm51bGx9KX0pKSxpLnRyaWdnZXIoby5nZXQoImljb25TdGF0dXMuIitlKXx8Im5vcm1hbCIpLGYuYWRkKGkpLGkub24oImNsaWNrIixBKGEub25jbGljayxhLGMsZCxlKSksdVtlXT1pfSl9KHIsaSxuKSxyLnNldEljb25TdGF0dXM9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9wdGlvbixuPXRoaXMuaWNvblBhdGhzO2kuaWNvblN0YXR1cz1pLmljb25TdGF0dXN8fHt9LGkuaWNvblN0YXR1c1t0XT1lLG5bdF0mJm5bdF0udHJpZ2dlcihlKX0saS5yZW5kZXImJmkucmVuZGVyKHIsYyxkLGwpKTppLnJlbW92ZSYmaS5yZW1vdmUoYyxkKTppLmRpc3Bvc2UmJmkuZGlzcG9zZShjLGQpfX0sdXBkYXRlVmlldzpmdW5jdGlvbih0LGUsaSxuKXtFKHRoaXMuX2ZlYXR1cmVzLGZ1bmN0aW9uKHQpe3QudXBkYXRlVmlldyYmdC51cGRhdGVWaWV3KHQubW9kZWwsZSxpLG4pfSl9LHJlbW92ZTpmdW5jdGlvbihlLGkpe0UodGhpcy5fZmVhdHVyZXMsZnVuY3Rpb24odCl7dC5yZW1vdmUmJnQucmVtb3ZlKGUsaSl9KSx0aGlzLmdyb3VwLnJlbW92ZUFsbCgpfSxkaXNwb3NlOmZ1bmN0aW9uKGUsaSl7RSh0aGlzLl9mZWF0dXJlcyxmdW5jdGlvbih0KXt0LmRpc3Bvc2UmJnQuZGlzcG9zZShlLGkpfSl9fSk7dmFyIFlUPUNjLnRvb2xib3guc2F2ZUFzSW1hZ2U7ZnVuY3Rpb24galQodCl7dGhpcy5tb2RlbD10fWpULmRlZmF1bHRPcHRpb249e3Nob3c6ITAsaWNvbjoiTTQuNywyMi45TDI5LjMsNDUuNUw1NC43LDIzLjRNNC42LDQzLjZMNC42LDU4TDUzLjgsNThMNTMuOCw0My42TTI5LjIsNDUuMUwyOS4yLDAiLHRpdGxlOllULnRpdGxlLHR5cGU6InBuZyIsY29ubmVjdGVkQmFja2dyb3VuZENvbG9yOiIjZmZmIixuYW1lOiIiLGV4Y2x1ZGVDb21wb25lbnRzOlsidG9vbGJveCJdLHBpeGVsUmF0aW86MSxsYW5nOllULmxhbmcuc2xpY2UoKX0salQucHJvdG90eXBlLnVudXNhYmxlPSF2LmNhbnZhc1N1cHBvcnRlZCxqVC5wcm90b3R5cGUub25jbGljaz1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMubW9kZWwsbj1pLmdldCgibmFtZSIpfHx0LmdldCgidGl0bGUuMC50ZXh0Iil8fCJlY2hhcnRzIixvPWkuZ2V0KCJ0eXBlIiwhMCl8fCJwbmciLGE9ZS5nZXRDb25uZWN0ZWREYXRhVVJMKHt0eXBlOm8sYmFja2dyb3VuZENvbG9yOmkuZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiLCEwKXx8dC5nZXQoImJhY2tncm91bmRDb2xvciIpfHwiI2ZmZiIsY29ubmVjdGVkQmFja2dyb3VuZENvbG9yOmkuZ2V0KCJjb25uZWN0ZWRCYWNrZ3JvdW5kQ29sb3IiKSxleGNsdWRlQ29tcG9uZW50czppLmdldCgiZXhjbHVkZUNvbXBvbmVudHMiKSxwaXhlbFJhdGlvOmkuZ2V0KCJwaXhlbFJhdGlvIil9KTtpZigiZnVuY3Rpb24iIT10eXBlb2YgTW91c2VFdmVudHx8di5icm93c2VyLmllfHx2LmJyb3dzZXIuZWRnZSlpZih3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2Ipe2Zvcih2YXIgcj1hdG9iKGEuc3BsaXQoIiwiKVsxXSkscz1yLmxlbmd0aCxsPW5ldyBVaW50OEFycmF5KHMpO3MtLTspbFtzXT1yLmNoYXJDb2RlQXQocyk7dmFyIHU9bmV3IEJsb2IoW2xdKTt3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IodSxuKyIuIitvKX1lbHNle3ZhciBoPWkuZ2V0KCJsYW5nIiksYz0nPGJvZHkgc3R5bGU9Im1hcmdpbjowOyI+PGltZyBzcmM9IicrYSsnIiBzdHlsZT0ibWF4LXdpZHRoOjEwMCU7IiB0aXRsZT0iJysoaCYmaFswXXx8IiIpKyciIC8+PC9ib2R5Pic7d2luZG93Lm9wZW4oKS5kb2N1bWVudC53cml0ZShjKX1lbHNle3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTtkLmRvd25sb2FkPW4rIi4iK28sZC50YXJnZXQ9Il9ibGFuayIsZC5ocmVmPWE7dmFyIGY9bmV3IE1vdXNlRXZlbnQoImNsaWNrIix7dmlldzp3aW5kb3csYnViYmxlczohMCxjYW5jZWxhYmxlOiExfSk7ZC5kaXNwYXRjaEV2ZW50KGYpfX0sSFQoInNhdmVBc0ltYWdlIixqVCk7dmFyIHFUPUNjLnRvb2xib3gubWFnaWNUeXBlLEtUPSJfX2VjX21hZ2ljVHlwZV9zdGFja19fIjtmdW5jdGlvbiAkVCh0KXt0aGlzLm1vZGVsPXR9JFQuZGVmYXVsdE9wdGlvbj17c2hvdzohMCx0eXBlOltdLGljb246e2xpbmU6Ik00LjEsMjguOWg3LjFsOS4zLTIybDcuNCwzOGw5LjctMTkuN2wzLDEyLjhoMTQuOU00LjEsNThoNTEuNCIsYmFyOiJNNi43LDIyLjloMTBWNDhoLTEwVjIyLjl6TTI0LjksMTNoMTB2MzVoLTEwVjEzek00My4yLDJoMTB2NDZoLTEwVjJ6TTMuMSw1OGg1My43IixzdGFjazoiTTguMiwzOC40bC04LjQsNC4xbDMwLjYsMTUuM0w2MCw0Mi41bC04LjEtNC4xbC0yMS41LDExTDguMiwzOC40eiBNNTEuOSwzMGwtOC4xLDQuMmwtMTMuNCw2LjlsLTEzLjktNi45TDguMiwzMGwtOC40LDQuMmw4LjQsNC4ybDIyLjIsMTFsMjEuNS0xMWw4LjEtNC4yTDUxLjksMzB6IE01MS45LDIxLjdsLTguMSw0LjJMMzUuNywzMGwtNS4zLDIuOEwyNC45LDMwbC04LjQtNC4xbC04LjMtNC4ybC04LjQsNC4yTDguMiwzMGw4LjMsNC4ybDEzLjksNi45bDEzLjQtNi45bDguMS00LjJsOC4xLTQuMUw1MS45LDIxLjd6TTMwLjQsMi4yTC0wLjIsMTcuNWw4LjQsNC4xbDguMyw0LjJsOC40LDQuMmw1LjUsMi43bDUuMy0yLjdsOC4xLTQuMmw4LjEtNC4ybDguMS00LjFMMzAuNCwyLjJ6In0sdGl0bGU6RChxVC50aXRsZSksb3B0aW9uOnt9LHNlcmllc0luZGV4Ont9fTt2YXIgSlQ9JFQucHJvdG90eXBlO0pULmdldEljb25zPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5tb2RlbCxlPXQuZ2V0KCJpY29uIiksaT17fTtyZXR1cm4gRSh0LmdldCgidHlwZSIpLGZ1bmN0aW9uKHQpe2VbdF0mJihpW3RdPWVbdF0pfSksaX07dmFyIFFUPXtsaW5lOmZ1bmN0aW9uKHQsZSxpLG4pe2lmKCJiYXIiPT09dClyZXR1cm4gbSh7aWQ6ZSx0eXBlOiJsaW5lIixkYXRhOmkuZ2V0KCJkYXRhIiksc3RhY2s6aS5nZXQoInN0YWNrIiksbWFya1BvaW50OmkuZ2V0KCJtYXJrUG9pbnQiKSxtYXJrTGluZTppLmdldCgibWFya0xpbmUiKX0sbi5nZXQoIm9wdGlvbi5saW5lIil8fHt9LCEwKX0sYmFyOmZ1bmN0aW9uKHQsZSxpLG4pe2lmKCJsaW5lIj09PXQpcmV0dXJuIG0oe2lkOmUsdHlwZToiYmFyIixkYXRhOmkuZ2V0KCJkYXRhIiksc3RhY2s6aS5nZXQoInN0YWNrIiksbWFya1BvaW50OmkuZ2V0KCJtYXJrUG9pbnQiKSxtYXJrTGluZTppLmdldCgibWFya0xpbmUiKX0sbi5nZXQoIm9wdGlvbi5iYXIiKXx8e30sITApfSxzdGFjazpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1pLmdldCgic3RhY2siKT09PUtUO2lmKCJsaW5lIj09PXR8fCJiYXIiPT09dClyZXR1cm4gbi5zZXRJY29uU3RhdHVzKCJzdGFjayIsbz8ibm9ybWFsIjoiZW1waGFzaXMiKSxtKHtpZDplLHN0YWNrOm8/IiI6S1R9LG4uZ2V0KCJvcHRpb24uc3RhY2siKXx8e30sITApfX0sdEE9W1sibGluZSIsImJhciJdLFsic3RhY2siXV07SlQub25jbGljaz1mdW5jdGlvbih1LHQsaCl7dmFyIGM9dGhpcy5tb2RlbCxlPWMuZ2V0KCJzZXJpZXNJbmRleC4iK2gpO2lmKFFUW2hdKXt2YXIgaSxkPXtzZXJpZXM6W119O2lmKEUodEEsZnVuY3Rpb24odCl7MDw9Xyh0LGgpJiZFKHQsZnVuY3Rpb24odCl7Yy5zZXRJY29uU3RhdHVzKHQsIm5vcm1hbCIpfSl9KSxjLnNldEljb25TdGF0dXMoaCwiZW1waGFzaXMiKSx1LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJzZXJpZXMiLHF1ZXJ5Om51bGw9PWU/bnVsbDp7c2VyaWVzSW5kZXg6ZX19LGZ1bmN0aW9uKHQpe3ZhciBlPXQuc3ViVHlwZSxpPXQuaWQsbj1RVFtoXShlLGksdCxjKTtuJiYoQyhuLHQub3B0aW9uKSxkLnNlcmllcy5wdXNoKG4pKTt2YXIgbz10LmNvb3JkaW5hdGVTeXN0ZW07aWYobyYmImNhcnRlc2lhbjJkIj09PW8udHlwZSYmKCJsaW5lIj09PWh8fCJiYXIiPT09aCkpe3ZhciBhPW8uZ2V0QXhlc0J5U2NhbGUoIm9yZGluYWwiKVswXTtpZihhKXt2YXIgcj1hLmRpbSsiQXhpcyIscz11LnF1ZXJ5Q29tcG9uZW50cyh7bWFpblR5cGU6cixpbmRleDp0LmdldChuYW1lKyJJbmRleCIpLGlkOnQuZ2V0KG5hbWUrIklkIil9KVswXS5jb21wb25lbnRJbmRleDtkW3JdPWRbcl18fFtdO2Zvcih2YXIgbD0wO2w8PXM7bCsrKWRbcl1bc109ZFtyXVtzXXx8e307ZFtyXVtzXS5ib3VuZGFyeUdhcD0iYmFyIj09PWh9fX0pLCJzdGFjayI9PT1oKWk9ZC5zZXJpZXMmJmQuc2VyaWVzWzBdJiZkLnNlcmllc1swXS5zdGFjaz09PUtUP20oe3N0YWNrOnFULnRpdGxlLnRpbGVkfSxxVC50aXRsZSk6RChxVC50aXRsZSk7dC5kaXNwYXRjaEFjdGlvbih7dHlwZToiY2hhbmdlTWFnaWNUeXBlIixjdXJyZW50VHlwZTpoLG5ld09wdGlvbjpkLG5ld1RpdGxlOml9KX19LGdmKHt0eXBlOiJjaGFuZ2VNYWdpY1R5cGUiLGV2ZW50OiJtYWdpY1R5cGVDaGFuZ2VkIix1cGRhdGU6InByZXBhcmVBbmRVcGRhdGUifSxmdW5jdGlvbih0LGUpe2UubWVyZ2VPcHRpb24odC5uZXdPcHRpb24pfSksSFQoIm1hZ2ljVHlwZSIsJFQpO3ZhciBlQT1DYy50b29sYm94LmRhdGFWaWV3LGlBPW5ldyBBcnJheSg2MCkuam9pbigiLSIpLG5BPSJcdCI7ZnVuY3Rpb24gb0EodCl7dmFyIGU9ZnVuY3Rpb24odCl7dmFyIG89e30sYT1bXSxyPVtdO3JldHVybiB0LmVhY2hSYXdTZXJpZXMoZnVuY3Rpb24odCl7dmFyIGU9dC5jb29yZGluYXRlU3lzdGVtO2lmKCFlfHwiY2FydGVzaWFuMmQiIT09ZS50eXBlJiYicG9sYXIiIT09ZS50eXBlKWEucHVzaCh0KTtlbHNle3ZhciBpPWUuZ2V0QmFzZUF4aXMoKTtpZigiY2F0ZWdvcnkiPT09aS50eXBlKXt2YXIgbj1pLmRpbSsiXyIraS5pbmRleDtvW25dfHwob1tuXT17Y2F0ZWdvcnlBeGlzOmksdmFsdWVBeGlzOmUuZ2V0T3RoZXJBeGlzKGkpLHNlcmllczpbXX0sci5wdXNoKHtheGlzRGltOmkuZGltLGF4aXNJbmRleDppLmluZGV4fSkpLG9bbl0uc2VyaWVzLnB1c2godCl9ZWxzZSBhLnB1c2godCl9fSkse3Nlcmllc0dyb3VwQnlDYXRlZ29yeUF4aXM6byxvdGhlcjphLG1ldGE6cn19KHQpO3JldHVybnt2YWx1ZTpNKFtmdW5jdGlvbih0KXt2YXIgaD1bXTtyZXR1cm4gRSh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5jYXRlZ29yeUF4aXMsbj10LnZhbHVlQXhpcy5kaW0sbz1bIiAiXS5jb25jYXQoTih0LnNlcmllcyxmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSkpLGE9W2kubW9kZWwuZ2V0Q2F0ZWdvcmllcygpXTtFKHQuc2VyaWVzLGZ1bmN0aW9uKHQpe2EucHVzaCh0LmdldFJhd0RhdGEoKS5tYXBBcnJheShuLGZ1bmN0aW9uKHQpe3JldHVybiB0fSkpfSk7Zm9yKHZhciByPVtvLmpvaW4obkEpXSxzPTA7czxhWzBdLmxlbmd0aDtzKyspe2Zvcih2YXIgbD1bXSx1PTA7dTxhLmxlbmd0aDt1KyspbC5wdXNoKGFbdV1bc10pO3IucHVzaChsLmpvaW4obkEpKX1oLnB1c2goci5qb2luKCJcbiIpKX0pLGguam9pbigiXG5cbiIraUErIlxuXG4iKX0oZS5zZXJpZXNHcm91cEJ5Q2F0ZWdvcnlBeGlzKSxmdW5jdGlvbih0KXtyZXR1cm4gTih0LGZ1bmN0aW9uKHQpe3ZhciBvPXQuZ2V0UmF3RGF0YSgpLGE9W3QubmFtZV0scj1bXTtyZXR1cm4gby5lYWNoKG8uZGltZW5zaW9ucyxmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9YXJndW1lbnRzW3QtMV0saT1vLmdldE5hbWUoZSksbj0wO248dC0xO24rKylyW25dPWFyZ3VtZW50c1tuXTthLnB1c2goKGk/aStuQToiIikrci5qb2luKG5BKSl9KSxhLmpvaW4oIlxuIil9KS5qb2luKCJcblxuIitpQSsiXG5cbiIpfShlLm90aGVyKV0sZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvW1xuXHRcc10vZywiIil9KS5qb2luKCJcblxuIitpQSsiXG5cbiIpLG1ldGE6ZS5tZXRhfX1mdW5jdGlvbiBhQSh0KXtyZXR1cm4gdC5yZXBsYWNlKC9eXHNccyovLCIiKS5yZXBsYWNlKC9cc1xzKiQvLCIiKX12YXIgckE9bmV3IFJlZ0V4cCgiWyIrbkErIl0rIiwiZyIpO2Z1bmN0aW9uIHNBKHQsYSl7dmFyIGU9dC5zcGxpdChuZXcgUmVnRXhwKCJcbioiK2lBKyJcbioiLCJnIikpLHI9e3NlcmllczpbXX07cmV0dXJuIEUoZSxmdW5jdGlvbih0LGUpe2lmKGZ1bmN0aW9uKHQpe2lmKDA8PXQuc2xpY2UoMCx0LmluZGV4T2YoIlxuIikpLmluZGV4T2YobkEpKXJldHVybiEwfSh0KSl7dmFyIGk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQuc3BsaXQoL1xuKy9nKSxpPVtdLG49TihhQShlLnNoaWZ0KCkpLnNwbGl0KHJBKSxmdW5jdGlvbih0KXtyZXR1cm57bmFtZTp0LGRhdGE6W119fSksbz0wO288ZS5sZW5ndGg7bysrKXt2YXIgYT1hQShlW29dKS5zcGxpdChyQSk7aS5wdXNoKGEuc2hpZnQoKSk7Zm9yKHZhciByPTA7cjxhLmxlbmd0aDtyKyspbltyXSYmKG5bcl0uZGF0YVtvXT1hW3JdKX1yZXR1cm57c2VyaWVzOm4sY2F0ZWdvcmllczppfX0odCksbj1hW2VdLG89bi5heGlzRGltKyJBeGlzIjtuJiYocltvXT1yW29dfHxbXSxyW29dW24uYXhpc0luZGV4XT17ZGF0YTppLmNhdGVnb3JpZXN9LHIuc2VyaWVzPXIuc2VyaWVzLmNvbmNhdChpLnNlcmllcykpfWVsc2V7aT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5zcGxpdCgvXG4rL2cpLGk9YUEoZS5zaGlmdCgpKSxuPVtdLG89MDtvPGUubGVuZ3RoO28rKyl7dmFyIGEscj1hQShlW29dKS5zcGxpdChyQSkscz0iIixsPSExO2E9aXNOYU4oclswXSk/KGw9ITAscz1yWzBdLHI9ci5zbGljZSgxKSxuW29dPXtuYW1lOnMsdmFsdWU6W119LG5bb10udmFsdWUpOm5bb109W107Zm9yKHZhciB1PTA7dTxyLmxlbmd0aDt1KyspYS5wdXNoKCtyW3VdKTsxPT09YS5sZW5ndGgmJihsP25bb10udmFsdWU9YVswXTpuW29dPWFbMF0pfXJldHVybntuYW1lOmksZGF0YTpufX0odCk7ci5zZXJpZXMucHVzaChpKX19KSxyfWZ1bmN0aW9uIGxBKHQpe3RoaXMuX2RvbT1udWxsLHRoaXMubW9kZWw9dH1sQS5kZWZhdWx0T3B0aW9uPXtzaG93OiEwLHJlYWRPbmx5OiExLG9wdGlvblRvQ29udGVudDpudWxsLGNvbnRlbnRUb09wdGlvbjpudWxsLGljb246Ik0xNy41LDE3LjNIMzMgTTE3LjUsMTcuM0gzMyBNNDUuNCwyOS41aC0yOCBNMTEuNSwydjU2SDUxVjE0LjhMMzguNCwySDExLjV6IE0zOC40LDIuMnYxMi43SDUxIE00NS40LDQxLjdoLTI4Iix0aXRsZTpEKGVBLnRpdGxlKSxsYW5nOkQoZUEubGFuZyksYmFja2dyb3VuZENvbG9yOiIjZmZmIix0ZXh0Q29sb3I6IiMwMDAiLHRleHRhcmVhQ29sb3I6IiNmZmYiLHRleHRhcmVhQm9yZGVyQ29sb3I6IiMzMzMiLGJ1dHRvbkNvbG9yOiIjYzIzNTMxIixidXR0b25UZXh0Q29sb3I6IiNmZmYifSxsQS5wcm90b3R5cGUub25jbGljaz1mdW5jdGlvbih0LGUpe3ZhciBpPWUuZ2V0RG9tKCksbj10aGlzLm1vZGVsO3RoaXMuX2RvbSYmaS5yZW1vdmVDaGlsZCh0aGlzLl9kb20pO3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO28uc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7bGVmdDo1cHg7dG9wOjVweDtib3R0b206NXB4O3JpZ2h0OjVweDsiLG8uc3R5bGUuYmFja2dyb3VuZENvbG9yPW4uZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiKXx8IiNmZmYiO3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImg0Iikscj1uLmdldCgibGFuZyIpfHxbXTthLmlubmVySFRNTD1yWzBdfHxuLmdldCgidGl0bGUiKSxhLnN0eWxlLmNzc1RleHQ9Im1hcmdpbjogMTBweCAyMHB4OyIsYS5zdHlsZS5jb2xvcj1uLmdldCgidGV4dENvbG9yIik7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpO3Muc3R5bGUuY3NzVGV4dD0iZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93OmF1dG87Ijt2YXIgdT1uLmdldCgib3B0aW9uVG9Db250ZW50IiksaD1uLmdldCgiY29udGVudFRvT3B0aW9uIiksYz1vQSh0KTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdSl7dmFyIGQ9dShlLmdldE9wdGlvbigpKTsic3RyaW5nIj09dHlwZW9mIGQ/cy5pbm5lckhUTUw9ZDpHKGQpJiZzLmFwcGVuZENoaWxkKGQpfWVsc2Ugcy5hcHBlbmRDaGlsZChsKSxsLnJlYWRPbmx5PW4uZ2V0KCJyZWFkT25seSIpLGwuc3R5bGUuY3NzVGV4dD0id2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtmb250LWZhbWlseTptb25vc3BhY2U7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS42cmVtOyIsbC5zdHlsZS5jb2xvcj1uLmdldCgidGV4dENvbG9yIiksbC5zdHlsZS5ib3JkZXJDb2xvcj1uLmdldCgidGV4dGFyZWFCb3JkZXJDb2xvciIpLGwuc3R5bGUuYmFja2dyb3VuZENvbG9yPW4uZ2V0KCJ0ZXh0YXJlYUNvbG9yIiksbC52YWx1ZT1jLnZhbHVlO3ZhciBmPWMubWV0YSxwPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3Auc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjA7bGVmdDowO3JpZ2h0OjA7Ijt2YXIgZz0iZmxvYXQ6cmlnaHQ7bWFyZ2luLXJpZ2h0OjIwcHg7Ym9yZGVyOm5vbmU7Y3Vyc29yOnBvaW50ZXI7cGFkZGluZzoycHggNXB4O2ZvbnQtc2l6ZToxMnB4O2JvcmRlci1yYWRpdXM6M3B4IixtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLHY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7Zys9IjtiYWNrZ3JvdW5kLWNvbG9yOiIrbi5nZXQoImJ1dHRvbkNvbG9yIiksZys9Ijtjb2xvcjoiK24uZ2V0KCJidXR0b25UZXh0Q29sb3IiKTt2YXIgeT10aGlzO2Z1bmN0aW9uIHgoKXtpLnJlbW92ZUNoaWxkKG8pLHkuX2RvbT1udWxsfUZ0KG0sImNsaWNrIix4KSxGdCh2LCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdDt0cnl7dD0iZnVuY3Rpb24iPT10eXBlb2YgaD9oKHMsZS5nZXRPcHRpb24oKSk6c0EobC52YWx1ZSxmKX1jYXRjaCh0KXt0aHJvdyB4KCksbmV3IEVycm9yKCJEYXRhIHZpZXcgZm9ybWF0IGVycm9yICIrdCl9dCYmZS5kaXNwYXRjaEFjdGlvbih7dHlwZToiY2hhbmdlRGF0YVZpZXciLG5ld09wdGlvbjp0fSkseCgpfSksbS5pbm5lckhUTUw9clsxXSx2LmlubmVySFRNTD1yWzJdLHYuc3R5bGUuY3NzVGV4dD1nLG0uc3R5bGUuY3NzVGV4dD1nLG4uZ2V0KCJyZWFkT25seSIpfHxwLmFwcGVuZENoaWxkKHYpLHAuYXBwZW5kQ2hpbGQobSksby5hcHBlbmRDaGlsZChhKSxvLmFwcGVuZENoaWxkKHMpLG8uYXBwZW5kQ2hpbGQocCkscy5zdHlsZS5oZWlnaHQ9aS5jbGllbnRIZWlnaHQtODArInB4IixpLmFwcGVuZENoaWxkKG8pLHRoaXMuX2RvbT1vfSxsQS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQsZSl7dGhpcy5fZG9tJiZlLmdldERvbSgpLnJlbW92ZUNoaWxkKHRoaXMuX2RvbSl9LGxBLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKHQsZSl7dGhpcy5yZW1vdmUodCxlKX0sSFQoImRhdGFWaWV3IixsQSksZ2Yoe3R5cGU6ImNoYW5nZURhdGFWaWV3IixldmVudDoiZGF0YVZpZXdDaGFuZ2VkIix1cGRhdGU6InByZXBhcmVBbmRVcGRhdGUifSxmdW5jdGlvbih0LG4pe3ZhciBvPVtdO0UodC5uZXdPcHRpb24uc2VyaWVzLGZ1bmN0aW9uKHQpe3ZhciBlPW4uZ2V0U2VyaWVzQnlOYW1lKHQubmFtZSlbMF07aWYoZSl7dmFyIGk9ZS5nZXQoImRhdGEiKTtvLnB1c2goe25hbWU6dC5uYW1lLGRhdGE6ZnVuY3Rpb24odCxuKXtyZXR1cm4gTih0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9biYmbltlXTtyZXR1cm4gUihpKSYmIWsoaSk/KFIodCkmJiFrKHQpJiYodD10LnZhbHVlKSxDKHt2YWx1ZTp0fSxpKSk6dH0pfSh0LmRhdGEsaSl9KX1lbHNlIG8ucHVzaChMKHt0eXBlOiJzY2F0dGVyIn0sdCkpfSksbi5tZXJnZU9wdGlvbihDKHtzZXJpZXM6b30sdC5uZXdPcHRpb24pKX0pO3ZhciB1QT1FLGhBPV8sY0E9VCxkQT1bImRhdGFUb1BvaW50IiwicG9pbnRUb0RhdGEiXSxmQT1bImdyaWQiLCJ4QXhpcyIsInlBeGlzIiwiZ2VvIiwiZ3JhcGgiLCJwb2xhciIsInJhZGl1c0F4aXMiLCJhbmdsZUF4aXMiLCJibWFwIl07ZnVuY3Rpb24gcEEodCxlLGkpe3ZhciBuPXRoaXMuX3RhcmdldEluZm9MaXN0PVtdLG89e30sYT12QShlLHQpO3VBKHlBLGZ1bmN0aW9uKHQsZSl7aSYmaS5pbmNsdWRlJiYhKDA8PWhBKGkuaW5jbHVkZSxlKSl8fHQoYSxuLG8pfSl9dmFyIGdBPXBBLnByb3RvdHlwZTtmdW5jdGlvbiBtQSh0KXtyZXR1cm4gdFswXT50WzFdJiZ0LnJldmVyc2UoKSx0fWZ1bmN0aW9uIHZBKHQsZSl7cmV0dXJuIFhvKHQsZSx7aW5jbHVkZU1haW5UeXBlczpmQX0pfWdBLnNldE91dHB1dFJhbmdlcz1mdW5jdGlvbih0LGUpe3RoaXMubWF0Y2hPdXRwdXRSYW5nZXModCxlLGZ1bmN0aW9uKHQsZSxpKXtpZigodC5jb29yZFJhbmdlc3x8KHQuY29vcmRSYW5nZXM9W10pKS5wdXNoKGUpLCF0LmNvb3JkUmFuZ2Upe3QuY29vcmRSYW5nZT1lO3ZhciBuPXdBW3QuYnJ1c2hUeXBlXSgwLGksZSk7dC5fX3JhbmdlT2Zmc2V0PXtvZmZzZXQ6U0FbdC5icnVzaFR5cGVdKG4udmFsdWVzLHQucmFuZ2UsWzEsMV0pLHh5TWluTWF4Om4ueHlNaW5NYXh9fX0pfSxnQS5tYXRjaE91dHB1dFJhbmdlcz1mdW5jdGlvbih0LG4sbyl7dUEodCxmdW5jdGlvbihpKXt2YXIgdD10aGlzLmZpbmRUYXJnZXRJbmZvKGksbik7dCYmITAhPT10JiZFKHQuY29vcmRTeXNlcyxmdW5jdGlvbih0KXt2YXIgZT13QVtpLmJydXNoVHlwZV0oMSx0LGkucmFuZ2UpO28oaSxlLnZhbHVlcyx0LG4pfSl9LHRoaXMpfSxnQS5zZXRJbnB1dFJhbmdlcz1mdW5jdGlvbih0LG8pe3VBKHQsZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5maW5kVGFyZ2V0SW5mbyh0LG8pO2lmKHQucmFuZ2U9dC5yYW5nZXx8W10sZSYmITAhPT1lKXt0LnBhbmVsSWQ9ZS5wYW5lbElkO3ZhciBpPXdBW3QuYnJ1c2hUeXBlXSgwLGUuY29vcmRTeXMsdC5jb29yZFJhbmdlKSxuPXQuX19yYW5nZU9mZnNldDt0LnJhbmdlPW4/U0FbdC5icnVzaFR5cGVdKGkudmFsdWVzLG4ub2Zmc2V0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9SUEodCksbj1JQShlKSxvPVtpWzBdL25bMF0saVsxXS9uWzFdXTtyZXR1cm4gaXNOYU4ob1swXSkmJihvWzBdPTEpLGlzTmFOKG9bMV0pJiYob1sxXT0xKSxvfShpLnh5TWluTWF4LG4ueHlNaW5NYXgpKTppLnZhbHVlc319LHRoaXMpfSxnQS5tYWtlUGFuZWxPcHRzPWZ1bmN0aW9uKGksbil7cmV0dXJuIE4odGhpcy5fdGFyZ2V0SW5mb0xpc3QsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRQYW5lbFJlY3QoKTtyZXR1cm57cGFuZWxJZDp0LnBhbmVsSWQsZGVmYXVsdEJydXNoVHlwZTpuJiZuKHQpLGNsaXBQYXRoOlViKGUpLGlzVGFyZ2V0QnlDdXJzb3I6WWIoZSxpLHQuY29vcmRTeXNNb2RlbCksZ2V0TGluZWFyQnJ1c2hPdGhlckV4dGVudDpYYihlKX19KX0sZ0EuY29udHJvbFNlcmllcz1mdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5maW5kVGFyZ2V0SW5mbyh0LGkpO3JldHVybiEwPT09bnx8biYmMDw9aEEobi5jb29yZFN5c2VzLGUuY29vcmRpbmF0ZVN5c3RlbSl9LGdBLmZpbmRUYXJnZXRJbmZvPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMuX3RhcmdldEluZm9MaXN0LG49dkEoZSx0KSxvPTA7bzxpLmxlbmd0aDtvKyspe3ZhciBhPWlbb10scj10LnBhbmVsSWQ7aWYocil7aWYoYS5wYW5lbElkPT09cilyZXR1cm4gYX1lbHNlIGZvcihvPTA7bzx4QS5sZW5ndGg7bysrKWlmKHhBW29dKG4sYSkpcmV0dXJuIGF9cmV0dXJuITB9O3ZhciB5QT17Z3JpZDpmdW5jdGlvbih0LG4pe3ZhciBvPXQueEF4aXNNb2RlbHMsYT10LnlBeGlzTW9kZWxzLGU9dC5ncmlkTW9kZWxzLGk9USgpLHI9e30scz17fTsob3x8YXx8ZSkmJih1QShvLGZ1bmN0aW9uKHQpe3ZhciBlPXQuYXhpcy5ncmlkLm1vZGVsO2kuc2V0KGUuaWQsZSkscltlLmlkXT0hMH0pLHVBKGEsZnVuY3Rpb24odCl7dmFyIGU9dC5heGlzLmdyaWQubW9kZWw7aS5zZXQoZS5pZCxlKSxzW2UuaWRdPSEwfSksdUEoZSxmdW5jdGlvbih0KXtpLnNldCh0LmlkLHQpLHJbdC5pZF09ITAsc1t0LmlkXT0hMH0pLGkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT10LmNvb3JkaW5hdGVTeXN0ZW0saT1bXTt1QShlLmdldENhcnRlc2lhbnMoKSxmdW5jdGlvbih0LGUpeygwPD1oQShvLHQuZ2V0QXhpcygieCIpLm1vZGVsKXx8MDw9aEEoYSx0LmdldEF4aXMoInkiKS5tb2RlbCkpJiZpLnB1c2godCl9KSxuLnB1c2goe3BhbmVsSWQ6ImdyaWQtLSIrdC5pZCxncmlkTW9kZWw6dCxjb29yZFN5c01vZGVsOnQsY29vcmRTeXM6aVswXSxjb29yZFN5c2VzOmksZ2V0UGFuZWxSZWN0Ol9BLmdyaWQseEF4aXNEZWNsYXJlZDpyW3QuaWRdLHlBeGlzRGVjbGFyZWQ6c1t0LmlkXX0pfSkpfSxnZW86ZnVuY3Rpb24odCxpKXt1QSh0Lmdlb01vZGVscyxmdW5jdGlvbih0KXt2YXIgZT10LmNvb3JkaW5hdGVTeXN0ZW07aS5wdXNoKHtwYW5lbElkOiJnZW8tLSIrdC5pZCxnZW9Nb2RlbDp0LGNvb3JkU3lzTW9kZWw6dCxjb29yZFN5czplLGNvb3JkU3lzZXM6W2VdLGdldFBhbmVsUmVjdDpfQS5nZW99KX0pfX0seEE9W2Z1bmN0aW9uKHQsZSl7dmFyIGk9dC54QXhpc01vZGVsLG49dC55QXhpc01vZGVsLG89dC5ncmlkTW9kZWw7cmV0dXJuIW8mJmkmJihvPWkuYXhpcy5ncmlkLm1vZGVsKSwhbyYmbiYmKG89bi5heGlzLmdyaWQubW9kZWwpLG8mJm89PT1lLmdyaWRNb2RlbH0sZnVuY3Rpb24odCxlKXt2YXIgaT10Lmdlb01vZGVsO3JldHVybiBpJiZpPT09ZS5nZW9Nb2RlbH1dLF9BPXtncmlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29vcmRTeXMuZ3JpZC5nZXRSZWN0KCkuY2xvbmUoKX0sZ2VvOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb29yZFN5cyxlPXQuZ2V0Qm91bmRpbmdSZWN0KCkuY2xvbmUoKTtyZXR1cm4gZS5hcHBseVRyYW5zZm9ybSh1bCh0KSksZX19LHdBPXtsaW5lWDpjQShiQSwwKSxsaW5lWTpjQShiQSwxKSxyZWN0OmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lW2RBW3RdXShbaVswXVswXSxpWzFdWzBdXSksbz1lW2RBW3RdXShbaVswXVsxXSxpWzFdWzFdXSksYT1bbUEoW25bMF0sb1swXV0pLG1BKFtuWzFdLG9bMV1dKV07cmV0dXJue3ZhbHVlczphLHh5TWluTWF4OmF9fSxwb2x5Z29uOmZ1bmN0aW9uKGksbix0KXt2YXIgbz1bWzEvMCwtMS8wXSxbMS8wLC0xLzBdXTtyZXR1cm57dmFsdWVzOk4odCxmdW5jdGlvbih0KXt2YXIgZT1uW2RBW2ldXSh0KTtyZXR1cm4gb1swXVswXT1NYXRoLm1pbihvWzBdWzBdLGVbMF0pLG9bMV1bMF09TWF0aC5taW4ob1sxXVswXSxlWzFdKSxvWzBdWzFdPU1hdGgubWF4KG9bMF1bMV0sZVswXSksb1sxXVsxXT1NYXRoLm1heChvWzFdWzFdLGVbMV0pLGV9KSx4eU1pbk1heDpvfX19O2Z1bmN0aW9uIGJBKHQsZSxpLG4pe3ZhciBvPWkuZ2V0QXhpcyhbIngiLCJ5Il1bdF0pLGE9bUEoTihbMCwxXSxmdW5jdGlvbih0KXtyZXR1cm4gZT9vLmNvb3JkVG9EYXRhKG8udG9Mb2NhbENvb3JkKG5bdF0pKTpvLnRvR2xvYmFsQ29vcmQoby5kYXRhVG9Db29yZChuW3RdKSl9KSkscj1bXTtyZXR1cm4gclt0XT1hLHJbMS10XT1bTmFOLE5hTl0se3ZhbHVlczphLHh5TWluTWF4OnJ9fXZhciBTQT17bGluZVg6Y0EoTUEsMCksbGluZVk6Y0EoTUEsMSkscmVjdDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuW1t0WzBdWzBdLWlbMF0qZVswXVswXSx0WzBdWzFdLWlbMF0qZVswXVsxXV0sW3RbMV1bMF0taVsxXSplWzFdWzBdLHRbMV1bMV0taVsxXSplWzFdWzFdXV19LHBvbHlnb246ZnVuY3Rpb24odCxpLG4pe3JldHVybiBOKHQsZnVuY3Rpb24odCxlKXtyZXR1cm5bdFswXS1uWzBdKmlbZV1bMF0sdFsxXS1uWzFdKmlbZV1bMV1dfSl9fTtmdW5jdGlvbiBNQSh0LGUsaSxuKXtyZXR1cm5bZVswXS1uW3RdKmlbMF0sZVsxXS1uW3RdKmlbMV1dfWZ1bmN0aW9uIElBKHQpe3JldHVybiB0P1t0WzBdWzFdLXRbMF1bMF0sdFsxXVsxXS10WzFdWzBdXTpbTmFOLE5hTl19dmFyIFRBPUUsQUE9IlwwX2VjX2hpc3Rfc3RvcmUiO2Z1bmN0aW9uIERBKHQpe3ZhciBlPXRbQUFdO3JldHVybiBlPWV8fCh0W0FBXT1be31dKX1UdS5yZWdpc3RlclN1YlR5cGVEZWZhdWx0ZXIoImRhdGFab29tIixmdW5jdGlvbigpe3JldHVybiJzbGlkZXIifSk7dmFyIENBPVsiY2FydGVzaWFuMmQiLCJwb2xhciIsInNpbmdsZUF4aXMiXTt2YXIgTEEsa0EsUEEsTkEsT0E9KGtBPVsiYXhpc0luZGV4IiwiYXhpcyIsImluZGV4IiwiaWQiXSxQQT1OKExBPShMQT1bIngiLCJ5IiwieiIsInJhZGl1cyIsImFuZ2xlIiwic2luZ2xlIl0pLnNsaWNlKCksdXUpLE5BPU4oa0E9KGtBfHxbXSkuc2xpY2UoKSx1dSksZnVuY3Rpb24obyxhKXtFKExBLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXtuYW1lOnQsY2FwaXRhbDpQQVtlXX0sbj0wO248a0EubGVuZ3RoO24rKylpW2tBW25dXT10K05BW25dO28uY2FsbChhLGkpfSl9KTtmdW5jdGlvbiBFQShvLGEscil7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlLGk9e25vZGVzOltdLHJlY29yZHM6e319O2lmKGEoZnVuY3Rpb24odCl7aS5yZWNvcmRzW3QubmFtZV09e319KSwhdClyZXR1cm4gaTtmb3Iocyh0LGkpO2U9ITEsbyhuKSxlOyk7ZnVuY3Rpb24gbih0KXshZnVuY3Rpb24odCxlKXtyZXR1cm4gMDw9XyhlLm5vZGVzLHQpfSh0LGkpJiZmdW5jdGlvbih0LGkpe3ZhciBuPSExO3JldHVybiBhKGZ1bmN0aW9uKGUpe0Uocih0LGUpfHxbXSxmdW5jdGlvbih0KXtpLnJlY29yZHNbZS5uYW1lXVt0XSYmKG49ITApfSl9KSxufSh0LGkpJiYocyh0LGkpLGU9ITApfXJldHVybiBpfTtmdW5jdGlvbiBzKHQsaSl7aS5ub2Rlcy5wdXNoKHQpLGEoZnVuY3Rpb24oZSl7RShyKHQsZSl8fFtdLGZ1bmN0aW9uKHQpe2kucmVjb3Jkc1tlLm5hbWVdW3RdPSEwfSl9KX19ZnVuY3Rpb24gekEodCxlLGksbil7dGhpcy5fZGltTmFtZT10LHRoaXMuX2F4aXNJbmRleD1lLHRoaXMuX3ZhbHVlV2luZG93LHRoaXMuX3BlcmNlbnRXaW5kb3csdGhpcy5fZGF0YUV4dGVudCx0aGlzLl9taW5NYXhTcGFuLHRoaXMuZWNNb2RlbD1uLHRoaXMuX2RhdGFab29tTW9kZWw9aX12YXIgUkE9RSxCQT1PbDtmdW5jdGlvbiBWQSh0LGUpe3ZhciBpPXQuZ2V0QXhpc01vZGVsKCksbj10Ll9wZXJjZW50V2luZG93LG89dC5fdmFsdWVXaW5kb3c7aWYobil7dmFyIGE9UmwobyxbMCw1MDBdKTthPU1hdGgubWluKGEsMjApO3ZhciByPWV8fDA9PT1uWzBdJiYxMDA9PT1uWzFdO2kuc2V0UmFuZ2Uocj9udWxsOitvWzBdLnRvRml4ZWQoYSkscj9udWxsOitvWzFdLnRvRml4ZWQoYSkpfX16QS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnpBLGhvc3RlZEJ5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kYXRhWm9vbU1vZGVsPT09dH0sZ2V0RGF0YVZhbHVlV2luZG93OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZhbHVlV2luZG93LnNsaWNlKCl9LGdldERhdGFQZXJjZW50V2luZG93OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BlcmNlbnRXaW5kb3cuc2xpY2UoKX0sZ2V0VGFyZ2V0U2VyaWVzTW9kZWxzOmZ1bmN0aW9uKCl7dmFyIG49W10sbz10aGlzLmVjTW9kZWw7cmV0dXJuIG8uZWFjaFNlcmllcyhmdW5jdGlvbih0KXtpZihmdW5jdGlvbih0KXtyZXR1cm4gMDw9XyhDQSx0KX0odC5nZXQoImNvb3JkaW5hdGVTeXN0ZW0iKSkpe3ZhciBlPXRoaXMuX2RpbU5hbWUsaT1vLnF1ZXJ5Q29tcG9uZW50cyh7bWFpblR5cGU6ZSsiQXhpcyIsaW5kZXg6dC5nZXQoZSsiQXhpc0luZGV4IiksaWQ6dC5nZXQoZSsiQXhpc0lkIil9KVswXTt0aGlzLl9heGlzSW5kZXg9PT0oaSYmaS5jb21wb25lbnRJbmRleCkmJm4ucHVzaCh0KX19LHRoaXMpLG59LGdldEF4aXNNb2RlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVjTW9kZWwuZ2V0Q29tcG9uZW50KHRoaXMuX2RpbU5hbWUrIkF4aXMiLHRoaXMuX2F4aXNJbmRleCl9LGdldE90aGVyQXhpc01vZGVsOmZ1bmN0aW9uKCl7dmFyIHQsZSxpLG49dGhpcy5fZGltTmFtZSxvPXRoaXMuZWNNb2RlbCxhPXRoaXMuZ2V0QXhpc01vZGVsKCk7cmV0dXJuIHQ9IngiPT09bnx8InkiPT09bj8oZT0iZ3JpZEluZGV4IiwieCI9PT1uPyJ5IjoieCIpOihlPSJwb2xhckluZGV4IiwiYW5nbGUiPT09bj8icmFkaXVzIjoiYW5nbGUiKSxvLmVhY2hDb21wb25lbnQodCsiQXhpcyIsZnVuY3Rpb24odCl7KHQuZ2V0KGUpfHwwKT09PShhLmdldChlKXx8MCkmJihpPXQpfSksaX0sZ2V0TWluTWF4U3BhbjpmdW5jdGlvbigpe3JldHVybiBEKHRoaXMuX21pbk1heFNwYW4pfSxjYWxjdWxhdGVEYXRhV2luZG93OmZ1bmN0aW9uKG8pe3ZhciBhLHI9dGhpcy5fZGF0YUV4dGVudCxzPXRoaXMuZ2V0QXhpc01vZGVsKCkuYXhpcy5zY2FsZSxsPXRoaXMuX2RhdGFab29tTW9kZWwuZ2V0UmFuZ2VQcm9wTW9kZSgpLHU9WzAsMTAwXSxoPVtdLGM9W107UkEoWyJzdGFydCIsImVuZCJdLGZ1bmN0aW9uKHQsZSl7dmFyIGk9b1t0XSxuPW9bdCsiVmFsdWUiXTsicGVyY2VudCI9PT1sW2VdPyhudWxsPT1pJiYoaT11W2VdKSxuPXMucGFyc2Uoa2woaSx1LHIpKSk6KGE9ITAsaT1rbChuPW51bGw9PW4/cltlXTpzLnBhcnNlKG4pLHIsdSkpLGNbZV09bixoW2VdPWl9KSxCQShjKSxCQShoKTt2YXIgZD10aGlzLl9taW5NYXhTcGFuO2Z1bmN0aW9uIHQodCxlLGksbixvKXt2YXIgYT1vPyJTcGFuIjoiVmFsdWVTcGFuIjtXdygwLHQsaSwiYWxsIixkWyJtaW4iK2FdLGRbIm1heCIrYV0pO2Zvcih2YXIgcj0wO3I8MjtyKyspZVtyXT1rbCh0W3JdLGksbiwhMCksbyYmKGVbcl09cy5wYXJzZShlW3JdKSl9cmV0dXJuIGE/dChjLGgscix1LCExKTp0KGgsYyx1LHIsITApLHt2YWx1ZVdpbmRvdzpjLHBlcmNlbnRXaW5kb3c6aH19LHJlc2V0OmZ1bmN0aW9uKHQpe2lmKHQ9PT10aGlzLl9kYXRhWm9vbU1vZGVsKXt2YXIgZT10aGlzLmdldFRhcmdldFNlcmllc01vZGVscygpO3RoaXMuX2RhdGFFeHRlbnQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPVsxLzAsLTEvMF07UkEoaSxmdW5jdGlvbih0KXt2YXIgaT10LmdldERhdGEoKTtpJiZSQShpLm1hcERpbWVuc2lvbihlLCEwKSxmdW5jdGlvbih0KXt2YXIgZT1pLmdldEFwcHJveGltYXRlRXh0ZW50KHQpO2VbMF08blswXSYmKG5bMF09ZVswXSksZVsxXT5uWzFdJiYoblsxXT1lWzFdKX0pfSksblsxXTxuWzBdJiYobj1bTmFOLE5hTl0pO3JldHVybiBmdW5jdGlvbih0LGUpe3ZhciBpPXQuZ2V0QXhpc01vZGVsKCksbj1pLmdldE1pbighMCksbz0iY2F0ZWdvcnkiPT09aS5nZXQoInR5cGUiKSxhPW8mJmkuZ2V0Q2F0ZWdvcmllcygpLmxlbmd0aDtudWxsIT1uJiYiZGF0YU1pbiIhPT1uJiYiZnVuY3Rpb24iIT10eXBlb2Ygbj9lWzBdPW46byYmKGVbMF09MDxhPzA6TmFOKTt2YXIgcj1pLmdldE1heCghMCk7bnVsbCE9ciYmImRhdGFNYXgiIT09ciYmImZ1bmN0aW9uIiE9dHlwZW9mIHI/ZVsxXT1yOm8mJihlWzFdPTA8YT9hLTE6TmFOKTtpLmdldCgic2NhbGUiLCEwKXx8KDA8ZVswXSYmKGVbMF09MCksZVsxXTwwJiYoZVsxXT0wKSl9KHQsbiksbn0odGhpcyx0aGlzLl9kaW1OYW1lLGUpLGZ1bmN0aW9uKG4pe3ZhciBvPW4uX21pbk1heFNwYW49e30sYT1uLl9kYXRhWm9vbU1vZGVsLHI9bi5fZGF0YUV4dGVudDtSQShbIm1pbiIsIm1heCJdLGZ1bmN0aW9uKHQpe3ZhciBlPWEuZ2V0KHQrIlNwYW4iKSxpPWEuZ2V0KHQrIlZhbHVlU3BhbiIpO251bGwhPWkmJihpPW4uZ2V0QXhpc01vZGVsKCkuYXhpcy5zY2FsZS5wYXJzZShpKSksbnVsbCE9aT9lPWtsKHJbMF0raSxyLFswLDEwMF0sITApOm51bGwhPWUmJihpPWtsKGUsWzAsMTAwXSxyLCEwKS1yWzBdKSxvW3QrIlNwYW4iXT1lLG9bdCsiVmFsdWVTcGFuIl09aX0pfSh0aGlzKTt2YXIgaT10aGlzLmNhbGN1bGF0ZURhdGFXaW5kb3codC5zZXR0bGVkT3B0aW9uKTt0aGlzLl92YWx1ZVdpbmRvdz1pLnZhbHVlV2luZG93LHRoaXMuX3BlcmNlbnRXaW5kb3c9aS5wZXJjZW50V2luZG93LFZBKHRoaXMpfX0scmVzdG9yZTpmdW5jdGlvbih0KXt0PT09dGhpcy5fZGF0YVpvb21Nb2RlbCYmKHRoaXMuX3ZhbHVlV2luZG93PXRoaXMuX3BlcmNlbnRXaW5kb3c9bnVsbCxWQSh0aGlzLCEwKSl9LGZpbHRlckRhdGE6ZnVuY3Rpb24odCxlKXtpZih0PT09dGhpcy5fZGF0YVpvb21Nb2RlbCl7dmFyIG49dGhpcy5fZGltTmFtZSxpPXRoaXMuZ2V0VGFyZ2V0U2VyaWVzTW9kZWxzKCksbz10LmdldCgiZmlsdGVyTW9kZSIpLGM9dGhpcy5fdmFsdWVXaW5kb3c7Im5vbmUiIT09byYmUkEoaSxmdW5jdGlvbihpKXt2YXIgdT1pLmdldERhdGEoKSxoPXUubWFwRGltZW5zaW9uKG4sITApO2gubGVuZ3RoJiYoIndlYWtGaWx0ZXIiPT09bz91LmZpbHRlclNlbGYoZnVuY3Rpb24odCl7Zm9yKHZhciBlLGksbixvPTA7bzxoLmxlbmd0aDtvKyspe3ZhciBhPXUuZ2V0KGhbb10sdCkscj0haXNOYU4oYSkscz1hPGNbMF0sbD1hPmNbMV07aWYociYmIXMmJiFsKXJldHVybiEwO3ImJihuPSEwKSxzJiYoZT0hMCksbCYmKGk9ITApfXJldHVybiBuJiZlJiZpfSk6UkEoaCxmdW5jdGlvbih0KXtpZigiZW1wdHkiPT09bylpLnNldERhdGEodT11Lm1hcCh0LGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdD49Y1swXSYmdDw9Y1sxXX0odCk/dDpOYU59KSk7ZWxzZXt2YXIgZT17fTtlW3RdPWMsdS5zZWxlY3RSYW5nZShlKX19KSxSQShoLGZ1bmN0aW9uKHQpe3Uuc2V0QXBwcm94aW1hdGVFeHRlbnQoYyx0KX0pKX0pfX19O3ZhciBHQT1FLEZBPU9BLFdBPXdmKHt0eXBlOiJkYXRhWm9vbSIsZGVwZW5kZW5jaWVzOlsieEF4aXMiLCJ5QXhpcyIsInpBeGlzIiwicmFkaXVzQXhpcyIsImFuZ2xlQXhpcyIsInNpbmdsZUF4aXMiLCJzZXJpZXMiXSxkZWZhdWx0T3B0aW9uOnt6bGV2ZWw6MCx6OjQsb3JpZW50Om51bGwseEF4aXNJbmRleDpudWxsLHlBeGlzSW5kZXg6bnVsbCxmaWx0ZXJNb2RlOiJmaWx0ZXIiLHRocm90dGxlOm51bGwsc3RhcnQ6MCxlbmQ6MTAwLHN0YXJ0VmFsdWU6bnVsbCxlbmRWYWx1ZTpudWxsLG1pblNwYW46bnVsbCxtYXhTcGFuOm51bGwsbWluVmFsdWVTcGFuOm51bGwsbWF4VmFsdWVTcGFuOm51bGwscmFuZ2VNb2RlOm51bGx9LGluaXQ6ZnVuY3Rpb24odCxlLGkpe3RoaXMuX2RhdGFJbnRlcnZhbEJ5QXhpcz17fSx0aGlzLl9kYXRhSW5mbz17fSx0aGlzLl9heGlzUHJveGllcz17fSx0aGlzLnRleHRTdHlsZU1vZGVsLHRoaXMuX2F1dG9UaHJvdHRsZT0hMCx0aGlzLl9yYW5nZVByb3BNb2RlPVsicGVyY2VudCIsInBlcmNlbnQiXTt2YXIgbj1IQSh0KTt0aGlzLnNldHRsZWRPcHRpb249bix0aGlzLm1lcmdlRGVmYXVsdEFuZFRoZW1lKHQsaSksdGhpcy5kb0luaXQobil9LG1lcmdlT3B0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPUhBKHQpO20odGhpcy5vcHRpb24sdCwhMCksbSh0aGlzLnNldHRsZWRPcHRpb24sZSwhMCksdGhpcy5kb0luaXQoZSl9LGRvSW5pdDpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm9wdGlvbjt2LmNhbnZhc1N1cHBvcnRlZHx8KGkucmVhbHRpbWU9ITEpLHRoaXMuX3NldERlZmF1bHRUaHJvdHRsZSh0KSxaQSh0aGlzLHQpO3ZhciBuPXRoaXMuc2V0dGxlZE9wdGlvbjtHQShbWyJzdGFydCIsInN0YXJ0VmFsdWUiXSxbImVuZCIsImVuZFZhbHVlIl1dLGZ1bmN0aW9uKHQsZSl7InZhbHVlIj09PXRoaXMuX3JhbmdlUHJvcE1vZGVbZV0mJihpW3RbMF1dPW5bdFswXV09bnVsbCl9LHRoaXMpLHRoaXMudGV4dFN0eWxlTW9kZWw9dGhpcy5nZXRNb2RlbCgidGV4dFN0eWxlIiksdGhpcy5fcmVzZXRUYXJnZXQoKSx0aGlzLl9naXZlQXhpc1Byb3hpZXMoKX0sX2dpdmVBeGlzUHJveGllczpmdW5jdGlvbigpe3ZhciByPXRoaXMuX2F4aXNQcm94aWVzO3RoaXMuZWFjaFRhcmdldEF4aXMoZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5kZXBlbmRlbnRNb2RlbHNbdC5heGlzXVtlXSxhPW8uX19kekF4aXNQcm94eXx8KG8uX19kekF4aXNQcm94eT1uZXcgekEodC5uYW1lLGUsdGhpcyxuKSk7clt0Lm5hbWUrIl8iK2VdPWF9LHRoaXMpfSxfcmVzZXRUYXJnZXQ6ZnVuY3Rpb24oKXt2YXIgaT10aGlzLm9wdGlvbix0PXRoaXMuX2p1ZGdlQXV0b01vZGUoKTtGQShmdW5jdGlvbih0KXt2YXIgZT10LmF4aXNJbmRleDtpW2VdPUVvKGlbZV0pfSx0aGlzKSwiYXhpc0luZGV4Ij09PXQ/dGhpcy5fYXV0b1NldEF4aXNJbmRleCgpOiJvcmllbnQiPT09dCYmdGhpcy5fYXV0b1NldE9yaWVudCgpfSxfanVkZ2VBdXRvTW9kZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9uLGk9ITE7RkEoZnVuY3Rpb24odCl7bnVsbCE9ZVt0LmF4aXNJbmRleF0mJihpPSEwKX0sdGhpcyk7dmFyIHQ9ZS5vcmllbnQ7cmV0dXJuIG51bGw9PXQmJmk/Im9yaWVudCI6aT92b2lkIDA6KG51bGw9PXQmJihlLm9yaWVudD0iaG9yaXpvbnRhbCIpLCJheGlzSW5kZXgiKX0sX2F1dG9TZXRBeGlzSW5kZXg6ZnVuY3Rpb24oKXt2YXIgYT0hMCxlPXRoaXMuZ2V0KCJvcmllbnQiLCEwKSxyPXRoaXMub3B0aW9uLHQ9dGhpcy5kZXBlbmRlbnRNb2RlbHM7aWYoYSl7dmFyIGk9InZlcnRpY2FsIj09PWU/InkiOiJ4Ijt0W2krIkF4aXMiXS5sZW5ndGg/KHJbaSsiQXhpc0luZGV4Il09WzBdLGE9ITEpOkdBKHQuc2luZ2xlQXhpcyxmdW5jdGlvbih0KXthJiZ0LmdldCgib3JpZW50IiwhMCk9PT1lJiYoci5zaW5nbGVBeGlzSW5kZXg9W3QuY29tcG9uZW50SW5kZXhdLGE9ITEpfSl9YSYmRkEoZnVuY3Rpb24odCl7aWYoYSl7dmFyIGU9W10saT10aGlzLmRlcGVuZGVudE1vZGVsc1t0LmF4aXNdO2lmKGkubGVuZ3RoJiYhZS5sZW5ndGgpZm9yKHZhciBuPTAsbz1pLmxlbmd0aDtuPG87bisrKSJjYXRlZ29yeSI9PT1pW25dLmdldCgidHlwZSIpJiZlLnB1c2gobik7KHJbdC5heGlzSW5kZXhdPWUpLmxlbmd0aCYmKGE9ITEpfX0sdGhpcyksYSYmdGhpcy5lY01vZGVsLmVhY2hTZXJpZXMoZnVuY3Rpb24obyl7dGhpcy5faXNTZXJpZXNIYXNBbGxBeGVzVHlwZU9mKG8sInZhbHVlIikmJkZBKGZ1bmN0aW9uKHQpe3ZhciBlPXJbdC5heGlzSW5kZXhdLGk9by5nZXQodC5heGlzSW5kZXgpLG49by5nZXQodC5heGlzSWQpO18oZSxpPW8uZWNNb2RlbC5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOnQuYXhpcyxpbmRleDppLGlkOm59KVswXS5jb21wb25lbnRJbmRleCk8MCYmZS5wdXNoKGkpfSl9LHRoaXMpfSxfYXV0b1NldE9yaWVudDpmdW5jdGlvbigpe3ZhciBlO3RoaXMuZWFjaFRhcmdldEF4aXMoZnVuY3Rpb24odCl7ZT1lfHx0Lm5hbWV9LHRoaXMpLHRoaXMub3B0aW9uLm9yaWVudD0ieSI9PT1lPyJ2ZXJ0aWNhbCI6Imhvcml6b250YWwifSxfaXNTZXJpZXNIYXNBbGxBeGVzVHlwZU9mOmZ1bmN0aW9uKG4sbyl7dmFyIGE9ITA7cmV0dXJuIEZBKGZ1bmN0aW9uKHQpe3ZhciBlPW4uZ2V0KHQuYXhpc0luZGV4KSxpPXRoaXMuZGVwZW5kZW50TW9kZWxzW3QuYXhpc11bZV07aSYmaS5nZXQoInR5cGUiKT09PW98fChhPSExKX0sdGhpcyksYX0sX3NldERlZmF1bHRUaHJvdHRsZTpmdW5jdGlvbih0KXtpZih0Lmhhc093blByb3BlcnR5KCJ0aHJvdHRsZSIpJiYodGhpcy5fYXV0b1Rocm90dGxlPSExKSx0aGlzLl9hdXRvVGhyb3R0bGUpe3ZhciBlPXRoaXMuZWNNb2RlbC5vcHRpb247dGhpcy5vcHRpb24udGhyb3R0bGU9ZS5hbmltYXRpb24mJjA8ZS5hbmltYXRpb25EdXJhdGlvblVwZGF0ZT8xMDA6MjB9fSxnZXRGaXJzdFRhcmdldEF4aXNNb2RlbDpmdW5jdGlvbigpe3ZhciBpO3JldHVybiBGQShmdW5jdGlvbih0KXtpZihudWxsPT1pKXt2YXIgZT10aGlzLmdldCh0LmF4aXNJbmRleCk7ZS5sZW5ndGgmJihpPXRoaXMuZGVwZW5kZW50TW9kZWxzW3QuYXhpc11bZVswXV0pfX0sdGhpcyksaX0sZWFjaFRhcmdldEF4aXM6ZnVuY3Rpb24oaSxuKXt2YXIgbz10aGlzLmVjTW9kZWw7RkEoZnVuY3Rpb24oZSl7R0EodGhpcy5nZXQoZS5heGlzSW5kZXgpLGZ1bmN0aW9uKHQpe2kuY2FsbChuLGUsdCx0aGlzLG8pfSx0aGlzKX0sdGhpcyl9LGdldEF4aXNQcm94eTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9heGlzUHJveGllc1t0KyJfIitlXX0sZ2V0QXhpc01vZGVsOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5nZXRBeGlzUHJveHkodCxlKTtyZXR1cm4gaSYmaS5nZXRBeGlzTW9kZWwoKX0sc2V0UmF3UmFuZ2U6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb24sbj10aGlzLnNldHRsZWRPcHRpb247R0EoW1sic3RhcnQiLCJzdGFydFZhbHVlIl0sWyJlbmQiLCJlbmRWYWx1ZSJdXSxmdW5jdGlvbih0KXtudWxsPT1lW3RbMF1dJiZudWxsPT1lW3RbMV1dfHwoaVt0WzBdXT1uW3RbMF1dPWVbdFswXV0saVt0WzFdXT1uW3RbMV1dPWVbdFsxXV0pfSx0aGlzKSxaQSh0aGlzLGUpfSxzZXRDYWxjdWxhdGVkUmFuZ2U6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb247R0EoWyJzdGFydCIsInN0YXJ0VmFsdWUiLCJlbmQiLCJlbmRWYWx1ZSJdLGZ1bmN0aW9uKHQpe2lbdF09ZVt0XX0pfSxnZXRQZXJjZW50UmFuZ2U6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmZpbmRSZXByZXNlbnRhdGl2ZUF4aXNQcm94eSgpO2lmKHQpcmV0dXJuIHQuZ2V0RGF0YVBlcmNlbnRXaW5kb3coKX0sZ2V0VmFsdWVSYW5nZTpmdW5jdGlvbih0LGUpe2lmKG51bGwhPXR8fG51bGwhPWUpcmV0dXJuIHRoaXMuZ2V0QXhpc1Byb3h5KHQsZSkuZ2V0RGF0YVZhbHVlV2luZG93KCk7dmFyIGk9dGhpcy5maW5kUmVwcmVzZW50YXRpdmVBeGlzUHJveHkoKTtyZXR1cm4gaT9pLmdldERhdGFWYWx1ZVdpbmRvdygpOnZvaWQgMH0sZmluZFJlcHJlc2VudGF0aXZlQXhpc1Byb3h5OmZ1bmN0aW9uKHQpe2lmKHQpcmV0dXJuIHQuX19kekF4aXNQcm94eTt2YXIgZT10aGlzLl9heGlzUHJveGllcztmb3IodmFyIGkgaW4gZSlpZihlLmhhc093blByb3BlcnR5KGkpJiZlW2ldLmhvc3RlZEJ5KHRoaXMpKXJldHVybiBlW2ldO2Zvcih2YXIgaSBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkoaSkmJiFlW2ldLmhvc3RlZEJ5KHRoaXMpKXJldHVybiBlW2ldfSxnZXRSYW5nZVByb3BNb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JhbmdlUHJvcE1vZGUuc2xpY2UoKX19KTtmdW5jdGlvbiBIQShlKXt2YXIgaT17fTtyZXR1cm4gR0EoWyJzdGFydCIsImVuZCIsInN0YXJ0VmFsdWUiLCJlbmRWYWx1ZSIsInRocm90dGxlIl0sZnVuY3Rpb24odCl7ZS5oYXNPd25Qcm9wZXJ0eSh0KSYmKGlbdF09ZVt0XSl9KSxpfWZ1bmN0aW9uIFpBKHQsbyl7dmFyIGE9dC5fcmFuZ2VQcm9wTW9kZSxyPXQuZ2V0KCJyYW5nZU1vZGUiKTtHQShbWyJzdGFydCIsInN0YXJ0VmFsdWUiXSxbImVuZCIsImVuZFZhbHVlIl1dLGZ1bmN0aW9uKHQsZSl7dmFyIGk9bnVsbCE9b1t0WzBdXSxuPW51bGwhPW9bdFsxXV07aSYmIW4/YVtlXT0icGVyY2VudCI6IWkmJm4/YVtlXT0idmFsdWUiOnI/YVtlXT1yW2VdOmkmJihhW2VdPSJwZXJjZW50Iil9KX12YXIgVUE9aGMuZXh0ZW5kKHt0eXBlOiJkYXRhWm9vbSIscmVuZGVyOmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuZGF0YVpvb21Nb2RlbD10LHRoaXMuZWNNb2RlbD1lLHRoaXMuYXBpPWl9LGdldFRhcmdldENvb3JkSW5mbzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZGF0YVpvb21Nb2RlbCxvPXRoaXMuZWNNb2RlbCxhPXt9O3JldHVybiB0LmVhY2hUYXJnZXRBeGlzKGZ1bmN0aW9uKHQsZSl7dmFyIGk9by5nZXRDb21wb25lbnQodC5heGlzLGUpO2lmKGkpe3ZhciBuPWkuZ2V0Q29vcmRTeXNNb2RlbCgpO24mJmZ1bmN0aW9uKHQsZSxpLG4pe2Zvcih2YXIgbyxhPTA7YTxpLmxlbmd0aDthKyspaWYoaVthXS5tb2RlbD09PXQpe289aVthXTticmVha31vfHxpLnB1c2gobz17bW9kZWw6dCxheGlzTW9kZWxzOltdLGNvb3JkSW5kZXg6bn0pO28uYXhpc01vZGVscy5wdXNoKGUpfShuLGksYVtuLm1haW5UeXBlXXx8KGFbbi5tYWluVHlwZV09W10pLG4uY29tcG9uZW50SW5kZXgpfX0sdGhpcyksYX19KTtXQS5leHRlbmQoe3R5cGU6ImRhdGFab29tLnNlbGVjdCJ9KSxVQS5leHRlbmQoe3R5cGU6ImRhdGFab29tLnNlbGVjdCJ9KSxwZih7Z2V0VGFyZ2V0U2VyaWVzOmZ1bmN0aW9uKHQpe3ZhciBuPVEoKTtyZXR1cm4gdC5lYWNoQ29tcG9uZW50KCJkYXRhWm9vbSIsZnVuY3Rpb24odCl7dC5lYWNoVGFyZ2V0QXhpcyhmdW5jdGlvbih0LGUsaSl7RShpLmdldEF4aXNQcm94eSh0Lm5hbWUsZSkuZ2V0VGFyZ2V0U2VyaWVzTW9kZWxzKCksZnVuY3Rpb24odCl7bi5zZXQodC51aWQsdCl9KX0pfSksbn0sbW9kaWZ5T3V0cHV0RW5kOiEwLG92ZXJhbGxSZXNldDpmdW5jdGlvbih0LG4pe3QuZWFjaENvbXBvbmVudCgiZGF0YVpvb20iLGZ1bmN0aW9uKHQpe3QuZWFjaFRhcmdldEF4aXMoZnVuY3Rpb24odCxlLGkpe2kuZ2V0QXhpc1Byb3h5KHQubmFtZSxlKS5yZXNldChpLG4pfSksdC5lYWNoVGFyZ2V0QXhpcyhmdW5jdGlvbih0LGUsaSl7aS5nZXRBeGlzUHJveHkodC5uYW1lLGUpLmZpbHRlckRhdGEoaSxuKX0pfSksdC5lYWNoQ29tcG9uZW50KCJkYXRhWm9vbSIsZnVuY3Rpb24odCl7dmFyIGU9dC5maW5kUmVwcmVzZW50YXRpdmVBeGlzUHJveHkoKSxpPWUuZ2V0RGF0YVBlcmNlbnRXaW5kb3coKSxuPWUuZ2V0RGF0YVZhbHVlV2luZG93KCk7dC5zZXRDYWxjdWxhdGVkUmFuZ2Uoe3N0YXJ0OmlbMF0sZW5kOmlbMV0sc3RhcnRWYWx1ZTpuWzBdLGVuZFZhbHVlOm5bMV19KX0pfX0pLGdmKCJkYXRhWm9vbSIsZnVuY3Rpb24oaSx0KXt2YXIgbj1FQShBKHQuZWFjaENvbXBvbmVudCx0LCJkYXRhWm9vbSIpLE9BLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0KGUuYXhpc0luZGV4KX0pLG89W107dC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToiZGF0YVpvb20iLHF1ZXJ5Oml9LGZ1bmN0aW9uKHQsZSl7by5wdXNoLmFwcGx5KG8sbih0KS5ub2Rlcyl9KSxFKG8sZnVuY3Rpb24odCxlKXt0LnNldFJhd1JhbmdlKHtzdGFydDppLnN0YXJ0LGVuZDppLmVuZCxzdGFydFZhbHVlOmkuc3RhcnRWYWx1ZSxlbmRWYWx1ZTppLmVuZFZhbHVlfSl9KX0pO3ZhciBYQT1DYy50b29sYm94LmRhdGFab29tLFlBPUU7ZnVuY3Rpb24gakEodCxlLGkpeyh0aGlzLl9icnVzaENvbnRyb2xsZXI9bmV3IGdiKGkuZ2V0WnIoKSkpLm9uKCJicnVzaCIsQSh0aGlzLl9vbkJydXNoLHRoaXMpKS5tb3VudCgpLHRoaXMuX2lzWm9vbUFjdGl2ZX1qQS5kZWZhdWx0T3B0aW9uPXtzaG93OiEwLGZpbHRlck1vZGU6ImZpbHRlciIsaWNvbjp7em9vbToiTTAsMTMuNWgyNi45IE0xMy41LDI2LjlWMCBNMzIuMSwxMy41SDU4VjU4SDEzLjUgVjMyLjEiLGJhY2s6Ik0yMiwxLjRMOS45LDEzLjVsMTIuMywxMi4zIE0xMC4zLDEzLjVINTQuOXY0NC42IEgxMC4zdi0yNiJ9LHRpdGxlOkQoWEEudGl0bGUpfTt2YXIgcUE9akEucHJvdG90eXBlO3FBLnJlbmRlcj1mdW5jdGlvbih0LGUsaSxuKXt0aGlzLm1vZGVsPXQsdGhpcy5lY01vZGVsPWUsdGhpcy5hcGk9aSxmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPWkuX2lzWm9vbUFjdGl2ZTtuJiYidGFrZUdsb2JhbEN1cnNvciI9PT1uLnR5cGUmJihhPSJkYXRhWm9vbVNlbGVjdCI9PT1uLmtleSYmbi5kYXRhWm9vbVNlbGVjdEFjdGl2ZSk7aS5faXNab29tQWN0aXZlPWEsdC5zZXRJY29uU3RhdHVzKCJ6b29tIixhPyJlbXBoYXNpcyI6Im5vcm1hbCIpO3ZhciByPW5ldyBwQSgkQSh0Lm9wdGlvbiksZSx7aW5jbHVkZTpbImdyaWQiXX0pO2kuX2JydXNoQ29udHJvbGxlci5zZXRQYW5lbHMoci5tYWtlUGFuZWxPcHRzKG8sZnVuY3Rpb24odCl7cmV0dXJuIHQueEF4aXNEZWNsYXJlZCYmIXQueUF4aXNEZWNsYXJlZD8ibGluZVgiOiF0LnhBeGlzRGVjbGFyZWQmJnQueUF4aXNEZWNsYXJlZD8ibGluZVkiOiJyZWN0In0pKS5lbmFibGVCcnVzaCghIWEmJnticnVzaFR5cGU6ImF1dG8iLGJydXNoU3R5bGU6e2xpbmVXaWR0aDowLGZpbGw6InJnYmEoMCwwLDAsMC4yKSJ9fSl9KHQsZSx0aGlzLG4saSksZnVuY3Rpb24odCxlKXt0LnNldEljb25TdGF0dXMoImJhY2siLDE8ZnVuY3Rpb24odCl7cmV0dXJuIERBKHQpLmxlbmd0aH0oZSk/ImVtcGhhc2lzIjoibm9ybWFsIil9KHQsZSl9LHFBLm9uY2xpY2s9ZnVuY3Rpb24odCxlLGkpe0tBW2ldLmNhbGwodGhpcyl9LHFBLnJlbW92ZT1mdW5jdGlvbih0LGUpe3RoaXMuX2JydXNoQ29udHJvbGxlci51bm1vdW50KCl9LHFBLmRpc3Bvc2U9ZnVuY3Rpb24odCxlKXt0aGlzLl9icnVzaENvbnRyb2xsZXIuZGlzcG9zZSgpfTt2YXIgS0E9e3pvb206ZnVuY3Rpb24oKXt2YXIgdD0hdGhpcy5faXNab29tQWN0aXZlO3RoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJ0YWtlR2xvYmFsQ3Vyc29yIixrZXk6ImRhdGFab29tU2VsZWN0IixkYXRhWm9vbVNlbGVjdEFjdGl2ZTp0fSl9LGJhY2s6ZnVuY3Rpb24oKXt0aGlzLl9kaXNwYXRjaFpvb21BY3Rpb24oZnVuY3Rpb24odCl7dmFyIG49REEodCksZT1uW24ubGVuZ3RoLTFdOzE8bi5sZW5ndGgmJm4ucG9wKCk7dmFyIG89e307cmV0dXJuIFRBKGUsZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9bi5sZW5ndGgtMTswPD1pO2ktLSl7aWYodD1uW2ldW2VdKXtvW2VdPXQ7YnJlYWt9fX0pLG99KHRoaXMuZWNNb2RlbCkpfX07ZnVuY3Rpb24gJEEoZSl7dmFyIGk9e307cmV0dXJuIEUoWyJ4QXhpc0luZGV4IiwieUF4aXNJbmRleCJdLGZ1bmN0aW9uKHQpe2lbdF09ZVt0XSxudWxsPT1pW3RdJiYoaVt0XT0iYWxsIiksITEhPT1pW3RdJiYibm9uZSIhPT1pW3RdfHwoaVt0XT1bXSl9KSxpfXFBLl9vbkJydXNoPWZ1bmN0aW9uKHQsZSl7aWYoZS5pc0VuZCYmdC5sZW5ndGgpe3ZhciBzPXt9LGw9dGhpcy5lY01vZGVsO3RoaXMuX2JydXNoQ29udHJvbGxlci51cGRhdGVDb3ZlcnMoW10pLG5ldyBwQSgkQSh0aGlzLm1vZGVsLm9wdGlvbiksbCx7aW5jbHVkZTpbImdyaWQiXX0pLm1hdGNoT3V0cHV0UmFuZ2VzKHQsbCxmdW5jdGlvbih0LGUsaSl7aWYoImNhcnRlc2lhbjJkIj09PWkudHlwZSl7dmFyIG49dC5icnVzaFR5cGU7InJlY3QiPT09bj8obygieCIsaSxlWzBdKSxvKCJ5IixpLGVbMV0pKTpvKHtsaW5lWDoieCIsbGluZVk6InkifVtuXSxpLGUpfX0pLGZ1bmN0aW9uKGEsdCl7dmFyIHI9REEoYSk7VEEodCxmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1yLmxlbmd0aC0xOzA8PWk7aS0tKXtpZihyW2ldW2VdKWJyZWFrfWlmKGk8MCl7dmFyIG49YS5xdWVyeUNvbXBvbmVudHMoe21haW5UeXBlOiJkYXRhWm9vbSIsc3ViVHlwZToic2VsZWN0IixpZDplfSlbMF07aWYobil7dmFyIG89bi5nZXRQZXJjZW50UmFuZ2UoKTtyWzBdW2VdPXtkYXRhWm9vbUlkOmUsc3RhcnQ6b1swXSxlbmQ6b1sxXX19fX0pLHIucHVzaCh0KX0obCxzKSx0aGlzLl9kaXNwYXRjaFpvb21BY3Rpb24ocyl9ZnVuY3Rpb24gbyh0LGUsaSl7dmFyIG49ZS5nZXRBeGlzKHQpLG89bi5tb2RlbCxhPWZ1bmN0aW9uKGUsaSx0KXt2YXIgbjtyZXR1cm4gdC5lYWNoQ29tcG9uZW50KHttYWluVHlwZToiZGF0YVpvb20iLHN1YlR5cGU6InNlbGVjdCJ9LGZ1bmN0aW9uKHQpe3QuZ2V0QXhpc01vZGVsKGUsaS5jb21wb25lbnRJbmRleCkmJihuPXQpfSksbn0odCxvLGwpLHI9YS5maW5kUmVwcmVzZW50YXRpdmVBeGlzUHJveHkobykuZ2V0TWluTWF4U3BhbigpO251bGw9PXIubWluVmFsdWVTcGFuJiZudWxsPT1yLm1heFZhbHVlU3Bhbnx8KGk9V3coMCxpLnNsaWNlKCksbi5zY2FsZS5nZXRFeHRlbnQoKSwwLHIubWluVmFsdWVTcGFuLHIubWF4VmFsdWVTcGFuKSksYSYmKHNbYS5pZF09e2RhdGFab29tSWQ6YS5pZCxzdGFydFZhbHVlOmlbMF0sZW5kVmFsdWU6aVsxXX0pfX0scUEuX2Rpc3BhdGNoWm9vbUFjdGlvbj1mdW5jdGlvbih0KXt2YXIgaT1bXTtZQSh0LGZ1bmN0aW9uKHQsZSl7aS5wdXNoKEQodCkpfSksaS5sZW5ndGgmJnRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJkYXRhWm9vbSIsZnJvbTp0aGlzLnVpZCxiYXRjaDppfSl9LEhUKCJkYXRhWm9vbSIsakEpLGZmKGZ1bmN0aW9uKHMpe2lmKHMpe3ZhciBsPXMuZGF0YVpvb218fChzLmRhdGFab29tPVtdKTtrKGwpfHwocy5kYXRhWm9vbT1sPVtsXSk7dmFyIHQ9cy50b29sYm94O2lmKHQmJihrKHQpJiYodD10WzBdKSx0JiZ0LmZlYXR1cmUpKXt2YXIgZT10LmZlYXR1cmUuZGF0YVpvb207aSgieEF4aXMiLGUpLGkoInlBeGlzIixlKX19ZnVuY3Rpb24gaShuLG8pe2lmKG8pe3ZhciBhPW4rIkluZGV4IixyPW9bYV07bnVsbD09cnx8ImFsbCI9PT1yfHxrKHIpfHwocj0hMT09PXJ8fCJub25lIj09PXI/W106W3JdKSxmdW5jdGlvbih0LGUpe3ZhciBpPXNbdF07ayhpKXx8KGk9aT9baV06W10pO1lBKGksZSl9KG4sZnVuY3Rpb24odCxlKXtpZihudWxsPT1yfHwiYWxsIj09PXJ8fC0xIT09XyhyLGUpKXt2YXIgaT17dHlwZToic2VsZWN0IiwkZnJvbVRvb2xib3g6ITAsZmlsdGVyTW9kZTpvLmZpbHRlck1vZGV8fCJmaWx0ZXIiLGlkOiJcMF9lY19cMHRvb2xib3gtZGF0YVpvb21fIituK2V9O2lbYV09ZSxsLnB1c2goaSl9fSl9fX0pO3ZhciBKQT1DYy50b29sYm94LnJlc3RvcmU7ZnVuY3Rpb24gUUEodCl7dGhpcy5tb2RlbD10fVFBLmRlZmF1bHRPcHRpb249e3Nob3c6ITAsaWNvbjoiTTMuOCwzMy40IE00NywxOC45aDkuOFY4LjcgTTU2LjMsMjAuMSBDNTIuMSw5LDQwLjUsMC42LDI2LjgsMi4xQzEyLjYsMy43LDEuNiwxNi4yLDIuMSwzMC42IE0xMyw0MS4xSDMuMXYxMC4yIE0zLjcsMzkuOWM0LjIsMTEuMSwxNS44LDE5LjUsMjkuNSwxOCBjMTQuMi0xLjYsMjUuMi0xNC4xLDI0LjctMjguNSIsdGl0bGU6SkEudGl0bGV9LFFBLnByb3RvdHlwZS5vbmNsaWNrPWZ1bmN0aW9uKHQsZSxpKXshZnVuY3Rpb24odCl7dFtBQV09bnVsbH0odCksZS5kaXNwYXRjaEFjdGlvbih7dHlwZToicmVzdG9yZSIsZnJvbTp0aGlzLnVpZH0pfSxIVCgicmVzdG9yZSIsUUEpLGdmKHt0eXBlOiJyZXN0b3JlIixldmVudDoicmVzdG9yZSIsdXBkYXRlOiJwcmVwYXJlQW5kVXBkYXRlIn0sZnVuY3Rpb24odCxlKXtlLnJlc2V0T3B0aW9uKCJyZWNyZWF0ZSIpfSksd2Yoe3R5cGU6InRvb2x0aXAiLGRlcGVuZGVuY2llczpbImF4aXNQb2ludGVyIl0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejo2MCxzaG93OiEwLHNob3dDb250ZW50OiEwLHRyaWdnZXI6Iml0ZW0iLHRyaWdnZXJPbjoibW91c2Vtb3ZlfGNsaWNrIixhbHdheXNTaG93Q29udGVudDohMSxkaXNwbGF5TW9kZToic2luZ2xlIixyZW5kZXJNb2RlOiJhdXRvIixjb25maW5lOiExLHNob3dEZWxheTowLGhpZGVEZWxheToxMDAsdHJhbnNpdGlvbkR1cmF0aW9uOi40LGVudGVyYWJsZTohMSxiYWNrZ3JvdW5kQ29sb3I6InJnYmEoNTAsNTAsNTAsMC43KSIsYm9yZGVyQ29sb3I6IiMzMzMiLGJvcmRlclJhZGl1czo0LGJvcmRlcldpZHRoOjAscGFkZGluZzo1LGV4dHJhQ3NzVGV4dDoiIixheGlzUG9pbnRlcjp7dHlwZToibGluZSIsYXhpczoiYXV0byIsYW5pbWF0aW9uOiJhdXRvIixhbmltYXRpb25EdXJhdGlvblVwZGF0ZToyMDAsYW5pbWF0aW9uRWFzaW5nVXBkYXRlOiJleHBvbmVudGlhbE91dCIsY3Jvc3NTdHlsZTp7Y29sb3I6IiM5OTkiLHdpZHRoOjEsdHlwZToiZGFzaGVkIix0ZXh0U3R5bGU6e319fSx0ZXh0U3R5bGU6e2NvbG9yOiIjZmZmIixmb250U2l6ZToxNH19fSk7dmFyIHREPUUsZUQ9JGwsaUQ9WyIiLCItd2Via2l0LSIsIi1tb3otIiwiLW8tIl07ZnVuY3Rpb24gbkQobyl7dmFyIGE9W10sdD1vLmdldCgidHJhbnNpdGlvbkR1cmF0aW9uIiksZT1vLmdldCgiYmFja2dyb3VuZENvbG9yIiksaT1vLmdldE1vZGVsKCJ0ZXh0U3R5bGUiKSxuPW8uZ2V0KCJwYWRkaW5nIik7cmV0dXJuIHQmJmEucHVzaChmdW5jdGlvbih0KXt2YXIgZT0iY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpIixpPSJsZWZ0ICIrdCsicyAiK2UrIix0b3AgIit0KyJzICIrZTtyZXR1cm4gTihpRCxmdW5jdGlvbih0KXtyZXR1cm4gdCsidHJhbnNpdGlvbjoiK2l9KS5qb2luKCI7Iil9KHQpKSxlJiYodi5jYW52YXNTdXBwb3J0ZWQ/YS5wdXNoKCJiYWNrZ3JvdW5kLUNvbG9yOiIrZSk6KGEucHVzaCgiYmFja2dyb3VuZC1Db2xvcjojIitHZShlKSksYS5wdXNoKCJmaWx0ZXI6YWxwaGEob3BhY2l0eT03MCkiKSkpLHREKFsid2lkdGgiLCJjb2xvciIsInJhZGl1cyJdLGZ1bmN0aW9uKHQpe3ZhciBlPSJib3JkZXItIit0LGk9ZUQoZSksbj1vLmdldChpKTtudWxsIT1uJiZhLnB1c2goZSsiOiIrbisoImNvbG9yIj09PXQ/IiI6InB4IikpfSksYS5wdXNoKGZ1bmN0aW9uKGkpe3ZhciBuPVtdLHQ9aS5nZXQoImZvbnRTaXplIiksZT1pLmdldFRleHRDb2xvcigpO3JldHVybiBlJiZuLnB1c2goImNvbG9yOiIrZSksbi5wdXNoKCJmb250OiIraS5nZXRGb250KCkpLHQmJm4ucHVzaCgibGluZS1oZWlnaHQ6IitNYXRoLnJvdW5kKDMqdC8yKSsicHgiKSx0RChbImRlY29yYXRpb24iLCJhbGlnbiJdLGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0KHQpO2UmJm4ucHVzaCgidGV4dC0iK3QrIjoiK2UpfSksbi5qb2luKCI7Iil9KGkpKSxudWxsIT1uJiZhLnB1c2goInBhZGRpbmc6IitKbChuKS5qb2luKCJweCAiKSsicHgiKSxhLmpvaW4oIjsiKSsiOyJ9ZnVuY3Rpb24gb0QoaSx0KXtpZih2Lnd4YSlyZXR1cm4gbnVsbDt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPXRoaXMuX3pyPXQuZ2V0WnIoKTt0aGlzLmVsPWUsdGhpcy5feD10LmdldFdpZHRoKCkvMix0aGlzLl95PXQuZ2V0SGVpZ2h0KCkvMixpLmFwcGVuZENoaWxkKGUpLHRoaXMuX2NvbnRhaW5lcj1pLHRoaXMuX3Nob3c9ITEsdGhpcy5faGlkZVRpbWVvdXQ7dmFyIG89dGhpcztlLm9ubW91c2VlbnRlcj1mdW5jdGlvbigpe28uX2VudGVyYWJsZSYmKGNsZWFyVGltZW91dChvLl9oaWRlVGltZW91dCksby5fc2hvdz0hMCksby5faW5Db250ZW50PSEwfSxlLm9ubW91c2Vtb3ZlPWZ1bmN0aW9uKHQpe2lmKHQ9dHx8d2luZG93LmV2ZW50LCFvLl9lbnRlcmFibGUpe3ZhciBlPW4uaGFuZGxlcjtHdChpLHQsITApLGUuZGlzcGF0Y2goIm1vdXNlbW92ZSIsdCl9fSxlLm9ubW91c2VsZWF2ZT1mdW5jdGlvbigpe28uX2VudGVyYWJsZSYmby5fc2hvdyYmby5oaWRlTGF0ZXIoby5faGlkZURlbGF5KSxvLl9pbkNvbnRlbnQ9ITF9fWZ1bmN0aW9uIGFEKHQpe3RoaXMuX3pyPXQuZ2V0WnIoKSx0aGlzLl9zaG93PSExLHRoaXMuX2hpZGVUaW1lb3V0fW9ELnByb3RvdHlwZT17Y29uc3RydWN0b3I6b0QsX2VudGVyYWJsZTohMCx1cGRhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jb250YWluZXIsZT10LmN1cnJlbnRTdHlsZXx8ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSh0KSxpPXQuc3R5bGU7ImFic29sdXRlIiE9PWkucG9zaXRpb24mJiJhYnNvbHV0ZSIhPT1lLnBvc2l0aW9uJiYoaS5wb3NpdGlvbj0icmVsYXRpdmUiKX0sc2hvdzpmdW5jdGlvbih0KXtjbGVhclRpbWVvdXQodGhpcy5faGlkZVRpbWVvdXQpO3ZhciBlPXRoaXMuZWw7ZS5zdHlsZS5jc3NUZXh0PSJwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2JvcmRlci1zdHlsZTpzb2xpZDt3aGl0ZS1zcGFjZTpub3dyYXA7ei1pbmRleDo5OTk5OTk5OyIrbkQodCkrIjtsZWZ0OiIrdGhpcy5feCsicHg7dG9wOiIrdGhpcy5feSsicHg7IisodC5nZXQoImV4dHJhQ3NzVGV4dCIpfHwiIiksZS5zdHlsZS5kaXNwbGF5PWUuaW5uZXJIVE1MPyJibG9jayI6Im5vbmUiLGUuc3R5bGUucG9pbnRlckV2ZW50cz10aGlzLl9lbnRlcmFibGU/ImF1dG8iOiJub25lIix0aGlzLl9zaG93PSEwfSxzZXRDb250ZW50OmZ1bmN0aW9uKHQpe3RoaXMuZWwuaW5uZXJIVE1MPW51bGw9PXQ/IiI6dH0sc2V0RW50ZXJhYmxlOmZ1bmN0aW9uKHQpe3RoaXMuX2VudGVyYWJsZT10fSxnZXRTaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbDtyZXR1cm5bdC5jbGllbnRXaWR0aCx0LmNsaWVudEhlaWdodF19LG1vdmVUbzpmdW5jdGlvbih0LGUpe3ZhciBpLG49dGhpcy5fenI7biYmbi5wYWludGVyJiYoaT1uLnBhaW50ZXIuZ2V0Vmlld3BvcnRSb290T2Zmc2V0KCkpJiYodCs9aS5vZmZzZXRMZWZ0LGUrPWkub2Zmc2V0VG9wKTt2YXIgbz10aGlzLmVsLnN0eWxlO28ubGVmdD10KyJweCIsby50b3A9ZSsicHgiLHRoaXMuX3g9dCx0aGlzLl95PWV9LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLmVsLnN0eWxlLmRpc3BsYXk9Im5vbmUiLHRoaXMuX3Nob3c9ITF9LGhpZGVMYXRlcjpmdW5jdGlvbih0KXshdGhpcy5fc2hvd3x8dGhpcy5faW5Db250ZW50JiZ0aGlzLl9lbnRlcmFibGV8fCh0Pyh0aGlzLl9oaWRlRGVsYXk9dCx0aGlzLl9zaG93PSExLHRoaXMuX2hpZGVUaW1lb3V0PXNldFRpbWVvdXQoQSh0aGlzLmhpZGUsdGhpcyksdCkpOnRoaXMuaGlkZSgpKX0saXNTaG93OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3d9LGdldE91dGVyU2l6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWwuY2xpZW50V2lkdGgsZT10aGlzLmVsLmNsaWVudEhlaWdodDtpZihkb2N1bWVudC5kZWZhdWx0VmlldyYmZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSl7dmFyIGk9ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsKTtpJiYodCs9cGFyc2VJbnQoaS5ib3JkZXJMZWZ0V2lkdGgsMTApK3BhcnNlSW50KGkuYm9yZGVyUmlnaHRXaWR0aCwxMCksZSs9cGFyc2VJbnQoaS5ib3JkZXJUb3BXaWR0aCwxMCkrcGFyc2VJbnQoaS5ib3JkZXJCb3R0b21XaWR0aCwxMCkpfXJldHVybnt3aWR0aDp0LGhlaWdodDplfX19LGFELnByb3RvdHlwZT17Y29uc3RydWN0b3I6YUQsX2VudGVyYWJsZTohMCx1cGRhdGU6ZnVuY3Rpb24oKXt9LHNob3c6ZnVuY3Rpb24odCl7dGhpcy5faGlkZVRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLl9oaWRlVGltZW91dCksdGhpcy5lbC5hdHRyKCJzaG93IiwhMCksdGhpcy5fc2hvdz0hMH0sc2V0Q29udGVudDpmdW5jdGlvbih0LGUsaSl7dGhpcy5lbCYmdGhpcy5fenIucmVtb3ZlKHRoaXMuZWwpO2Zvcih2YXIgbj17fSxvPXQsYT0ie21hcmtlciIscj1vLmluZGV4T2YoYSk7MDw9cjspe3ZhciBzPW8uaW5kZXhPZigifH0iKSxsPW8uc3Vic3RyKHIrYS5sZW5ndGgscy1yLWEubGVuZ3RoKTstMTxsLmluZGV4T2YoInN1YiIpP25bIm1hcmtlciIrbF09e3RleHRXaWR0aDo0LHRleHRIZWlnaHQ6NCx0ZXh0Qm9yZGVyUmFkaXVzOjIsdGV4dEJhY2tncm91bmRDb2xvcjplW2xdLHRleHRPZmZzZXQ6WzMsMF19Om5bIm1hcmtlciIrbF09e3RleHRXaWR0aDoxMCx0ZXh0SGVpZ2h0OjEwLHRleHRCb3JkZXJSYWRpdXM6NSx0ZXh0QmFja2dyb3VuZENvbG9yOmVbbF19LHI9KG89by5zdWJzdHIocysxKSkuaW5kZXhPZigie21hcmtlciIpfXRoaXMuZWw9bmV3IEZyKHtzdHlsZTp7cmljaDpuLHRleHQ6dCx0ZXh0TGluZUhlaWdodDoyMCx0ZXh0QmFja2dyb3VuZENvbG9yOmkuZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiKSx0ZXh0Qm9yZGVyUmFkaXVzOmkuZ2V0KCJib3JkZXJSYWRpdXMiKSx0ZXh0RmlsbDppLmdldCgidGV4dFN0eWxlLmNvbG9yIiksdGV4dFBhZGRpbmc6aS5nZXQoInBhZGRpbmciKX0sejppLmdldCgieiIpfSksdGhpcy5fenIuYWRkKHRoaXMuZWwpO3ZhciB1PXRoaXM7dGhpcy5lbC5vbigibW91c2VvdmVyIixmdW5jdGlvbigpe3UuX2VudGVyYWJsZSYmKGNsZWFyVGltZW91dCh1Ll9oaWRlVGltZW91dCksdS5fc2hvdz0hMCksdS5faW5Db250ZW50PSEwfSksdGhpcy5lbC5vbigibW91c2VvdXQiLGZ1bmN0aW9uKCl7dS5fZW50ZXJhYmxlJiZ1Ll9zaG93JiZ1LmhpZGVMYXRlcih1Ll9oaWRlRGVsYXkpLHUuX2luQ29udGVudD0hMX0pfSxzZXRFbnRlcmFibGU6ZnVuY3Rpb24odCl7dGhpcy5fZW50ZXJhYmxlPXR9LGdldFNpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLmdldEJvdW5kaW5nUmVjdCgpO3JldHVyblt0LndpZHRoLHQuaGVpZ2h0XX0sbW92ZVRvOmZ1bmN0aW9uKHQsZSl7dGhpcy5lbCYmdGhpcy5lbC5hdHRyKCJwb3NpdGlvbiIsW3QsZV0pfSxoaWRlOmZ1bmN0aW9uKCl7dGhpcy5lbCYmdGhpcy5lbC5oaWRlKCksdGhpcy5fc2hvdz0hMX0saGlkZUxhdGVyOmZ1bmN0aW9uKHQpeyF0aGlzLl9zaG93fHx0aGlzLl9pbkNvbnRlbnQmJnRoaXMuX2VudGVyYWJsZXx8KHQ/KHRoaXMuX2hpZGVEZWxheT10LHRoaXMuX3Nob3c9ITEsdGhpcy5faGlkZVRpbWVvdXQ9c2V0VGltZW91dChBKHRoaXMuaGlkZSx0aGlzKSx0KSk6dGhpcy5oaWRlKCkpfSxpc1Nob3c6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd30sZ2V0T3V0ZXJTaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRTaXplKCk7cmV0dXJue3dpZHRoOnRbMF0saGVpZ2h0OnRbMV19fX07dmFyIHJEPUEsc0Q9RSxsRD1QbCx1RD1uZXcgaXMoe3NoYXBlOnt4Oi0xLHk6LTEsd2lkdGg6MixoZWlnaHQ6Mn19KTtmdW5jdGlvbiBoRCh0KXtmb3IodmFyIGU9dC5wb3AoKTt0Lmxlbmd0aDspe3ZhciBpPXQucG9wKCk7aSYmKElsLmlzSW5zdGFuY2UoaSkmJihpPWkuZ2V0KCJ0b29sdGlwIiwhMCkpLCJzdHJpbmciPT10eXBlb2YgaSYmKGk9e2Zvcm1hdHRlcjppfSksZT1uZXcgSWwoaSxlLGUuZWNNb2RlbCkpfXJldHVybiBlfWZ1bmN0aW9uIGNEKHQsZSl7cmV0dXJuIHQuZGlzcGF0Y2hBY3Rpb258fEEoZS5kaXNwYXRjaEFjdGlvbixlKX1mdW5jdGlvbiBkRCh0KXtyZXR1cm4iY2VudGVyIj09PXR8fCJtaWRkbGUiPT09dH1iZih7dHlwZToidG9vbHRpcCIsaW5pdDpmdW5jdGlvbih0LGUpe2lmKCF2Lm5vZGUpe3ZhciBpLG49dC5nZXRDb21wb25lbnQoInRvb2x0aXAiKS5nZXQoInJlbmRlck1vZGUiKTt0aGlzLl9yZW5kZXJNb2RlPXFvKG4pLCJodG1sIj09PXRoaXMuX3JlbmRlck1vZGU/KGk9bmV3IG9EKGUuZ2V0RG9tKCksZSksdGhpcy5fbmV3TGluZT0iPGJyLz4iKTooaT1uZXcgYUQoZSksdGhpcy5fbmV3TGluZT0iXG4iKSx0aGlzLl90b29sdGlwQ29udGVudD1pfX0scmVuZGVyOmZ1bmN0aW9uKHQsZSxpKXtpZighdi5ub2RlKXt0aGlzLmdyb3VwLnJlbW92ZUFsbCgpLHRoaXMuX3Rvb2x0aXBNb2RlbD10LHRoaXMuX2VjTW9kZWw9ZSx0aGlzLl9hcGk9aSx0aGlzLl9sYXN0RGF0YUJ5Q29vcmRTeXM9bnVsbCx0aGlzLl9hbHdheXNTaG93Q29udGVudD10LmdldCgiYWx3YXlzU2hvd0NvbnRlbnQiKTt2YXIgbj10aGlzLl90b29sdGlwQ29udGVudDtuLnVwZGF0ZSgpLG4uc2V0RW50ZXJhYmxlKHQuZ2V0KCJlbnRlcmFibGUiKSksdGhpcy5faW5pdEdsb2JhbExpc3RlbmVyKCksdGhpcy5fa2VlcFNob3coKX19LF9pbml0R2xvYmFsTGlzdGVuZXI6ZnVuY3Rpb24oKXt2YXIgbj10aGlzLl90b29sdGlwTW9kZWwuZ2V0KCJ0cmlnZ2VyT24iKTtRTSgiaXRlbVRvb2x0aXAiLHRoaXMuX2FwaSxyRChmdW5jdGlvbih0LGUsaSl7Im5vbmUiIT09biYmKDA8PW4uaW5kZXhPZih0KT90aGlzLl90cnlTaG93KGUsaSk6ImxlYXZlIj09PXQmJnRoaXMuX2hpZGUoaSkpfSx0aGlzKSl9LF9rZWVwU2hvdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3Rvb2x0aXBNb2RlbCxlPXRoaXMuX2VjTW9kZWwsaT10aGlzLl9hcGk7aWYobnVsbCE9dGhpcy5fbGFzdFgmJm51bGwhPXRoaXMuX2xhc3RZJiYibm9uZSIhPT10LmdldCgidHJpZ2dlck9uIikpe3ZhciBuPXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXMuX3JlZnJlc2hVcGRhdGVUaW1lb3V0KSx0aGlzLl9yZWZyZXNoVXBkYXRlVGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aS5pc0Rpc3Bvc2VkKCl8fG4ubWFudWFsbHlTaG93VGlwKHQsZSxpLHt4Om4uX2xhc3RYLHk6bi5fbGFzdFl9KX0pfX0sbWFudWFsbHlTaG93VGlwOmZ1bmN0aW9uKHQsZSxpLG4pe2lmKG4uZnJvbSE9PXRoaXMudWlkJiYhdi5ub2RlKXt2YXIgbz1jRChuLGkpO3RoaXMuX3RpY2tldD0iIjt2YXIgYT1uLmRhdGFCeUNvb3JkU3lzO2lmKG4udG9vbHRpcCYmbnVsbCE9bi54JiZudWxsIT1uLnkpe3ZhciByPXVEO3IucG9zaXRpb249W24ueCxuLnldLHIudXBkYXRlKCksci50b29sdGlwPW4udG9vbHRpcCx0aGlzLl90cnlTaG93KHtvZmZzZXRYOm4ueCxvZmZzZXRZOm4ueSx0YXJnZXQ6cn0sbyl9ZWxzZSBpZihhKXRoaXMuX3RyeVNob3coe29mZnNldFg6bi54LG9mZnNldFk6bi55LHBvc2l0aW9uOm4ucG9zaXRpb24sZXZlbnQ6e30sZGF0YUJ5Q29vcmRTeXM6bi5kYXRhQnlDb29yZFN5cyx0b29sdGlwT3B0aW9uOm4udG9vbHRpcE9wdGlvbn0sbyk7ZWxzZSBpZihudWxsIT1uLnNlcmllc0luZGV4KXtpZih0aGlzLl9tYW51YWxseUF4aXNTaG93VGlwKHQsZSxpLG4pKXJldHVybjt2YXIgcz1XTShuLGUpLGw9cy5wb2ludFswXSx1PXMucG9pbnRbMV07bnVsbCE9bCYmbnVsbCE9dSYmdGhpcy5fdHJ5U2hvdyh7b2Zmc2V0WDpsLG9mZnNldFk6dSxwb3NpdGlvbjpuLnBvc2l0aW9uLHRhcmdldDpzLmVsLGV2ZW50Ont9fSxvKX1lbHNlIG51bGwhPW4ueCYmbnVsbCE9bi55JiYoaS5kaXNwYXRjaEFjdGlvbih7dHlwZToidXBkYXRlQXhpc1BvaW50ZXIiLHg6bi54LHk6bi55fSksdGhpcy5fdHJ5U2hvdyh7b2Zmc2V0WDpuLngsb2Zmc2V0WTpuLnkscG9zaXRpb246bi5wb3NpdGlvbix0YXJnZXQ6aS5nZXRacigpLmZpbmRIb3ZlcihuLngsbi55KS50YXJnZXQsZXZlbnQ6e319LG8pKX19LG1hbnVhbGx5SGlkZVRpcDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10aGlzLl90b29sdGlwQ29udGVudDshdGhpcy5fYWx3YXlzU2hvd0NvbnRlbnQmJnRoaXMuX3Rvb2x0aXBNb2RlbCYmby5oaWRlTGF0ZXIodGhpcy5fdG9vbHRpcE1vZGVsLmdldCgiaGlkZURlbGF5IikpLHRoaXMuX2xhc3RYPXRoaXMuX2xhc3RZPW51bGwsbi5mcm9tIT09dGhpcy51aWQmJnRoaXMuX2hpZGUoY0QobixpKSl9LF9tYW51YWxseUF4aXNTaG93VGlwOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPW4uc2VyaWVzSW5kZXgsYT1uLmRhdGFJbmRleCxyPWUuZ2V0Q29tcG9uZW50KCJheGlzUG9pbnRlciIpLmNvb3JkU3lzQXhlc0luZm87aWYobnVsbCE9byYmbnVsbCE9YSYmbnVsbCE9cil7dmFyIHM9ZS5nZXRTZXJpZXNCeUluZGV4KG8pO2lmKHMpaWYoImF4aXMiPT09KHQ9aEQoW3MuZ2V0RGF0YSgpLmdldEl0ZW1Nb2RlbChhKSxzLChzLmNvb3JkaW5hdGVTeXN0ZW18fHt9KS5tb2RlbCx0XSkpLmdldCgidHJpZ2dlciIpKXJldHVybiBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJ1cGRhdGVBeGlzUG9pbnRlciIsc2VyaWVzSW5kZXg6byxkYXRhSW5kZXg6YSxwb3NpdGlvbjpuLnBvc2l0aW9ufSksITB9fSxfdHJ5U2hvdzpmdW5jdGlvbih0LGUpe3ZhciBpPXQudGFyZ2V0O2lmKHRoaXMuX3Rvb2x0aXBNb2RlbCl7dGhpcy5fbGFzdFg9dC5vZmZzZXRYLHRoaXMuX2xhc3RZPXQub2Zmc2V0WTt2YXIgbj10LmRhdGFCeUNvb3JkU3lzO24mJm4ubGVuZ3RoP3RoaXMuX3Nob3dBeGlzVG9vbHRpcChuLHQpOmkmJm51bGwhPWkuZGF0YUluZGV4Pyh0aGlzLl9sYXN0RGF0YUJ5Q29vcmRTeXM9bnVsbCx0aGlzLl9zaG93U2VyaWVzSXRlbVRvb2x0aXAodCxpLGUpKTppJiZpLnRvb2x0aXA/KHRoaXMuX2xhc3REYXRhQnlDb29yZFN5cz1udWxsLHRoaXMuX3Nob3dDb21wb25lbnRJdGVtVG9vbHRpcCh0LGksZSkpOih0aGlzLl9sYXN0RGF0YUJ5Q29vcmRTeXM9bnVsbCx0aGlzLl9oaWRlKGUpKX19LF9zaG93T3JNb3ZlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXQoInNob3dEZWxheSIpO2U9QShlLHRoaXMpLGNsZWFyVGltZW91dCh0aGlzLl9zaG93VGltb3V0KSwwPGk/dGhpcy5fc2hvd1RpbW91dD1zZXRUaW1lb3V0KGUsaSk6ZSgpfSxfc2hvd0F4aXNUb29sdGlwOmZ1bmN0aW9uKHQsZSl7dmFyIGQ9dGhpcy5fZWNNb2RlbCxpPXRoaXMuX3Rvb2x0aXBNb2RlbCxuPVtlLm9mZnNldFgsZS5vZmZzZXRZXSxvPVtdLGY9W10sYT1oRChbZS50b29sdGlwT3B0aW9uLGldKSxwPXRoaXMuX3JlbmRlck1vZGUscj10aGlzLl9uZXdMaW5lLGc9e307c0QodCxmdW5jdGlvbih0KXtzRCh0LmRhdGFCeUF4aXMsZnVuY3Rpb24ocyl7dmFyIGw9ZC5nZXRDb21wb25lbnQocy5heGlzRGltKyJBeGlzIixzLmF4aXNJbmRleCksdT1zLnZhbHVlLGg9W107aWYobCYmbnVsbCE9dSl7dmFyIGM9cEkodSxsLmF4aXMsZCxzLnNlcmllc0RhdGFJbmRpY2VzLHMudmFsdWVMYWJlbE9wdCk7RShzLnNlcmllc0RhdGFJbmRpY2VzLGZ1bmN0aW9uKHQpe3ZhciBlPWQuZ2V0U2VyaWVzQnlJbmRleCh0LnNlcmllc0luZGV4KSxpPXQuZGF0YUluZGV4SW5zaWRlLG49ZSYmZS5nZXREYXRhUGFyYW1zKGkpO2lmKG4uYXhpc0RpbT1zLmF4aXNEaW0sbi5heGlzSW5kZXg9cy5heGlzSW5kZXgsbi5heGlzVHlwZT1zLmF4aXNUeXBlLG4uYXhpc0lkPXMuYXhpc0lkLG4uYXhpc1ZhbHVlPW9nKGwuYXhpcyx1KSxuLmF4aXNWYWx1ZUxhYmVsPWMsbil7Zi5wdXNoKG4pO3ZhciBvLGE9ZS5mb3JtYXRUb29sdGlwKGksITAsbnVsbCxwKTtpZihSKGEpKXtvPWEuaHRtbDt2YXIgcj1hLm1hcmtlcnM7bShnLHIpfWVsc2Ugbz1hO2gucHVzaChvKX19KTt2YXIgdD1jOyJodG1sIiE9PXA/by5wdXNoKGguam9pbihyKSk6by5wdXNoKCh0P2V1KHQpK3I6IiIpK2guam9pbihyKSl9fSl9LHRoaXMpLG8ucmV2ZXJzZSgpLG89by5qb2luKHRoaXMuX25ld0xpbmUrdGhpcy5fbmV3TGluZSk7dmFyIHM9ZS5wb3NpdGlvbjt0aGlzLl9zaG93T3JNb3ZlKGEsZnVuY3Rpb24oKXt0aGlzLl91cGRhdGVDb250ZW50Tm90Q2hhbmdlZE9uQXhpcyh0KT90aGlzLl91cGRhdGVQb3NpdGlvbihhLHMsblswXSxuWzFdLHRoaXMuX3Rvb2x0aXBDb250ZW50LGYpOnRoaXMuX3Nob3dUb29sdGlwQ29udGVudChhLG8sZixNYXRoLnJhbmRvbSgpLG5bMF0sblsxXSxzLHZvaWQgMCxnKX0pfSxfc2hvd1Nlcmllc0l0ZW1Ub29sdGlwOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLl9lY01vZGVsLG89ZS5zZXJpZXNJbmRleCxhPW4uZ2V0U2VyaWVzQnlJbmRleChvKSxyPWUuZGF0YU1vZGVsfHxhLHM9ZS5kYXRhSW5kZXgsbD1lLmRhdGFUeXBlLHU9ci5nZXREYXRhKCksaD1oRChbdS5nZXRJdGVtTW9kZWwocykscixhJiYoYS5jb29yZGluYXRlU3lzdGVtfHx7fSkubW9kZWwsdGhpcy5fdG9vbHRpcE1vZGVsXSksYz1oLmdldCgidHJpZ2dlciIpO2lmKG51bGw9PWN8fCJpdGVtIj09PWMpe3ZhciBkLGYscD1yLmdldERhdGFQYXJhbXMocyxsKSxnPXIuZm9ybWF0VG9vbHRpcChzLCExLGwsdGhpcy5fcmVuZGVyTW9kZSk7Zj1SKGcpPyhkPWcuaHRtbCxnLm1hcmtlcnMpOihkPWcsbnVsbCk7dmFyIG09Iml0ZW1fIityLm5hbWUrIl8iK3M7dGhpcy5fc2hvd09yTW92ZShoLGZ1bmN0aW9uKCl7dGhpcy5fc2hvd1Rvb2x0aXBDb250ZW50KGgsZCxwLG0sdC5vZmZzZXRYLHQub2Zmc2V0WSx0LnBvc2l0aW9uLHQudGFyZ2V0LGYpfSksaSh7dHlwZToic2hvd1RpcCIsZGF0YUluZGV4SW5zaWRlOnMsZGF0YUluZGV4OnUuZ2V0UmF3SW5kZXgocyksc2VyaWVzSW5kZXg6byxmcm9tOnRoaXMudWlkfSl9fSxfc2hvd0NvbXBvbmVudEl0ZW1Ub29sdGlwOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1lLnRvb2x0aXA7aWYoInN0cmluZyI9PXR5cGVvZiBuKXtuPXtjb250ZW50Om4sZm9ybWF0dGVyOm59fXZhciBvPW5ldyBJbChuLHRoaXMuX3Rvb2x0aXBNb2RlbCx0aGlzLl9lY01vZGVsKSxhPW8uZ2V0KCJjb250ZW50Iikscj1NYXRoLnJhbmRvbSgpO3RoaXMuX3Nob3dPck1vdmUobyxmdW5jdGlvbigpe3RoaXMuX3Nob3dUb29sdGlwQ29udGVudChvLGEsby5nZXQoImZvcm1hdHRlclBhcmFtcyIpfHx7fSxyLHQub2Zmc2V0WCx0Lm9mZnNldFksdC5wb3NpdGlvbixlKX0pLGkoe3R5cGU6InNob3dUaXAiLGZyb206dGhpcy51aWR9KX0sX3Nob3dUb29sdGlwQ29udGVudDpmdW5jdGlvbihpLHQsbixlLG8sYSxyLHMsbCl7aWYodGhpcy5fdGlja2V0PSIiLGkuZ2V0KCJzaG93Q29udGVudCIpJiZpLmdldCgic2hvdyIpKXt2YXIgdT10aGlzLl90b29sdGlwQ29udGVudCxoPWkuZ2V0KCJmb3JtYXR0ZXIiKTtyPXJ8fGkuZ2V0KCJwb3NpdGlvbiIpO3ZhciBjPXQ7aWYoaCYmInN0cmluZyI9PXR5cGVvZiBoKWM9b3UoaCxuLCEwKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBoKXt2YXIgZD1yRChmdW5jdGlvbih0LGUpe3Q9PT10aGlzLl90aWNrZXQmJih1LnNldENvbnRlbnQoZSxsLGkpLHRoaXMuX3VwZGF0ZVBvc2l0aW9uKGkscixvLGEsdSxuLHMpKX0sdGhpcyk7dGhpcy5fdGlja2V0PWUsYz1oKG4sZSxkKX11LnNldENvbnRlbnQoYyxsLGkpLHUuc2hvdyhpKSx0aGlzLl91cGRhdGVQb3NpdGlvbihpLHIsbyxhLHUsbixzKX19LF91cGRhdGVQb3NpdGlvbjpmdW5jdGlvbih0LGUsaSxuLG8sYSxyKXt2YXIgcz10aGlzLl9hcGkuZ2V0V2lkdGgoKSxsPXRoaXMuX2FwaS5nZXRIZWlnaHQoKTtlPWV8fHQuZ2V0KCJwb3NpdGlvbiIpO3ZhciB1PW8uZ2V0U2l6ZSgpLGg9dC5nZXQoImFsaWduIiksYz10LmdldCgidmVydGljYWxBbGlnbiIpLGQ9ciYmci5nZXRCb3VuZGluZ1JlY3QoKS5jbG9uZSgpO2lmKHImJmQuYXBwbHlUcmFuc2Zvcm0oci50cmFuc2Zvcm0pLCJmdW5jdGlvbiI9PXR5cGVvZiBlJiYoZT1lKFtpLG5dLGEsby5lbCxkLHt2aWV3U2l6ZTpbcyxsXSxjb250ZW50U2l6ZTp1LnNsaWNlKCl9KSksayhlKSlpPWxEKGVbMF0scyksbj1sRChlWzFdLGwpO2Vsc2UgaWYoUihlKSl7ZS53aWR0aD11WzBdLGUuaGVpZ2h0PXVbMV07dmFyIGY9dnUoZSx7d2lkdGg6cyxoZWlnaHQ6bH0pO2k9Zi54LG49Zi55LGM9aD1udWxsfWVsc2UgaWYoInN0cmluZyI9PXR5cGVvZiBlJiZyKXtpPShwPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1pWzBdLG89aVsxXSxhPTAscj0wLHM9ZS53aWR0aCxsPWUuaGVpZ2h0O3N3aXRjaCh0KXtjYXNlImluc2lkZSI6YT1lLngrcy8yLW4vMixyPWUueStsLzItby8yO2JyZWFrO2Nhc2UidG9wIjphPWUueCtzLzItbi8yLHI9ZS55LW8tNTticmVhaztjYXNlImJvdHRvbSI6YT1lLngrcy8yLW4vMixyPWUueStsKzU7YnJlYWs7Y2FzZSJsZWZ0IjphPWUueC1uLTUscj1lLnkrbC8yLW8vMjticmVhaztjYXNlInJpZ2h0IjphPWUueCtzKzUscj1lLnkrbC8yLW8vMn1yZXR1cm5bYSxyXX0oZSxkLHUpKVswXSxuPXBbMV19ZWxzZXt2YXIgcDtpPShwPWZ1bmN0aW9uKHQsZSxpLG4sbyxhLHIpe3ZhciBzPWkuZ2V0T3V0ZXJTaXplKCksbD1zLndpZHRoLHU9cy5oZWlnaHQ7bnVsbCE9YSYmKG48dCtsK2E/dC09bCthOnQrPWEpO251bGwhPXImJihvPGUrdStyP2UtPXUrcjplKz1yKTtyZXR1cm5bdCxlXX0oaSxuLG8scyxsLGg/bnVsbDoyMCxjP251bGw6MjApKVswXSxuPXBbMV19aCYmKGktPWREKGgpP3VbMF0vMjoicmlnaHQiPT09aD91WzBdOjApLGMmJihuLT1kRChjKT91WzFdLzI6ImJvdHRvbSI9PT1jP3VbMV06MCksdC5nZXQoImNvbmZpbmUiKSYmKGk9KHA9ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1pLmdldE91dGVyU2l6ZSgpLHI9YS53aWR0aCxzPWEuaGVpZ2h0O3JldHVybiB0PU1hdGgubWluKHQrcixuKS1yLGU9TWF0aC5taW4oZStzLG8pLXMsdD1NYXRoLm1heCh0LDApLGU9TWF0aC5tYXgoZSwwKSxbdCxlXX0oaSxuLG8scyxsKSlbMF0sbj1wWzFdKTtvLm1vdmVUbyhpLG4pfSxfdXBkYXRlQ29udGVudE5vdENoYW5nZWRPbkF4aXM6ZnVuY3Rpb24obil7dmFyIHQ9dGhpcy5fbGFzdERhdGFCeUNvb3JkU3lzLHI9ISF0JiZ0Lmxlbmd0aD09PW4ubGVuZ3RoO3JldHVybiByJiZzRCh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5kYXRhQnlBeGlzfHx7fSxhPShuW2VdfHx7fSkuZGF0YUJ5QXhpc3x8W107KHImPWkubGVuZ3RoPT09YS5sZW5ndGgpJiZzRChpLGZ1bmN0aW9uKHQsZSl7dmFyIGk9YVtlXXx8e30sbj10LnNlcmllc0RhdGFJbmRpY2VzfHxbXSxvPWkuc2VyaWVzRGF0YUluZGljZXN8fFtdOyhyJj10LnZhbHVlPT09aS52YWx1ZSYmdC5heGlzVHlwZT09PWkuYXhpc1R5cGUmJnQuYXhpc0lkPT09aS5heGlzSWQmJm4ubGVuZ3RoPT09by5sZW5ndGgpJiZzRChuLGZ1bmN0aW9uKHQsZSl7dmFyIGk9b1tlXTtyJj10LnNlcmllc0luZGV4PT09aS5zZXJpZXNJbmRleCYmdC5kYXRhSW5kZXg9PT1pLmRhdGFJbmRleH0pfSl9KSx0aGlzLl9sYXN0RGF0YUJ5Q29vcmRTeXM9biwhIXJ9LF9oaWRlOmZ1bmN0aW9uKHQpe3RoaXMuX2xhc3REYXRhQnlDb29yZFN5cz1udWxsLHQoe3R5cGU6ImhpZGVUaXAiLGZyb206dGhpcy51aWR9KX0sZGlzcG9zZTpmdW5jdGlvbih0LGUpe3Yubm9kZXx8KHRoaXMuX3Rvb2x0aXBDb250ZW50LmhpZGUoKSxpSSgiaXRlbVRvb2x0aXAiLGUpKX19KSxnZih7dHlwZToic2hvd1RpcCIsZXZlbnQ6InNob3dUaXAiLHVwZGF0ZToidG9vbHRpcDptYW51YWxseVNob3dUaXAifSxmdW5jdGlvbigpe30pLGdmKHt0eXBlOiJoaWRlVGlwIixldmVudDoiaGlkZVRpcCIsdXBkYXRlOiJ0b29sdGlwOm1hbnVhbGx5SGlkZVRpcCJ9LGZ1bmN0aW9uKCl7fSk7dmFyIGZEPVsicmVjdCIsInBvbHlnb24iLCJrZWVwIiwiY2xlYXIiXTt2YXIgcEQ9RTtmdW5jdGlvbiBnRCh0KXtpZih0KWZvcih2YXIgZSBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuITB9ZnVuY3Rpb24gbUQodCxlLGEpe3ZhciBpPXt9O3JldHVybiBwRChlLGZ1bmN0aW9uKG4pe3ZhciBvPWlbbl09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5fX2hpZGRlbj10LnByb3RvdHlwZSxuZXcgdH0oKTtwRCh0W25dLGZ1bmN0aW9uKHQsZSl7aWYoYV8uaXNWYWxpZFR5cGUoZSkpe3ZhciBpPXt0eXBlOmUsdmlzdWFsOnR9O2EmJmEoaSxuKSxvW2VdPW5ldyBhXyhpKSwib3BhY2l0eSI9PT1lJiYoKGk9RChpKSkudHlwZT0iY29sb3JBbHBoYSIsby5fX2hpZGRlbi5fX2FscGhhRm9yT3BhY2l0eT1uZXcgYV8oaSkpfX0pfSksaX1mdW5jdGlvbiB2RChlLGksdCl7dmFyIG47RSh0LGZ1bmN0aW9uKHQpe2kuaGFzT3duUHJvcGVydHkodCkmJmdEKGlbdF0pJiYobj0hMCl9KSxuJiZFKHQsZnVuY3Rpb24odCl7aS5oYXNPd25Qcm9wZXJ0eSh0KSYmZ0QoaVt0XSk/ZVt0XT1EKGlbdF0pOmRlbGV0ZSBlW3RdfSl9dmFyIHlEPXtsaW5lWDp4RCgwKSxsaW5lWTp4RCgxKSxyZWN0Ontwb2ludDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHQmJmkuYm91bmRpbmdSZWN0LmNvbnRhaW4odFswXSx0WzFdKX0scmVjdDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHQmJmkuYm91bmRpbmdSZWN0LmludGVyc2VjdCh0KX19LHBvbHlnb246e3BvaW50OmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdCYmaS5ib3VuZGluZ1JlY3QuY29udGFpbih0WzBdLHRbMV0pJiZ3ZyhpLnJhbmdlLHRbMF0sdFsxXSl9LHJlY3Q6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPWkucmFuZ2U7aWYoIXR8fG4ubGVuZ3RoPD0xKXJldHVybiExO3ZhciBvPXQueCxhPXQueSxyPXQud2lkdGgscz10LmhlaWdodCxsPW5bMF07cmV0dXJuISEod2cobixvLGEpfHx3ZyhuLG8rcixhKXx8d2cobixvLGErcyl8fHdnKG4sbytyLGErcyl8fE1pLmNyZWF0ZSh0KS5jb250YWluKGxbMF0sbFsxXSl8fGdsKG8sYSxvK3IsYSxuKXx8Z2wobyxhLG8sYStzLG4pfHxnbChvK3IsYSxvK3IsYStzLG4pfHxnbChvLGErcyxvK3IsYStzLG4pKXx8dm9pZCAwfX19O2Z1bmN0aW9uIHhEKGEpe3ZhciByPVsieCIsInkiXSxzPVsid2lkdGgiLCJoZWlnaHQiXTtyZXR1cm57cG9pbnQ6ZnVuY3Rpb24odCxlLGkpe2lmKHQpe3ZhciBuPWkucmFuZ2U7cmV0dXJuIF9EKHRbYV0sbil9fSxyZWN0OmZ1bmN0aW9uKHQsZSxpKXtpZih0KXt2YXIgbj1pLnJhbmdlLG89W3RbclthXV0sdFtyW2FdXSt0W3NbYV1dXTtyZXR1cm4gb1sxXTxvWzBdJiZvLnJldmVyc2UoKSxfRChvWzBdLG4pfHxfRChvWzFdLG4pfHxfRChuWzBdLG8pfHxfRChuWzFdLG8pfX19fWZ1bmN0aW9uIF9EKHQsZSl7cmV0dXJuIGVbMF08PXQmJnQ8PWVbMV19dmFyIHdEPVsiaW5CcnVzaCIsIm91dE9mQnJ1c2giXSxiRD0iX19lY0JydXNoU2VsZWN0IixTRD0iX19lY0luQnJ1c2hTZWxlY3RFdmVudCIsTUQ9SWQuVklTVUFMLkJSVVNIO2Z1bmN0aW9uIElEKHQsZSl7aWYoIXQuaXNEaXNwb3NlZCgpKXt2YXIgaT10LmdldFpyKCk7aVtTRF09ITAsdC5kaXNwYXRjaEFjdGlvbih7dHlwZToiYnJ1c2hTZWxlY3QiLGJhdGNoOmV9KSxpW1NEXT0hMX19ZnVuY3Rpb24gVEQodCxlLGksbil7Zm9yKHZhciBvPTAsYT1lLmxlbmd0aDtvPGE7bysrKXt2YXIgcj1lW29dO2lmKHRbci5icnVzaFR5cGVdKG4saSxyLnNlbGVjdG9ycyxyKSlyZXR1cm4hMH19ZnVuY3Rpb24gQUQodCl7dmFyIHI9dC5icnVzaFNlbGVjdG9yO2lmKHoocikpe3ZhciBlPVtdO3JldHVybiBFKHlELGZ1bmN0aW9uKGEsdCl7ZVt0XT1mdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1lLmdldEl0ZW1MYXlvdXQodCk7cmV0dXJuIGFbcl0obyxpLG4pfX0pLGV9aWYoTyhyKSl7dmFyIGk9e307cmV0dXJuIEUoeUQsZnVuY3Rpb24odCxlKXtpW2VdPXJ9KSxpfXJldHVybiByfXZmKE1ELGZ1bmN0aW9uKGUsdCxpKXtlLmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJicnVzaCJ9LGZ1bmN0aW9uKHQpe2kmJiJ0YWtlR2xvYmFsQ3Vyc29yIj09PWkudHlwZSYmdC5zZXRCcnVzaE9wdGlvbigiYnJ1c2giPT09aS5rZXk/aS5icnVzaE9wdGlvbjp7YnJ1c2hUeXBlOiExfSksKHQuYnJ1c2hUYXJnZXRNYW5hZ2VyPW5ldyBwQSh0Lm9wdGlvbixlKSkuc2V0SW5wdXRSYW5nZXModC5hcmVhcyxlKX0pfSkseWYoTUQsZnVuY3Rpb24ocCx0LGUpe3ZhciBvLGcsbT1bXTtwLmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJicnVzaCJ9LGZ1bmN0aW9uKGEsdCl7dmFyIHM9e2JydXNoSWQ6YS5pZCxicnVzaEluZGV4OnQsYnJ1c2hOYW1lOmEubmFtZSxhcmVhczpEKGEuYXJlYXMpLHNlbGVjdGVkOltdfTttLnB1c2gocyk7dmFyIGU9YS5vcHRpb24saT1lLmJydXNoTGluayxuPVtdLGw9W10sdT1bXSxoPTA7dHx8KG89ZS50aHJvdHRsZVR5cGUsZz1lLnRocm90dGxlRGVsYXkpO3ZhciByPU4oYS5hcmVhcyxmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oaSl7dmFyIG49aS5zZWxlY3RvcnM9e307cmV0dXJuIEUoeURbaS5icnVzaFR5cGVdLGZ1bmN0aW9uKGUsdCl7blt0XT1mdW5jdGlvbih0KXtyZXR1cm4gZSh0LG4saSl9fSksaX0oQyh7Ym91bmRpbmdSZWN0OkREW3QuYnJ1c2hUeXBlXSh0KX0sdCkpfSksYz1tRChhLm9wdGlvbix3RCxmdW5jdGlvbih0KXt0Lm1hcHBpbmdNZXRob2Q9ImZpeGVkIn0pO2Z1bmN0aW9uIGQodCl7cmV0dXJuImFsbCI9PT1pfHxuW3RdfWZ1bmN0aW9uIGYodCl7cmV0dXJuISF0Lmxlbmd0aH1rKGkpJiZFKGksZnVuY3Rpb24odCl7blt0XT0xfSkscC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQsZSl7dmFyIGk9dVtlXT1bXTsicGFyYWxsZWwiPT09dC5zdWJUeXBlP2Z1bmN0aW9uKHQsZSl7dmFyIGk9dC5jb29yZGluYXRlU3lzdGVtO2h8PWkuaGFzQXhpc0JydXNoZWQoKSxkKGUpJiZpLmVhY2hBY3RpdmVTdGF0ZSh0LmdldERhdGEoKSxmdW5jdGlvbih0LGUpeyJhY3RpdmUiPT09dCYmKGxbZV09MSl9KX0odCxlKTpmdW5jdGlvbihlLHQsaSl7dmFyIG49QUQoZSk7aWYoIW58fGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5vcHRpb24uc2VyaWVzSW5kZXg7cmV0dXJuIG51bGwhPWkmJiJhbGwiIT09aSYmKGsoaSk/XyhpLGUpPDA6ZSE9PWkpfShhLHQpKXJldHVybjtpZihFKHIsZnVuY3Rpb24odCl7blt0LmJydXNoVHlwZV0mJmEuYnJ1c2hUYXJnZXRNYW5hZ2VyLmNvbnRyb2xTZXJpZXModCxlLHApJiZpLnB1c2godCksaHw9ZihpKX0pLGQodCkmJmYoaSkpe3ZhciBvPWUuZ2V0RGF0YSgpO28uZWFjaChmdW5jdGlvbih0KXtURChuLGksbyx0KSYmKGxbdF09MSl9KX19KHQsZSxpKX0pLHAuZWFjaFNlcmllcyhmdW5jdGlvbih0LGUpe3ZhciBpPXtzZXJpZXNJZDp0LmlkLHNlcmllc0luZGV4OmUsc2VyaWVzTmFtZTp0Lm5hbWUsZGF0YUluZGV4OltdfTtzLnNlbGVjdGVkLnB1c2goaSk7dmFyIG49QUQodCksbz11W2VdLGE9dC5nZXREYXRhKCkscj1kKGUpP2Z1bmN0aW9uKHQpe3JldHVybiBsW3RdPyhpLmRhdGFJbmRleC5wdXNoKGEuZ2V0UmF3SW5kZXgodCkpLCJpbkJydXNoIik6Im91dE9mQnJ1c2gifTpmdW5jdGlvbih0KXtyZXR1cm4gVEQobixvLGEsdCk/KGkuZGF0YUluZGV4LnB1c2goYS5nZXRSYXdJbmRleCh0KSksImluQnJ1c2giKToib3V0T2ZCcnVzaCJ9OyhkKGUpP2g6ZihvKSkmJmZ1bmN0aW9uKHQsdSxoLGMsZCxmKXt2YXIgcCxnPXt9O2Z1bmN0aW9uIG0odCl7cmV0dXJuIGguZ2V0SXRlbVZpc3VhbChwLHQpfWZ1bmN0aW9uIHYodCxlKXtoLnNldEl0ZW1WaXN1YWwocCx0LGUpfWZ1bmN0aW9uIGUodCxlKXtwPW51bGw9PWY/dDplO3ZhciBpPWguZ2V0UmF3RGF0YUl0ZW0ocCk7aWYoIWl8fCExIT09aS52aXN1YWxNYXApZm9yKHZhciBuPWMuY2FsbChkLHQpLG89dVtuXSxhPWdbbl0scj0wLHM9YS5sZW5ndGg7cjxzO3IrKyl7dmFyIGw9YVtyXTtvW2xdJiZvW2xdLmFwcGx5VmlzdWFsKHQsbSx2KX19RSh0LGZ1bmN0aW9uKHQpe3ZhciBlPWFfLnByZXBhcmVWaXN1YWxUeXBlcyh1W3RdKTtnW3RdPWV9KSxudWxsPT1mP2guZWFjaChlKTpoLmVhY2goW2ZdLGUpfSh3RCxjLGEscil9KX0pLGZ1bmN0aW9uKHQsZSxpLG4sbyl7aWYoIW8pcmV0dXJuO3ZhciBhPXQuZ2V0WnIoKTtpZihhW1NEXSlyZXR1cm47YVtiRF18fChhW2JEXT1JRCk7VGMoYSxiRCxpLGUpKHQsbil9KHQsbyxnLG0sZSl9KTt2YXIgREQ9e2xpbmVYOmV0LGxpbmVZOmV0LHJlY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIENEKHQucmFuZ2UpfSxwb2x5Z29uOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxpPXQucmFuZ2Usbj0wLG89aS5sZW5ndGg7bjxvO24rKyl7ZT1lfHxbWzEvMCwtMS8wXSxbMS8wLC0xLzBdXTt2YXIgYT1pW25dO2FbMF08ZVswXVswXSYmKGVbMF1bMF09YVswXSksYVswXT5lWzBdWzFdJiYoZVswXVsxXT1hWzBdKSxhWzFdPGVbMV1bMF0mJihlWzFdWzBdPWFbMV0pLGFbMV0+ZVsxXVsxXSYmKGVbMV1bMV09YVsxXSl9cmV0dXJuIGUmJkNEKGUpfX07ZnVuY3Rpb24gQ0QodCl7cmV0dXJuIG5ldyBNaSh0WzBdWzBdLHRbMV1bMF0sdFswXVsxXS10WzBdWzBdLHRbMV1bMV0tdFsxXVswXSl9dmFyIExEPVsiI2RkZCJdO3dmKHt0eXBlOiJicnVzaCIsZGVwZW5kZW5jaWVzOlsiZ2VvIiwiZ3JpZCIsInhBeGlzIiwieUF4aXMiLCJwYXJhbGxlbCIsInNlcmllcyJdLGRlZmF1bHRPcHRpb246e3Rvb2xib3g6bnVsbCxicnVzaExpbms6bnVsbCxzZXJpZXNJbmRleDoiYWxsIixnZW9JbmRleDpudWxsLHhBeGlzSW5kZXg6bnVsbCx5QXhpc0luZGV4Om51bGwsYnJ1c2hUeXBlOiJyZWN0IixicnVzaE1vZGU6InNpbmdsZSIsdHJhbnNmb3JtYWJsZTohMCxicnVzaFN0eWxlOntib3JkZXJXaWR0aDoxLGNvbG9yOiJyZ2JhKDEyMCwxNDAsMTgwLDAuMykiLGJvcmRlckNvbG9yOiJyZ2JhKDEyMCwxNDAsMTgwLDAuOCkifSx0aHJvdHRsZVR5cGU6ImZpeFJhdGUiLHRocm90dGxlRGVsYXk6MCxyZW1vdmVPbkNsaWNrOiEwLHo6MWU0fSxhcmVhczpbXSxicnVzaFR5cGU6bnVsbCxicnVzaE9wdGlvbjp7fSxjb29yZEluZm9MaXN0OltdLG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9wdGlvbjtlfHx2RChpLHQsWyJpbkJydXNoIiwib3V0T2ZCcnVzaCJdKTt2YXIgbj1pLmluQnJ1c2g9aS5pbkJydXNofHx7fTtpLm91dE9mQnJ1c2g9aS5vdXRPZkJydXNofHx7Y29sb3I6TER9LG4uaGFzT3duUHJvcGVydHkoImxpZnRaIil8fChuLmxpZnRaPTUpfSxzZXRBcmVhczpmdW5jdGlvbih0KXt0JiYodGhpcy5hcmVhcz1OKHQsZnVuY3Rpb24odCl7cmV0dXJuIGtEKHRoaXMub3B0aW9uLHQpfSx0aGlzKSl9LHNldEJydXNoT3B0aW9uOmZ1bmN0aW9uKHQpe3RoaXMuYnJ1c2hPcHRpb249a0QodGhpcy5vcHRpb24sdCksdGhpcy5icnVzaFR5cGU9dGhpcy5icnVzaE9wdGlvbi5icnVzaFR5cGV9fSk7ZnVuY3Rpb24ga0QodCxlKXtyZXR1cm4gbSh7YnJ1c2hUeXBlOnQuYnJ1c2hUeXBlLGJydXNoTW9kZTp0LmJydXNoTW9kZSx0cmFuc2Zvcm1hYmxlOnQudHJhbnNmb3JtYWJsZSxicnVzaFN0eWxlOm5ldyBJbCh0LmJydXNoU3R5bGUpLmdldEl0ZW1TdHlsZSgpLHJlbW92ZU9uQ2xpY2s6dC5yZW1vdmVPbkNsaWNrLHo6dC56fSxlLCEwKX1mdW5jdGlvbiBQRCh0LGUsaSxuKXtuJiZuLiRmcm9tPT09dC5pZHx8dGhpcy5fYnJ1c2hDb250cm9sbGVyLnNldFBhbmVscyh0LmJydXNoVGFyZ2V0TWFuYWdlci5tYWtlUGFuZWxPcHRzKGkpKS5lbmFibGVCcnVzaCh0LmJydXNoT3B0aW9uKS51cGRhdGVDb3ZlcnModC5hcmVhcy5zbGljZSgpKX1iZih7dHlwZToiYnJ1c2giLGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLmVjTW9kZWw9dCx0aGlzLmFwaT1lLHRoaXMubW9kZWwsKHRoaXMuX2JydXNoQ29udHJvbGxlcj1uZXcgZ2IoZS5nZXRacigpKSkub24oImJydXNoIixBKHRoaXMuX29uQnJ1c2gsdGhpcykpLm1vdW50KCl9LHJlbmRlcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tb2RlbD10LFBELmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdXBkYXRlVHJhbnNmb3JtOlBELHVwZGF0ZVZpZXc6UEQsZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuX2JydXNoQ29udHJvbGxlci5kaXNwb3NlKCl9LF9vbkJydXNoOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5tb2RlbC5pZDt0aGlzLm1vZGVsLmJydXNoVGFyZ2V0TWFuYWdlci5zZXRPdXRwdXRSYW5nZXModCx0aGlzLmVjTW9kZWwpLGUuaXNFbmQmJiFlLnJlbW92ZU9uQ2xpY2t8fHRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJicnVzaCIsYnJ1c2hJZDppLGFyZWFzOkQodCksJGZyb206aX0pLGUuaXNFbmQmJnRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJicnVzaEVuZCIsYnJ1c2hJZDppLGFyZWFzOkQodCksJGZyb206aX0pfX0pLGdmKHt0eXBlOiJicnVzaCIsZXZlbnQ6ImJydXNoIn0sZnVuY3Rpb24oZSx0KXt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJicnVzaCIscXVlcnk6ZX0sZnVuY3Rpb24odCl7dC5zZXRBcmVhcyhlLmFyZWFzKX0pfSksZ2Yoe3R5cGU6ImJydXNoU2VsZWN0IixldmVudDoiYnJ1c2hTZWxlY3RlZCIsdXBkYXRlOiJub25lIn0sZnVuY3Rpb24oKXt9KSxnZih7dHlwZToiYnJ1c2hFbmQiLGV2ZW50OiJicnVzaEVuZCIsdXBkYXRlOiJub25lIn0sZnVuY3Rpb24oKXt9KTt2YXIgTkQ9Q2MudG9vbGJveC5icnVzaDtmdW5jdGlvbiBPRCh0LGUsaSl7dGhpcy5tb2RlbD10LHRoaXMuZWNNb2RlbD1lLHRoaXMuYXBpPWksdGhpcy5fYnJ1c2hUeXBlLHRoaXMuX2JydXNoTW9kZX1PRC5kZWZhdWx0T3B0aW9uPXtzaG93OiEwLHR5cGU6WyJyZWN0IiwicG9seWdvbiIsImxpbmVYIiwibGluZVkiLCJrZWVwIiwiY2xlYXIiXSxpY29uOntyZWN0OiJNNy4zLDM0LjcgTTAuNCwxMFYtMC4yaDkuOCBNODkuNiwxMFYtMC4yaC05LjggTTAuNCw2MHYxMC4yaDkuOCBNODkuNiw2MHYxMC4yaC05LjggTTEyLjMsMjIuNFYxMC41aDEzLjEgTTMzLjYsMTAuNWg3LjggTTQ5LjEsMTAuNWg3LjggTTc3LjUsMjIuNFYxMC41aC0xMyBNMTIuMywzMS4xdjguMiBNNzcuNywzMS4xdjguMiBNMTIuMyw0Ny42djExLjloMTMuMSBNMzMuNiw1OS41aDcuNiBNNDkuMSw1OS41IGg3LjcgTTc3LjUsNDcuNnYxMS45aC0xMyIscG9seWdvbjoiTTU1LjIsMzQuOWMxLjcsMCwzLjEsMS40LDMuMSwzLjFzLTEuNCwzLjEtMy4xLDMuMSBzLTMuMS0xLjQtMy4xLTMuMVM1My41LDM0LjksNTUuMiwzNC45eiBNNTAuNCw1MWMxLjcsMCwzLjEsMS40LDMuMSwzLjFjMCwxLjctMS40LDMuMS0zLjEsMy4xYy0xLjcsMC0zLjEtMS40LTMuMS0zLjEgQzQ3LjMsNTIuNCw0OC43LDUxLDUwLjQsNTF6IE01NS42LDM3LjFsMS41LTcuOCBNNjAuMSwxMy41bDEuNi04LjdsLTcuOCw0IE01OSwxOWwtMSw1LjMgTTI0LDE2LjFsNi40LDQuOWw2LjQtMy4zIE00OC41LDExLjYgbC01LjksMy4xIE0xOS4xLDEyLjhMOS43LDUuMWwxLjEsNy43IE0xMy40LDI5LjhsMSw3LjNsNi42LDEuNiBNMTEuNiwxOC40bDEsNi4xIE0zMi44LDQxLjkgTTI2LjYsNDAuNCBNMjcuMyw0MC4ybDYuMSwxLjYgTTQ5LjksNTIuMWwtNS42LTcuNmwtNC45LTEuMiIsbGluZVg6Ik0xNS4yLDMwIE0xOS43LDE1LjZWMS45SDI5IE0zNC44LDEuOUg0MC40IE01NS4zLDE1LjZWMS45SDQ1LjkgTTE5LjcsNDQuNFY1OC4xSDI5IE0zNC44LDU4LjFINDAuNCBNNTUuMyw0NC40IFY1OC4xSDQ1LjkgTTEyLjUsMjAuM2wtOS40LDkuNmw5LjYsOS44IE0zLjEsMjkuOWgxNi41IE02Mi41LDIwLjNsOS40LDkuNkw2Mi4zLDM5LjcgTTcxLjksMjkuOUg1NS40IixsaW5lWToiTTM4LjgsNy43IE01Mi43LDEyaDEzLjJ2OSBNNjUuOSwyNi42VjMyIE01Mi43LDQ2LjNoMTMuMnYtOSBNMjQuOSwxMkgxMS44djkgTTExLjgsMjYuNlYzMiBNMjQuOSw0Ni4zSDExLjh2LTkgTTQ4LjIsNS4xbC05LjMtOWwtOS40LDkuMiBNMzguOS0zLjlWMTIgTTQ4LjIsNTMuM2wtOS4zLDlsLTkuNC05LjIgTTM4LjksNjIuM1Y0Ni40IixrZWVwOiJNNCwxMC41VjFoMTAuMyBNMjAuNywxaDYuMSBNMzMsMWg2LjEgTTU1LjQsMTAuNVYxSDQ1LjIgTTQsMTcuM3Y2LjYgTTU1LjYsMTcuM3Y2LjYgTTQsMzAuNVY0MGgxMC4zIE0yMC43LDQwIGg2LjEgTTMzLDQwaDYuMSBNNTUuNCwzMC41VjQwSDQ1LjIgTTIxLDE4LjloNjIuOXY0OC42SDIxVjE4Ljl6IixjbGVhcjoiTTIyLDE0LjdsMzAuOSwzMSBNNTIuOSwxNC43TDIyLDQ1LjcgTTQuNywxNi44VjQuMmgxMy4xIE0yNiw0LjJoNy44IE00MS42LDQuMmg3LjggTTcwLjMsMTYuOFY0LjJINTcuMiBNNC43LDI1Ljl2OC42IE03MC4zLDI1Ljl2OC42IE00LjcsNDMuMnYxMi42aDEzLjEgTTI2LDU1LjhoNy44IE00MS42LDU1LjhoNy44IE03MC4zLDQzLjJ2MTIuNkg1Ny4yIn0sdGl0bGU6RChORC50aXRsZSl9O3ZhciBFRD1PRC5wcm90b3R5cGU7RUQucmVuZGVyPUVELnVwZGF0ZVZpZXc9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuLG8sYTt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJicnVzaCJ9LGZ1bmN0aW9uKHQpe249dC5icnVzaFR5cGUsbz10LmJydXNoT3B0aW9uLmJydXNoTW9kZXx8InNpbmdsZSIsYXw9dC5hcmVhcy5sZW5ndGh9KSx0aGlzLl9icnVzaFR5cGU9bix0aGlzLl9icnVzaE1vZGU9byxFKGUuZ2V0KCJ0eXBlIiwhMCksZnVuY3Rpb24odCl7ZS5zZXRJY29uU3RhdHVzKHQsKCJrZWVwIj09PXQ/Im11bHRpcGxlIj09PW86ImNsZWFyIj09PXQ/YTp0PT09bik/ImVtcGhhc2lzIjoibm9ybWFsIil9KX0sRUQuZ2V0SWNvbnM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm1vZGVsLGU9dC5nZXQoImljb24iLCEwKSxpPXt9O3JldHVybiBFKHQuZ2V0KCJ0eXBlIiwhMCksZnVuY3Rpb24odCl7ZVt0XSYmKGlbdF09ZVt0XSl9KSxpfSxFRC5vbmNsaWNrPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLl9icnVzaFR5cGUsbz10aGlzLl9icnVzaE1vZGU7ImNsZWFyIj09PWk/KGUuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImF4aXNBcmVhU2VsZWN0IixpbnRlcnZhbHM6W119KSxlLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJicnVzaCIsY29tbWFuZDoiY2xlYXIiLGFyZWFzOltdfSkpOmUuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InRha2VHbG9iYWxDdXJzb3IiLGtleToiYnJ1c2giLGJydXNoT3B0aW9uOnticnVzaFR5cGU6ImtlZXAiPT09aT9uOm4hPT1pJiZpLGJydXNoTW9kZToia2VlcCI9PT1pPyJtdWx0aXBsZSI9PT1vPyJzaW5nbGUiOiJtdWx0aXBsZSI6b319KX0sSFQoImJydXNoIixPRCksZmYoZnVuY3Rpb24odCxlKXt2YXIgaT10JiZ0LmJydXNoO2lmKGsoaSl8fChpPWk/W2ldOltdKSxpLmxlbmd0aCl7dmFyIG49W107RShpLGZ1bmN0aW9uKHQpe3ZhciBlPXQuaGFzT3duUHJvcGVydHkoInRvb2xib3giKT90LnRvb2xib3g6W107ZSBpbnN0YW5jZW9mIEFycmF5JiYobj1uLmNvbmNhdChlKSl9KTt2YXIgbz10JiZ0LnRvb2xib3g7ayhvKSYmKG89b1swXSksb3x8KG89e2ZlYXR1cmU6e319LHQudG9vbGJveD1bb10pO3ZhciBhPW8uZmVhdHVyZXx8KG8uZmVhdHVyZT17fSkscj1hLmJydXNofHwoYS5icnVzaD17fSkscz1yLnR5cGV8fChyLnR5cGU9W10pO3MucHVzaC5hcHBseShzLG4pLGZ1bmN0aW9uKGkpe3ZhciBlPXt9O0UoaSxmdW5jdGlvbih0KXtlW3RdPTF9KSxpLmxlbmd0aD0wLEUoZSxmdW5jdGlvbih0LGUpe2kucHVzaChlKX0pfShzKSxlJiYhcy5sZW5ndGgmJnMucHVzaC5hcHBseShzLGZEKX19KSx3Zih7dHlwZToidGl0bGUiLGxheW91dE1vZGU6e3R5cGU6ImJveCIsaWdub3JlU2l6ZTohMH0sZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejo2LHNob3c6ITAsdGV4dDoiIix0YXJnZXQ6ImJsYW5rIixzdWJ0ZXh0OiIiLHN1YnRhcmdldDoiYmxhbmsiLGxlZnQ6MCx0b3A6MCxiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkiLGJvcmRlckNvbG9yOiIjY2NjIixib3JkZXJXaWR0aDowLHBhZGRpbmc6NSxpdGVtR2FwOjEwLHRleHRTdHlsZTp7Zm9udFNpemU6MTgsZm9udFdlaWdodDoiYm9sZGVyIixjb2xvcjoiIzMzMyJ9LHN1YnRleHRTdHlsZTp7Y29sb3I6IiNhYWEifX19KSxiZih7dHlwZToidGl0bGUiLHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7aWYodGhpcy5ncm91cC5yZW1vdmVBbGwoKSx0LmdldCgic2hvdyIpKXt2YXIgbj10aGlzLmdyb3VwLG89dC5nZXRNb2RlbCgidGV4dFN0eWxlIiksYT10LmdldE1vZGVsKCJzdWJ0ZXh0U3R5bGUiKSxyPXQuZ2V0KCJ0ZXh0QWxpZ24iKSxzPUgodC5nZXQoInRleHRCYXNlbGluZSIpLHQuZ2V0KCJ0ZXh0VmVydGljYWxBbGlnbiIpKSxsPW5ldyBGcih7c3R5bGU6UXMoe30sbyx7dGV4dDp0LmdldCgidGV4dCIpLHRleHRGaWxsOm8uZ2V0VGV4dENvbG9yKCl9LHtkaXNhYmxlQm94OiEwfSksejI6MTB9KSx1PWwuZ2V0Qm91bmRpbmdSZWN0KCksaD10LmdldCgic3VidGV4dCIpLGM9bmV3IEZyKHtzdHlsZTpRcyh7fSxhLHt0ZXh0OmgsdGV4dEZpbGw6YS5nZXRUZXh0Q29sb3IoKSx5OnUuaGVpZ2h0K3QuZ2V0KCJpdGVtR2FwIiksdGV4dFZlcnRpY2FsQWxpZ246InRvcCJ9LHtkaXNhYmxlQm94OiEwfSksejI6MTB9KSxkPXQuZ2V0KCJsaW5rIiksZj10LmdldCgic3VibGluayIpLHA9dC5nZXQoInRyaWdnZXJFdmVudCIsITApO2wuc2lsZW50PSFkJiYhcCxjLnNpbGVudD0hZiYmIXAsZCYmbC5vbigiY2xpY2siLGZ1bmN0aW9uKCl7d2luZG93Lm9wZW4oZCwiXyIrdC5nZXQoInRhcmdldCIpKX0pLGYmJmMub24oImNsaWNrIixmdW5jdGlvbigpe3dpbmRvdy5vcGVuKGYsIl8iK3QuZ2V0KCJzdWJ0YXJnZXQiKSl9KSxsLmV2ZW50RGF0YT1jLmV2ZW50RGF0YT1wP3tjb21wb25lbnRUeXBlOiJ0aXRsZSIsY29tcG9uZW50SW5kZXg6dC5jb21wb25lbnRJbmRleH06bnVsbCxuLmFkZChsKSxoJiZuLmFkZChjKTt2YXIgZz1uLmdldEJvdW5kaW5nUmVjdCgpLG09dC5nZXRCb3hMYXlvdXRQYXJhbXMoKTttLndpZHRoPWcud2lkdGgsbS5oZWlnaHQ9Zy5oZWlnaHQ7dmFyIHY9dnUobSx7d2lkdGg6aS5nZXRXaWR0aCgpLGhlaWdodDppLmdldEhlaWdodCgpfSx0LmdldCgicGFkZGluZyIpKTtyfHwoIm1pZGRsZSI9PT0ocj10LmdldCgibGVmdCIpfHx0LmdldCgicmlnaHQiKSkmJihyPSJjZW50ZXIiKSwicmlnaHQiPT09cj92LngrPXYud2lkdGg6ImNlbnRlciI9PT1yJiYodi54Kz12LndpZHRoLzIpKSxzfHwoImNlbnRlciI9PT0ocz10LmdldCgidG9wIil8fHQuZ2V0KCJib3R0b20iKSkmJihzPSJtaWRkbGUiKSwiYm90dG9tIj09PXM/di55Kz12LmhlaWdodDoibWlkZGxlIj09PXMmJih2LnkrPXYuaGVpZ2h0LzIpLHM9c3x8InRvcCIpLG4uYXR0cigicG9zaXRpb24iLFt2Lngsdi55XSk7dmFyIHk9e3RleHRBbGlnbjpyLHRleHRWZXJ0aWNhbEFsaWduOnN9O2wuc2V0U3R5bGUoeSksYy5zZXRTdHlsZSh5KSxnPW4uZ2V0Qm91bmRpbmdSZWN0KCk7dmFyIHg9di5tYXJnaW4sXz10LmdldEl0ZW1TdHlsZShbImNvbG9yIiwib3BhY2l0eSJdKTtfLmZpbGw9dC5nZXQoImJhY2tncm91bmRDb2xvciIpO3ZhciB3PW5ldyBpcyh7c2hhcGU6e3g6Zy54LXhbM10seTpnLnkteFswXSx3aWR0aDpnLndpZHRoK3hbMV0reFszXSxoZWlnaHQ6Zy5oZWlnaHQreFswXSt4WzJdLHI6dC5nZXQoImJvcmRlclJhZGl1cyIpfSxzdHlsZTpfLHN1YlBpeGVsT3B0aW1pemU6ITAsc2lsZW50OiEwfSk7bi5hZGQodyl9fX0pO2Z1bmN0aW9uIHpEKHQpe3ZhciBlPXQuaXRlbVN0eWxlfHwodC5pdGVtU3R5bGU9e30pLGk9ZS5lbXBoYXNpc3x8KGUuZW1waGFzaXM9e30pLG49dC5sYWJlbHx8dC5sYWJlbHx8e30sbz1uLm5vcm1hbHx8KG4ubm9ybWFsPXt9KSxhPXtub3JtYWw6MSxlbXBoYXNpczoxfTtFKG4sZnVuY3Rpb24odCxlKXthW2VdfHxSRChvLGUpfHwob1tlXT10KX0pLGkubGFiZWwmJiFSRChuLCJlbXBoYXNpcyIpJiYobi5lbXBoYXNpcz1pLmxhYmVsLGRlbGV0ZSBpLmxhYmVsKX1mdW5jdGlvbiBSRCh0LGUpe3JldHVybiB0Lmhhc093blByb3BlcnR5KGUpfVR1LnJlZ2lzdGVyU3ViVHlwZURlZmF1bHRlcigidGltZWxpbmUiLGZ1bmN0aW9uKCl7cmV0dXJuInNsaWRlciJ9KSxnZih7dHlwZToidGltZWxpbmVDaGFuZ2UiLGV2ZW50OiJ0aW1lbGluZUNoYW5nZWQiLHVwZGF0ZToicHJlcGFyZUFuZFVwZGF0ZSJ9LGZ1bmN0aW9uKHQsZSl7dmFyIGk9ZS5nZXRDb21wb25lbnQoInRpbWVsaW5lIik7cmV0dXJuIGkmJm51bGwhPXQuY3VycmVudEluZGV4JiYoaS5zZXRDdXJyZW50SW5kZXgodC5jdXJyZW50SW5kZXgpLCFpLmdldCgibG9vcCIsITApJiZpLmlzSW5kZXhNYXgoKSYmaS5zZXRQbGF5U3RhdGUoITEpKSxlLnJlc2V0T3B0aW9uKCJ0aW1lbGluZSIpLEMoe2N1cnJlbnRJbmRleDppLm9wdGlvbi5jdXJyZW50SW5kZXh9LHQpfSksZ2Yoe3R5cGU6InRpbWVsaW5lUGxheUNoYW5nZSIsZXZlbnQ6InRpbWVsaW5lUGxheUNoYW5nZWQiLHVwZGF0ZToidXBkYXRlIn0sZnVuY3Rpb24odCxlKXt2YXIgaT1lLmdldENvbXBvbmVudCgidGltZWxpbmUiKTtpJiZudWxsIT10LnBsYXlTdGF0ZSYmaS5zZXRQbGF5U3RhdGUodC5wbGF5U3RhdGUpfSk7dmFyIEJEPVR1LmV4dGVuZCh7dHlwZToidGltZWxpbmUiLGxheW91dE1vZGU6ImJveCIsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejo0LHNob3c6ITAsYXhpc1R5cGU6InRpbWUiLHJlYWx0aW1lOiEwLGxlZnQ6IjIwJSIsdG9wOm51bGwscmlnaHQ6IjIwJSIsYm90dG9tOjAsd2lkdGg6bnVsbCxoZWlnaHQ6NDAscGFkZGluZzo1LGNvbnRyb2xQb3NpdGlvbjoibGVmdCIsYXV0b1BsYXk6ITEscmV3aW5kOiExLGxvb3A6ITAscGxheUludGVydmFsOjJlMyxjdXJyZW50SW5kZXg6MCxpdGVtU3R5bGU6e30sbGFiZWw6e2NvbG9yOiIjMDAwIn0sZGF0YTpbXX0saW5pdDpmdW5jdGlvbih0LGUsaSl7dGhpcy5fZGF0YSx0aGlzLl9uYW1lcyx0aGlzLm1lcmdlRGVmYXVsdEFuZFRoZW1lKHQsaSksdGhpcy5faW5pdERhdGEoKX0sbWVyZ2VPcHRpb246ZnVuY3Rpb24odCl7QkQuc3VwZXJBcHBseSh0aGlzLCJtZXJnZU9wdGlvbiIsYXJndW1lbnRzKSx0aGlzLl9pbml0RGF0YSgpfSxzZXRDdXJyZW50SW5kZXg6ZnVuY3Rpb24odCl7bnVsbD09dCYmKHQ9dGhpcy5vcHRpb24uY3VycmVudEluZGV4KTt2YXIgZT10aGlzLl9kYXRhLmNvdW50KCk7dGhpcy5vcHRpb24ubG9vcD90PSh0JWUrZSklZTooZTw9dCYmKHQ9ZS0xKSx0PDAmJih0PTApKSx0aGlzLm9wdGlvbi5jdXJyZW50SW5kZXg9dH0sZ2V0Q3VycmVudEluZGV4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3B0aW9uLmN1cnJlbnRJbmRleH0saXNJbmRleE1heDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEN1cnJlbnRJbmRleCgpPj10aGlzLl9kYXRhLmNvdW50KCktMX0sc2V0UGxheVN0YXRlOmZ1bmN0aW9uKHQpe3RoaXMub3B0aW9uLmF1dG9QbGF5PSEhdH0sZ2V0UGxheVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLm9wdGlvbi5hdXRvUGxheX0sX2luaXREYXRhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb24sZT10LmRhdGF8fFtdLGk9dC5heGlzVHlwZSxvPXRoaXMuX25hbWVzPVtdO2lmKCJjYXRlZ29yeSI9PT1pKXt2YXIgYT1bXTtFKGUsZnVuY3Rpb24odCxlKXt2YXIgaSxuPUJvKHQpO1IodCk/KGk9RCh0KSkudmFsdWU9ZTppPWUsYS5wdXNoKGkpLHoobil8fG51bGwhPW4mJiFpc05hTihuKXx8KG49IiIpLG8ucHVzaChuKyIiKX0pLGU9YX12YXIgbj17Y2F0ZWdvcnk6Im9yZGluYWwiLHRpbWU6InRpbWUifVtpXXx8Im51bWJlciI7KHRoaXMuX2RhdGE9bmV3IFdmKFt7bmFtZToidmFsdWUiLHR5cGU6bn1dLHRoaXMpKS5pbml0RGF0YShlLG8pfSxnZXREYXRhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGF9LGdldENhdGVnb3JpZXM6ZnVuY3Rpb24oKXtpZigiY2F0ZWdvcnkiPT09dGhpcy5nZXQoImF4aXNUeXBlIikpcmV0dXJuIHRoaXMuX25hbWVzLnNsaWNlKCl9fSk7YihCRC5leHRlbmQoe3R5cGU6InRpbWVsaW5lLnNsaWRlciIsZGVmYXVsdE9wdGlvbjp7YmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIixib3JkZXJDb2xvcjoiI2NjYyIsYm9yZGVyV2lkdGg6MCxvcmllbnQ6Imhvcml6b250YWwiLGludmVyc2U6ITEsdG9vbHRpcDp7dHJpZ2dlcjoiaXRlbSJ9LHN5bWJvbDoiZW1wdHlDaXJjbGUiLHN5bWJvbFNpemU6MTAsbGluZVN0eWxlOntzaG93OiEwLHdpZHRoOjIsY29sb3I6IiMzMDQ2NTQifSxsYWJlbDp7cG9zaXRpb246ImF1dG8iLHNob3c6ITAsaW50ZXJ2YWw6ImF1dG8iLHJvdGF0ZTowLGNvbG9yOiIjMzA0NjU0In0saXRlbVN0eWxlOntjb2xvcjoiIzMwNDY1NCIsYm9yZGVyV2lkdGg6MX0sY2hlY2twb2ludFN0eWxlOntzeW1ib2w6ImNpcmNsZSIsc3ltYm9sU2l6ZToxMyxjb2xvcjoiI2MyMzUzMSIsYm9yZGVyV2lkdGg6NSxib3JkZXJDb2xvcjoicmdiYSgxOTQsNTMsNDksIDAuNSkiLGFuaW1hdGlvbjohMCxhbmltYXRpb25EdXJhdGlvbjozMDAsYW5pbWF0aW9uRWFzaW5nOiJxdWludGljSW5PdXQifSxjb250cm9sU3R5bGU6e3Nob3c6ITAsc2hvd1BsYXlCdG46ITAsc2hvd1ByZXZCdG46ITAsc2hvd05leHRCdG46ITAsaXRlbVNpemU6MjIsaXRlbUdhcDoxMixwb3NpdGlvbjoibGVmdCIscGxheUljb246InBhdGg6Ly9NMzEuNiw1M0MxNy41LDUzLDYsNDEuNSw2LDI3LjRTMTcuNSwxLjgsMzEuNiwxLjhDNDUuNywxLjgsNTcuMiwxMy4zLDU3LjIsMjcuNFM0NS43LDUzLDMxLjYsNTN6IE0zMS42LDMuMyBDMTguNCwzLjMsNy41LDE0LjEsNy41LDI3LjRjMCwxMy4zLDEwLjgsMjQuMSwyNC4xLDI0LjFDNDQuOSw1MS41LDU1LjcsNDAuNyw1NS43LDI3LjRDNTUuNywxNC4xLDQ0LjksMy4zLDMxLjYsMy4zeiBNMjQuOSwyMS4zIGMwLTIuMiwxLjYtMy4xLDMuNS0ybDEwLjUsNi4xYzEuODk5LDEuMSwxLjg5OSwyLjksMCw0bC0xMC41LDYuMWMtMS45LDEuMS0zLjUsMC4yLTMuNS0yVjIxLjN6IixzdG9wSWNvbjoicGF0aDovL00zMC45LDUzLjJDMTYuOCw1My4yLDUuMyw0MS43LDUuMywyNy42UzE2LjgsMiwzMC45LDJDNDUsMiw1Ni40LDEzLjUsNTYuNCwyNy42UzQ1LDUzLjIsMzAuOSw1My4yeiBNMzAuOSwzLjVDMTcuNiwzLjUsNi44LDE0LjQsNi44LDI3LjZjMCwxMy4zLDEwLjgsMjQuMSwyNC4xMDEsMjQuMUM0NC4yLDUxLjcsNTUsNDAuOSw1NSwyNy42QzU0LjksMTQuNCw0NC4xLDMuNSwzMC45LDMuNXogTTM2LjksMzUuOGMwLDAuNjAxLTAuNCwxLTAuOSwxaC0xLjNjLTAuNSwwLTAuOS0wLjM5OS0wLjktMVYxOS41YzAtMC42LDAuNC0xLDAuOS0xSDM2YzAuNSwwLDAuOSwwLjQsMC45LDFWMzUuOHogTTI3LjgsMzUuOCBjMCwwLjYwMS0wLjQsMS0wLjksMWgtMS4zYy0wLjUsMC0wLjktMC4zOTktMC45LTFWMTkuNWMwLTAuNiwwLjQtMSwwLjktMUgyN2MwLjUsMCwwLjksMC40LDAuOSwxTDI3LjgsMzUuOEwyNy44LDM1Ljh6IixuZXh0SWNvbjoicGF0aDovL00xOC42LDUwLjhsMjIuNS0yMi41YzAuMi0wLjIsMC4zLTAuNCwwLjMtMC43YzAtMC4zLTAuMS0wLjUtMC4zLTAuN0wxOC43LDQuNGMtMC4xLTAuMS0wLjItMC4zLTAuMi0wLjUgYzAtMC40LDAuMy0wLjgsMC44LTAuOGMwLjIsMCwwLjUsMC4xLDAuNiwwLjNsMjMuNSwyMy41bDAsMGMwLjIsMC4yLDAuMywwLjQsMC4zLDAuN2MwLDAuMy0wLjEsMC41LTAuMywwLjdsLTAuMSwwLjFMMTkuNyw1MiBjLTAuMSwwLjEtMC4zLDAuMi0wLjUsMC4yYy0wLjQsMC0wLjgtMC4zLTAuOC0wLjhDMTguNCw1MS4yLDE4LjUsNTEsMTguNiw1MC44eiIscHJldkljb246InBhdGg6Ly9NNDMsNTIuOEwyMC40LDMwLjNjLTAuMi0wLjItMC4zLTAuNC0wLjMtMC43YzAtMC4zLDAuMS0wLjUsMC4zLTAuN0w0Mi45LDYuNGMwLjEtMC4xLDAuMi0wLjMsMC4yLTAuNSBjMC0wLjQtMC4zLTAuOC0wLjgtMC44Yy0wLjIsMC0wLjUsMC4xLTAuNiwwLjNMMTguMywyOC44bDAsMGMtMC4yLDAuMi0wLjMsMC40LTAuMywwLjdjMCwwLjMsMC4xLDAuNSwwLjMsMC43bDAuMSwwLjFMNDEuOSw1NCBjMC4xLDAuMSwwLjMsMC4yLDAuNSwwLjJjMC40LDAsMC44LTAuMywwLjgtMC44QzQzLjIsNTMuMiw0My4xLDUzLDQzLDUyLjh6Iixjb2xvcjoiIzMwNDY1NCIsYm9yZGVyQ29sb3I6IiMzMDQ2NTQiLGJvcmRlcldpZHRoOjF9LGVtcGhhc2lzOntsYWJlbDp7c2hvdzohMCxjb2xvcjoiI2MyMzUzMSJ9LGl0ZW1TdHlsZTp7Y29sb3I6IiNjMjM1MzEifSxjb250cm9sU3R5bGU6e2NvbG9yOiIjYzIzNTMxIixib3JkZXJDb2xvcjoiI2MyMzUzMSIsYm9yZGVyV2lkdGg6Mn19LGRhdGE6W119fSksRmgpO2Z1bmN0aW9uIFZEKHQsZSxpLG4pe0VnLmNhbGwodGhpcyx0LGUsaSksdGhpcy50eXBlPW58fCJ2YWx1ZSIsdGhpcy5tb2RlbD1udWxsfXZhciBHRD1oYy5leHRlbmQoe3R5cGU6InRpbWVsaW5lIn0pO1ZELnByb3RvdHlwZT17Y29uc3RydWN0b3I6VkQsZ2V0TGFiZWxNb2RlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmdldE1vZGVsKCJsYWJlbCIpfSxpc0hvcml6b250YWw6ZnVuY3Rpb24oKXtyZXR1cm4iaG9yaXpvbnRhbCI9PT10aGlzLm1vZGVsLmdldCgib3JpZW50Iil9fSx3KFZELEVnKTt2YXIgRkQ9QSxXRD1FLEhEPU1hdGguUEk7ZnVuY3Rpb24gWkQodCxlLGksbixvLGEpe3ZhciByPWUuZ2V0KCJjb2xvciIpO28/KG8uc2V0Q29sb3IociksaS5hZGQobyksYSYmYS5vblVwZGF0ZShvKSk6KChvPW1nKHQuZ2V0KCJzeW1ib2wiKSwtMSwtMSwyLDIscikpLnNldFN0eWxlKCJzdHJva2VOb1NjYWxlIiwhMCksaS5hZGQobyksYSYmYS5vbkNyZWF0ZShvKSk7dmFyIHM9ZS5nZXRJdGVtU3R5bGUoWyJjb2xvciIsInN5bWJvbCIsInN5bWJvbFNpemUiXSk7by5zZXRTdHlsZShzKSxuPW0oe3JlY3RIb3ZlcjohMCx6MjoxMDB9LG4sITApO3ZhciBsPXQuZ2V0KCJzeW1ib2xTaXplIik7KGw9bCBpbnN0YW5jZW9mIEFycmF5P2wuc2xpY2UoKTpbK2wsK2xdKVswXS89MixsWzFdLz0yLG4uc2NhbGU9bDt2YXIgdT10LmdldCgic3ltYm9sT2Zmc2V0Iik7aWYodSl7dmFyIGg9bi5wb3NpdGlvbj1uLnBvc2l0aW9ufHxbMCwwXTtoWzBdKz1QbCh1WzBdLGxbMF0pLGhbMV0rPVBsKHVbMV0sbFsxXSl9dmFyIGM9dC5nZXQoInN5bWJvbFJvdGF0ZSIpO3JldHVybiBuLnJvdGF0aW9uPShjfHwwKSpNYXRoLlBJLzE4MHx8MCxvLmF0dHIobiksby51cGRhdGVUcmFuc2Zvcm0oKSxvfWZ1bmN0aW9uIFVEKHQsZSxpLG4sbyl7aWYoIXQuZHJhZ2dpbmcpe3ZhciBhPW4uZ2V0TW9kZWwoImNoZWNrcG9pbnRTdHlsZSIpLHI9aS5kYXRhVG9Db29yZChuLmdldERhdGEoKS5nZXQoWyJ2YWx1ZSJdLGUpKTtvfHwhYS5nZXQoImFuaW1hdGlvbiIsITApP3QuYXR0cih7cG9zaXRpb246W3IsMF19KToodC5zdG9wQW5pbWF0aW9uKCEwKSx0LmFuaW1hdGVUbyh7cG9zaXRpb246W3IsMF19LGEuZ2V0KCJhbmltYXRpb25EdXJhdGlvbiIsITApLGEuZ2V0KCJhbmltYXRpb25FYXNpbmciLCEwKSkpfX1HRC5leHRlbmQoe3R5cGU6InRpbWVsaW5lLnNsaWRlciIsaW5pdDpmdW5jdGlvbih0LGUpe3RoaXMuYXBpPWUsdGhpcy5fYXhpcyx0aGlzLl92aWV3UmVjdCx0aGlzLl90aW1lcix0aGlzLl9jdXJyZW50UG9pbnRlcix0aGlzLl9tYWluR3JvdXAsdGhpcy5fbGFiZWxHcm91cH0scmVuZGVyOmZ1bmN0aW9uKGUsdCxpLG4pe2lmKHRoaXMubW9kZWw9ZSx0aGlzLmFwaT1pLHRoaXMuZWNNb2RlbD10LHRoaXMuZ3JvdXAucmVtb3ZlQWxsKCksZS5nZXQoInNob3ciLCEwKSl7dmFyIG89dGhpcy5fbGF5b3V0KGUsaSksYT10aGlzLl9jcmVhdGVHcm91cCgibWFpbkdyb3VwIikscj10aGlzLl9jcmVhdGVHcm91cCgibGFiZWxHcm91cCIpLHM9dGhpcy5fYXhpcz10aGlzLl9jcmVhdGVBeGlzKG8sZSk7ZS5mb3JtYXRUb29sdGlwPWZ1bmN0aW9uKHQpe3JldHVybiBldShzLnNjYWxlLmdldExhYmVsKHQpKX0sV0QoWyJBeGlzTGluZSIsIkF4aXNUaWNrIiwiQ29udHJvbCIsIkN1cnJlbnRQb2ludGVyIl0sZnVuY3Rpb24odCl7dGhpc1siX3JlbmRlciIrdF0obyxhLHMsZSl9LHRoaXMpLHRoaXMuX3JlbmRlckF4aXNMYWJlbChvLHIscyxlKSx0aGlzLl9wb3NpdGlvbihvLGUpfXRoaXMuX2RvUGxheVN0b3AoKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJUaW1lcigpLHRoaXMuZ3JvdXAucmVtb3ZlQWxsKCl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLl9jbGVhclRpbWVyKCl9LF9sYXlvdXQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10LmdldCgibGFiZWwucG9zaXRpb24iKSxuPXQuZ2V0KCJvcmllbnQiKSxvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZ1KHQuZ2V0Qm94TGF5b3V0UGFyYW1zKCkse3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0sdC5nZXQoInBhZGRpbmciKSl9KHQsZSk7bnVsbD09aXx8ImF1dG8iPT09aT9pPSJob3Jpem9udGFsIj09PW4/by55K28uaGVpZ2h0LzI8ZS5nZXRIZWlnaHQoKS8yPyItIjoiKyI6by54K28ud2lkdGgvMjxlLmdldFdpZHRoKCkvMj8iKyI6Ii0iOmlzTmFOKGkpJiYoaT17aG9yaXpvbnRhbDp7dG9wOiItIixib3R0b206IisifSx2ZXJ0aWNhbDp7bGVmdDoiLSIscmlnaHQ6IisifX1bbl1baV0pO3ZhciBhLHIscyxsLHU9e2hvcml6b250YWw6ImNlbnRlciIsdmVydGljYWw6MDw9aXx8IisiPT09aT8ibGVmdCI6InJpZ2h0In0saD17aG9yaXpvbnRhbDowPD1pfHwiKyI9PT1pPyJ0b3AiOiJib3R0b20iLHZlcnRpY2FsOiJtaWRkbGUifSxjPXtob3Jpem9udGFsOjAsdmVydGljYWw6SEQvMn0sZD0idmVydGljYWwiPT09bj9vLmhlaWdodDpvLndpZHRoLGY9dC5nZXRNb2RlbCgiY29udHJvbFN0eWxlIikscD1mLmdldCgic2hvdyIsITApLGc9cD9mLmdldCgiaXRlbVNpemUiKTowLG09cD9mLmdldCgiaXRlbUdhcCIpOjAsdj1nK20seT10LmdldCgibGFiZWwucm90YXRlIil8fDA7eT15KkhELzE4MDt2YXIgeD1mLmdldCgicG9zaXRpb24iLCEwKSxfPXAmJmYuZ2V0KCJzaG93UGxheUJ0biIsITApLHc9cCYmZi5nZXQoInNob3dQcmV2QnRuIiwhMCksYj1wJiZmLmdldCgic2hvd05leHRCdG4iLCEwKSxTPTAsTT1kO3JldHVybiJsZWZ0Ij09PXh8fCJib3R0b20iPT09eD8oXyYmKGE9WzAsMF0sUys9diksdyYmKHI9W1MsMF0sUys9dikpOihfJiYoYT1bTS1nLDBdLE0tPXYpLHcmJihyPVswLDBdLFMrPXYpKSxiJiYocz1bTS1nLDBdLE0tPXYpLGw9W1MsTV0sdC5nZXQoImludmVyc2UiKSYmbC5yZXZlcnNlKCkse3ZpZXdSZWN0Om8sbWFpbkxlbmd0aDpkLG9yaWVudDpuLHJvdGF0aW9uOmNbbl0sbGFiZWxSb3RhdGlvbjp5LGxhYmVsUG9zT3B0OmksbGFiZWxBbGlnbjp0LmdldCgibGFiZWwuYWxpZ24iKXx8dVtuXSxsYWJlbEJhc2VsaW5lOnQuZ2V0KCJsYWJlbC52ZXJ0aWNhbEFsaWduIil8fHQuZ2V0KCJsYWJlbC5iYXNlbGluZSIpfHxoW25dLHBsYXlQb3NpdGlvbjphLHByZXZCdG5Qb3NpdGlvbjpyLG5leHRCdG5Qb3NpdGlvbjpzLGF4aXNFeHRlbnQ6bCxjb250cm9sU2l6ZTpnLGNvbnRyb2xHYXA6bX19LF9wb3NpdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX21haW5Hcm91cCxuPXRoaXMuX2xhYmVsR3JvdXAsbz10LnZpZXdSZWN0O2lmKCJ2ZXJ0aWNhbCI9PT10Lm9yaWVudCl7dmFyIGE9ZWUoKSxyPW8ueCxzPW8ueStvLmhlaWdodDthZShhLGEsWy1yLC1zXSkscmUoYSxhLC1IRC8yKSxhZShhLGEsW3Isc10pLChvPW8uY2xvbmUoKSkuYXBwbHlUcmFuc2Zvcm0oYSl9dmFyIGw9bShvKSx1PW0oaS5nZXRCb3VuZGluZ1JlY3QoKSksaD1tKG4uZ2V0Qm91bmRpbmdSZWN0KCkpLGM9aS5wb3NpdGlvbixkPW4ucG9zaXRpb247ZFswXT1jWzBdPWxbMF1bMF07dmFyIGYscD10LmxhYmVsUG9zT3B0O2lzTmFOKHApPyh2KGMsdSxsLDEsZj0iKyI9PT1wPzA6MSksdihkLGgsbCwxLDEtZikpOih2KGMsdSxsLDEsZj0wPD1wPzA6MSksZFsxXT1jWzFdK3ApO2Z1bmN0aW9uIGcodCl7dmFyIGU9dC5wb3NpdGlvbjt0Lm9yaWdpbj1bbFswXVswXS1lWzBdLGxbMV1bMF0tZVsxXV19ZnVuY3Rpb24gbSh0KXtyZXR1cm5bW3QueCx0LngrdC53aWR0aF0sW3QueSx0LnkrdC5oZWlnaHRdXX1mdW5jdGlvbiB2KHQsZSxpLG4sbyl7dFtuXSs9aVtuXVtvXS1lW25dW29dfWkuYXR0cigicG9zaXRpb24iLGMpLG4uYXR0cigicG9zaXRpb24iLGQpLGkucm90YXRpb249bi5yb3RhdGlvbj10LnJvdGF0aW9uLGcoaSksZyhuKX0sX2NyZWF0ZUF4aXM6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmdldERhdGEoKSxuPWUuZ2V0KCJheGlzVHlwZSIpLG89aWcoZSxuKTtvLmdldFRpY2tzPWZ1bmN0aW9uKCl7cmV0dXJuIGkubWFwQXJyYXkoWyJ2YWx1ZSJdLGZ1bmN0aW9uKHQpe3JldHVybiB0fSl9O3ZhciBhPWkuZ2V0RGF0YUV4dGVudCgidmFsdWUiKTtvLnNldEV4dGVudChhWzBdLGFbMV0pLG8ubmljZVRpY2tzKCk7dmFyIHI9bmV3IFZEKCJ2YWx1ZSIsbyx0LmF4aXNFeHRlbnQsbik7cmV0dXJuIHIubW9kZWw9ZSxyfSxfY3JlYXRlR3JvdXA6ZnVuY3Rpb24odCl7dmFyIGU9dGhpc1siXyIrdF09bmV3IElpO3JldHVybiB0aGlzLmdyb3VwLmFkZChlKSxlfSxfcmVuZGVyQXhpc0xpbmU6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89aS5nZXRFeHRlbnQoKTtuLmdldCgibGluZVN0eWxlLnNob3ciKSYmZS5hZGQobmV3IG9zKHtzaGFwZTp7eDE6b1swXSx5MTowLHgyOm9bMV0seTI6MH0sc3R5bGU6TCh7bGluZUNhcDoicm91bmQifSxuLmdldE1vZGVsKCJsaW5lU3R5bGUiKS5nZXRMaW5lU3R5bGUoKSksc2lsZW50OiEwLHoyOjF9KSl9LF9yZW5kZXJBeGlzVGljazpmdW5jdGlvbih0LHMsbCx1KXt2YXIgaD11LmdldERhdGEoKSxlPWwuc2NhbGUuZ2V0VGlja3MoKTtXRChlLGZ1bmN0aW9uKHQpe3ZhciBlPWwuZGF0YVRvQ29vcmQodCksaT1oLmdldEl0ZW1Nb2RlbCh0KSxuPWkuZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLG89aS5nZXRNb2RlbCgiZW1waGFzaXMuaXRlbVN0eWxlIiksYT17cG9zaXRpb246W2UsMF0sb25jbGljazpGRCh0aGlzLl9jaGFuZ2VUaW1lbGluZSx0aGlzLHQpfSxyPVpEKGksbixzLGEpO1lzKHIsby5nZXRJdGVtU3R5bGUoKSksaS5nZXQoInRvb2x0aXAiKT8oci5kYXRhSW5kZXg9dCxyLmRhdGFNb2RlbD11KTpyLmRhdGFJbmRleD1yLmRhdGFNb2RlbD1udWxsfSx0aGlzKX0sX3JlbmRlckF4aXNMYWJlbDpmdW5jdGlvbihzLGwsdSx0KXtpZih1LmdldExhYmVsTW9kZWwoKS5nZXQoInNob3ciKSl7dmFyIGg9dC5nZXREYXRhKCksZT11LmdldFZpZXdMYWJlbHMoKTtXRChlLGZ1bmN0aW9uKHQpe3ZhciBlPXQudGlja1ZhbHVlLGk9aC5nZXRJdGVtTW9kZWwoZSksbj1pLmdldE1vZGVsKCJsYWJlbCIpLG89aS5nZXRNb2RlbCgiZW1waGFzaXMubGFiZWwiKSxhPXUuZGF0YVRvQ29vcmQodC50aWNrVmFsdWUpLHI9bmV3IEZyKHtwb3NpdGlvbjpbYSwwXSxyb3RhdGlvbjpzLmxhYmVsUm90YXRpb24tcy5yb3RhdGlvbixvbmNsaWNrOkZEKHRoaXMuX2NoYW5nZVRpbWVsaW5lLHRoaXMsZSksc2lsZW50OiExfSk7UXMoci5zdHlsZSxuLHt0ZXh0OnQuZm9ybWF0dGVkTGFiZWwsdGV4dEFsaWduOnMubGFiZWxBbGlnbix0ZXh0VmVydGljYWxBbGlnbjpzLmxhYmVsQmFzZWxpbmV9KSxsLmFkZChyKSxZcyhyLFFzKHt9LG8pKX0sdGhpcyl9fSxfcmVuZGVyQ29udHJvbDpmdW5jdGlvbih0LGEsZSxyKXt2YXIgcz10LmNvbnRyb2xTaXplLGw9dC5yb3RhdGlvbix1PXIuZ2V0TW9kZWwoImNvbnRyb2xTdHlsZSIpLmdldEl0ZW1TdHlsZSgpLGg9ci5nZXRNb2RlbCgiZW1waGFzaXMuY29udHJvbFN0eWxlIikuZ2V0SXRlbVN0eWxlKCksYz1bMCwtcy8yLHMsc10saT1yLmdldFBsYXlTdGF0ZSgpLG49ci5nZXQoImludmVyc2UiLCEwKTtmdW5jdGlvbiBvKHQsZSxpLG4pe2lmKHQpe3ZhciBvPWZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiBEcyh0LmdldChlKS5yZXBsYWNlKC9ecGF0aDpcL1wvLywiIiksRChufHx7fSksbmV3IE1pKGlbMF0saVsxXSxpWzJdLGlbM10pLCJjZW50ZXIiKX0ocixlLGMse3Bvc2l0aW9uOnQsb3JpZ2luOltzLzIsMF0scm90YXRpb246bj8tbDowLHJlY3RIb3ZlcjohMCxzdHlsZTp1LG9uY2xpY2s6aX0pO2EuYWRkKG8pLFlzKG8saCl9fW8odC5uZXh0QnRuUG9zaXRpb24sImNvbnRyb2xTdHlsZS5uZXh0SWNvbiIsRkQodGhpcy5fY2hhbmdlVGltZWxpbmUsdGhpcyxuPyItIjoiKyIpKSxvKHQucHJldkJ0blBvc2l0aW9uLCJjb250cm9sU3R5bGUucHJldkljb24iLEZEKHRoaXMuX2NoYW5nZVRpbWVsaW5lLHRoaXMsbj8iKyI6Ii0iKSksbyh0LnBsYXlQb3NpdGlvbiwiY29udHJvbFN0eWxlLiIrKGk/InN0b3BJY29uIjoicGxheUljb24iKSxGRCh0aGlzLl9oYW5kbGVQbGF5Q2xpY2ssdGhpcywhaSksITApfSxfcmVuZGVyQ3VycmVudFBvaW50ZXI6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89bi5nZXREYXRhKCksYT1uLmdldEN1cnJlbnRJbmRleCgpLHI9by5nZXRJdGVtTW9kZWwoYSkuZ2V0TW9kZWwoImNoZWNrcG9pbnRTdHlsZSIpLHM9dGhpcyxsPXtvbkNyZWF0ZTpmdW5jdGlvbih0KXt0LmRyYWdnYWJsZT0hMCx0LmRyaWZ0PUZEKHMuX2hhbmRsZVBvaW50ZXJEcmFnLHMpLHQub25kcmFnZW5kPUZEKHMuX2hhbmRsZVBvaW50ZXJEcmFnZW5kLHMpLFVEKHQsYSxpLG4sITApfSxvblVwZGF0ZTpmdW5jdGlvbih0KXtVRCh0LGEsaSxuKX19O3RoaXMuX2N1cnJlbnRQb2ludGVyPVpEKHIscix0aGlzLl9tYWluR3JvdXAse30sdGhpcy5fY3VycmVudFBvaW50ZXIsbCl9LF9oYW5kbGVQbGF5Q2xpY2s6ZnVuY3Rpb24odCl7dGhpcy5fY2xlYXJUaW1lcigpLHRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJ0aW1lbGluZVBsYXlDaGFuZ2UiLHBsYXlTdGF0ZTp0LGZyb206dGhpcy51aWR9KX0sX2hhbmRsZVBvaW50ZXJEcmFnOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9jbGVhclRpbWVyKCksdGhpcy5fcG9pbnRlckNoYW5nZVRpbWVsaW5lKFtpLm9mZnNldFgsaS5vZmZzZXRZXSl9LF9oYW5kbGVQb2ludGVyRHJhZ2VuZDpmdW5jdGlvbih0KXt0aGlzLl9wb2ludGVyQ2hhbmdlVGltZWxpbmUoW3Qub2Zmc2V0WCx0Lm9mZnNldFldLCEwKX0sX3BvaW50ZXJDaGFuZ2VUaW1lbGluZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX3RvQXhpc0Nvb3JkKHQpWzBdLG49T2wodGhpcy5fYXhpcy5nZXRFeHRlbnQoKS5zbGljZSgpKTtpPm5bMV0mJihpPW5bMV0pLGk8blswXSYmKGk9blswXSksdGhpcy5fY3VycmVudFBvaW50ZXIucG9zaXRpb25bMF09aSx0aGlzLl9jdXJyZW50UG9pbnRlci5kaXJ0eSgpO3ZhciBvPXRoaXMuX2ZpbmROZWFyZXN0VGljayhpKSxhPXRoaXMubW9kZWw7KGV8fG8hPT1hLmdldEN1cnJlbnRJbmRleCgpJiZhLmdldCgicmVhbHRpbWUiKSkmJnRoaXMuX2NoYW5nZVRpbWVsaW5lKG8pfSxfZG9QbGF5U3RvcDpmdW5jdGlvbigpe3RoaXMuX2NsZWFyVGltZXIoKSx0aGlzLm1vZGVsLmdldFBsYXlTdGF0ZSgpJiYodGhpcy5fdGltZXI9c2V0VGltZW91dChGRChmdW5jdGlvbigpe3ZhciB0PXRoaXMubW9kZWw7dGhpcy5fY2hhbmdlVGltZWxpbmUodC5nZXRDdXJyZW50SW5kZXgoKSsodC5nZXQoInJld2luZCIsITApPy0xOjEpKX0sdGhpcyksdGhpcy5tb2RlbC5nZXQoInBsYXlJbnRlcnZhbCIpKSl9LF90b0F4aXNDb29yZDpmdW5jdGlvbih0KXtyZXR1cm4gaGwodCx0aGlzLl9tYWluR3JvdXAuZ2V0TG9jYWxUcmFuc2Zvcm0oKSwhMCl9LF9maW5kTmVhcmVzdFRpY2s6ZnVuY3Rpb24obyl7dmFyIGEsdD10aGlzLm1vZGVsLmdldERhdGEoKSxyPTEvMCxzPXRoaXMuX2F4aXM7cmV0dXJuIHQuZWFjaChbInZhbHVlIl0sZnVuY3Rpb24odCxlKXt2YXIgaT1zLmRhdGFUb0Nvb3JkKHQpLG49TWF0aC5hYnMoaS1vKTtuPHImJihyPW4sYT1lKX0pLGF9LF9jbGVhclRpbWVyOmZ1bmN0aW9uKCl7dGhpcy5fdGltZXImJihjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpLHRoaXMuX3RpbWVyPW51bGwpfSxfY2hhbmdlVGltZWxpbmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5tb2RlbC5nZXRDdXJyZW50SW5kZXgoKTsiKyI9PT10P3Q9ZSsxOiItIj09PXQmJih0PWUtMSksdGhpcy5hcGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6InRpbWVsaW5lQ2hhbmdlIixjdXJyZW50SW5kZXg6dCxmcm9tOnRoaXMudWlkfSl9fSksZmYoZnVuY3Rpb24odCl7dmFyIGU9dCYmdC50aW1lbGluZTtrKGUpfHwoZT1lP1tlXTpbXSksRShlLGZ1bmN0aW9uKHQpe3QmJmZ1bmN0aW9uKHQpe3ZhciBlPXQudHlwZSxpPXtudW1iZXI6InZhbHVlIix0aW1lOiJ0aW1lIn07aVtlXSYmKHQuYXhpc1R5cGU9aVtlXSxkZWxldGUgdC50eXBlKTtpZih6RCh0KSxSRCh0LCJjb250cm9sUG9zaXRpb24iKSl7dmFyIG49dC5jb250cm9sU3R5bGV8fCh0LmNvbnRyb2xTdHlsZT17fSk7UkQobiwicG9zaXRpb24iKXx8KG4ucG9zaXRpb249dC5jb250cm9sUG9zaXRpb24pLCJub25lIiE9PW4ucG9zaXRpb258fFJEKG4sInNob3ciKXx8KG4uc2hvdz0hMSxkZWxldGUgbi5wb3NpdGlvbiksZGVsZXRlIHQuY29udHJvbFBvc2l0aW9ufUUodC5kYXRhfHxbXSxmdW5jdGlvbih0KXtSKHQpJiYhayh0KSYmKCFSRCh0LCJ2YWx1ZSIpJiZSRCh0LCJuYW1lIikmJih0LnZhbHVlPXQubmFtZSksekQodCkpfSl9KHQpfSl9KTt2YXIgWEQ9S2wsWUQ9ZXU7ZnVuY3Rpb24gakQodCl7em8odCwibGFiZWwiLFsic2hvdyJdKX12YXIgcUQ9d2Yoe3R5cGU6Im1hcmtlciIsZGVwZW5kZW5jaWVzOlsic2VyaWVzIiwiZ3JpZCIsInBvbGFyIiwiZ2VvIl0saW5pdDpmdW5jdGlvbih0LGUsaSl7dGhpcy5tZXJnZURlZmF1bHRBbmRUaGVtZSh0LGkpLHRoaXMuX21lcmdlT3B0aW9uKHQsaSwhMSwhMCl9LGlzQW5pbWF0aW9uRW5hYmxlZDpmdW5jdGlvbigpe2lmKHYubm9kZSlyZXR1cm4hMTt2YXIgdD10aGlzLl9faG9zdFNlcmllcztyZXR1cm4gdGhpcy5nZXRTaGFsbG93KCJhbmltYXRpb24iKSYmdCYmdC5pc0FuaW1hdGlvbkVuYWJsZWQoKX0sbWVyZ2VPcHRpb246ZnVuY3Rpb24odCxlKXt0aGlzLl9tZXJnZU9wdGlvbih0LGUsITEsITEpfSxfbWVyZ2VPcHRpb246ZnVuY3Rpb24odCxuLGUsbyl7dmFyIGE9dGhpcy5jb25zdHJ1Y3RvcixyPXRoaXMubWFpblR5cGUrIk1vZGVsIjtlfHxuLmVhY2hTZXJpZXMoZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQodGhpcy5tYWluVHlwZSwhMCksaT10W3JdO2UmJmUuZGF0YT8oaT9pLl9tZXJnZU9wdGlvbihlLG4sITApOihvJiZqRChlKSxFKGUuZGF0YSxmdW5jdGlvbih0KXt0IGluc3RhbmNlb2YgQXJyYXk/KGpEKHRbMF0pLGpEKHRbMV0pKTpqRCh0KX0pLEwoaT1uZXcgYShlLHRoaXMsbikse21haW5UeXBlOnRoaXMubWFpblR5cGUsc2VyaWVzSW5kZXg6dC5zZXJpZXNJbmRleCxuYW1lOnQubmFtZSxjcmVhdGVkQnlTZWxmOiEwfSksaS5fX2hvc3RTZXJpZXM9dCksdFtyXT1pKTp0W3JdPW51bGx9LHRoaXMpfSxmb3JtYXRUb29sdGlwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RGF0YSgpLGk9dGhpcy5nZXRSYXdWYWx1ZSh0KSxuPWsoaSk/TihpLFhEKS5qb2luKCIsICIpOlhEKGkpLG89ZS5nZXROYW1lKHQpLGE9WUQodGhpcy5uYW1lKTtyZXR1cm4gbnVsbD09aSYmIW98fChhKz0iPGJyIC8+IiksbyYmKGErPVlEKG8pLG51bGwhPWkmJihhKz0iIDogIikpLG51bGwhPWkmJihhKz1ZRChuKSksYX0sZ2V0RGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfSxzZXREYXRhOmZ1bmN0aW9uKHQpe3RoaXMuX2RhdGE9dH19KTtiKHFELEZoKSxxRC5leHRlbmQoe3R5cGU6Im1hcmtQb2ludCIsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejo1LHN5bWJvbDoicGluIixzeW1ib2xTaXplOjUwLHRvb2x0aXA6e3RyaWdnZXI6Iml0ZW0ifSxsYWJlbDp7c2hvdzohMCxwb3NpdGlvbjoiaW5zaWRlIn0saXRlbVN0eWxlOntib3JkZXJXaWR0aDoyfSxlbXBoYXNpczp7bGFiZWw6e3Nob3c6ITB9fX19KTt2YXIgS0Q9XztmdW5jdGlvbiAkRCh0LGUsaSxuLG8sYSl7dmFyIHI9W10scz1scChlLG4pP2UuZ2V0Q2FsY3VsYXRpb25JbmZvKCJzdGFja1Jlc3VsdERpbWVuc2lvbiIpOm4sbD1vQyhlLHMsdCksdT1lLmluZGljZXNPZk5lYXJlc3QocyxsKVswXTtyW29dPWUuZ2V0KGksdSksclthXT1lLmdldChuLHUpO3ZhciBoPUVsKGUuZ2V0KG4sdSkpO3JldHVybiAwPD0oaD1NYXRoLm1pbihoLDIwKSkmJihyW2FdPStyW2FdLnRvRml4ZWQoaCkpLHJ9dmFyIEpEPVQsUUQ9e21pbjpKRCgkRCwibWluIiksbWF4OkpEKCRELCJtYXgiKSxhdmVyYWdlOkpEKCRELCJhdmVyYWdlIil9O2Z1bmN0aW9uIHRDKHQsZSl7dmFyIGk9dC5nZXREYXRhKCksbj10LmNvb3JkaW5hdGVTeXN0ZW07aWYoZSYmIWZ1bmN0aW9uKHQpe3JldHVybiFpc05hTihwYXJzZUZsb2F0KHQueCkpJiYhaXNOYU4ocGFyc2VGbG9hdCh0LnkpKX0oZSkmJiFrKGUuY29vcmQpJiZuKXt2YXIgbz1uLmRpbWVuc2lvbnMsYT1lQyhlLGksbix0KTtpZigoZT1EKGUpKS50eXBlJiZRRFtlLnR5cGVdJiZhLmJhc2VBeGlzJiZhLnZhbHVlQXhpcyl7dmFyIHI9S0QobyxhLmJhc2VBeGlzLmRpbSkscz1LRChvLGEudmFsdWVBeGlzLmRpbSk7ZS5jb29yZD1RRFtlLnR5cGVdKGksYS5iYXNlRGF0YURpbSxhLnZhbHVlRGF0YURpbSxyLHMpLGUudmFsdWU9ZS5jb29yZFtzXX1lbHNle2Zvcih2YXIgbD1bbnVsbCE9ZS54QXhpcz9lLnhBeGlzOmUucmFkaXVzQXhpcyxudWxsIT1lLnlBeGlzP2UueUF4aXM6ZS5hbmdsZUF4aXNdLHU9MDt1PDI7dSsrKVFEW2xbdV1dJiYobFt1XT1vQyhpLGkubWFwRGltZW5zaW9uKG9bdV0pLGxbdV0pKTtlLmNvb3JkPWx9fXJldHVybiBlfWZ1bmN0aW9uIGVDKHQsZSxpLG4pe3ZhciBvPXt9O3JldHVybiBudWxsIT10LnZhbHVlSW5kZXh8fG51bGwhPXQudmFsdWVEaW0/KG8udmFsdWVEYXRhRGltPW51bGwhPXQudmFsdWVJbmRleD9lLmdldERpbWVuc2lvbih0LnZhbHVlSW5kZXgpOnQudmFsdWVEaW0sby52YWx1ZUF4aXM9aS5nZXRBeGlzKGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5nZXREYXRhKCksbj1pLmRpbWVuc2lvbnM7ZT1pLmdldERpbWVuc2lvbihlKTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKyl7dmFyIGE9aS5nZXREaW1lbnNpb25JbmZvKG5bb10pO2lmKGEubmFtZT09PWUpcmV0dXJuIGEuY29vcmREaW19fShuLG8udmFsdWVEYXRhRGltKSksby5iYXNlQXhpcz1pLmdldE90aGVyQXhpcyhvLnZhbHVlQXhpcyksby5iYXNlRGF0YURpbT1lLm1hcERpbWVuc2lvbihvLmJhc2VBeGlzLmRpbSkpOihvLmJhc2VBeGlzPW4uZ2V0QmFzZUF4aXMoKSxvLnZhbHVlQXhpcz1pLmdldE90aGVyQXhpcyhvLmJhc2VBeGlzKSxvLmJhc2VEYXRhRGltPWUubWFwRGltZW5zaW9uKG8uYmFzZUF4aXMuZGltKSxvLnZhbHVlRGF0YURpbT1lLm1hcERpbWVuc2lvbihvLnZhbHVlQXhpcy5kaW0pKSxvfWZ1bmN0aW9uIGlDKHQsZSl7cmV0dXJuISh0JiZ0LmNvbnRhaW5EYXRhJiZlLmNvb3JkJiYhZnVuY3Rpb24odCl7cmV0dXJuIShpc05hTihwYXJzZUZsb2F0KHQueCkpJiZpc05hTihwYXJzZUZsb2F0KHQueSkpKX0oZSkpfHx0LmNvbnRhaW5EYXRhKGUuY29vcmQpfWZ1bmN0aW9uIG5DKHQsZSxpLG4pe3JldHVybiBuPDI/dC5jb29yZCYmdC5jb29yZFtuXTp0LnZhbHVlfWZ1bmN0aW9uIG9DKHQsZSxpKXtpZigiYXZlcmFnZSIhPT1pKXJldHVybiJtZWRpYW4iPT09aT90LmdldE1lZGlhbihlKTp0LmdldERhdGFFeHRlbnQoZSwhMClbIm1heCI9PT1pPzE6MF07dmFyIG49MCxvPTA7cmV0dXJuIHQuZWFjaChlLGZ1bmN0aW9uKHQsZSl7aXNOYU4odCl8fChuKz10LG8rKyl9KSxuL299dmFyIGFDPWJmKHt0eXBlOiJtYXJrZXIiLGluaXQ6ZnVuY3Rpb24oKXt0aGlzLm1hcmtlckdyb3VwTWFwPVEoKX0scmVuZGVyOmZ1bmN0aW9uKHQsaSxuKXt2YXIgZT10aGlzLm1hcmtlckdyb3VwTWFwO2UuZWFjaChmdW5jdGlvbih0KXt0Ll9fa2VlcD0hMX0pO3ZhciBvPXRoaXMudHlwZSsiTW9kZWwiO2kuZWFjaFNlcmllcyhmdW5jdGlvbih0KXt2YXIgZT10W29dO2UmJnRoaXMucmVuZGVyU2VyaWVzKHQsZSxpLG4pfSx0aGlzKSxlLmVhY2goZnVuY3Rpb24odCl7dC5fX2tlZXB8fHRoaXMuZ3JvdXAucmVtb3ZlKHQuZ3JvdXApfSx0aGlzKX0scmVuZGVyU2VyaWVzOmZ1bmN0aW9uKCl7fX0pO2Z1bmN0aW9uIHJDKHMsbCx1KXt2YXIgaD1sLmNvb3JkaW5hdGVTeXN0ZW07cy5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlLGk9cy5nZXRJdGVtTW9kZWwodCksbj1QbChpLmdldCgieCIpLHUuZ2V0V2lkdGgoKSksbz1QbChpLmdldCgieSIpLHUuZ2V0SGVpZ2h0KCkpO2lmKGlzTmFOKG4pfHxpc05hTihvKSl7aWYobC5nZXRNYXJrZXJQb3NpdGlvbillPWwuZ2V0TWFya2VyUG9zaXRpb24ocy5nZXRWYWx1ZXMocy5kaW1lbnNpb25zLHQpKTtlbHNlIGlmKGgpe3ZhciBhPXMuZ2V0KGguZGltZW5zaW9uc1swXSx0KSxyPXMuZ2V0KGguZGltZW5zaW9uc1sxXSx0KTtlPWguZGF0YVRvUG9pbnQoW2Escl0pfX1lbHNlIGU9W24sb107aXNOYU4obil8fChlWzBdPW4pLGlzTmFOKG8pfHwoZVsxXT1vKSxzLnNldEl0ZW1MYXlvdXQodCxlKX0pfWFDLmV4dGVuZCh7dHlwZToibWFya1BvaW50Iix1cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24odCxlLGkpe2UuZWFjaFNlcmllcyhmdW5jdGlvbih0KXt2YXIgZT10Lm1hcmtQb2ludE1vZGVsO2UmJihyQyhlLmdldERhdGEoKSx0LGkpLHRoaXMubWFya2VyR3JvdXBNYXAuZ2V0KHQuaWQpLnVwZGF0ZUxheW91dChlKSl9LHRoaXMpfSxyZW5kZXJTZXJpZXM6ZnVuY3Rpb24odCxsLGUsaSl7dmFyIG49dC5jb29yZGluYXRlU3lzdGVtLG89dC5pZCx1PXQuZ2V0RGF0YSgpLGE9dGhpcy5tYXJrZXJHcm91cE1hcCxyPWEuZ2V0KG8pfHxhLnNldChvLG5ldyAkZyksaD1mdW5jdGlvbih0LGUsaSl7dmFyIG47bj10P04odCYmdC5kaW1lbnNpb25zLGZ1bmN0aW9uKHQpe3JldHVybiBDKHtuYW1lOnR9LGUuZ2V0RGF0YSgpLmdldERpbWVuc2lvbkluZm8oZS5nZXREYXRhKCkubWFwRGltZW5zaW9uKHQpKXx8e30pfSk6W3tuYW1lOiJ2YWx1ZSIsdHlwZToiZmxvYXQifV07dmFyIG89bmV3IFdmKG4saSksYT1OKGkuZ2V0KCJkYXRhIiksVCh0QyxlKSk7dCYmKGE9TShhLFQoaUMsdCkpKTtyZXR1cm4gby5pbml0RGF0YShhLG51bGwsdD9uQzpmdW5jdGlvbih0KXtyZXR1cm4gdC52YWx1ZX0pLG99KG4sdCxsKTtsLnNldERhdGEoaCksckMobC5nZXREYXRhKCksdCxpKSxoLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9aC5nZXRJdGVtTW9kZWwodCksaT1lLmdldFNoYWxsb3coInN5bWJvbCIpLG49ZS5nZXRTaGFsbG93KCJzeW1ib2xTaXplIiksbz1PKGkpLGE9TyhuKTtpZihvfHxhKXt2YXIgcj1sLmdldFJhd1ZhbHVlKHQpLHM9bC5nZXREYXRhUGFyYW1zKHQpO28mJihpPWkocixzKSksYSYmKG49bihyLHMpKX1oLnNldEl0ZW1WaXN1YWwodCx7c3ltYm9sOmksc3ltYm9sU2l6ZTpuLGNvbG9yOmUuZ2V0KCJpdGVtU3R5bGUuY29sb3IiKXx8dS5nZXRWaXN1YWwoImNvbG9yIil9KX0pLHIudXBkYXRlRGF0YShoKSx0aGlzLmdyb3VwLmFkZChyLmdyb3VwKSxoLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQpe3QudHJhdmVyc2UoZnVuY3Rpb24odCl7dC5kYXRhTW9kZWw9bH0pfSksci5fX2tlZXA9ITAsci5ncm91cC5zaWxlbnQ9bC5nZXQoInNpbGVudCIpfHx0LmdldCgic2lsZW50Iil9fSksZmYoZnVuY3Rpb24odCl7dC5tYXJrUG9pbnQ9dC5tYXJrUG9pbnR8fHt9fSkscUQuZXh0ZW5kKHt0eXBlOiJtYXJrTGluZSIsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejo1LHN5bWJvbDpbImNpcmNsZSIsImFycm93Il0sc3ltYm9sU2l6ZTpbOCwxNl0scHJlY2lzaW9uOjIsdG9vbHRpcDp7dHJpZ2dlcjoiaXRlbSJ9LGxhYmVsOntzaG93OiEwLHBvc2l0aW9uOiJlbmQifSxsaW5lU3R5bGU6e3R5cGU6ImRhc2hlZCJ9LGVtcGhhc2lzOntsYWJlbDp7c2hvdzohMH0sbGluZVN0eWxlOnt3aWR0aDozfX0sYW5pbWF0aW9uRWFzaW5nOiJsaW5lYXIifX0pO2Z1bmN0aW9uIHNDKHQsZSxpLG4pe3ZhciBvPXQuZ2V0RGF0YSgpLGE9bi50eXBlO2lmKCFrKG4pJiYoIm1pbiI9PT1hfHwibWF4Ij09PWF8fCJhdmVyYWdlIj09PWF8fCJtZWRpYW4iPT09YXx8bnVsbCE9bi54QXhpc3x8bnVsbCE9bi55QXhpcykpe3ZhciByLHM7aWYobnVsbCE9bi55QXhpc3x8bnVsbCE9bi54QXhpcylyPWUuZ2V0QXhpcyhudWxsIT1uLnlBeGlzPyJ5IjoieCIpLHM9VyhuLnlBeGlzLG4ueEF4aXMpO2Vsc2V7dmFyIGw9ZUMobixvLGUsdCk7cj1sLnZhbHVlQXhpcyxzPW9DKG8sdXAobyxsLnZhbHVlRGF0YURpbSksYSl9dmFyIHU9IngiPT09ci5kaW0/MDoxLGg9MS11LGM9RChuKSxkPXt9O2MudHlwZT1udWxsLGMuY29vcmQ9W10sZC5jb29yZD1bXSxjLmNvb3JkW2hdPS0xLzAsZC5jb29yZFtoXT0xLzA7dmFyIGY9aS5nZXQoInByZWNpc2lvbiIpOzA8PWYmJiJudW1iZXIiPT10eXBlb2YgcyYmKHM9K3MudG9GaXhlZChNYXRoLm1pbihmLDIwKSkpLGMuY29vcmRbdV09ZC5jb29yZFt1XT1zLG49W2MsZCx7dHlwZTphLHZhbHVlSW5kZXg6bi52YWx1ZUluZGV4LHZhbHVlOnN9XX1yZXR1cm4obj1bdEModCxuWzBdKSx0Qyh0LG5bMV0pLEwoe30sblsyXSldKVsyXS50eXBlPW5bMl0udHlwZXx8IiIsbShuWzJdLG5bMF0pLG0oblsyXSxuWzFdKSxufWZ1bmN0aW9uIGxDKHQpe3JldHVybiFpc05hTih0KSYmIWlzRmluaXRlKHQpfWZ1bmN0aW9uIHVDKHQsZSxpLG4pe3ZhciBvPTEtdCxhPW4uZGltZW5zaW9uc1t0XTtyZXR1cm4gbEMoZVtvXSkmJmxDKGlbb10pJiZlW3RdPT09aVt0XSYmbi5nZXRBeGlzKGEpLmNvbnRhaW5EYXRhKGVbdF0pfWZ1bmN0aW9uIGhDKHQsZSl7aWYoImNhcnRlc2lhbjJkIj09PXQudHlwZSl7dmFyIGk9ZVswXS5jb29yZCxuPWVbMV0uY29vcmQ7aWYoaSYmbiYmKHVDKDEsaSxuLHQpfHx1QygwLGksbix0KSkpcmV0dXJuITB9cmV0dXJuIGlDKHQsZVswXSkmJmlDKHQsZVsxXSl9ZnVuY3Rpb24gY0ModCxlLGksbixvKXt2YXIgYSxyPW4uY29vcmRpbmF0ZVN5c3RlbSxzPXQuZ2V0SXRlbU1vZGVsKGUpLGw9UGwocy5nZXQoIngiKSxvLmdldFdpZHRoKCkpLHU9UGwocy5nZXQoInkiKSxvLmdldEhlaWdodCgpKTtpZihpc05hTihsKXx8aXNOYU4odSkpe2lmKG4uZ2V0TWFya2VyUG9zaXRpb24pYT1uLmdldE1hcmtlclBvc2l0aW9uKHQuZ2V0VmFsdWVzKHQuZGltZW5zaW9ucyxlKSk7ZWxzZXt2YXIgaD1yLmRpbWVuc2lvbnMsYz10LmdldChoWzBdLGUpLGQ9dC5nZXQoaFsxXSxlKTthPXIuZGF0YVRvUG9pbnQoW2MsZF0pfWlmKCJjYXJ0ZXNpYW4yZCI9PT1yLnR5cGUpe3ZhciBmPXIuZ2V0QXhpcygieCIpLHA9ci5nZXRBeGlzKCJ5Iik7aD1yLmRpbWVuc2lvbnM7bEModC5nZXQoaFswXSxlKSk/YVswXT1mLnRvR2xvYmFsQ29vcmQoZi5nZXRFeHRlbnQoKVtpPzA6MV0pOmxDKHQuZ2V0KGhbMV0sZSkpJiYoYVsxXT1wLnRvR2xvYmFsQ29vcmQocC5nZXRFeHRlbnQoKVtpPzA6MV0pKX1pc05hTihsKXx8KGFbMF09bCksaXNOYU4odSl8fChhWzFdPXUpfWVsc2UgYT1bbCx1XTt0LnNldEl0ZW1MYXlvdXQoZSxhKX1hQy5leHRlbmQoe3R5cGU6Im1hcmtMaW5lIix1cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24odCxlLGEpe2UuZWFjaFNlcmllcyhmdW5jdGlvbihlKXt2YXIgdD1lLm1hcmtMaW5lTW9kZWw7aWYodCl7dmFyIGk9dC5nZXREYXRhKCksbj10Ll9fZnJvbSxvPXQuX190bztuLmVhY2goZnVuY3Rpb24odCl7Y0Mobix0LCEwLGUsYSksY0Mobyx0LCExLGUsYSl9KSxpLmVhY2goZnVuY3Rpb24odCl7aS5zZXRJdGVtTGF5b3V0KHQsW24uZ2V0SXRlbUxheW91dCh0KSxvLmdldEl0ZW1MYXlvdXQodCldKX0pLHRoaXMubWFya2VyR3JvdXBNYXAuZ2V0KGUuaWQpLnVwZGF0ZUxheW91dCgpfX0sdGhpcyl9LHJlbmRlclNlcmllczpmdW5jdGlvbihvLGksdCxhKXt2YXIgZT1vLmNvb3JkaW5hdGVTeXN0ZW0sbj1vLmlkLHI9by5nZXREYXRhKCkscz10aGlzLm1hcmtlckdyb3VwTWFwLGw9cy5nZXQobil8fHMuc2V0KG4sbmV3IG93KTt0aGlzLmdyb3VwLmFkZChsLmdyb3VwKTt2YXIgdT1mdW5jdGlvbih0LGUsaSl7dmFyIG47bj10P04odCYmdC5kaW1lbnNpb25zLGZ1bmN0aW9uKHQpe3JldHVybiBDKHtuYW1lOnR9LGUuZ2V0RGF0YSgpLmdldERpbWVuc2lvbkluZm8oZS5nZXREYXRhKCkubWFwRGltZW5zaW9uKHQpKXx8e30pfSk6W3tuYW1lOiJ2YWx1ZSIsdHlwZToiZmxvYXQifV07dmFyIG89bmV3IFdmKG4saSksYT1uZXcgV2YobixpKSxyPW5ldyBXZihbXSxpKSxzPU4oaS5nZXQoImRhdGEiKSxUKHNDLGUsdCxpKSk7dCYmKHM9TShzLFQoaEMsdCkpKTt2YXIgbD10P25DOmZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlfTtyZXR1cm4gby5pbml0RGF0YShOKHMsZnVuY3Rpb24odCl7cmV0dXJuIHRbMF19KSxudWxsLGwpLGEuaW5pdERhdGEoTihzLGZ1bmN0aW9uKHQpe3JldHVybiB0WzFdfSksbnVsbCxsKSxyLmluaXREYXRhKE4ocyxmdW5jdGlvbih0KXtyZXR1cm4gdFsyXX0pKSxyLmhhc0l0ZW1PcHRpb249ITAse2Zyb206byx0bzphLGxpbmU6cn19KGUsbyxpKSxoPXUuZnJvbSxjPXUudG8sZD11LmxpbmU7aS5fX2Zyb209aCxpLl9fdG89YyxpLnNldERhdGEoZCk7dmFyIGY9aS5nZXQoInN5bWJvbCIpLHA9aS5nZXQoInN5bWJvbFNpemUiKTtmdW5jdGlvbiBnKHQsZSxpKXt2YXIgbj10LmdldEl0ZW1Nb2RlbChlKTtjQyh0LGUsaSxvLGEpLHQuc2V0SXRlbVZpc3VhbChlLHtzeW1ib2xTaXplOm4uZ2V0KCJzeW1ib2xTaXplIil8fHBbaT8wOjFdLHN5bWJvbDpuLmdldCgic3ltYm9sIiwhMCl8fGZbaT8wOjFdLGNvbG9yOm4uZ2V0KCJpdGVtU3R5bGUuY29sb3IiKXx8ci5nZXRWaXN1YWwoImNvbG9yIil9KX1rKGYpfHwoZj1bZixmXSksIm51bWJlciI9PXR5cGVvZiBwJiYocD1bcCxwXSksdS5mcm9tLmVhY2goZnVuY3Rpb24odCl7ZyhoLHQsITApLGcoYyx0LCExKX0pLGQuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1kLmdldEl0ZW1Nb2RlbCh0KS5nZXQoImxpbmVTdHlsZS5jb2xvciIpO2Quc2V0SXRlbVZpc3VhbCh0LHtjb2xvcjplfHxoLmdldEl0ZW1WaXN1YWwodCwiY29sb3IiKX0pLGQuc2V0SXRlbUxheW91dCh0LFtoLmdldEl0ZW1MYXlvdXQodCksYy5nZXRJdGVtTGF5b3V0KHQpXSksZC5zZXRJdGVtVmlzdWFsKHQse2Zyb21TeW1ib2xTaXplOmguZ2V0SXRlbVZpc3VhbCh0LCJzeW1ib2xTaXplIiksZnJvbVN5bWJvbDpoLmdldEl0ZW1WaXN1YWwodCwic3ltYm9sIiksdG9TeW1ib2xTaXplOmMuZ2V0SXRlbVZpc3VhbCh0LCJzeW1ib2xTaXplIiksdG9TeW1ib2w6Yy5nZXRJdGVtVmlzdWFsKHQsInN5bWJvbCIpfSl9KSxsLnVwZGF0ZURhdGEoZCksdS5saW5lLmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQsZSl7dC50cmF2ZXJzZShmdW5jdGlvbih0KXt0LmRhdGFNb2RlbD1pfSl9KSxsLl9fa2VlcD0hMCxsLmdyb3VwLnNpbGVudD1pLmdldCgic2lsZW50Iil8fG8uZ2V0KCJzaWxlbnQiKX19KSxmZihmdW5jdGlvbih0KXt0Lm1hcmtMaW5lPXQubWFya0xpbmV8fHt9fSkscUQuZXh0ZW5kKHt0eXBlOiJtYXJrQXJlYSIsZGVmYXVsdE9wdGlvbjp7emxldmVsOjAsejoxLHRvb2x0aXA6e3RyaWdnZXI6Iml0ZW0ifSxhbmltYXRpb246ITEsbGFiZWw6e3Nob3c6ITAscG9zaXRpb246InRvcCJ9LGl0ZW1TdHlsZTp7Ym9yZGVyV2lkdGg6MH0sZW1waGFzaXM6e2xhYmVsOntzaG93OiEwLHBvc2l0aW9uOiJ0b3AifX19fSk7ZnVuY3Rpb24gZEModCxlLGksbil7dmFyIG89dEModCxuWzBdKSxhPXRDKHQsblsxXSkscj1XLHM9by5jb29yZCxsPWEuY29vcmQ7c1swXT1yKHNbMF0sLTEvMCksc1sxXT1yKHNbMV0sLTEvMCksbFswXT1yKGxbMF0sMS8wKSxsWzFdPXIobFsxXSwxLzApO3ZhciB1PXAoW3t9LG8sYV0pO3JldHVybiB1LmNvb3JkPVtvLmNvb3JkLGEuY29vcmRdLHUueDA9by54LHUueTA9by55LHUueDE9YS54LHUueTE9YS55LHV9ZnVuY3Rpb24gZkModCl7cmV0dXJuIWlzTmFOKHQpJiYhaXNGaW5pdGUodCl9ZnVuY3Rpb24gcEModCxlLGkpe3ZhciBuPTEtdDtyZXR1cm4gZkMoZVtuXSkmJmZDKGlbbl0pfWZ1bmN0aW9uIGdDKHQsZSl7dmFyIGk9ZS5jb29yZFswXSxuPWUuY29vcmRbMV07cmV0dXJuISgiY2FydGVzaWFuMmQiIT09dC50eXBlfHwhaXx8IW58fCFwQygxLGksbikmJiFwQygwLGksbikpfHwoaUModCx7Y29vcmQ6aSx4OmUueDAseTplLnkwfSl8fGlDKHQse2Nvb3JkOm4seDplLngxLHk6ZS55MX0pKX1mdW5jdGlvbiBtQyh0LGUsaSxuLG8pe3ZhciBhLHI9bi5jb29yZGluYXRlU3lzdGVtLHM9dC5nZXRJdGVtTW9kZWwoZSksbD1QbChzLmdldChpWzBdKSxvLmdldFdpZHRoKCkpLHU9UGwocy5nZXQoaVsxXSksby5nZXRIZWlnaHQoKSk7aWYoaXNOYU4obCl8fGlzTmFOKHUpKXtpZihuLmdldE1hcmtlclBvc2l0aW9uKWE9bi5nZXRNYXJrZXJQb3NpdGlvbih0LmdldFZhbHVlcyhpLGUpKTtlbHNle3ZhciBoPVtmPXQuZ2V0KGlbMF0sZSkscD10LmdldChpWzFdLGUpXTtyLmNsYW1wRGF0YSYmci5jbGFtcERhdGEoaCxoKSxhPXIuZGF0YVRvUG9pbnQoaCwhMCl9aWYoImNhcnRlc2lhbjJkIj09PXIudHlwZSl7dmFyIGM9ci5nZXRBeGlzKCJ4IiksZD1yLmdldEF4aXMoInkiKSxmPXQuZ2V0KGlbMF0sZSkscD10LmdldChpWzFdLGUpO2ZDKGYpP2FbMF09Yy50b0dsb2JhbENvb3JkKGMuZ2V0RXh0ZW50KClbIngwIj09PWlbMF0/MDoxXSk6ZkMocCkmJihhWzFdPWQudG9HbG9iYWxDb29yZChkLmdldEV4dGVudCgpWyJ5MCI9PT1pWzFdPzA6MV0pKX1pc05hTihsKXx8KGFbMF09bCksaXNOYU4odSl8fChhWzFdPXUpfWVsc2UgYT1bbCx1XTtyZXR1cm4gYX12YXIgdkM9W1sieDAiLCJ5MCJdLFsieDEiLCJ5MCJdLFsieDEiLCJ5MSJdLFsieDAiLCJ5MSJdXTthQy5leHRlbmQoe3R5cGU6Im1hcmtBcmVhIix1cGRhdGVUcmFuc2Zvcm06ZnVuY3Rpb24odCxlLG8pe2UuZWFjaFNlcmllcyhmdW5jdGlvbihpKXt2YXIgdD1pLm1hcmtBcmVhTW9kZWw7aWYodCl7dmFyIG49dC5nZXREYXRhKCk7bi5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PU4odkMsZnVuY3Rpb24odCl7cmV0dXJuIG1DKG4sZSx0LGksbyl9KTtuLnNldEl0ZW1MYXlvdXQoZSx0KSxuLmdldEl0ZW1HcmFwaGljRWwoZSkuc2V0U2hhcGUoInBvaW50cyIsdCl9KX19LHRoaXMpfSxyZW5kZXJTZXJpZXM6ZnVuY3Rpb24oaSxyLHQsbil7dmFyIGU9aS5jb29yZGluYXRlU3lzdGVtLG89aS5pZCxhPWkuZ2V0RGF0YSgpLHM9dGhpcy5tYXJrZXJHcm91cE1hcCxsPXMuZ2V0KG8pfHxzLnNldChvLHtncm91cDpuZXcgSWl9KTt0aGlzLmdyb3VwLmFkZChsLmdyb3VwKSxsLl9fa2VlcD0hMDt2YXIgdT1mdW5jdGlvbih0LGksZSl7dmFyIG4sbztvPXQ/KG49Tih0JiZ0LmRpbWVuc2lvbnMsZnVuY3Rpb24odCl7dmFyIGU9aS5nZXREYXRhKCk7cmV0dXJuIEMoe25hbWU6dH0sZS5nZXREaW1lbnNpb25JbmZvKGUubWFwRGltZW5zaW9uKHQpKXx8e30pfSksbmV3IFdmKE4oWyJ4MCIsInkwIiwieDEiLCJ5MSJdLGZ1bmN0aW9uKHQsZSl7cmV0dXJue25hbWU6dCx0eXBlOm5bZSUyXS50eXBlfX0pLGUpKTpuZXcgV2Yobj1be25hbWU6InZhbHVlIix0eXBlOiJmbG9hdCJ9XSxlKTt2YXIgYT1OKGUuZ2V0KCJkYXRhIiksVChkQyxpLHQsZSkpO3QmJihhPU0oYSxUKGdDLHQpKSk7dmFyIHI9dD9mdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdC5jb29yZFtNYXRoLmZsb29yKG4vMildW24lMl19OmZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlfTtyZXR1cm4gby5pbml0RGF0YShhLG51bGwsciksby5oYXNJdGVtT3B0aW9uPSEwLG99KGUsaSxyKTtyLnNldERhdGEodSksdS5lYWNoKGZ1bmN0aW9uKGUpe3Uuc2V0SXRlbUxheW91dChlLE4odkMsZnVuY3Rpb24odCl7cmV0dXJuIG1DKHUsZSx0LGksbil9KSksdS5zZXRJdGVtVmlzdWFsKGUse2NvbG9yOmEuZ2V0VmlzdWFsKCJjb2xvciIpfSl9KSx1LmRpZmYobC5fX2RhdGEpLmFkZChmdW5jdGlvbih0KXt2YXIgZT1uZXcgcXIoe3NoYXBlOntwb2ludHM6dS5nZXRJdGVtTGF5b3V0KHQpfX0pO3Uuc2V0SXRlbUdyYXBoaWNFbCh0LGUpLGwuZ3JvdXAuYWRkKGUpfSkudXBkYXRlKGZ1bmN0aW9uKHQsZSl7dmFyIGk9bC5fX2RhdGEuZ2V0SXRlbUdyYXBoaWNFbChlKTtzbChpLHtzaGFwZTp7cG9pbnRzOnUuZ2V0SXRlbUxheW91dCh0KX19LHIsdCksbC5ncm91cC5hZGQoaSksdS5zZXRJdGVtR3JhcGhpY0VsKHQsaSl9KS5yZW1vdmUoZnVuY3Rpb24odCl7dmFyIGU9bC5fX2RhdGEuZ2V0SXRlbUdyYXBoaWNFbCh0KTtsLmdyb3VwLnJlbW92ZShlKX0pLmV4ZWN1dGUoKSx1LmVhY2hJdGVtR3JhcGhpY0VsKGZ1bmN0aW9uKHQsZSl7dmFyIGk9dS5nZXRJdGVtTW9kZWwoZSksbj1pLmdldE1vZGVsKCJsYWJlbCIpLG89aS5nZXRNb2RlbCgiZW1waGFzaXMubGFiZWwiKSxhPXUuZ2V0SXRlbVZpc3VhbChlLCJjb2xvciIpO3QudXNlU3R5bGUoQyhpLmdldE1vZGVsKCJpdGVtU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSx7ZmlsbDpYZShhLC40KSxzdHJva2U6YX0pKSx0LmhvdmVyU3R5bGU9aS5nZXRNb2RlbCgiZW1waGFzaXMuaXRlbVN0eWxlIikuZ2V0SXRlbVN0eWxlKCksJHModC5zdHlsZSx0LmhvdmVyU3R5bGUsbixvLHtsYWJlbEZldGNoZXI6cixsYWJlbERhdGFJbmRleDplLGRlZmF1bHRUZXh0OnUuZ2V0TmFtZShlKXx8IiIsaXNSZWN0VGV4dDohMCxhdXRvQ29sb3I6YX0pLFlzKHQse30pLHQuZGF0YU1vZGVsPXJ9KSxsLl9fZGF0YT11LGwuZ3JvdXAuc2lsZW50PXIuZ2V0KCJzaWxlbnQiKXx8aS5nZXQoInNpbGVudCIpfX0pLGZmKGZ1bmN0aW9uKHQpe3QubWFya0FyZWE9dC5tYXJrQXJlYXx8e319KTt2YXIgeUM9Q2MubGVnZW5kLnNlbGVjdG9yLHhDPXthbGw6e3R5cGU6ImFsbCIsdGl0bGU6RCh5Qy5hbGwpfSxpbnZlcnNlOnt0eXBlOiJpbnZlcnNlIix0aXRsZTpEKHlDLmludmVyc2UpfX0sX0M9d2Yoe3R5cGU6ImxlZ2VuZC5wbGFpbiIsZGVwZW5kZW5jaWVzOlsic2VyaWVzIl0sbGF5b3V0TW9kZTp7dHlwZToiYm94IixpZ25vcmVTaXplOiEwfSxpbml0OmZ1bmN0aW9uKHQsZSxpKXt0aGlzLm1lcmdlRGVmYXVsdEFuZFRoZW1lKHQsaSksdC5zZWxlY3RlZD10LnNlbGVjdGVkfHx7fSx0aGlzLl91cGRhdGVTZWxlY3Rvcih0KX0sbWVyZ2VPcHRpb246ZnVuY3Rpb24odCl7X0Muc3VwZXJDYWxsKHRoaXMsIm1lcmdlT3B0aW9uIix0KSx0aGlzLl91cGRhdGVTZWxlY3Rvcih0KX0sX3VwZGF0ZVNlbGVjdG9yOmZ1bmN0aW9uKHQpe3ZhciBpPXQuc2VsZWN0b3I7ITA9PT1pJiYoaT10LnNlbGVjdG9yPVsiYWxsIiwiaW52ZXJzZSJdKSxrKGkpJiZFKGksZnVuY3Rpb24odCxlKXt6KHQpJiYodD17dHlwZTp0fSksaVtlXT1tKHQseENbdC50eXBlXSl9KX0sb3B0aW9uVXBkYXRlZDpmdW5jdGlvbigpe3RoaXMuX3VwZGF0ZURhdGEodGhpcy5lY01vZGVsKTt2YXIgdD10aGlzLl9kYXRhO2lmKHRbMF0mJiJzaW5nbGUiPT09dGhpcy5nZXQoInNlbGVjdGVkTW9kZSIpKXtmb3IodmFyIGU9ITEsaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbj10W2ldLmdldCgibmFtZSIpO2lmKHRoaXMuaXNTZWxlY3RlZChuKSl7dGhpcy5zZWxlY3QobiksZT0hMDticmVha319ZXx8dGhpcy5zZWxlY3QodFswXS5nZXQoIm5hbWUiKSl9fSxfdXBkYXRlRGF0YTpmdW5jdGlvbihvKXt2YXIgYT1bXSxyPVtdO28uZWFjaFJhd1NlcmllcyhmdW5jdGlvbih0KXt2YXIgZSxpPXQubmFtZTtpZihyLnB1c2goaSksdC5sZWdlbmRWaXN1YWxQcm92aWRlcil7dmFyIG49dC5sZWdlbmRWaXN1YWxQcm92aWRlci5nZXRBbGxOYW1lcygpO28uaXNTZXJpZXNGaWx0ZXJlZCh0KXx8KHI9ci5jb25jYXQobikpLG4ubGVuZ3RoP2E9YS5jb25jYXQobik6ZT0hMH1lbHNlIGU9ITA7ZSYmRm8odCkmJmEucHVzaCh0Lm5hbWUpfSksdGhpcy5fYXZhaWxhYmxlTmFtZXM9cjt2YXIgdD1OKHRoaXMuZ2V0KCJkYXRhIil8fGEsZnVuY3Rpb24odCl7cmV0dXJuInN0cmluZyIhPXR5cGVvZiB0JiYibnVtYmVyIiE9dHlwZW9mIHR8fCh0PXtuYW1lOnR9KSxuZXcgSWwodCx0aGlzLHRoaXMuZWNNb2RlbCl9LHRoaXMpO3RoaXMuX2RhdGE9dH0sZ2V0RGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfSxzZWxlY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb24uc2VsZWN0ZWQ7InNpbmdsZSI9PT10aGlzLmdldCgic2VsZWN0ZWRNb2RlIikmJkUodGhpcy5fZGF0YSxmdW5jdGlvbih0KXtlW3QuZ2V0KCJuYW1lIildPSExfSk7ZVt0XT0hMH0sdW5TZWxlY3Q6ZnVuY3Rpb24odCl7InNpbmdsZSIhPT10aGlzLmdldCgic2VsZWN0ZWRNb2RlIikmJih0aGlzLm9wdGlvbi5zZWxlY3RlZFt0XT0hMSl9LHRvZ2dsZVNlbGVjdGVkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9uLnNlbGVjdGVkO2UuaGFzT3duUHJvcGVydHkodCl8fChlW3RdPSEwKSx0aGlzW2VbdF0/InVuU2VsZWN0Ijoic2VsZWN0Il0odCl9LGFsbFNlbGVjdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGEsZT10aGlzLm9wdGlvbi5zZWxlY3RlZDtFKHQsZnVuY3Rpb24odCl7ZVt0LmdldCgibmFtZSIsITApXT0hMH0pfSxpbnZlcnNlU2VsZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZGF0YSxpPXRoaXMub3B0aW9uLnNlbGVjdGVkO0UodCxmdW5jdGlvbih0KXt2YXIgZT10LmdldCgibmFtZSIsITApO2kuaGFzT3duUHJvcGVydHkoZSl8fChpW2VdPSEwKSxpW2VdPSFpW2VdfSl9LGlzU2VsZWN0ZWQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb24uc2VsZWN0ZWQ7cmV0dXJuIShlLmhhc093blByb3BlcnR5KHQpJiYhZVt0XSkmJjA8PV8odGhpcy5fYXZhaWxhYmxlTmFtZXMsdCl9LGdldE9yaWVudDpmdW5jdGlvbigpe3JldHVybiJ2ZXJ0aWNhbCI9PT10aGlzLmdldCgib3JpZW50Iik/e2luZGV4OjEsbmFtZToidmVydGljYWwifTp7aW5kZXg6MCxuYW1lOiJob3Jpem9udGFsIn19LGRlZmF1bHRPcHRpb246e3psZXZlbDowLHo6NCxzaG93OiEwLG9yaWVudDoiaG9yaXpvbnRhbCIsbGVmdDoiY2VudGVyIix0b3A6MCxhbGlnbjoiYXV0byIsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDAsMCwwLDApIixib3JkZXJDb2xvcjoiI2NjYyIsYm9yZGVyUmFkaXVzOjAsYm9yZGVyV2lkdGg6MCxwYWRkaW5nOjUsaXRlbUdhcDoxMCxpdGVtV2lkdGg6MjUsaXRlbUhlaWdodDoxNCxpbmFjdGl2ZUNvbG9yOiIjY2NjIixpbmFjdGl2ZUJvcmRlckNvbG9yOiIjY2NjIixpdGVtU3R5bGU6e2JvcmRlcldpZHRoOjB9LHRleHRTdHlsZTp7Y29sb3I6IiMzMzMifSxzZWxlY3RlZE1vZGU6ITAsc2VsZWN0b3I6ITEsc2VsZWN0b3JMYWJlbDp7c2hvdzohMCxib3JkZXJSYWRpdXM6MTAscGFkZGluZzpbMyw1LDMsNV0sZm9udFNpemU6MTIsZm9udEZhbWlseToiIHNhbnMtc2VyaWYiLGNvbG9yOiIjNjY2Iixib3JkZXJXaWR0aDoxLGJvcmRlckNvbG9yOiIjNjY2In0sZW1waGFzaXM6e3NlbGVjdG9yTGFiZWw6e3Nob3c6ITAsY29sb3I6IiNlZWUiLGJhY2tncm91bmRDb2xvcjoiIzY2NiJ9fSxzZWxlY3RvclBvc2l0aW9uOiJhdXRvIixzZWxlY3Rvckl0ZW1HYXA6NyxzZWxlY3RvckJ1dHRvbkdhcDoxMCx0b29sdGlwOntzaG93OiExfX19KTtmdW5jdGlvbiB3Qyh0LGUsaSl7dmFyIG8sYT17fSxyPSJ0b2dnbGVTZWxlY3RlZCI9PT10O3JldHVybiBpLmVhY2hDb21wb25lbnQoImxlZ2VuZCIsZnVuY3Rpb24obil7ciYmbnVsbCE9bz9uW28/InNlbGVjdCI6InVuU2VsZWN0Il0oZS5uYW1lKToiYWxsU2VsZWN0Ij09PXR8fCJpbnZlcnNlU2VsZWN0Ij09PXQ/blt0XSgpOihuW3RdKGUubmFtZSksbz1uLmlzU2VsZWN0ZWQoZS5uYW1lKSksRShuLmdldERhdGEoKSxmdW5jdGlvbih0KXt2YXIgZT10LmdldCgibmFtZSIpO2lmKCJcbiIhPT1lJiYiIiE9PWUpe3ZhciBpPW4uaXNTZWxlY3RlZChlKTthLmhhc093blByb3BlcnR5KGUpP2FbZV09YVtlXSYmaTphW2VdPWl9fSl9KSwiYWxsU2VsZWN0Ij09PXR8fCJpbnZlcnNlU2VsZWN0Ij09PXQ/e3NlbGVjdGVkOmF9OntuYW1lOmUubmFtZSxzZWxlY3RlZDphfX1nZigibGVnZW5kVG9nZ2xlU2VsZWN0IiwibGVnZW5kc2VsZWN0Y2hhbmdlZCIsVCh3QywidG9nZ2xlU2VsZWN0ZWQiKSksZ2YoImxlZ2VuZEFsbFNlbGVjdCIsImxlZ2VuZHNlbGVjdGFsbCIsVCh3QywiYWxsU2VsZWN0IikpLGdmKCJsZWdlbmRJbnZlcnNlU2VsZWN0IiwibGVnZW5kaW52ZXJzZXNlbGVjdCIsVCh3QywiaW52ZXJzZVNlbGVjdCIpKSxnZigibGVnZW5kU2VsZWN0IiwibGVnZW5kc2VsZWN0ZWQiLFQod0MsInNlbGVjdCIpKSxnZigibGVnZW5kVW5TZWxlY3QiLCJsZWdlbmR1bnNlbGVjdGVkIixUKHdDLCJ1blNlbGVjdCIpKTt2YXIgYkM9VCxTQz1FLE1DPUlpLElDPWJmKHt0eXBlOiJsZWdlbmQucGxhaW4iLG5ld2xpbmVEaXNhYmxlZDohMSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5ncm91cC5hZGQodGhpcy5fY29udGVudEdyb3VwPW5ldyBNQyksdGhpcy5fYmFja2dyb3VuZEVsLHRoaXMuZ3JvdXAuYWRkKHRoaXMuX3NlbGVjdG9yR3JvdXA9bmV3IE1DKSx0aGlzLl9pc0ZpcnN0UmVuZGVyPSEwfSxnZXRDb250ZW50R3JvdXA6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGVudEdyb3VwfSxnZXRTZWxlY3Rvckdyb3VwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlbGVjdG9yR3JvdXB9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5faXNGaXJzdFJlbmRlcjtpZih0aGlzLl9pc0ZpcnN0UmVuZGVyPSExLHRoaXMucmVzZXRJbm5lcigpLHQuZ2V0KCJzaG93IiwhMCkpe3ZhciBvPXQuZ2V0KCJhbGlnbiIpLGE9dC5nZXQoIm9yaWVudCIpO28mJiJhdXRvIiE9PW98fChvPSJyaWdodCI9PT10LmdldCgibGVmdCIpJiYidmVydGljYWwiPT09YT8icmlnaHQiOiJsZWZ0Iik7dmFyIHI9dC5nZXQoInNlbGVjdG9yIiwhMCkscz10LmdldCgic2VsZWN0b3JQb3NpdGlvbiIsITApOyFyfHxzJiYiYXV0byIhPT1zfHwocz0iaG9yaXpvbnRhbCI9PT1hPyJlbmQiOiJzdGFydCIpLHRoaXMucmVuZGVySW5uZXIobyx0LGUsaSxyLGEscyk7dmFyIGw9dC5nZXRCb3hMYXlvdXRQYXJhbXMoKSx1PXt3aWR0aDppLmdldFdpZHRoKCksaGVpZ2h0OmkuZ2V0SGVpZ2h0KCl9LGg9dC5nZXQoInBhZGRpbmciKSxjPXZ1KGwsdSxoKSxkPXRoaXMubGF5b3V0SW5uZXIodCxvLGMsbixyLHMpLGY9dnUoQyh7d2lkdGg6ZC53aWR0aCxoZWlnaHQ6ZC5oZWlnaHR9LGwpLHUsaCk7dGhpcy5ncm91cC5hdHRyKCJwb3NpdGlvbiIsW2YueC1kLngsZi55LWQueV0pLHRoaXMuZ3JvdXAuYWRkKHRoaXMuX2JhY2tncm91bmRFbD1YVChkLHQpKX19LHJlc2V0SW5uZXI6ZnVuY3Rpb24oKXt0aGlzLmdldENvbnRlbnRHcm91cCgpLnJlbW92ZUFsbCgpLHRoaXMuX2JhY2tncm91bmRFbCYmdGhpcy5ncm91cC5yZW1vdmUodGhpcy5fYmFja2dyb3VuZEVsKSx0aGlzLmdldFNlbGVjdG9yR3JvdXAoKS5yZW1vdmVBbGwoKX0scmVuZGVySW5uZXI6ZnVuY3Rpb24odSxoLGMsZCx0LGUsaSl7dmFyIGY9dGhpcy5nZXRDb250ZW50R3JvdXAoKSxwPVEoKSxnPWguZ2V0KCJzZWxlY3RlZE1vZGUiKSxtPVtdO2MuZWFjaFJhd1NlcmllcyhmdW5jdGlvbih0KXt0LmdldCgibGVnZW5kSG92ZXJMaW5rIil8fG0ucHVzaCh0LmlkKX0pLFNDKGguZ2V0RGF0YSgpLGZ1bmN0aW9uKGEscil7dmFyIHM9YS5nZXQoIm5hbWUiKTtpZih0aGlzLm5ld2xpbmVEaXNhYmxlZHx8IiIhPT1zJiYiXG4iIT09cyl7dmFyIHQ9Yy5nZXRTZXJpZXNCeU5hbWUocylbMF07aWYoIXAuZ2V0KHMpKWlmKHQpe3ZhciBlPXQuZ2V0RGF0YSgpLGk9ZS5nZXRWaXN1YWwoImNvbG9yIiksbj1lLmdldFZpc3VhbCgiYm9yZGVyQ29sb3IiKTsiZnVuY3Rpb24iPT10eXBlb2YgaSYmKGk9aSh0LmdldERhdGFQYXJhbXMoMCkpKSwiZnVuY3Rpb24iPT10eXBlb2YgbiYmKG49bih0LmdldERhdGFQYXJhbXMoMCkpKTt2YXIgbz1lLmdldFZpc3VhbCgibGVnZW5kU3ltYm9sIil8fCJyb3VuZFJlY3QiLGw9ZS5nZXRWaXN1YWwoInN5bWJvbCIpO3RoaXMuX2NyZWF0ZUl0ZW0ocyxyLGEsaCxvLGwsdSxpLG4sZykub24oImNsaWNrIixiQyhBQyxzLG51bGwsZCxtKSkub24oIm1vdXNlb3ZlciIsYkMoREMsdC5uYW1lLG51bGwsZCxtKSkub24oIm1vdXNlb3V0IixiQyhDQyx0Lm5hbWUsbnVsbCxkLG0pKSxwLnNldChzLCEwKX1lbHNlIGMuZWFjaFJhd1NlcmllcyhmdW5jdGlvbih0KXtpZighcC5nZXQocykmJnQubGVnZW5kVmlzdWFsUHJvdmlkZXIpe3ZhciBlPXQubGVnZW5kVmlzdWFsUHJvdmlkZXI7aWYoIWUuY29udGFpbk5hbWUocykpcmV0dXJuO3ZhciBpPWUuaW5kZXhPZk5hbWUocyksbj1lLmdldEl0ZW1WaXN1YWwoaSwiY29sb3IiKSxvPWUuZ2V0SXRlbVZpc3VhbChpLCJib3JkZXJDb2xvciIpO3RoaXMuX2NyZWF0ZUl0ZW0ocyxyLGEsaCwicm91bmRSZWN0IixudWxsLHUsbixvLGcpLm9uKCJjbGljayIsYkMoQUMsbnVsbCxzLGQsbSkpLm9uKCJtb3VzZW92ZXIiLGJDKERDLG51bGwscyxkLG0pKS5vbigibW91c2VvdXQiLGJDKENDLG51bGwscyxkLG0pKSxwLnNldChzLCEwKX19LHRoaXMpfWVsc2UgZi5hZGQobmV3IE1DKHtuZXdsaW5lOiEwfSkpfSx0aGlzKSx0JiZ0aGlzLl9jcmVhdGVTZWxlY3Rvcih0LGgsZCxlLGkpfSxfY3JlYXRlU2VsZWN0b3I6ZnVuY3Rpb24odCxhLHIsZSxpKXt2YXIgcz10aGlzLmdldFNlbGVjdG9yR3JvdXAoKTtTQyh0LGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0KXt2YXIgZT10LnR5cGUsaT1uZXcgRnIoe3N0eWxlOnt4OjAseTowLGFsaWduOiJjZW50ZXIiLHZlcnRpY2FsQWxpZ246Im1pZGRsZSJ9LG9uY2xpY2s6ZnVuY3Rpb24oKXtyLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJhbGwiPT09ZT8ibGVnZW5kQWxsU2VsZWN0IjoibGVnZW5kSW52ZXJzZVNlbGVjdCJ9KX19KTtzLmFkZChpKTt2YXIgbj1hLmdldE1vZGVsKCJzZWxlY3RvckxhYmVsIiksbz1hLmdldE1vZGVsKCJlbXBoYXNpcy5zZWxlY3RvckxhYmVsIik7JHMoaS5zdHlsZSxpLmhvdmVyU3R5bGU9e30sbixvLHtkZWZhdWx0VGV4dDp0LnRpdGxlLGlzUmVjdFRleHQ6ITF9KSxZcyhpKX0odCl9KX0sX2NyZWF0ZUl0ZW06ZnVuY3Rpb24odCxlLGksbixvLGEscixzLGwsdSl7dmFyIGg9bi5nZXQoIml0ZW1XaWR0aCIpLGM9bi5nZXQoIml0ZW1IZWlnaHQiKSxkPW4uZ2V0KCJpbmFjdGl2ZUNvbG9yIiksZj1uLmdldCgiaW5hY3RpdmVCb3JkZXJDb2xvciIpLHA9bi5nZXQoInN5bWJvbEtlZXBBc3BlY3QiKSxnPW4uZ2V0TW9kZWwoIml0ZW1TdHlsZSIpLG09bi5pc1NlbGVjdGVkKHQpLHY9bmV3IE1DLHk9aS5nZXRNb2RlbCgidGV4dFN0eWxlIikseD1pLmdldCgiaWNvbiIpLF89aS5nZXRNb2RlbCgidG9vbHRpcCIpLHc9Xy5wYXJlbnRNb2RlbCxiPW1nKG89eHx8bywwLDAsaCxjLG0/czpkLG51bGw9PXB8fHApO2lmKHYuYWRkKFRDKGIsbyxnLGwsZixtKSksIXgmJmEmJihhIT09b3x8Im5vbmUiPT09YSkpe3ZhciBTPS44KmM7Im5vbmUiPT09YSYmKGE9ImNpcmNsZSIpO3ZhciBNPW1nKGEsKGgtUykvMiwoYy1TKS8yLFMsUyxtP3M6ZCxudWxsPT1wfHxwKTt2LmFkZChUQyhNLGEsZyxsLGYsbSkpfXZhciBJPSJsZWZ0Ij09PXI/aCs1Oi01LFQ9cixBPW4uZ2V0KCJmb3JtYXR0ZXIiKSxEPXQ7InN0cmluZyI9PXR5cGVvZiBBJiZBP0Q9QS5yZXBsYWNlKCJ7bmFtZX0iLG51bGwhPXQ/dDoiIik6ImZ1bmN0aW9uIj09dHlwZW9mIEEmJihEPUEodCkpLHYuYWRkKG5ldyBGcih7c3R5bGU6UXMoe30seSx7dGV4dDpELHg6SSx5OmMvMix0ZXh0RmlsbDptP3kuZ2V0VGV4dENvbG9yKCk6ZCx0ZXh0QWxpZ246VCx0ZXh0VmVydGljYWxBbGlnbjoibWlkZGxlIn0pfSkpO3ZhciBDPW5ldyBpcyh7c2hhcGU6di5nZXRCb3VuZGluZ1JlY3QoKSxpbnZpc2libGU6ITAsdG9vbHRpcDpfLmdldCgic2hvdyIpP0woe2NvbnRlbnQ6dCxmb3JtYXR0ZXI6dy5nZXQoImZvcm1hdHRlciIsITApfHxmdW5jdGlvbigpe3JldHVybiB0fSxmb3JtYXR0ZXJQYXJhbXM6e2NvbXBvbmVudFR5cGU6ImxlZ2VuZCIsbGVnZW5kSW5kZXg6bi5jb21wb25lbnRJbmRleCxuYW1lOnQsJHZhcnM6WyJuYW1lIl19fSxfLm9wdGlvbik6bnVsbH0pO3JldHVybiB2LmFkZChDKSx2LmVhY2hDaGlsZChmdW5jdGlvbih0KXt0LnNpbGVudD0hMH0pLEMuc2lsZW50PSF1LHRoaXMuZ2V0Q29udGVudEdyb3VwKCkuYWRkKHYpLFlzKHYpLHYuX19sZWdlbmREYXRhSW5kZXg9ZSx2fSxsYXlvdXRJbm5lcjpmdW5jdGlvbih0LGUsaSxuLG8sYSl7dmFyIHI9dGhpcy5nZXRDb250ZW50R3JvdXAoKSxzPXRoaXMuZ2V0U2VsZWN0b3JHcm91cCgpO211KHQuZ2V0KCJvcmllbnQiKSxyLHQuZ2V0KCJpdGVtR2FwIiksaS53aWR0aCxpLmhlaWdodCk7dmFyIGw9ci5nZXRCb3VuZGluZ1JlY3QoKSx1PVstbC54LC1sLnldO2lmKG8pe211KCJob3Jpem9udGFsIixzLHQuZ2V0KCJzZWxlY3Rvckl0ZW1HYXAiLCEwKSk7dmFyIGg9cy5nZXRCb3VuZGluZ1JlY3QoKSxjPVstaC54LC1oLnldLGQ9dC5nZXQoInNlbGVjdG9yQnV0dG9uR2FwIiwhMCksZj10LmdldE9yaWVudCgpLmluZGV4LHA9MD09PWY/IndpZHRoIjoiaGVpZ2h0IixnPTA9PT1mPyJoZWlnaHQiOiJ3aWR0aCIsbT0wPT09Zj8ieSI6IngiOyJlbmQiPT09YT9jW2ZdKz1sW3BdK2Q6dVtmXSs9aFtwXStkLGNbMS1mXSs9bFtnXS8yLWhbZ10vMixzLmF0dHIoInBvc2l0aW9uIixjKSxyLmF0dHIoInBvc2l0aW9uIix1KTt2YXIgdj17eDowLHk6MH07cmV0dXJuIHZbcF09bFtwXStkK2hbcF0sdltnXT1NYXRoLm1heChsW2ddLGhbZ10pLHZbbV09TWF0aC5taW4oMCxoW21dK2NbMS1mXSksdn1yZXR1cm4gci5hdHRyKCJwb3NpdGlvbiIsdSksdGhpcy5ncm91cC5nZXRCb3VuZGluZ1JlY3QoKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5nZXRDb250ZW50R3JvdXAoKS5yZW1vdmVBbGwoKSx0aGlzLl9pc0ZpcnN0UmVuZGVyPSEwfX0pO2Z1bmN0aW9uIFRDKHQsZSxpLG4sbyxhKXt2YXIgcjtyZXR1cm4ibGluZSIhPT1lJiZlLmluZGV4T2YoImVtcHR5Iik8MD8ocj1pLmdldEl0ZW1TdHlsZSgpLHQuc3R5bGUuc3Ryb2tlPW4sYXx8KHIuc3Ryb2tlPW8pKTpyPWkuZ2V0SXRlbVN0eWxlKFsiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciJdKSx0LnNldFN0eWxlKHIpfWZ1bmN0aW9uIEFDKHQsZSxpLG4pe0NDKHQsZSxpLG4pLGkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImxlZ2VuZFRvZ2dsZVNlbGVjdCIsbmFtZTpudWxsIT10P3Q6ZX0pLERDKHQsZSxpLG4pfWZ1bmN0aW9uIERDKHQsZSxpLG4pe3ZhciBvPWkuZ2V0WnIoKS5zdG9yYWdlLmdldERpc3BsYXlMaXN0KClbMF07byYmby51c2VIb3ZlckxheWVyfHxpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJoaWdobGlnaHQiLHNlcmllc05hbWU6dCxuYW1lOmUsZXhjbHVkZVNlcmllc0lkOm59KX1mdW5jdGlvbiBDQyh0LGUsaSxuKXt2YXIgbz1pLmdldFpyKCkuc3RvcmFnZS5nZXREaXNwbGF5TGlzdCgpWzBdO28mJm8udXNlSG92ZXJMYXllcnx8aS5kaXNwYXRjaEFjdGlvbih7dHlwZToiZG93bnBsYXkiLHNlcmllc05hbWU6dCxuYW1lOmUsZXhjbHVkZVNlcmllc0lkOm59KX1wZihJZC5QUk9DRVNTT1IuU0VSSUVTX0ZJTFRFUixmdW5jdGlvbih0KXt2YXIgaT10LmZpbmRDb21wb25lbnRzKHttYWluVHlwZToibGVnZW5kIn0pO2kmJmkubGVuZ3RoJiZ0LmZpbHRlclNlcmllcyhmdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPGkubGVuZ3RoO2UrKylpZighaVtlXS5pc1NlbGVjdGVkKHQubmFtZSkpcmV0dXJuITE7cmV0dXJuITB9KX0pLFR1LnJlZ2lzdGVyU3ViVHlwZURlZmF1bHRlcigibGVnZW5kIixmdW5jdGlvbigpe3JldHVybiJwbGFpbiJ9KTt2YXIgTEM9X0MuZXh0ZW5kKHt0eXBlOiJsZWdlbmQuc2Nyb2xsIixzZXRTY3JvbGxEYXRhSW5kZXg6ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uc2Nyb2xsRGF0YUluZGV4PXR9LGRlZmF1bHRPcHRpb246e3Njcm9sbERhdGFJbmRleDowLHBhZ2VCdXR0b25JdGVtR2FwOjUscGFnZUJ1dHRvbkdhcDpudWxsLHBhZ2VCdXR0b25Qb3NpdGlvbjoiZW5kIixwYWdlRm9ybWF0dGVyOiJ7Y3VycmVudH0ve3RvdGFsfSIscGFnZUljb25zOntob3Jpem9udGFsOlsiTTAsMEwxMiwtMTBMMTIsMTB6IiwiTTAsMEwtMTIsLTEwTC0xMiwxMHoiXSx2ZXJ0aWNhbDpbIk0wLDBMMjAsMEwxMCwtMjB6IiwiTTAsMEwyMCwwTDEwLDIweiJdfSxwYWdlSWNvbkNvbG9yOiIjMmY0NTU0IixwYWdlSWNvbkluYWN0aXZlQ29sb3I6IiNhYWEiLHBhZ2VJY29uU2l6ZToxNSxwYWdlVGV4dFN0eWxlOntjb2xvcjoiIzMzMyJ9LGFuaW1hdGlvbkR1cmF0aW9uVXBkYXRlOjgwMH0saW5pdDpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1fdSh0KTtMQy5zdXBlckNhbGwodGhpcywiaW5pdCIsdCxlLGksbiksa0ModGhpcyx0LG8pfSxtZXJnZU9wdGlvbjpmdW5jdGlvbih0LGUpe0xDLnN1cGVyQ2FsbCh0aGlzLCJtZXJnZU9wdGlvbiIsdCxlKSxrQyh0aGlzLHRoaXMub3B0aW9uLHQpfX0pO2Z1bmN0aW9uIGtDKHQsZSxpKXt2YXIgbj1bMSwxXTtuW3QuZ2V0T3JpZW50KCkuaW5kZXhdPTAseHUoZSxpLHt0eXBlOiJib3giLGlnbm9yZVNpemU6bn0pfXZhciBQQz1JaSxOQz1bIndpZHRoIiwiaGVpZ2h0Il0sT0M9WyJ4IiwieSJdLEVDPUlDLmV4dGVuZCh7dHlwZToibGVnZW5kLnNjcm9sbCIsbmV3bGluZURpc2FibGVkOiEwLGluaXQ6ZnVuY3Rpb24oKXtFQy5zdXBlckNhbGwodGhpcywiaW5pdCIpLHRoaXMuX2N1cnJlbnRJbmRleD0wLHRoaXMuZ3JvdXAuYWRkKHRoaXMuX2NvbnRhaW5lckdyb3VwPW5ldyBQQyksdGhpcy5fY29udGFpbmVyR3JvdXAuYWRkKHRoaXMuZ2V0Q29udGVudEdyb3VwKCkpLHRoaXMuZ3JvdXAuYWRkKHRoaXMuX2NvbnRyb2xsZXJHcm91cD1uZXcgUEMpLHRoaXMuX3Nob3dDb250cm9sbGVyfSxyZXNldElubmVyOmZ1bmN0aW9uKCl7RUMuc3VwZXJDYWxsKHRoaXMsInJlc2V0SW5uZXIiKSx0aGlzLl9jb250cm9sbGVyR3JvdXAucmVtb3ZlQWxsKCksdGhpcy5fY29udGFpbmVyR3JvdXAucmVtb3ZlQ2xpcFBhdGgoKSx0aGlzLl9jb250YWluZXJHcm91cC5fX3JlY3RTaXplPW51bGx9LHJlbmRlcklubmVyOmZ1bmN0aW9uKHQsbyxlLGEsaSxuLHIpe3ZhciBzPXRoaXM7RUMuc3VwZXJDYWxsKHRoaXMsInJlbmRlcklubmVyIix0LG8sZSxhLGksbixyKTt2YXIgbD10aGlzLl9jb250cm9sbGVyR3JvdXAsdT1vLmdldCgicGFnZUljb25TaXplIiwhMCk7ayh1KXx8KHU9W3UsdV0pLGMoInBhZ2VQcmV2IiwwKTt2YXIgaD1vLmdldE1vZGVsKCJwYWdlVGV4dFN0eWxlIik7ZnVuY3Rpb24gYyh0LGUpe3ZhciBpPXQrIkRhdGFJbmRleCIsbj1wbChvLmdldCgicGFnZUljb25zIiwhMClbby5nZXRPcmllbnQoKS5uYW1lXVtlXSx7b25jbGljazpBKHMuX3BhZ2VHbyxzLGksbyxhKX0se3g6LXVbMF0vMix5Oi11WzFdLzIsd2lkdGg6dVswXSxoZWlnaHQ6dVsxXX0pO24ubmFtZT10LGwuYWRkKG4pfWwuYWRkKG5ldyBGcih7bmFtZToicGFnZVRleHQiLHN0eWxlOnt0ZXh0RmlsbDpoLmdldFRleHRDb2xvcigpLGZvbnQ6aC5nZXRGb250KCksdGV4dFZlcnRpY2FsQWxpZ246Im1pZGRsZSIsdGV4dEFsaWduOiJjZW50ZXIifSxzaWxlbnQ6ITB9KSksYygicGFnZU5leHQiLDEpfSxsYXlvdXRJbm5lcjpmdW5jdGlvbih0LGUsaSxuLG8sYSl7dmFyIHI9dGhpcy5nZXRTZWxlY3Rvckdyb3VwKCkscz10LmdldE9yaWVudCgpLmluZGV4LGw9TkNbc10sdT1PQ1tzXSxoPU5DWzEtc10sYz1PQ1sxLXNdO28mJm11KCJob3Jpem9udGFsIixyLHQuZ2V0KCJzZWxlY3Rvckl0ZW1HYXAiLCEwKSk7dmFyIGQ9dC5nZXQoInNlbGVjdG9yQnV0dG9uR2FwIiwhMCksZj1yLmdldEJvdW5kaW5nUmVjdCgpLHA9Wy1mLngsLWYueV0sZz1EKGkpO28mJihnW2xdPWlbbF0tZltsXS1kKTt2YXIgbT10aGlzLl9sYXlvdXRDb250ZW50QW5kQ29udHJvbGxlcih0LG4sZyxzLGwsaCxjKTtpZihvKXtpZigiZW5kIj09PWEpcFtzXSs9bVtsXStkO2Vsc2V7dmFyIHY9ZltsXStkO3Bbc10tPXYsbVt1XS09dn1tW2xdKz1mW2xdK2QscFsxLXNdKz1tW2NdK21baF0vMi1mW2hdLzIsbVtoXT1NYXRoLm1heChtW2hdLGZbaF0pLG1bY109TWF0aC5taW4obVtjXSxmW2NdK3BbMS1zXSksci5hdHRyKCJwb3NpdGlvbiIscCl9cmV0dXJuIG19LF9sYXlvdXRDb250ZW50QW5kQ29udHJvbGxlcjpmdW5jdGlvbih0LGUsaSxuLG8sYSxyKXt2YXIgcz10aGlzLmdldENvbnRlbnRHcm91cCgpLGw9dGhpcy5fY29udGFpbmVyR3JvdXAsdT10aGlzLl9jb250cm9sbGVyR3JvdXA7bXUodC5nZXQoIm9yaWVudCIpLHMsdC5nZXQoIml0ZW1HYXAiKSxuP2kud2lkdGg6bnVsbCxuP251bGw6aS5oZWlnaHQpLG11KCJob3Jpem9udGFsIix1LHQuZ2V0KCJwYWdlQnV0dG9uSXRlbUdhcCIsITApKTt2YXIgaD1zLmdldEJvdW5kaW5nUmVjdCgpLGM9dS5nZXRCb3VuZGluZ1JlY3QoKSxkPXRoaXMuX3Nob3dDb250cm9sbGVyPWhbb10+aVtvXSxmPVstaC54LC1oLnldO2V8fChmW25dPXMucG9zaXRpb25bbl0pO3ZhciBwPVswLDBdLGc9Wy1jLngsLWMueV0sbT1IKHQuZ2V0KCJwYWdlQnV0dG9uR2FwIiwhMCksdC5nZXQoIml0ZW1HYXAiLCEwKSk7ZCYmKCJlbmQiPT09dC5nZXQoInBhZ2VCdXR0b25Qb3NpdGlvbiIsITApP2dbbl0rPWlbb10tY1tvXTpwW25dKz1jW29dK20pO2dbMS1uXSs9aFthXS8yLWNbYV0vMixzLmF0dHIoInBvc2l0aW9uIixmKSxsLmF0dHIoInBvc2l0aW9uIixwKSx1LmF0dHIoInBvc2l0aW9uIixnKTt2YXIgdj17eDowLHk6MH07aWYodltvXT1kP2lbb106aFtvXSx2W2FdPU1hdGgubWF4KGhbYV0sY1thXSksdltyXT1NYXRoLm1pbigwLGNbcl0rZ1sxLW5dKSxsLl9fcmVjdFNpemU9aVtvXSxkKXt2YXIgeT17eDowLHk6MH07eVtvXT1NYXRoLm1heChpW29dLWNbb10tbSwwKSx5W2FdPXZbYV0sbC5zZXRDbGlwUGF0aChuZXcgaXMoe3NoYXBlOnl9KSksbC5fX3JlY3RTaXplPXlbb119ZWxzZSB1LmVhY2hDaGlsZChmdW5jdGlvbih0KXt0LmF0dHIoe2ludmlzaWJsZTohMCxzaWxlbnQ6ITB9KX0pO3ZhciB4PXRoaXMuX2dldFBhZ2VJbmZvKHQpO3JldHVybiBudWxsIT14LnBhZ2VJbmRleCYmc2wocyx7cG9zaXRpb246eC5jb250ZW50UG9zaXRpb259LGQmJnQpLHRoaXMuX3VwZGF0ZVBhZ2VJbmZvVmlldyh0LHgpLHZ9LF9wYWdlR286ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX2dldFBhZ2VJbmZvKGUpW3RdO251bGwhPW4mJmkuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImxlZ2VuZFNjcm9sbCIsc2Nyb2xsRGF0YUluZGV4Om4sbGVnZW5kSWQ6ZS5pZH0pfSxfdXBkYXRlUGFnZUluZm9WaWV3OmZ1bmN0aW9uKG4sbyl7dmFyIGE9dGhpcy5fY29udHJvbGxlckdyb3VwO0UoWyJwYWdlUHJldiIsInBhZ2VOZXh0Il0sZnVuY3Rpb24odCl7dmFyIGU9bnVsbCE9b1t0KyJEYXRhSW5kZXgiXSxpPWEuY2hpbGRPZk5hbWUodCk7aSYmKGkuc2V0U3R5bGUoImZpbGwiLGU/bi5nZXQoInBhZ2VJY29uQ29sb3IiLCEwKTpuLmdldCgicGFnZUljb25JbmFjdGl2ZUNvbG9yIiwhMCkpLGkuY3Vyc29yPWU/InBvaW50ZXIiOiJkZWZhdWx0Iil9KTt2YXIgdD1hLmNoaWxkT2ZOYW1lKCJwYWdlVGV4dCIpLGU9bi5nZXQoInBhZ2VGb3JtYXR0ZXIiKSxpPW8ucGFnZUluZGV4LHI9bnVsbCE9aT9pKzE6MCxzPW8ucGFnZUNvdW50O3QmJmUmJnQuc2V0U3R5bGUoInRleHQiLHooZSk/ZS5yZXBsYWNlKCJ7Y3VycmVudH0iLHIpLnJlcGxhY2UoInt0b3RhbH0iLHMpOmUoe2N1cnJlbnQ6cix0b3RhbDpzfSkpfSxfZ2V0UGFnZUluZm86ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQoInNjcm9sbERhdGFJbmRleCIsITApLGk9dGhpcy5nZXRDb250ZW50R3JvdXAoKSxuPXRoaXMuX2NvbnRhaW5lckdyb3VwLl9fcmVjdFNpemUsbz10LmdldE9yaWVudCgpLmluZGV4LGE9TkNbb10scj1PQ1tvXSxzPXRoaXMuX2ZpbmRUYXJnZXRJdGVtSW5kZXgoZSksbD1pLmNoaWxkcmVuKCksdT1sW3NdLGg9bC5sZW5ndGgsYz1oPzE6MCxkPXtjb250ZW50UG9zaXRpb246aS5wb3NpdGlvbi5zbGljZSgpLHBhZ2VDb3VudDpjLHBhZ2VJbmRleDpjLTEscGFnZVByZXZEYXRhSW5kZXg6bnVsbCxwYWdlTmV4dERhdGFJbmRleDpudWxsfTtpZighdSlyZXR1cm4gZDt2YXIgZj15KHUpO2QuY29udGVudFBvc2l0aW9uW29dPS1mLnM7Zm9yKHZhciBwPXMrMSxnPWYsbT1mLHY9bnVsbDtwPD1oOysrcCkoISh2PXkobFtwXSkpJiZtLmU+Zy5zK258fHYmJiF4KHYsZy5zKSkmJihnPW0uaT5nLmk/bTp2KSYmKG51bGw9PWQucGFnZU5leHREYXRhSW5kZXgmJihkLnBhZ2VOZXh0RGF0YUluZGV4PWcuaSksKytkLnBhZ2VDb3VudCksbT12O2ZvcihwPXMtMSxnPWYsbT1mLHY9bnVsbDstMTw9cDstLXApKHY9eShsW3BdKSkmJngobSx2LnMpfHwhKGcuaTxtLmkpfHwobT1nLG51bGw9PWQucGFnZVByZXZEYXRhSW5kZXgmJihkLnBhZ2VQcmV2RGF0YUluZGV4PWcuaSksKytkLnBhZ2VDb3VudCwrK2QucGFnZUluZGV4KSxnPXY7cmV0dXJuIGQ7ZnVuY3Rpb24geSh0KXtpZih0KXt2YXIgZT10LmdldEJvdW5kaW5nUmVjdCgpLGk9ZVtyXSt0LnBvc2l0aW9uW29dO3JldHVybntzOmksZTppK2VbYV0saTp0Ll9fbGVnZW5kRGF0YUluZGV4fX19ZnVuY3Rpb24geCh0LGUpe3JldHVybiB0LmU+PWUmJnQuczw9ZStufX0sX2ZpbmRUYXJnZXRJdGVtSW5kZXg6ZnVuY3Rpb24obil7dmFyIG8sYSx0PXRoaXMuZ2V0Q29udGVudEdyb3VwKCk7cmV0dXJuIHRoaXMuX3Nob3dDb250cm9sbGVyJiZ0LmVhY2hDaGlsZChmdW5jdGlvbih0LGUpe3ZhciBpPXQuX19sZWdlbmREYXRhSW5kZXg7bnVsbD09YSYmbnVsbCE9aSYmKGE9ZSksaT09PW4mJihvPWUpfSksbnVsbCE9bz9vOmF9fSk7Z2YoImxlZ2VuZFNjcm9sbCIsImxlZ2VuZHNjcm9sbCIsZnVuY3Rpb24odCxlKXt2YXIgaT10LnNjcm9sbERhdGFJbmRleDtudWxsIT1pJiZlLmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJsZWdlbmQiLHN1YlR5cGU6InNjcm9sbCIscXVlcnk6dH0sZnVuY3Rpb24odCl7dC5zZXRTY3JvbGxEYXRhSW5kZXgoaSl9KX0pO1dBLmV4dGVuZCh7dHlwZToiZGF0YVpvb20uc2xpZGVyIixsYXlvdXRNb2RlOiJib3giLGRlZmF1bHRPcHRpb246e3Nob3c6ITAscmlnaHQ6InBoIix0b3A6InBoIix3aWR0aDoicGgiLGhlaWdodDoicGgiLGxlZnQ6bnVsbCxib3R0b206bnVsbCxiYWNrZ3JvdW5kQ29sb3I6InJnYmEoNDcsNjksODQsMCkiLGRhdGFCYWNrZ3JvdW5kOntsaW5lU3R5bGU6e2NvbG9yOiIjMmY0NTU0Iix3aWR0aDouNSxvcGFjaXR5Oi4zfSxhcmVhU3R5bGU6e2NvbG9yOiJyZ2JhKDQ3LDY5LDg0LDAuMykiLG9wYWNpdHk6LjN9fSxib3JkZXJDb2xvcjoiI2RkZCIsZmlsbGVyQ29sb3I6InJnYmEoMTY3LDE4MywyMDQsMC40KSIsaGFuZGxlSWNvbjoiTTguMiwxMy42VjMuOUg2LjN2OS43SDMuMXYxNC45aDMuM3Y5LjdoMS44di05LjdoMy4zVjEzLjZIOC4yeiBNOS43LDI0LjRINC44di0xLjRoNC45VjI0LjR6IE05LjcsMTkuMUg0Ljh2LTEuNGg0LjlWMTkuMXoiLGhhbmRsZVNpemU6IjEwMCUiLGhhbmRsZVN0eWxlOntjb2xvcjoiI2E3YjdjYyJ9LGxhYmVsUHJlY2lzaW9uOm51bGwsbGFiZWxGb3JtYXR0ZXI6bnVsbCxzaG93RGV0YWlsOiEwLHNob3dEYXRhU2hhZG93OiJhdXRvIixyZWFsdGltZTohMCx6b29tTG9jazohMSx0ZXh0U3R5bGU6e2NvbG9yOiIjMzMzIn19fSk7dmFyIHpDPWlzLFJDPWtsLEJDPU9sLFZDPUEsR0M9RSxGQz0iaG9yaXpvbnRhbCIsV0M9InZlcnRpY2FsIixIQz1bImxpbmUiLCJiYXIiLCJjYW5kbGVzdGljayIsInNjYXR0ZXIiXSxaQz1VQS5leHRlbmQoe3R5cGU6ImRhdGFab29tLnNsaWRlciIsaW5pdDpmdW5jdGlvbih0LGUpe3RoaXMuX2Rpc3BsYXlhYmxlcz17fSx0aGlzLl9vcmllbnQsdGhpcy5fcmFuZ2UsdGhpcy5faGFuZGxlRW5kcyx0aGlzLl9zaXplLHRoaXMuX2hhbmRsZVdpZHRoLHRoaXMuX2hhbmRsZUhlaWdodCx0aGlzLl9sb2NhdGlvbix0aGlzLl9kcmFnZ2luZyx0aGlzLl9kYXRhU2hhZG93SW5mbyx0aGlzLmFwaT1lfSxyZW5kZXI6ZnVuY3Rpb24odCxlLGksbil7WkMuc3VwZXJBcHBseSh0aGlzLCJyZW5kZXIiLGFyZ3VtZW50cyksVGModGhpcywiX2Rpc3BhdGNoWm9vbUFjdGlvbiIsdGhpcy5kYXRhWm9vbU1vZGVsLmdldCgidGhyb3R0bGUiKSwiZml4UmF0ZSIpLHRoaXMuX29yaWVudD10LmdldCgib3JpZW50IiksITEhPT10aGlzLmRhdGFab29tTW9kZWwuZ2V0KCJzaG93Iik/KG4mJiJkYXRhWm9vbSI9PT1uLnR5cGUmJm4uZnJvbT09PXRoaXMudWlkfHx0aGlzLl9idWlsZFZpZXcoKSx0aGlzLl91cGRhdGVWaWV3KCkpOnRoaXMuZ3JvdXAucmVtb3ZlQWxsKCl9LHJlbW92ZTpmdW5jdGlvbigpe1pDLnN1cGVyQXBwbHkodGhpcywicmVtb3ZlIixhcmd1bWVudHMpLEFjKHRoaXMsIl9kaXNwYXRjaFpvb21BY3Rpb24iKX0sZGlzcG9zZTpmdW5jdGlvbigpe1pDLnN1cGVyQXBwbHkodGhpcywiZGlzcG9zZSIsYXJndW1lbnRzKSxBYyh0aGlzLCJfZGlzcGF0Y2hab29tQWN0aW9uIil9LF9idWlsZFZpZXc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdyb3VwO3QucmVtb3ZlQWxsKCksdGhpcy5fcmVzZXRMb2NhdGlvbigpLHRoaXMuX3Jlc2V0SW50ZXJ2YWwoKTt2YXIgZT10aGlzLl9kaXNwbGF5YWJsZXMuYmFyR3JvdXA9bmV3IElpO3RoaXMuX3JlbmRlckJhY2tncm91bmQoKSx0aGlzLl9yZW5kZXJIYW5kbGUoKSx0aGlzLl9yZW5kZXJEYXRhU2hhZG93KCksdC5hZGQoZSksdGhpcy5fcG9zaXRpb25Hcm91cCgpfSxfcmVzZXRMb2NhdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZGF0YVpvb21Nb2RlbCxlPXRoaXMuYXBpLGk9dGhpcy5fZmluZENvb3JkUmVjdCgpLG49e3dpZHRoOmUuZ2V0V2lkdGgoKSxoZWlnaHQ6ZS5nZXRIZWlnaHQoKX0sbz10aGlzLl9vcmllbnQ9PT1GQz97cmlnaHQ6bi53aWR0aC1pLngtaS53aWR0aCx0b3A6bi5oZWlnaHQtMzAtNyx3aWR0aDppLndpZHRoLGhlaWdodDozMH06e3JpZ2h0OjcsdG9wOmkueSx3aWR0aDozMCxoZWlnaHQ6aS5oZWlnaHR9LGE9X3UodC5vcHRpb24pO0UoWyJyaWdodCIsInRvcCIsIndpZHRoIiwiaGVpZ2h0Il0sZnVuY3Rpb24odCl7InBoIj09PWFbdF0mJihhW3RdPW9bdF0pfSk7dmFyIHI9dnUoYSxuLHQucGFkZGluZyk7dGhpcy5fbG9jYXRpb249e3g6ci54LHk6ci55fSx0aGlzLl9zaXplPVtyLndpZHRoLHIuaGVpZ2h0XSx0aGlzLl9vcmllbnQ9PT1XQyYmdGhpcy5fc2l6ZS5yZXZlcnNlKCl9LF9wb3NpdGlvbkdyb3VwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5ncm91cCxlPXRoaXMuX2xvY2F0aW9uLGk9dGhpcy5fb3JpZW50LG49dGhpcy5kYXRhWm9vbU1vZGVsLmdldEZpcnN0VGFyZ2V0QXhpc01vZGVsKCksbz1uJiZuLmdldCgiaW52ZXJzZSIpLGE9dGhpcy5fZGlzcGxheWFibGVzLmJhckdyb3VwLHI9KHRoaXMuX2RhdGFTaGFkb3dJbmZvfHx7fSkub3RoZXJBeGlzSW52ZXJzZTthLmF0dHIoaSE9PUZDfHxvP2k9PT1GQyYmbz97c2NhbGU6cj9bLTEsMV06Wy0xLC0xXX06aSE9PVdDfHxvP3tzY2FsZTpyP1stMSwtMV06Wy0xLDFdLHJvdGF0aW9uOk1hdGguUEkvMn06e3NjYWxlOnI/WzEsLTFdOlsxLDFdLHJvdGF0aW9uOk1hdGguUEkvMn06e3NjYWxlOnI/WzEsMV06WzEsLTFdfSk7dmFyIHM9dC5nZXRCb3VuZGluZ1JlY3QoW2FdKTt0LmF0dHIoInBvc2l0aW9uIixbZS54LXMueCxlLnktcy55XSl9LF9nZXRWaWV3RXh0ZW50OmZ1bmN0aW9uKCl7cmV0dXJuWzAsdGhpcy5fc2l6ZVswXV19LF9yZW5kZXJCYWNrZ3JvdW5kOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhWm9vbU1vZGVsLGU9dGhpcy5fc2l6ZSxpPXRoaXMuX2Rpc3BsYXlhYmxlcy5iYXJHcm91cDtpLmFkZChuZXcgekMoe3NpbGVudDohMCxzaGFwZTp7eDowLHk6MCx3aWR0aDplWzBdLGhlaWdodDplWzFdfSxzdHlsZTp7ZmlsbDp0LmdldCgiYmFja2dyb3VuZENvbG9yIil9LHoyOi00MH0pKSxpLmFkZChuZXcgekMoe3NoYXBlOnt4OjAseTowLHdpZHRoOmVbMF0saGVpZ2h0OmVbMV19LHN0eWxlOntmaWxsOiJ0cmFuc3BhcmVudCJ9LHoyOjAsb25jbGljazpBKHRoaXMuX29uQ2xpY2tQYW5lbENsaWNrLHRoaXMpfSkpfSxfcmVuZGVyRGF0YVNoYWRvdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGFTaGFkb3dJbmZvPXRoaXMuX3ByZXBhcmVEYXRhU2hhZG93SW5mbygpO2lmKHQpe3ZhciBlPXRoaXMuX3NpemUsaT10LnNlcmllcyxuPWkuZ2V0UmF3RGF0YSgpLG89aS5nZXRTaGFkb3dEaW0/aS5nZXRTaGFkb3dEaW0oKTp0Lm90aGVyRGltO2lmKG51bGwhPW8pe3ZhciBhPW4uZ2V0RGF0YUV4dGVudChvKSxyPS4zKihhWzFdLWFbMF0pO2E9W2FbMF0tcixhWzFdK3JdO3ZhciBzLGw9WzAsZVsxXV0sdT1bMCxlWzBdXSxoPVtbZVswXSwwXSxbMCwwXV0sYz1bXSxkPXVbMV0vKG4uY291bnQoKS0xKSxmPTAscD1NYXRoLnJvdW5kKG4uY291bnQoKS9lWzBdKTtuLmVhY2goW29dLGZ1bmN0aW9uKHQsZSl7aWYoMDxwJiZlJXApZis9ZDtlbHNle3ZhciBpPW51bGw9PXR8fGlzTmFOKHQpfHwiIj09PXQsbj1pPzA6UkModCxhLGwsITApO2kmJiFzJiZlPyhoLnB1c2goW2hbaC5sZW5ndGgtMV1bMF0sMF0pLGMucHVzaChbY1tjLmxlbmd0aC0xXVswXSwwXSkpOiFpJiZzJiYoaC5wdXNoKFtmLDBdKSxjLnB1c2goW2YsMF0pKSxoLnB1c2goW2Ysbl0pLGMucHVzaChbZixuXSksZis9ZCxzPWl9fSk7dmFyIGc9dGhpcy5kYXRhWm9vbU1vZGVsO3RoaXMuX2Rpc3BsYXlhYmxlcy5iYXJHcm91cC5hZGQobmV3IHFyKHtzaGFwZTp7cG9pbnRzOmh9LHN0eWxlOkMoe2ZpbGw6Zy5nZXQoImRhdGFCYWNrZ3JvdW5kQ29sb3IiKX0sZy5nZXRNb2RlbCgiZGF0YUJhY2tncm91bmQuYXJlYVN0eWxlIikuZ2V0QXJlYVN0eWxlKCkpLHNpbGVudDohMCx6MjotMjB9KSksdGhpcy5fZGlzcGxheWFibGVzLmJhckdyb3VwLmFkZChuZXcgS3Ioe3NoYXBlOntwb2ludHM6Y30sc3R5bGU6Zy5nZXRNb2RlbCgiZGF0YUJhY2tncm91bmQubGluZVN0eWxlIikuZ2V0TGluZVN0eWxlKCksc2lsZW50OiEwLHoyOi0xOX0pKX19fSxfcHJlcGFyZURhdGFTaGFkb3dJbmZvOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhWm9vbU1vZGVsLHM9dC5nZXQoInNob3dEYXRhU2hhZG93Iik7aWYoITEhPT1zKXt2YXIgbCx1PXRoaXMuZWNNb2RlbDtyZXR1cm4gdC5lYWNoVGFyZ2V0QXhpcyhmdW5jdGlvbihhLHIpe0UodC5nZXRBeGlzUHJveHkoYS5uYW1lLHIpLmdldFRhcmdldFNlcmllc01vZGVscygpLGZ1bmN0aW9uKHQpe2lmKCEobHx8ITAhPT1zJiZfKEhDLHQuZ2V0KCJ0eXBlIikpPDApKXt2YXIgZSxpPXUuZ2V0Q29tcG9uZW50KGEuYXhpcyxyKS5heGlzLG49ZnVuY3Rpb24odCl7cmV0dXJue3g6InkiLHk6IngiLHJhZGl1czoiYW5nbGUiLGFuZ2xlOiJyYWRpdXMifVt0XX0oYS5uYW1lKSxvPXQuY29vcmRpbmF0ZVN5c3RlbTtudWxsIT1uJiZvLmdldE90aGVyQXhpcyYmKGU9by5nZXRPdGhlckF4aXMoaSkuaW52ZXJzZSksbj10LmdldERhdGEoKS5tYXBEaW1lbnNpb24obiksbD17dGhpc0F4aXM6aSxzZXJpZXM6dCx0aGlzRGltOmEubmFtZSxvdGhlckRpbTpuLG90aGVyQXhpc0ludmVyc2U6ZX19fSx0aGlzKX0sdGhpcyksbH19LF9yZW5kZXJIYW5kbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kaXNwbGF5YWJsZXMsYT10LmhhbmRsZXM9W10scj10LmhhbmRsZUxhYmVscz1bXSxzPXRoaXMuX2Rpc3BsYXlhYmxlcy5iYXJHcm91cCxlPXRoaXMuX3NpemUsbD10aGlzLmRhdGFab29tTW9kZWw7cy5hZGQodC5maWxsZXI9bmV3IHpDKHtkcmFnZ2FibGU6ITAsY3Vyc29yOlVDKHRoaXMuX29yaWVudCksZHJpZnQ6VkModGhpcy5fb25EcmFnTW92ZSx0aGlzLCJhbGwiKSxvbmRyYWdzdGFydDpWQyh0aGlzLl9zaG93RGF0YUluZm8sdGhpcywhMCksb25kcmFnZW5kOlZDKHRoaXMuX29uRHJhZ0VuZCx0aGlzKSxvbm1vdXNlb3ZlcjpWQyh0aGlzLl9zaG93RGF0YUluZm8sdGhpcywhMCksb25tb3VzZW91dDpWQyh0aGlzLl9zaG93RGF0YUluZm8sdGhpcywhMSksc3R5bGU6e2ZpbGw6bC5nZXQoImZpbGxlckNvbG9yIiksdGV4dFBvc2l0aW9uOiJpbnNpZGUifX0pKSxzLmFkZChuZXcgekMoe3NpbGVudDohMCxzdWJQaXhlbE9wdGltaXplOiEwLHNoYXBlOnt4OjAseTowLHdpZHRoOmVbMF0saGVpZ2h0OmVbMV19LHN0eWxlOntzdHJva2U6bC5nZXQoImRhdGFCYWNrZ3JvdW5kQ29sb3IiKXx8bC5nZXQoImJvcmRlckNvbG9yIiksbGluZVdpZHRoOjEsZmlsbDoicmdiYSgwLDAsMCwwKSJ9fSkpLEdDKFswLDFdLGZ1bmN0aW9uKHQpe3ZhciBlPXBsKGwuZ2V0KCJoYW5kbGVJY29uIikse2N1cnNvcjpVQyh0aGlzLl9vcmllbnQpLGRyYWdnYWJsZTohMCxkcmlmdDpWQyh0aGlzLl9vbkRyYWdNb3ZlLHRoaXMsdCksb25kcmFnZW5kOlZDKHRoaXMuX29uRHJhZ0VuZCx0aGlzKSxvbm1vdXNlb3ZlcjpWQyh0aGlzLl9zaG93RGF0YUluZm8sdGhpcywhMCksb25tb3VzZW91dDpWQyh0aGlzLl9zaG93RGF0YUluZm8sdGhpcywhMSl9LHt4Oi0xLHk6MCx3aWR0aDoyLGhlaWdodDoyfSksaT1lLmdldEJvdW5kaW5nUmVjdCgpO3RoaXMuX2hhbmRsZUhlaWdodD1QbChsLmdldCgiaGFuZGxlU2l6ZSIpLHRoaXMuX3NpemVbMV0pLHRoaXMuX2hhbmRsZVdpZHRoPWkud2lkdGgvaS5oZWlnaHQqdGhpcy5faGFuZGxlSGVpZ2h0LGUuc2V0U3R5bGUobC5nZXRNb2RlbCgiaGFuZGxlU3R5bGUiKS5nZXRJdGVtU3R5bGUoKSk7dmFyIG49bC5nZXQoImhhbmRsZUNvbG9yIik7bnVsbCE9biYmKGUuc3R5bGUuZmlsbD1uKSxzLmFkZChhW3RdPWUpO3ZhciBvPWwudGV4dFN0eWxlTW9kZWw7dGhpcy5ncm91cC5hZGQoclt0XT1uZXcgRnIoe3NpbGVudDohMCxpbnZpc2libGU6ITAsc3R5bGU6e3g6MCx5OjAsdGV4dDoiIix0ZXh0VmVydGljYWxBbGlnbjoibWlkZGxlIix0ZXh0QWxpZ246ImNlbnRlciIsdGV4dEZpbGw6by5nZXRUZXh0Q29sb3IoKSx0ZXh0Rm9udDpvLmdldEZvbnQoKX0sejI6MTB9KSl9LHRoaXMpfSxfcmVzZXRJbnRlcnZhbDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3JhbmdlPXRoaXMuZGF0YVpvb21Nb2RlbC5nZXRQZXJjZW50UmFuZ2UoKSxlPXRoaXMuX2dldFZpZXdFeHRlbnQoKTt0aGlzLl9oYW5kbGVFbmRzPVtSQyh0WzBdLFswLDEwMF0sZSwhMCksUkModFsxXSxbMCwxMDBdLGUsITApXX0sX3VwZGF0ZUludGVydmFsOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5kYXRhWm9vbU1vZGVsLG49dGhpcy5faGFuZGxlRW5kcyxvPXRoaXMuX2dldFZpZXdFeHRlbnQoKSxhPWkuZmluZFJlcHJlc2VudGF0aXZlQXhpc1Byb3h5KCkuZ2V0TWluTWF4U3BhbigpLHI9WzAsMTAwXTtXdyhlLG4sbyxpLmdldCgiem9vbUxvY2siKT8iYWxsIjp0LG51bGwhPWEubWluU3Bhbj9SQyhhLm1pblNwYW4scixvLCEwKTpudWxsLG51bGwhPWEubWF4U3Bhbj9SQyhhLm1heFNwYW4scixvLCEwKTpudWxsKTt2YXIgcz10aGlzLl9yYW5nZSxsPXRoaXMuX3JhbmdlPUJDKFtSQyhuWzBdLG8sciwhMCksUkMoblsxXSxvLHIsITApXSk7cmV0dXJuIXN8fHNbMF0hPT1sWzBdfHxzWzFdIT09bFsxXX0sX3VwZGF0ZVZpZXc6ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5fZGlzcGxheWFibGVzLG89dGhpcy5faGFuZGxlRW5kcyxlPUJDKG8uc2xpY2UoKSksYT10aGlzLl9zaXplO0dDKFswLDFdLGZ1bmN0aW9uKHQpe3ZhciBlPW4uaGFuZGxlc1t0XSxpPXRoaXMuX2hhbmRsZUhlaWdodDtlLmF0dHIoe3NjYWxlOltpLzIsaS8yXSxwb3NpdGlvbjpbb1t0XSxhWzFdLzItaS8yXX0pfSx0aGlzKSxuLmZpbGxlci5zZXRTaGFwZSh7eDplWzBdLHk6MCx3aWR0aDplWzFdLWVbMF0saGVpZ2h0OmFbMV19KSx0aGlzLl91cGRhdGVEYXRhSW5mbyh0KX0sX3VwZGF0ZURhdGFJbmZvOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZGF0YVpvb21Nb2RlbCxhPXRoaXMuX2Rpc3BsYXlhYmxlcyxyPWEuaGFuZGxlTGFiZWxzLHM9dGhpcy5fb3JpZW50LGw9WyIiLCIiXTtpZihlLmdldCgic2hvd0RldGFpbCIpKXt2YXIgaT1lLmZpbmRSZXByZXNlbnRhdGl2ZUF4aXNQcm94eSgpO2lmKGkpe3ZhciBuPWkuZ2V0QXhpc01vZGVsKCkuYXhpcyxvPXRoaXMuX3JhbmdlLHU9dD9pLmNhbGN1bGF0ZURhdGFXaW5kb3coe3N0YXJ0Om9bMF0sZW5kOm9bMV19KS52YWx1ZVdpbmRvdzppLmdldERhdGFWYWx1ZVdpbmRvdygpO2w9W3RoaXMuX2Zvcm1hdExhYmVsKHVbMF0sbiksdGhpcy5fZm9ybWF0TGFiZWwodVsxXSxuKV19fXZhciBoPUJDKHRoaXMuX2hhbmRsZUVuZHMuc2xpY2UoKSk7ZnVuY3Rpb24gYyh0KXt2YXIgZT11bChhLmhhbmRsZXNbdF0ucGFyZW50LHRoaXMuZ3JvdXApLGk9Y2woMD09PXQ/InJpZ2h0IjoibGVmdCIsZSksbj10aGlzLl9oYW5kbGVXaWR0aC8yKzUsbz1obChbaFt0XSsoMD09PXQ/LW46biksdGhpcy5fc2l6ZVsxXS8yXSxlKTtyW3RdLnNldFN0eWxlKHt4Om9bMF0seTpvWzFdLHRleHRWZXJ0aWNhbEFsaWduOnM9PT1GQz8ibWlkZGxlIjppLHRleHRBbGlnbjpzPT09RkM/aToiY2VudGVyIix0ZXh0OmxbdF19KX1jLmNhbGwodGhpcywwKSxjLmNhbGwodGhpcywxKX0sX2Zvcm1hdExhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5kYXRhWm9vbU1vZGVsLG49aS5nZXQoImxhYmVsRm9ybWF0dGVyIiksbz1pLmdldCgibGFiZWxQcmVjaXNpb24iKTtudWxsIT1vJiYiYXV0byIhPT1vfHwobz1lLmdldFBpeGVsUHJlY2lzaW9uKCkpO3ZhciBhPW51bGw9PXR8fGlzTmFOKHQpPyIiOiJjYXRlZ29yeSI9PT1lLnR5cGV8fCJ0aW1lIj09PWUudHlwZT9lLnNjYWxlLmdldExhYmVsKE1hdGgucm91bmQodCkpOnQudG9GaXhlZChNYXRoLm1pbihvLDIwKSk7cmV0dXJuIE8obik/bih0LGEpOnoobik/bi5yZXBsYWNlKCJ7dmFsdWV9IixhKTphfSxfc2hvd0RhdGFJbmZvOmZ1bmN0aW9uKHQpe3Q9dGhpcy5fZHJhZ2dpbmd8fHQ7dmFyIGU9dGhpcy5fZGlzcGxheWFibGVzLmhhbmRsZUxhYmVscztlWzBdLmF0dHIoImludmlzaWJsZSIsIXQpLGVbMV0uYXR0cigiaW52aXNpYmxlIiwhdCl9LF9vbkRyYWdNb3ZlOmZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuX2RyYWdnaW5nPSEwLFd0KG4uZXZlbnQpO3ZhciBvPWhsKFtlLGldLHRoaXMuX2Rpc3BsYXlhYmxlcy5iYXJHcm91cC5nZXRMb2NhbFRyYW5zZm9ybSgpLCEwKSxhPXRoaXMuX3VwZGF0ZUludGVydmFsKHQsb1swXSkscj10aGlzLmRhdGFab29tTW9kZWwuZ2V0KCJyZWFsdGltZSIpO3RoaXMuX3VwZGF0ZVZpZXcoIXIpLGEmJnImJnRoaXMuX2Rpc3BhdGNoWm9vbUFjdGlvbigpfSxfb25EcmFnRW5kOmZ1bmN0aW9uKCl7dGhpcy5fZHJhZ2dpbmc9ITEsdGhpcy5fc2hvd0RhdGFJbmZvKCExKSx0aGlzLmRhdGFab29tTW9kZWwuZ2V0KCJyZWFsdGltZSIpfHx0aGlzLl9kaXNwYXRjaFpvb21BY3Rpb24oKX0sX29uQ2xpY2tQYW5lbENsaWNrOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3NpemUsaT10aGlzLl9kaXNwbGF5YWJsZXMuYmFyR3JvdXAudHJhbnNmb3JtQ29vcmRUb0xvY2FsKHQub2Zmc2V0WCx0Lm9mZnNldFkpO2lmKCEoaVswXTwwfHxpWzBdPmVbMF18fGlbMV08MHx8aVsxXT5lWzFdKSl7dmFyIG49dGhpcy5faGFuZGxlRW5kcyxvPShuWzBdK25bMV0pLzIsYT10aGlzLl91cGRhdGVJbnRlcnZhbCgiYWxsIixpWzBdLW8pO3RoaXMuX3VwZGF0ZVZpZXcoKSxhJiZ0aGlzLl9kaXNwYXRjaFpvb21BY3Rpb24oKX19LF9kaXNwYXRjaFpvb21BY3Rpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yYW5nZTt0aGlzLmFwaS5kaXNwYXRjaEFjdGlvbih7dHlwZToiZGF0YVpvb20iLGZyb206dGhpcy51aWQsZGF0YVpvb21JZDp0aGlzLmRhdGFab29tTW9kZWwuaWQsc3RhcnQ6dFswXSxlbmQ6dFsxXX0pfSxfZmluZENvb3JkUmVjdDpmdW5jdGlvbigpe3ZhciBpO2lmKEdDKHRoaXMuZ2V0VGFyZ2V0Q29vcmRJbmZvKCksZnVuY3Rpb24odCl7aWYoIWkmJnQubGVuZ3RoKXt2YXIgZT10WzBdLm1vZGVsLmNvb3JkaW5hdGVTeXN0ZW07aT1lLmdldFJlY3QmJmUuZ2V0UmVjdCgpfX0pLCFpKXt2YXIgdD10aGlzLmFwaS5nZXRXaWR0aCgpLGU9dGhpcy5hcGkuZ2V0SGVpZ2h0KCk7aT17eDouMip0LHk6LjIqZSx3aWR0aDouNip0LGhlaWdodDouNiplfX1yZXR1cm4gaX19KTtmdW5jdGlvbiBVQyh0KXtyZXR1cm4idmVydGljYWwiPT09dD8ibnMtcmVzaXplIjoiZXctcmVzaXplIn1XQS5leHRlbmQoe3R5cGU6ImRhdGFab29tLmluc2lkZSIsZGVmYXVsdE9wdGlvbjp7ZGlzYWJsZWQ6ITEsem9vbUxvY2s6ITEsem9vbU9uTW91c2VXaGVlbDohMCxtb3ZlT25Nb3VzZU1vdmU6ITAsbW92ZU9uTW91c2VXaGVlbDohMSxwcmV2ZW50RGVmYXVsdE1vdXNlTW92ZTohMH19KTt2YXIgWEM9IlwwX2VjX2RhdGFab29tX3JvYW1zIjtmdW5jdGlvbiBZQyh0LG4pe3ZhciBlPXFDKHQpLG89bi5kYXRhWm9vbUlkLGE9bi5jb29yZElkO0UoZSxmdW5jdGlvbih0LGUpe3ZhciBpPXQuZGF0YVpvb21JbmZvcztpW29dJiZfKG4uYWxsQ29vcmRJZHMsYSk8MCYmKGRlbGV0ZSBpW29dLHQuY291bnQtLSl9KSxLQyhlKTt2YXIgaT1lW2FdO2l8fCgoaT1lW2FdPXtjb29yZElkOmEsZGF0YVpvb21JbmZvczp7fSxjb3VudDowfSkuY29udHJvbGxlcj1mdW5jdGlvbih0LHIpe3ZhciBlPW5ldyBMeSh0LmdldFpyKCkpO3JldHVybiBFKFsicGFuIiwiem9vbSIsInNjcm9sbE1vdmUiXSxmdW5jdGlvbihhKXtlLm9uKGEsZnVuY3Rpb24obil7dmFyIG89W107RShyLmRhdGFab29tSW5mb3MsZnVuY3Rpb24odCl7aWYobi5pc0F2YWlsYWJsZUJlaGF2aW9yKHQuZGF0YVpvb21Nb2RlbC5vcHRpb24pKXt2YXIgZT0odC5nZXRSYW5nZXx8e30pW2FdLGk9ZSYmZShyLmNvbnRyb2xsZXIsbik7IXQuZGF0YVpvb21Nb2RlbC5nZXQoImRpc2FibGVkIiwhMCkmJmkmJm8ucHVzaCh7ZGF0YVpvb21JZDp0LmRhdGFab29tSWQsc3RhcnQ6aVswXSxlbmQ6aVsxXX0pfX0pLG8ubGVuZ3RoJiZyLmRpc3BhdGNoQWN0aW9uKG8pfSl9KSxlfSh0LGkpLGkuZGlzcGF0Y2hBY3Rpb249VCgkQyx0KSksaS5kYXRhWm9vbUluZm9zW29dfHxpLmNvdW50KyssaS5kYXRhWm9vbUluZm9zW29dPW47dmFyIHI9ZnVuY3Rpb24odCl7dmFyIG4sbz17dHlwZV90cnVlOjIsdHlwZV9tb3ZlOjEsdHlwZV9mYWxzZTowLHR5cGVfdW5kZWZpbmVkOi0xfSxhPSEwO3JldHVybiBFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5kYXRhWm9vbU1vZGVsLGk9IWUuZ2V0KCJkaXNhYmxlZCIsITApJiYoIWUuZ2V0KCJ6b29tTG9jayIsITApfHwibW92ZSIpO29bInR5cGVfIituXTxvWyJ0eXBlXyIraV0mJihuPWkpLGEmPWUuZ2V0KCJwcmV2ZW50RGVmYXVsdE1vdXNlTW92ZSIsITApfSkse2NvbnRyb2xUeXBlOm4sb3B0Ont6b29tT25Nb3VzZVdoZWVsOiEwLG1vdmVPbk1vdXNlTW92ZTohMCxtb3ZlT25Nb3VzZVdoZWVsOiEwLHByZXZlbnREZWZhdWx0TW91c2VNb3ZlOiEhYX19fShpLmRhdGFab29tSW5mb3MpO2kuY29udHJvbGxlci5lbmFibGUoci5jb250cm9sVHlwZSxyLm9wdCksaS5jb250cm9sbGVyLnNldFBvaW50ZXJDaGVja2VyKG4uY29udGFpbnNQb2ludCksVGMoaSwiZGlzcGF0Y2hBY3Rpb24iLG4uZGF0YVpvb21Nb2RlbC5nZXQoInRocm90dGxlIiwhMCksImZpeFJhdGUiKX1mdW5jdGlvbiBqQyh0KXtyZXR1cm4gdC50eXBlKyJcMF8iK3QuaWR9ZnVuY3Rpb24gcUModCl7dmFyIGU9dC5nZXRacigpO3JldHVybiBlW1hDXXx8KGVbWENdPXt9KX1mdW5jdGlvbiBLQyhpKXtFKGksZnVuY3Rpb24odCxlKXt0LmNvdW50fHwodC5jb250cm9sbGVyLmRpc3Bvc2UoKSxkZWxldGUgaVtlXSl9KX1mdW5jdGlvbiAkQyh0LGUpe3QuZGlzcGF0Y2hBY3Rpb24oe3R5cGU6ImRhdGFab29tIixiYXRjaDplfSl9dmFyIEpDPUEsUUM9VUEuZXh0ZW5kKHt0eXBlOiJkYXRhWm9vbS5pbnNpZGUiLGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLl9yYW5nZX0scmVuZGVyOmZ1bmN0aW9uKHIsdCxzLGUpe1FDLnN1cGVyQXBwbHkodGhpcywicmVuZGVyIixhcmd1bWVudHMpLHRoaXMuX3JhbmdlPXIuZ2V0UGVyY2VudFJhbmdlKCksRSh0aGlzLmdldFRhcmdldENvb3JkSW5mbygpLGZ1bmN0aW9uKHQsbyl7dmFyIGE9Tih0LGZ1bmN0aW9uKHQpe3JldHVybiBqQyh0Lm1vZGVsKX0pO0UodCxmdW5jdGlvbihlKXt2YXIgbj1lLm1vZGVsLGk9e307RShbInBhbiIsInpvb20iLCJzY3JvbGxNb3ZlIl0sZnVuY3Rpb24odCl7aVt0XT1KQyh0TFt0XSx0aGlzLGUsbyl9LHRoaXMpLFlDKHMse2Nvb3JkSWQ6akMobiksYWxsQ29vcmRJZHM6YSxjb250YWluc1BvaW50OmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbi5jb29yZGluYXRlU3lzdGVtLmNvbnRhaW5Qb2ludChbZSxpXSl9LGRhdGFab29tSWQ6ci5pZCxkYXRhWm9vbU1vZGVsOnIsZ2V0UmFuZ2U6aX0pfSx0aGlzKX0sdGhpcyl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXshZnVuY3Rpb24odCxpKXt2YXIgZT1xQyh0KTtFKGUsZnVuY3Rpb24odCl7dC5jb250cm9sbGVyLmRpc3Bvc2UoKTt2YXIgZT10LmRhdGFab29tSW5mb3M7ZVtpXSYmKGRlbGV0ZSBlW2ldLHQuY291bnQtLSl9KSxLQyhlKX0odGhpcy5hcGksdGhpcy5kYXRhWm9vbU1vZGVsLmlkKSxRQy5zdXBlckFwcGx5KHRoaXMsImRpc3Bvc2UiLGFyZ3VtZW50cyksdGhpcy5fcmFuZ2U9bnVsbH19KSx0TD17em9vbTpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10aGlzLl9yYW5nZSxhPW8uc2xpY2UoKSxyPXQuYXhpc01vZGVsc1swXTtpZihyKXt2YXIgcz1uTFtlXShudWxsLFtuLm9yaWdpblgsbi5vcmlnaW5ZXSxyLGksdCksbD0oMDxzLnNpZ25hbD9zLnBpeGVsU3RhcnQrcy5waXhlbExlbmd0aC1zLnBpeGVsOnMucGl4ZWwtcy5waXhlbFN0YXJ0KS9zLnBpeGVsTGVuZ3RoKihhWzFdLWFbMF0pK2FbMF0sdT1NYXRoLm1heCgxL24uc2NhbGUsMCk7YVswXT0oYVswXS1sKSp1K2wsYVsxXT0oYVsxXS1sKSp1K2w7dmFyIGg9dGhpcy5kYXRhWm9vbU1vZGVsLmZpbmRSZXByZXNlbnRhdGl2ZUF4aXNQcm94eSgpLmdldE1pbk1heFNwYW4oKTtyZXR1cm4gV3coMCxhLFswLDEwMF0sMCxoLm1pblNwYW4saC5tYXhTcGFuKSx0aGlzLl9yYW5nZT1hLG9bMF0hPT1hWzBdfHxvWzFdIT09YVsxXT9hOnZvaWQgMH19LHBhbjplTChmdW5jdGlvbih0LGUsaSxuLG8sYSl7dmFyIHI9bkxbbl0oW2Eub2xkWCxhLm9sZFldLFthLm5ld1gsYS5uZXdZXSxlLG8saSk7cmV0dXJuIHIuc2lnbmFsKih0WzFdLXRbMF0pKnIucGl4ZWwvci5waXhlbExlbmd0aH0pLHNjcm9sbE1vdmU6ZUwoZnVuY3Rpb24odCxlLGksbixvLGEpe3JldHVybiBuTFtuXShbMCwwXSxbYS5zY3JvbGxEZWx0YSxhLnNjcm9sbERlbHRhXSxlLG8saSkuc2lnbmFsKih0WzFdLXRbMF0pKmEuc2Nyb2xsRGVsdGF9KX07ZnVuY3Rpb24gZUwobCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxpLG4pe3ZhciBvPXRoaXMuX3JhbmdlLGE9by5zbGljZSgpLHI9dC5heGlzTW9kZWxzWzBdO2lmKHIpe3ZhciBzPWwoYSxyLHQsZSxpLG4pO3JldHVybiBXdyhzLGEsWzAsMTAwXSwiYWxsIiksdGhpcy5fcmFuZ2U9YSxvWzBdIT09YVswXXx8b1sxXSE9PWFbMV0/YTp2b2lkIDB9fX1mdW5jdGlvbiBpTCh0KXt2YXIgZT10JiZ0LnZpc3VhbE1hcDtrKGUpfHwoZT1lP1tlXTpbXSksb0woZSxmdW5jdGlvbih0KXtpZih0KXthTCh0LCJzcGxpdExpc3QiKSYmIWFMKHQsInBpZWNlcyIpJiYodC5waWVjZXM9dC5zcGxpdExpc3QsZGVsZXRlIHQuc3BsaXRMaXN0KTt2YXIgZT10LnBpZWNlcztlJiZrKGUpJiZvTChlLGZ1bmN0aW9uKHQpe1IodCkmJihhTCh0LCJzdGFydCIpJiYhYUwodCwibWluIikmJih0Lm1pbj10LnN0YXJ0KSxhTCh0LCJlbmQiKSYmIWFMKHQsIm1heCIpJiYodC5tYXg9dC5lbmQpKX0pfX0pfXZhciBuTD17Z3JpZDpmdW5jdGlvbih0LGUsaSxuLG8pe3ZhciBhPWkuYXhpcyxyPXt9LHM9by5tb2RlbC5jb29yZGluYXRlU3lzdGVtLmdldFJlY3QoKTtyZXR1cm4gdD10fHxbMCwwXSwieCI9PT1hLmRpbT8oci5waXhlbD1lWzBdLXRbMF0sci5waXhlbExlbmd0aD1zLndpZHRoLHIucGl4ZWxTdGFydD1zLngsci5zaWduYWw9YS5pbnZlcnNlPzE6LTEpOihyLnBpeGVsPWVbMV0tdFsxXSxyLnBpeGVsTGVuZ3RoPXMuaGVpZ2h0LHIucGl4ZWxTdGFydD1zLnksci5zaWduYWw9YS5pbnZlcnNlPy0xOjEpLHJ9LHBvbGFyOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9aS5heGlzLHI9e30scz1vLm1vZGVsLmNvb3JkaW5hdGVTeXN0ZW0sbD1zLmdldFJhZGl1c0F4aXMoKS5nZXRFeHRlbnQoKSx1PXMuZ2V0QW5nbGVBeGlzKCkuZ2V0RXh0ZW50KCk7cmV0dXJuIHQ9dD9zLnBvaW50VG9Db29yZCh0KTpbMCwwXSxlPXMucG9pbnRUb0Nvb3JkKGUpLCJyYWRpdXNBeGlzIj09PWkubWFpblR5cGU/KHIucGl4ZWw9ZVswXS10WzBdLHIucGl4ZWxMZW5ndGg9bFsxXS1sWzBdLHIucGl4ZWxTdGFydD1sWzBdLHIuc2lnbmFsPWEuaW52ZXJzZT8xOi0xKTooci5waXhlbD1lWzFdLXRbMV0sci5waXhlbExlbmd0aD11WzFdLXVbMF0sci5waXhlbFN0YXJ0PXVbMF0sci5zaWduYWw9YS5pbnZlcnNlPy0xOjEpLHJ9LHNpbmdsZUF4aXM6ZnVuY3Rpb24odCxlLGksbixvKXt2YXIgYT1pLmF4aXMscj1vLm1vZGVsLmNvb3JkaW5hdGVTeXN0ZW0uZ2V0UmVjdCgpLHM9e307cmV0dXJuIHQ9dHx8WzAsMF0sImhvcml6b250YWwiPT09YS5vcmllbnQ/KHMucGl4ZWw9ZVswXS10WzBdLHMucGl4ZWxMZW5ndGg9ci53aWR0aCxzLnBpeGVsU3RhcnQ9ci54LHMuc2lnbmFsPWEuaW52ZXJzZT8xOi0xKToocy5waXhlbD1lWzFdLXRbMV0scy5waXhlbExlbmd0aD1yLmhlaWdodCxzLnBpeGVsU3RhcnQ9ci55LHMuc2lnbmFsPWEuaW52ZXJzZT8tMToxKSxzfX0sb0w9RTtmdW5jdGlvbiBhTCh0LGUpe3JldHVybiB0JiZ0Lmhhc093blByb3BlcnR5JiZ0Lmhhc093blByb3BlcnR5KGUpfVR1LnJlZ2lzdGVyU3ViVHlwZURlZmF1bHRlcigidmlzdWFsTWFwIixmdW5jdGlvbih0KXtyZXR1cm4gdC5jYXRlZ29yaWVzfHwodC5waWVjZXM/MDx0LnBpZWNlcy5sZW5ndGg6MDx0LnNwbGl0TnVtYmVyKSYmIXQuY2FsY3VsYWJsZT8icGllY2V3aXNlIjoiY29udGludW91cyJ9KTt2YXIgckw9SWQuVklTVUFMLkNPTVBPTkVOVDtmdW5jdGlvbiBzTCh0LGUsaSxuKXtmb3IodmFyIG89ZS50YXJnZXRWaXN1YWxzW25dLGE9YV8ucHJlcGFyZVZpc3VhbFR5cGVzKG8pLHI9e2NvbG9yOnQuZ2V0RGF0YSgpLmdldFZpc3VhbCgiY29sb3IiKX0scz0wLGw9YS5sZW5ndGg7czxsO3MrKyl7dmFyIHU9YVtzXSxoPW9bIm9wYWNpdHkiPT09dT8iX19hbHBoYUZvck9wYWNpdHkiOnVdO2gmJmguYXBwbHlWaXN1YWwoaSxjLGQpfXJldHVybiByLmNvbG9yO2Z1bmN0aW9uIGModCl7cmV0dXJuIHJbdF19ZnVuY3Rpb24gZCh0LGUpe3JbdF09ZX19eWYockwse2NyZWF0ZU9uQWxsU2VyaWVzOiEwLHJlc2V0OmZ1bmN0aW9uKGksdCl7dmFyIG49W107cmV0dXJuIHQuZWFjaENvbXBvbmVudCgidmlzdWFsTWFwIixmdW5jdGlvbih0KXt2YXIgZT1pLnBpcGVsaW5lQ29udGV4dDshdC5pc1RhcmdldFNlcmllcyhpKXx8ZSYmZS5sYXJnZXx8bi5wdXNoKGZ1bmN0aW9uKHQsZixwLGcpe3ZhciBtPXt9O3JldHVybiBFKHQsZnVuY3Rpb24odCl7dmFyIGU9YV8ucHJlcGFyZVZpc3VhbFR5cGVzKGZbdF0pO21bdF09ZX0pLHtwcm9ncmVzczpmdW5jdGlvbih0LGkpe2Z1bmN0aW9uIGUodCl7cmV0dXJuIGkuZ2V0SXRlbVZpc3VhbChvLHQpfWZ1bmN0aW9uIG4odCxlKXtpLnNldEl0ZW1WaXN1YWwobyx0LGUpfXZhciBvO2ZvcihudWxsIT1nJiYoZz1pLmdldERpbWVuc2lvbihnKSk7bnVsbCE9KG89dC5uZXh0KCkpOyl7dmFyIGE9aS5nZXRSYXdEYXRhSXRlbShvKTtpZighYXx8ITEhPT1hLnZpc3VhbE1hcClmb3IodmFyIHI9bnVsbCE9Zz9pLmdldChnLG8sITApOm8scz1wKHIpLGw9ZltzXSx1PW1bc10saD0wLGM9dS5sZW5ndGg7aDxjO2grKyl7dmFyIGQ9dVtoXTtsW2RdJiZsW2RdLmFwcGx5VmlzdWFsKHIsZSxuKX19fX19KHQuc3RhdGVMaXN0LHQudGFyZ2V0VmlzdWFscyxBKHQuZ2V0VmFsdWVTdGF0ZSx0KSx0LmdldERhdGFEaW1lbnNpb24oaS5nZXREYXRhKCkpKSl9KSxufX0pLHlmKHJMLHtjcmVhdGVPbkFsbFNlcmllczohMCxyZXNldDpmdW5jdGlvbihvLHQpe3ZhciBhPW8uZ2V0RGF0YSgpLHI9W107dC5lYWNoQ29tcG9uZW50KCJ2aXN1YWxNYXAiLGZ1bmN0aW9uKHQpe2lmKHQuaXNUYXJnZXRTZXJpZXMobykpe3ZhciBlPXQuZ2V0VmlzdWFsTWV0YShBKHNMLG51bGwsbyx0KSl8fHtzdG9wczpbXSxvdXRlckNvbG9yczpbXX0saT10LmdldERhdGFEaW1lbnNpb24oYSksbj1hLmdldERpbWVuc2lvbkluZm8oaSk7bnVsbCE9biYmKGUuZGltZW5zaW9uPW4uaW5kZXgsci5wdXNoKGUpKX19KSxvLmdldERhdGEoKS5zZXRWaXN1YWwoInZpc3VhbE1ldGEiLHIpfX0pO3ZhciBsTD1mdW5jdGlvbih0LGUsaSl7dmFyIG49RCgodUxbdF18fHt9KVtlXSk7cmV0dXJuIGkmJmsobik/bltuLmxlbmd0aC0xXTpufSx1TD17Y29sb3I6e2FjdGl2ZTpbIiMwMDZlZGQiLCIjZTBmZmZmIl0saW5hY3RpdmU6WyJyZ2JhKDAsMCwwLDApIl19LGNvbG9ySHVlOnthY3RpdmU6WzAsMzYwXSxpbmFjdGl2ZTpbMCwwXX0sY29sb3JTYXR1cmF0aW9uOnthY3RpdmU6Wy4zLDFdLGluYWN0aXZlOlswLDBdfSxjb2xvckxpZ2h0bmVzczp7YWN0aXZlOlsuOSwuNV0saW5hY3RpdmU6WzAsMF19LGNvbG9yQWxwaGE6e2FjdGl2ZTpbLjMsMV0saW5hY3RpdmU6WzAsMF19LG9wYWNpdHk6e2FjdGl2ZTpbLjMsMV0saW5hY3RpdmU6WzAsMF19LHN5bWJvbDp7YWN0aXZlOlsiY2lyY2xlIiwicm91bmRSZWN0IiwiZGlhbW9uZCJdLGluYWN0aXZlOlsibm9uZSJdfSxzeW1ib2xTaXplOnthY3RpdmU6WzEwLDUwXSxpbmFjdGl2ZTpbMCwwXX19LGhMPWFfLm1hcFZpc3VhbCxjTD1hXy5lYWNoVmlzdWFsLGRMPWssZkw9RSxwTD1PbCxnTD1rbCxtTD13Zih7dHlwZToidmlzdWFsTWFwIixkZXBlbmRlbmNpZXM6WyJzZXJpZXMiXSxzdGF0ZUxpc3Q6WyJpblJhbmdlIiwib3V0T2ZSYW5nZSJdLHJlcGxhY2FibGVPcHRpb25LZXlzOlsiaW5SYW5nZSIsIm91dE9mUmFuZ2UiLCJ0YXJnZXQiLCJjb250cm9sbGVyIiwiY29sb3IiXSxkYXRhQm91bmQ6Wy0xLzAsMS8wXSxsYXlvdXRNb2RlOnt0eXBlOiJib3giLGlnbm9yZVNpemU6ITB9LGRlZmF1bHRPcHRpb246e3Nob3c6ITAsemxldmVsOjAsejo0LHNlcmllc0luZGV4OiJhbGwiLG1pbjowLG1heDoyMDAsZGltZW5zaW9uOm51bGwsaW5SYW5nZTpudWxsLG91dE9mUmFuZ2U6bnVsbCxsZWZ0OjAscmlnaHQ6bnVsbCx0b3A6bnVsbCxib3R0b206MCxpdGVtV2lkdGg6bnVsbCxpdGVtSGVpZ2h0Om51bGwsaW52ZXJzZTohMSxvcmllbnQ6InZlcnRpY2FsIixiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMCwwLDAsMCkiLGJvcmRlckNvbG9yOiIjY2NjIixjb250ZW50Q29sb3I6IiM1NzkzZjMiLGluYWN0aXZlQ29sb3I6IiNhYWEiLGJvcmRlcldpZHRoOjAscGFkZGluZzo1LHRleHRHYXA6MTAscHJlY2lzaW9uOjAsY29sb3I6bnVsbCxmb3JtYXR0ZXI6bnVsbCx0ZXh0Om51bGwsdGV4dFN0eWxlOntjb2xvcjoiIzMzMyJ9fSxpbml0OmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9kYXRhRXh0ZW50LHRoaXMudGFyZ2V0VmlzdWFscz17fSx0aGlzLmNvbnRyb2xsZXJWaXN1YWxzPXt9LHRoaXMudGV4dFN0eWxlTW9kZWwsdGhpcy5pdGVtU2l6ZSx0aGlzLm1lcmdlRGVmYXVsdEFuZFRoZW1lKHQsaSl9LG9wdGlvblVwZGF0ZWQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9wdGlvbjt2LmNhbnZhc1N1cHBvcnRlZHx8KGkucmVhbHRpbWU9ITEpLGV8fHZEKGksdCx0aGlzLnJlcGxhY2FibGVPcHRpb25LZXlzKSx0aGlzLnRleHRTdHlsZU1vZGVsPXRoaXMuZ2V0TW9kZWwoInRleHRTdHlsZSIpLHRoaXMucmVzZXRJdGVtU2l6ZSgpLHRoaXMuY29tcGxldGVWaXN1YWxPcHRpb24oKX0scmVzZXRWaXN1YWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5zdGF0ZUxpc3Q7dD1BKHQsdGhpcyksdGhpcy5jb250cm9sbGVyVmlzdWFscz1tRCh0aGlzLm9wdGlvbi5jb250cm9sbGVyLGUsdCksdGhpcy50YXJnZXRWaXN1YWxzPW1EKHRoaXMub3B0aW9uLnRhcmdldCxlLHQpfSxnZXRUYXJnZXRTZXJpZXNJbmRpY2VzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb24uc2VyaWVzSW5kZXgsaT1bXTtyZXR1cm4gbnVsbD09dHx8ImFsbCI9PT10P3RoaXMuZWNNb2RlbC5lYWNoU2VyaWVzKGZ1bmN0aW9uKHQsZSl7aS5wdXNoKGUpfSk6aT1Fbyh0KSxpfSxlYWNoVGFyZ2V0U2VyaWVzOmZ1bmN0aW9uKGUsaSl7RSh0aGlzLmdldFRhcmdldFNlcmllc0luZGljZXMoKSxmdW5jdGlvbih0KXtlLmNhbGwoaSx0aGlzLmVjTW9kZWwuZ2V0U2VyaWVzQnlJbmRleCh0KSl9LHRoaXMpfSxpc1RhcmdldFNlcmllczpmdW5jdGlvbihlKXt2YXIgaT0hMTtyZXR1cm4gdGhpcy5lYWNoVGFyZ2V0U2VyaWVzKGZ1bmN0aW9uKHQpe3Q9PT1lJiYoaT0hMCl9KSxpfSxmb3JtYXRWYWx1ZVRleHQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBuLG8sYT10aGlzLm9wdGlvbixyPWEucHJlY2lzaW9uLHM9dGhpcy5kYXRhQm91bmQsbD1hLmZvcm1hdHRlcjtyZXR1cm4gaT1pfHxbIjwiLCI+Il0sayh0KSYmKHQ9dC5zbGljZSgpLG49ITApLG89ZT90Om4/W3UodFswXSksdSh0WzFdKV06dSh0KSx6KGwpP2wucmVwbGFjZSgie3ZhbHVlfSIsbj9vWzBdOm8pLnJlcGxhY2UoInt2YWx1ZTJ9IixuP29bMV06byk6TyhsKT9uP2wodFswXSx0WzFdKTpsKHQpOm4/dFswXT09PXNbMF0/aVswXSsiICIrb1sxXTp0WzFdPT09c1sxXT9pWzFdKyIgIitvWzBdOm9bMF0rIiAtICIrb1sxXTpvO2Z1bmN0aW9uIHUodCl7cmV0dXJuIHQ9PT1zWzBdPyJtaW4iOnQ9PT1zWzFdPyJtYXgiOigrdCkudG9GaXhlZChNYXRoLm1pbihyLDIwKSl9fSxyZXNldEV4dGVudDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uLGU9cEwoW3QubWluLHQubWF4XSk7dGhpcy5fZGF0YUV4dGVudD1lfSxnZXREYXRhRGltZW5zaW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9uLmRpbWVuc2lvbixpPXQuZGltZW5zaW9ucztpZihudWxsIT1lfHxpLmxlbmd0aCl7aWYobnVsbCE9ZSlyZXR1cm4gdC5nZXREaW1lbnNpb24oZSk7Zm9yKHZhciBuPXQuZGltZW5zaW9ucyxvPW4ubGVuZ3RoLTE7MDw9bztvLS0pe3ZhciBhPW5bb107aWYoIXQuZ2V0RGltZW5zaW9uSW5mbyhhKS5pc0NhbGN1bGF0aW9uQ29vcmQpcmV0dXJuIGF9fX0sZ2V0RXh0ZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGFFeHRlbnQuc2xpY2UoKX0sY29tcGxldGVWaXN1YWxPcHRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVjTW9kZWwsZT10aGlzLm9wdGlvbixpPXtpblJhbmdlOmUuaW5SYW5nZSxvdXRPZlJhbmdlOmUub3V0T2ZSYW5nZX0sbj1lLnRhcmdldHx8KGUudGFyZ2V0PXt9KSxvPWUuY29udHJvbGxlcnx8KGUuY29udHJvbGxlcj17fSk7bShuLGkpLG0obyxpKTt2YXIgdT10aGlzLmlzQ2F0ZWdvcnkoKTtmdW5jdGlvbiBhKG4pe2RMKGUuY29sb3IpJiYhbi5pblJhbmdlJiYobi5pblJhbmdlPXtjb2xvcjplLmNvbG9yLnNsaWNlKCkucmV2ZXJzZSgpfSksbi5pblJhbmdlPW4uaW5SYW5nZXx8e2NvbG9yOnQuZ2V0KCJncmFkaWVudENvbG9yIil9LGZMKHRoaXMuc3RhdGVMaXN0LGZ1bmN0aW9uKHQpe3ZhciBlPW5bdF07aWYoeihlKSl7dmFyIGk9bEwoZSwiYWN0aXZlIix1KTtpPyhuW3RdPXt9LG5bdF1bZV09aSk6ZGVsZXRlIG5bdF19fSx0aGlzKX1hLmNhbGwodGhpcyxuKSxhLmNhbGwodGhpcyxvKSxmdW5jdGlvbih0LGUsaSl7dmFyIG49dFtlXSxvPXRbaV07biYmIW8mJihvPXRbaV09e30sZkwobixmdW5jdGlvbih0LGUpe2lmKGFfLmlzVmFsaWRUeXBlKGUpKXt2YXIgaT1sTChlLCJpbmFjdGl2ZSIsdSk7bnVsbCE9aSYmKG9bZV09aSwiY29sb3IiIT09ZXx8by5oYXNPd25Qcm9wZXJ0eSgib3BhY2l0eSIpfHxvLmhhc093blByb3BlcnR5KCJjb2xvckFscGhhIil8fChvLm9wYWNpdHk9WzAsMF0pKX19KSl9LmNhbGwodGhpcyxuLCJpblJhbmdlIiwib3V0T2ZSYW5nZSIpLGZ1bmN0aW9uKGEpe3ZhciByPShhLmluUmFuZ2V8fHt9KS5zeW1ib2x8fChhLm91dE9mUmFuZ2V8fHt9KS5zeW1ib2wscz0oYS5pblJhbmdlfHx7fSkuc3ltYm9sU2l6ZXx8KGEub3V0T2ZSYW5nZXx8e30pLnN5bWJvbFNpemUsbD10aGlzLmdldCgiaW5hY3RpdmVDb2xvciIpO2ZMKHRoaXMuc3RhdGVMaXN0LGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaXRlbVNpemUsaT1hW3RdO251bGw9PShpPWl8fChhW3RdPXtjb2xvcjp1P2w6W2xdfSkpLnN5bWJvbCYmKGkuc3ltYm9sPXImJkQocil8fCh1PyJyb3VuZFJlY3QiOlsicm91bmRSZWN0Il0pKSxudWxsPT1pLnN5bWJvbFNpemUmJihpLnN5bWJvbFNpemU9cyYmRChzKXx8KHU/ZVswXTpbZVswXSxlWzBdXSkpLGkuc3ltYm9sPWhMKGkuc3ltYm9sLGZ1bmN0aW9uKHQpe3JldHVybiJub25lIj09PXR8fCJzcXVhcmUiPT09dD8icm91bmRSZWN0Ijp0fSk7dmFyIG49aS5zeW1ib2xTaXplO2lmKG51bGwhPW4pe3ZhciBvPS0xLzA7Y0wobixmdW5jdGlvbih0KXtvPHQmJihvPXQpfSksaS5zeW1ib2xTaXplPWhMKG4sZnVuY3Rpb24odCl7cmV0dXJuIGdMKHQsWzAsb10sWzAsZVswXV0sITApfSl9fSx0aGlzKX0uY2FsbCh0aGlzLG8pfSxyZXNldEl0ZW1TaXplOmZ1bmN0aW9uKCl7dGhpcy5pdGVtU2l6ZT1bcGFyc2VGbG9hdCh0aGlzLmdldCgiaXRlbVdpZHRoIikpLHBhcnNlRmxvYXQodGhpcy5nZXQoIml0ZW1IZWlnaHQiKSldfSxpc0NhdGVnb3J5OmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLm9wdGlvbi5jYXRlZ29yaWVzfSxzZXRTZWxlY3RlZDpldCxnZXRWYWx1ZVN0YXRlOmV0LGdldFZpc3VhbE1ldGE6ZXR9KSx2TD1bMjAsMTQwXSx5TD1tTC5leHRlbmQoe3R5cGU6InZpc3VhbE1hcC5jb250aW51b3VzIixkZWZhdWx0T3B0aW9uOnthbGlnbjoiYXV0byIsY2FsY3VsYWJsZTohMSxyYW5nZTpudWxsLHJlYWx0aW1lOiEwLGl0ZW1IZWlnaHQ6bnVsbCxpdGVtV2lkdGg6bnVsbCxob3Zlckxpbms6ITAsaG92ZXJMaW5rRGF0YVNpemU6bnVsbCxob3ZlckxpbmtPbkhhbmRsZTpudWxsfSxvcHRpb25VcGRhdGVkOmZ1bmN0aW9uKHQsZSl7eUwuc3VwZXJBcHBseSh0aGlzLCJvcHRpb25VcGRhdGVkIixhcmd1bWVudHMpLHRoaXMucmVzZXRFeHRlbnQoKSx0aGlzLnJlc2V0VmlzdWFsKGZ1bmN0aW9uKHQpe3QubWFwcGluZ01ldGhvZD0ibGluZWFyIix0LmRhdGFFeHRlbnQ9dGhpcy5nZXRFeHRlbnQoKX0pLHRoaXMuX3Jlc2V0UmFuZ2UoKX0scmVzZXRJdGVtU2l6ZTpmdW5jdGlvbigpe3lMLnN1cGVyQXBwbHkodGhpcywicmVzZXRJdGVtU2l6ZSIsYXJndW1lbnRzKTt2YXIgdD10aGlzLml0ZW1TaXplOyJob3Jpem9udGFsIj09PXRoaXMuX29yaWVudCYmdC5yZXZlcnNlKCksbnVsbCE9dFswXSYmIWlzTmFOKHRbMF0pfHwodFswXT12TFswXSksbnVsbCE9dFsxXSYmIWlzTmFOKHRbMV0pfHwodFsxXT12TFsxXSl9LF9yZXNldFJhbmdlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRFeHRlbnQoKSxlPXRoaXMub3B0aW9uLnJhbmdlOyFlfHxlLmF1dG8/KHQuYXV0bz0xLHRoaXMub3B0aW9uLnJhbmdlPXQpOmsoZSkmJihlWzBdPmVbMV0mJmUucmV2ZXJzZSgpLGVbMF09TWF0aC5tYXgoZVswXSx0WzBdKSxlWzFdPU1hdGgubWluKGVbMV0sdFsxXSkpfSxjb21wbGV0ZVZpc3VhbE9wdGlvbjpmdW5jdGlvbigpe21MLnByb3RvdHlwZS5jb21wbGV0ZVZpc3VhbE9wdGlvbi5hcHBseSh0aGlzLGFyZ3VtZW50cyksRSh0aGlzLnN0YXRlTGlzdCxmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbi5jb250cm9sbGVyW3RdLnN5bWJvbFNpemU7ZSYmZVswXSE9PWVbMV0mJihlWzBdPTApfSx0aGlzKX0sc2V0U2VsZWN0ZWQ6ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24ucmFuZ2U9dC5zbGljZSgpLHRoaXMuX3Jlc2V0UmFuZ2UoKX0sZ2V0U2VsZWN0ZWQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldEV4dGVudCgpLGU9T2woKHRoaXMuZ2V0KCJyYW5nZSIpfHxbXSkuc2xpY2UoKSk7cmV0dXJuIGVbMF0+dFsxXSYmKGVbMF09dFsxXSksZVsxXT50WzFdJiYoZVsxXT10WzFdKSxlWzBdPHRbMF0mJihlWzBdPXRbMF0pLGVbMV08dFswXSYmKGVbMV09dFswXSksZX0sZ2V0VmFsdWVTdGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbi5yYW5nZSxpPXRoaXMuZ2V0RXh0ZW50KCk7cmV0dXJuKGVbMF08PWlbMF18fGVbMF08PXQpJiYoZVsxXT49aVsxXXx8dDw9ZVsxXSk/ImluUmFuZ2UiOiJvdXRPZlJhbmdlIn0sZmluZFRhcmdldERhdGFJbmRpY2VzOmZ1bmN0aW9uKG4pe3ZhciBvPVtdO3JldHVybiB0aGlzLmVhY2hUYXJnZXRTZXJpZXMoZnVuY3Rpb24odCl7dmFyIGk9W10sZT10LmdldERhdGEoKTtlLmVhY2godGhpcy5nZXREYXRhRGltZW5zaW9uKGUpLGZ1bmN0aW9uKHQsZSl7blswXTw9dCYmdDw9blsxXSYmaS5wdXNoKGUpfSx0aGlzKSxvLnB1c2goe3Nlcmllc0lkOnQuaWQsZGF0YUluZGV4Oml9KX0sdGhpcyksb30sZ2V0VmlzdWFsTWV0YTpmdW5jdGlvbihpKXt2YXIgdD14TCh0aGlzLCJvdXRPZlJhbmdlIix0aGlzLmdldEV4dGVudCgpKSxlPXhMKHRoaXMsImluUmFuZ2UiLHRoaXMub3B0aW9uLnJhbmdlLnNsaWNlKCkpLG49W107ZnVuY3Rpb24gbyh0LGUpe24ucHVzaCh7dmFsdWU6dCxjb2xvcjppKHQsZSl9KX1mb3IodmFyIGE9MCxyPTAscz1lLmxlbmd0aCxsPXQubGVuZ3RoO3I8bCYmKCFlLmxlbmd0aHx8dFtyXTw9ZVswXSk7cisrKXRbcl08ZVthXSYmbyh0W3JdLCJvdXRPZlJhbmdlIik7Zm9yKHZhciB1PTE7YTxzO2ErKyx1PTApdSYmbi5sZW5ndGgmJm8oZVthXSwib3V0T2ZSYW5nZSIpLG8oZVthXSwiaW5SYW5nZSIpO2Zvcih1PTE7cjxsO3IrKykoIWUubGVuZ3RofHxlW2UubGVuZ3RoLTFdPHRbcl0pJiYodSYmKG4ubGVuZ3RoJiZvKG5bbi5sZW5ndGgtMV0udmFsdWUsIm91dE9mUmFuZ2UiKSx1PTApLG8odFtyXSwib3V0T2ZSYW5nZSIpKTt2YXIgaD1uLmxlbmd0aDtyZXR1cm57c3RvcHM6bixvdXRlckNvbG9yczpbaD9uWzBdLmNvbG9yOiJ0cmFuc3BhcmVudCIsaD9uW2gtMV0uY29sb3I6InRyYW5zcGFyZW50Il19fX0pO2Z1bmN0aW9uIHhMKHQsZSxpKXtpZihpWzBdPT09aVsxXSlyZXR1cm4gaS5zbGljZSgpO2Zvcih2YXIgbj0oaVsxXS1pWzBdKS8yMDAsbz1pWzBdLGE9W10scj0wO3I8PTIwMCYmbzxpWzFdO3IrKylhLnB1c2gobyksbys9bjtyZXR1cm4gYS5wdXNoKGlbMV0pLGF9dmFyIF9MPWJmKHt0eXBlOiJ2aXN1YWxNYXAiLGF1dG9Qb3NpdGlvblZhbHVlczp7bGVmdDoxLHJpZ2h0OjEsdG9wOjEsYm90dG9tOjF9LGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLmVjTW9kZWw9dCx0aGlzLmFwaT1lLHRoaXMudmlzdWFsTWFwTW9kZWx9LHJlbmRlcjpmdW5jdGlvbih0LGUsaSxuKXshMSE9PSh0aGlzLnZpc3VhbE1hcE1vZGVsPXQpLmdldCgic2hvdyIpP3RoaXMuZG9SZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuZ3JvdXAucmVtb3ZlQWxsKCl9LHJlbmRlckJhY2tncm91bmQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52aXN1YWxNYXBNb2RlbCxpPUpsKGUuZ2V0KCJwYWRkaW5nIil8fDApLG49dC5nZXRCb3VuZGluZ1JlY3QoKTt0LmFkZChuZXcgaXMoe3oyOi0xLHNpbGVudDohMCxzaGFwZTp7eDpuLngtaVszXSx5Om4ueS1pWzBdLHdpZHRoOm4ud2lkdGgraVszXStpWzFdLGhlaWdodDpuLmhlaWdodCtpWzBdK2lbMl19LHN0eWxlOntmaWxsOmUuZ2V0KCJiYWNrZ3JvdW5kQ29sb3IiKSxzdHJva2U6ZS5nZXQoImJvcmRlckNvbG9yIiksbGluZVdpZHRoOmUuZ2V0KCJib3JkZXJXaWR0aCIpfX0pKX0sZ2V0Q29udHJvbGxlclZpc3VhbDpmdW5jdGlvbihpLG4sbyl7dmFyIHQ9KG89b3x8e30pLmZvcmNlU3RhdGUsZT10aGlzLnZpc3VhbE1hcE1vZGVsLGE9e307aWYoInN5bWJvbCI9PT1uJiYoYS5zeW1ib2w9ZS5nZXQoIml0ZW1TeW1ib2wiKSksImNvbG9yIj09PW4pe3ZhciByPWUuZ2V0KCJjb250ZW50Q29sb3IiKTthLmNvbG9yPXJ9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gYVt0XX1mdW5jdGlvbiBsKHQsZSl7YVt0XT1lfXZhciB1PWUuY29udHJvbGxlclZpc3VhbHNbdHx8ZS5nZXRWYWx1ZVN0YXRlKGkpXTtyZXR1cm4gRShhXy5wcmVwYXJlVmlzdWFsVHlwZXModSksZnVuY3Rpb24odCl7dmFyIGU9dVt0XTtvLmNvbnZlcnRPcGFjaXR5VG9BbHBoYSYmIm9wYWNpdHkiPT09dCYmKHQ9ImNvbG9yQWxwaGEiLGU9dS5fX2FscGhhRm9yT3BhY2l0eSksYV8uZGVwZW5kc09uKHQsbikmJmUmJmUuYXBwbHlWaXN1YWwoaSxzLGwpfSksYVtuXX0scG9zaXRpb25Hcm91cDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZpc3VhbE1hcE1vZGVsLGk9dGhpcy5hcGk7eXUodCxlLmdldEJveExheW91dFBhcmFtcygpLHt3aWR0aDppLmdldFdpZHRoKCksaGVpZ2h0OmkuZ2V0SGVpZ2h0KCl9KX0sZG9SZW5kZXI6ZXR9KTtmdW5jdGlvbiB3TCh0LGUsaSl7dmFyIG49dC5vcHRpb24sbz1uLmFsaWduO2lmKG51bGwhPW8mJiJhdXRvIiE9PW8pcmV0dXJuIG87Zm9yKHZhciBhPXt3aWR0aDplLmdldFdpZHRoKCksaGVpZ2h0OmUuZ2V0SGVpZ2h0KCl9LHI9Imhvcml6b250YWwiPT09bi5vcmllbnQ/MTowLHM9W1sibGVmdCIsInJpZ2h0Iiwid2lkdGgiXSxbInRvcCIsImJvdHRvbSIsImhlaWdodCJdXSxsPXNbcl0sdT1bMCxudWxsLDEwXSxoPXt9LGM9MDtjPDM7YysrKWhbc1sxLXJdW2NdXT11W2NdLGhbbFtjXV09Mj09PWM/aVswXTpuW2xbY11dO3ZhciBkPVtbIngiLCJ3aWR0aCIsM10sWyJ5IiwiaGVpZ2h0IiwwXV1bcl0sZj12dShoLGEsbi5wYWRkaW5nKTtyZXR1cm4gbFsoZi5tYXJnaW5bZFsyXV18fDApK2ZbZFswXV0rLjUqZltkWzFdXTwuNSphW2RbMV1dPzA6MV19ZnVuY3Rpb24gYkwodCxlKXtyZXR1cm4gRSh0fHxbXSxmdW5jdGlvbih0KXtudWxsIT10LmRhdGFJbmRleCYmKHQuZGF0YUluZGV4SW5zaWRlPXQuZGF0YUluZGV4LHQuZGF0YUluZGV4PW51bGwpLHQuaGlnaGxpZ2h0S2V5PSJ2aXN1YWxNYXAiKyhlP2UuY29tcG9uZW50SW5kZXg6IiIpfSksdH12YXIgU0w9a2wsTUw9RSxJTD1NYXRoLm1pbixUTD1NYXRoLm1heCxBTD1fTC5leHRlbmQoe3R5cGU6InZpc3VhbE1hcC5jb250aW51b3VzIixpbml0OmZ1bmN0aW9uKCl7QUwuc3VwZXJBcHBseSh0aGlzLCJpbml0Iixhcmd1bWVudHMpLHRoaXMuX3NoYXBlcz17fSx0aGlzLl9kYXRhSW50ZXJ2YWw9W10sdGhpcy5faGFuZGxlRW5kcz1bXSx0aGlzLl9vcmllbnQsdGhpcy5fdXNlSGFuZGxlLHRoaXMuX2hvdmVyTGlua0RhdGFJbmRpY2VzPVtdLHRoaXMuX2RyYWdnaW5nLHRoaXMuX2hvdmVyaW5nfSxkb1JlbmRlcjpmdW5jdGlvbih0LGUsaSxuKXtuJiYic2VsZWN0RGF0YVJhbmdlIj09PW4udHlwZSYmbi5mcm9tPT09dGhpcy51aWR8fHRoaXMuX2J1aWxkVmlldygpfSxfYnVpbGRWaWV3OmZ1bmN0aW9uKCl7dGhpcy5ncm91cC5yZW1vdmVBbGwoKTt2YXIgdD10aGlzLnZpc3VhbE1hcE1vZGVsLGU9dGhpcy5ncm91cDt0aGlzLl9vcmllbnQ9dC5nZXQoIm9yaWVudCIpLHRoaXMuX3VzZUhhbmRsZT10LmdldCgiY2FsY3VsYWJsZSIpLHRoaXMuX3Jlc2V0SW50ZXJ2YWwoKSx0aGlzLl9yZW5kZXJCYXIoZSk7dmFyIGk9dC5nZXQoInRleHQiKTt0aGlzLl9yZW5kZXJFbmRzVGV4dChlLGksMCksdGhpcy5fcmVuZGVyRW5kc1RleHQoZSxpLDEpLHRoaXMuX3VwZGF0ZVZpZXcoITApLHRoaXMucmVuZGVyQmFja2dyb3VuZChlKSx0aGlzLl91cGRhdGVWaWV3KCksdGhpcy5fZW5hYmxlSG92ZXJMaW5rVG9TZXJpZXMoKSx0aGlzLl9lbmFibGVIb3ZlckxpbmtGcm9tU2VyaWVzKCksdGhpcy5wb3NpdGlvbkdyb3VwKGUpfSxfcmVuZGVyRW5kc1RleHQ6ZnVuY3Rpb24odCxlLGkpe2lmKGUpe3ZhciBuPWVbMS1pXTtuPW51bGwhPW4/bisiIjoiIjt2YXIgbz10aGlzLnZpc3VhbE1hcE1vZGVsLGE9by5nZXQoInRleHRHYXAiKSxyPW8uaXRlbVNpemUscz10aGlzLl9zaGFwZXMuYmFyR3JvdXAsbD10aGlzLl9hcHBseVRyYW5zZm9ybShbclswXS8yLDA9PT1pPy1hOnJbMV0rYV0scyksdT10aGlzLl9hcHBseVRyYW5zZm9ybSgwPT09aT8iYm90dG9tIjoidG9wIixzKSxoPXRoaXMuX29yaWVudCxjPXRoaXMudmlzdWFsTWFwTW9kZWwudGV4dFN0eWxlTW9kZWw7dGhpcy5ncm91cC5hZGQobmV3IEZyKHtzdHlsZTp7eDpsWzBdLHk6bFsxXSx0ZXh0VmVydGljYWxBbGlnbjoiaG9yaXpvbnRhbCI9PT1oPyJtaWRkbGUiOnUsdGV4dEFsaWduOiJob3Jpem9udGFsIj09PWg/dToiY2VudGVyIix0ZXh0Om4sdGV4dEZvbnQ6Yy5nZXRGb250KCksdGV4dEZpbGw6Yy5nZXRUZXh0Q29sb3IoKX19KSl9fSxfcmVuZGVyQmFyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMudmlzdWFsTWFwTW9kZWwsaT10aGlzLl9zaGFwZXMsbj1lLml0ZW1TaXplLG89dGhpcy5fb3JpZW50LGE9dGhpcy5fdXNlSGFuZGxlLHI9d0woZSx0aGlzLmFwaSxuKSxzPWkuYmFyR3JvdXA9dGhpcy5fY3JlYXRlQmFyR3JvdXAocik7cy5hZGQoaS5vdXRPZlJhbmdlPURMKCkpLHMuYWRkKGkuaW5SYW5nZT1ETChudWxsLGE/TEwodGhpcy5fb3JpZW50KTpudWxsLEEodGhpcy5fZHJhZ0hhbmRsZSx0aGlzLCJhbGwiLCExKSxBKHRoaXMuX2RyYWdIYW5kbGUsdGhpcywiYWxsIiwhMCkpKTt2YXIgbD1lLnRleHRTdHlsZU1vZGVsLmdldFRleHRSZWN0KCLlm70iKSx1PVRMKGwud2lkdGgsbC5oZWlnaHQpO2EmJihpLmhhbmRsZVRodW1icz1bXSxpLmhhbmRsZUxhYmVscz1bXSxpLmhhbmRsZUxhYmVsUG9pbnRzPVtdLHRoaXMuX2NyZWF0ZUhhbmRsZShzLDAsbix1LG8sciksdGhpcy5fY3JlYXRlSGFuZGxlKHMsMSxuLHUsbyxyKSksdGhpcy5fY3JlYXRlSW5kaWNhdG9yKHMsbix1LG8pLHQuYWRkKHMpfSxfY3JlYXRlSGFuZGxlOmZ1bmN0aW9uKHQsZSxpLG4sbyl7dmFyIGE9QSh0aGlzLl9kcmFnSGFuZGxlLHRoaXMsZSwhMSkscj1BKHRoaXMuX2RyYWdIYW5kbGUsdGhpcyxlLCEwKSxzPURMKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT10P1tbMCwwXSxbZSwwXSxbZSwtZV1dOltbMCwwXSxbZSwwXSxbZSxlXV19KGUsbiksTEwodGhpcy5fb3JpZW50KSxhLHIpO3MucG9zaXRpb25bMF09aVswXSx0LmFkZChzKTt2YXIgbD10aGlzLnZpc3VhbE1hcE1vZGVsLnRleHRTdHlsZU1vZGVsLHU9bmV3IEZyKHtkcmFnZ2FibGU6ITAsZHJpZnQ6YSxvbm1vdXNlbW92ZTpmdW5jdGlvbih0KXtXdCh0LmV2ZW50KX0sb25kcmFnZW5kOnIsc3R5bGU6e3g6MCx5OjAsdGV4dDoiIix0ZXh0Rm9udDpsLmdldEZvbnQoKSx0ZXh0RmlsbDpsLmdldFRleHRDb2xvcigpfX0pO3RoaXMuZ3JvdXAuYWRkKHUpO3ZhciBoPVsiaG9yaXpvbnRhbCI9PT1vP24vMjoxLjUqbiwiaG9yaXpvbnRhbCI9PT1vPzA9PT1lPy0xLjUqbjoxLjUqbjowPT09ZT8tbi8yOm4vMl0sYz10aGlzLl9zaGFwZXM7Yy5oYW5kbGVUaHVtYnNbZV09cyxjLmhhbmRsZUxhYmVsUG9pbnRzW2VdPWgsYy5oYW5kbGVMYWJlbHNbZV09dX0sX2NyZWF0ZUluZGljYXRvcjpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz1ETChbWzAsMF1dLCJtb3ZlIik7by5wb3NpdGlvblswXT1lWzBdLG8uYXR0cih7aW52aXNpYmxlOiEwLHNpbGVudDohMH0pLHQuYWRkKG8pO3ZhciBhPXRoaXMudmlzdWFsTWFwTW9kZWwudGV4dFN0eWxlTW9kZWwscj1uZXcgRnIoe3NpbGVudDohMCxpbnZpc2libGU6ITAsc3R5bGU6e3g6MCx5OjAsdGV4dDoiIix0ZXh0Rm9udDphLmdldEZvbnQoKSx0ZXh0RmlsbDphLmdldFRleHRDb2xvcigpfX0pO3RoaXMuZ3JvdXAuYWRkKHIpO3ZhciBzPVsiaG9yaXpvbnRhbCI9PT1uP2kvMjo5LDBdLGw9dGhpcy5fc2hhcGVzO2wuaW5kaWNhdG9yPW8sbC5pbmRpY2F0b3JMYWJlbD1yLGwuaW5kaWNhdG9yTGFiZWxQb2ludD1zfSxfZHJhZ0hhbmRsZTpmdW5jdGlvbih0LGUsaSxuKXtpZih0aGlzLl91c2VIYW5kbGUpe2lmKHRoaXMuX2RyYWdnaW5nPSFlLCFlKXt2YXIgbz10aGlzLl9hcHBseVRyYW5zZm9ybShbaSxuXSx0aGlzLl9zaGFwZXMuYmFyR3JvdXAsITApO3RoaXMuX3VwZGF0ZUludGVydmFsKHQsb1sxXSksdGhpcy5fdXBkYXRlVmlldygpfWU9PT0hdGhpcy52aXN1YWxNYXBNb2RlbC5nZXQoInJlYWx0aW1lIikmJnRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOiJzZWxlY3REYXRhUmFuZ2UiLGZyb206dGhpcy51aWQsdmlzdWFsTWFwSWQ6dGhpcy52aXN1YWxNYXBNb2RlbC5pZCxzZWxlY3RlZDp0aGlzLl9kYXRhSW50ZXJ2YWwuc2xpY2UoKX0pLGU/dGhpcy5faG92ZXJpbmd8fHRoaXMuX2NsZWFySG92ZXJMaW5rVG9TZXJpZXMoKTpDTCh0aGlzLnZpc3VhbE1hcE1vZGVsKSYmdGhpcy5fZG9Ib3ZlckxpbmtUb1Nlcmllcyh0aGlzLl9oYW5kbGVFbmRzW3RdLCExKX19LF9yZXNldEludGVydmFsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy52aXN1YWxNYXBNb2RlbCxlPXRoaXMuX2RhdGFJbnRlcnZhbD10LmdldFNlbGVjdGVkKCksaT10LmdldEV4dGVudCgpLG49WzAsdC5pdGVtU2l6ZVsxXV07dGhpcy5faGFuZGxlRW5kcz1bU0woZVswXSxpLG4sITApLFNMKGVbMV0saSxuLCEwKV19LF91cGRhdGVJbnRlcnZhbDpmdW5jdGlvbih0LGUpe2U9ZXx8MDt2YXIgaT10aGlzLnZpc3VhbE1hcE1vZGVsLG49dGhpcy5faGFuZGxlRW5kcyxvPVswLGkuaXRlbVNpemVbMV1dO1d3KGUsbixvLHQsMCk7dmFyIGE9aS5nZXRFeHRlbnQoKTt0aGlzLl9kYXRhSW50ZXJ2YWw9W1NMKG5bMF0sbyxhLCEwKSxTTChuWzFdLG8sYSwhMCldfSxfdXBkYXRlVmlldzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZpc3VhbE1hcE1vZGVsLGk9ZS5nZXRFeHRlbnQoKSxuPXRoaXMuX3NoYXBlcyxvPVswLGUuaXRlbVNpemVbMV1dLGE9dD9vOnRoaXMuX2hhbmRsZUVuZHMscj10aGlzLl9jcmVhdGVCYXJWaXN1YWwodGhpcy5fZGF0YUludGVydmFsLGksYSwiaW5SYW5nZSIpLHM9dGhpcy5fY3JlYXRlQmFyVmlzdWFsKGksaSxvLCJvdXRPZlJhbmdlIik7bi5pblJhbmdlLnNldFN0eWxlKHtmaWxsOnIuYmFyQ29sb3Isb3BhY2l0eTpyLm9wYWNpdHl9KS5zZXRTaGFwZSgicG9pbnRzIixyLmJhclBvaW50cyksbi5vdXRPZlJhbmdlLnNldFN0eWxlKHtmaWxsOnMuYmFyQ29sb3Isb3BhY2l0eTpzLm9wYWNpdHl9KS5zZXRTaGFwZSgicG9pbnRzIixzLmJhclBvaW50cyksdGhpcy5fdXBkYXRlSGFuZGxlKGEscil9LF9jcmVhdGVCYXJWaXN1YWw6ZnVuY3Rpb24odCxlLGksbil7dmFyIG89e2ZvcmNlU3RhdGU6bixjb252ZXJ0T3BhY2l0eVRvQWxwaGE6ITB9LGE9dGhpcy5fbWFrZUNvbG9yR3JhZGllbnQodCxvKSxyPVt0aGlzLmdldENvbnRyb2xsZXJWaXN1YWwodFswXSwic3ltYm9sU2l6ZSIsbyksdGhpcy5nZXRDb250cm9sbGVyVmlzdWFsKHRbMV0sInN5bWJvbFNpemUiLG8pXSxzPXRoaXMuX2NyZWF0ZUJhclBvaW50cyhpLHIpO3JldHVybntiYXJDb2xvcjpuZXcgY3MoMCwwLDAsMSxhKSxiYXJQb2ludHM6cyxoYW5kbGVzQ29sb3I6W2FbMF0uY29sb3IsYVthLmxlbmd0aC0xXS5jb2xvcl19fSxfbWFrZUNvbG9yR3JhZGllbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT1bXSxuPSh0WzFdLXRbMF0pLzEwMDtpLnB1c2goe2NvbG9yOnRoaXMuZ2V0Q29udHJvbGxlclZpc3VhbCh0WzBdLCJjb2xvciIsZSksb2Zmc2V0OjB9KTtmb3IodmFyIG89MTtvPDEwMDtvKyspe3ZhciBhPXRbMF0rbipvO2lmKGE+dFsxXSlicmVhaztpLnB1c2goe2NvbG9yOnRoaXMuZ2V0Q29udHJvbGxlclZpc3VhbChhLCJjb2xvciIsZSksb2Zmc2V0Om8vMTAwfSl9cmV0dXJuIGkucHVzaCh7Y29sb3I6dGhpcy5nZXRDb250cm9sbGVyVmlzdWFsKHRbMV0sImNvbG9yIixlKSxvZmZzZXQ6MX0pLGl9LF9jcmVhdGVCYXJQb2ludHM6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLnZpc3VhbE1hcE1vZGVsLml0ZW1TaXplO3JldHVybltbaVswXS1lWzBdLHRbMF1dLFtpWzBdLHRbMF1dLFtpWzBdLHRbMV1dLFtpWzBdLWVbMV0sdFsxXV1dfSxfY3JlYXRlQmFyR3JvdXA6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fb3JpZW50LGk9dGhpcy52aXN1YWxNYXBNb2RlbC5nZXQoImludmVyc2UiKTtyZXR1cm4gbmV3IElpKCJob3Jpem9udGFsIiE9PWV8fGk/Imhvcml6b250YWwiPT09ZSYmaT97c2NhbGU6ImJvdHRvbSI9PT10P1stMSwxXTpbMSwxXSxyb3RhdGlvbjotTWF0aC5QSS8yfToidmVydGljYWwiIT09ZXx8aT97c2NhbGU6ImxlZnQiPT09dD9bMSwxXTpbLTEsMV19OntzY2FsZToibGVmdCI9PT10P1sxLC0xXTpbLTEsLTFdfTp7c2NhbGU6ImJvdHRvbSI9PT10P1sxLDFdOlstMSwxXSxyb3RhdGlvbjpNYXRoLlBJLzJ9KX0sX3VwZGF0ZUhhbmRsZTpmdW5jdGlvbihuLG8pe2lmKHRoaXMuX3VzZUhhbmRsZSl7dmFyIGE9dGhpcy5fc2hhcGVzLHI9dGhpcy52aXN1YWxNYXBNb2RlbCxzPWEuaGFuZGxlVGh1bWJzLGw9YS5oYW5kbGVMYWJlbHM7TUwoWzAsMV0sZnVuY3Rpb24odCl7dmFyIGU9c1t0XTtlLnNldFN0eWxlKCJmaWxsIixvLmhhbmRsZXNDb2xvclt0XSksZS5wb3NpdGlvblsxXT1uW3RdO3ZhciBpPWhsKGEuaGFuZGxlTGFiZWxQb2ludHNbdF0sdWwoZSx0aGlzLmdyb3VwKSk7bFt0XS5zZXRTdHlsZSh7eDppWzBdLHk6aVsxXSx0ZXh0OnIuZm9ybWF0VmFsdWVUZXh0KHRoaXMuX2RhdGFJbnRlcnZhbFt0XSksdGV4dFZlcnRpY2FsQWxpZ246Im1pZGRsZSIsdGV4dEFsaWduOnRoaXMuX2FwcGx5VHJhbnNmb3JtKCJob3Jpem9udGFsIj09PXRoaXMuX29yaWVudD8wPT09dD8iYm90dG9tIjoidG9wIjoibGVmdCIsYS5iYXJHcm91cCl9KX0sdGhpcyl9fSxfc2hvd0luZGljYXRvcjpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz10aGlzLnZpc3VhbE1hcE1vZGVsLGE9by5nZXRFeHRlbnQoKSxyPW8uaXRlbVNpemUscz1bMCxyWzFdXSxsPVNMKHQsYSxzLCEwKSx1PXRoaXMuX3NoYXBlcyxoPXUuaW5kaWNhdG9yO2lmKGgpe2gucG9zaXRpb25bMV09bCxoLmF0dHIoImludmlzaWJsZSIsITEpLGguc2V0U2hhcGUoInBvaW50cyIsZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIHQ/W1swLC1JTChlLFRMKGksMCkpXSxbNiwwXSxbMCxJTChlLFRMKG4taSwwKSldXTpbWzAsMF0sWzUsLTVdLFs1LDVdXX0oISFpLG4sbCxyWzFdKSk7dmFyIGM9dGhpcy5nZXRDb250cm9sbGVyVmlzdWFsKHQsImNvbG9yIix7Y29udmVydE9wYWNpdHlUb0FscGhhOiEwfSk7aC5zZXRTdHlsZSgiZmlsbCIsYyk7dmFyIGQ9aGwodS5pbmRpY2F0b3JMYWJlbFBvaW50LHVsKGgsdGhpcy5ncm91cCkpLGY9dS5pbmRpY2F0b3JMYWJlbDtmLmF0dHIoImludmlzaWJsZSIsITEpO3ZhciBwPXRoaXMuX2FwcGx5VHJhbnNmb3JtKCJsZWZ0Iix1LmJhckdyb3VwKSxnPXRoaXMuX29yaWVudDtmLnNldFN0eWxlKHt0ZXh0OihpfHwiIikrby5mb3JtYXRWYWx1ZVRleHQoZSksdGV4dFZlcnRpY2FsQWxpZ246Imhvcml6b250YWwiPT09Zz9wOiJtaWRkbGUiLHRleHRBbGlnbjoiaG9yaXpvbnRhbCI9PT1nPyJjZW50ZXIiOnAseDpkWzBdLHk6ZFsxXX0pfX0sX2VuYWJsZUhvdmVyTGlua1RvU2VyaWVzOmZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLl9zaGFwZXMuYmFyR3JvdXAub24oIm1vdXNlbW92ZSIsZnVuY3Rpb24odCl7aWYobi5faG92ZXJpbmc9ITAsIW4uX2RyYWdnaW5nKXt2YXIgZT1uLnZpc3VhbE1hcE1vZGVsLml0ZW1TaXplLGk9bi5fYXBwbHlUcmFuc2Zvcm0oW3Qub2Zmc2V0WCx0Lm9mZnNldFldLG4uX3NoYXBlcy5iYXJHcm91cCwhMCwhMCk7aVsxXT1JTChUTCgwLGlbMV0pLGVbMV0pLG4uX2RvSG92ZXJMaW5rVG9TZXJpZXMoaVsxXSwwPD1pWzBdJiZpWzBdPD1lWzBdKX19KS5vbigibW91c2VvdXQiLGZ1bmN0aW9uKCl7bi5faG92ZXJpbmc9ITEsbi5fZHJhZ2dpbmd8fG4uX2NsZWFySG92ZXJMaW5rVG9TZXJpZXMoKX0pfSxfZW5hYmxlSG92ZXJMaW5rRnJvbVNlcmllczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuYXBpLmdldFpyKCk7dGhpcy52aXN1YWxNYXBNb2RlbC5vcHRpb24uaG92ZXJMaW5rPyh0Lm9uKCJtb3VzZW92ZXIiLHRoaXMuX2hvdmVyTGlua0Zyb21TZXJpZXNNb3VzZU92ZXIsdGhpcyksdC5vbigibW91c2VvdXQiLHRoaXMuX2hpZGVJbmRpY2F0b3IsdGhpcykpOnRoaXMuX2NsZWFySG92ZXJMaW5rRnJvbVNlcmllcygpfSxfZG9Ib3ZlckxpbmtUb1NlcmllczpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMudmlzdWFsTWFwTW9kZWwsbj1pLml0ZW1TaXplO2lmKGkub3B0aW9uLmhvdmVyTGluayl7dmFyIG89WzAsblsxXV0sYT1pLmdldEV4dGVudCgpO3Q9SUwoVEwob1swXSx0KSxvWzFdKTt2YXIgcj1mdW5jdGlvbih0LGUsaSl7dmFyIG49NixvPXQuZ2V0KCJob3ZlckxpbmtEYXRhU2l6ZSIpO28mJihuPVNMKG8sZSxpLCEwKS8yKTtyZXR1cm4gbn0oaSxhLG8pLHM9W3Qtcix0K3JdLGw9U0wodCxvLGEsITApLHU9W1NMKHNbMF0sbyxhLCEwKSxTTChzWzFdLG8sYSwhMCldO3NbMF08b1swXSYmKHVbMF09LTEvMCksb1sxXTxzWzFdJiYodVsxXT0xLzApLGUmJih1WzBdPT09LTEvMD90aGlzLl9zaG93SW5kaWNhdG9yKGwsdVsxXSwiPCAiLHIpOnVbMV09PT0xLzA/dGhpcy5fc2hvd0luZGljYXRvcihsLHVbMF0sIj4gIixyKTp0aGlzLl9zaG93SW5kaWNhdG9yKGwsbCwi4omIICIscikpO3ZhciBoPXRoaXMuX2hvdmVyTGlua0RhdGFJbmRpY2VzLGM9W107KGV8fENMKGkpKSYmKGM9dGhpcy5faG92ZXJMaW5rRGF0YUluZGljZXM9aS5maW5kVGFyZ2V0RGF0YUluZGljZXModSkpO3ZhciBkPWZ1bmN0aW9uKHQsZSl7dmFyIGk9e30sbj17fTtyZXR1cm4gbyh0fHxbXSxpKSxvKGV8fFtdLG4saSksW2EoaSksYShuKV07ZnVuY3Rpb24gbyh0LGUsaSl7Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWZvcih2YXIgYT10W25dLnNlcmllc0lkLHI9RW8odFtuXS5kYXRhSW5kZXgpLHM9aSYmaVthXSxsPTAsdT1yLmxlbmd0aDtsPHU7bCsrKXt2YXIgaD1yW2xdO3MmJnNbaF0/c1toXT1udWxsOihlW2FdfHwoZVthXT17fSkpW2hdPTF9fWZ1bmN0aW9uIGEodCxlKXt2YXIgaT1bXTtmb3IodmFyIG4gaW4gdClpZih0Lmhhc093blByb3BlcnR5KG4pJiZudWxsIT10W25dKWlmKGUpaS5wdXNoKCtuKTtlbHNle3ZhciBvPWEodFtuXSwhMCk7by5sZW5ndGgmJmkucHVzaCh7c2VyaWVzSWQ6bixkYXRhSW5kZXg6b30pfXJldHVybiBpfX0oaCxjKTt0aGlzLl9kaXNwYXRjaEhpZ2hEb3duKCJkb3ducGxheSIsYkwoZFswXSxpKSksdGhpcy5fZGlzcGF0Y2hIaWdoRG93bigiaGlnaGxpZ2h0IixiTChkWzFdLGkpKX19LF9ob3ZlckxpbmtGcm9tU2VyaWVzTW91c2VPdmVyOmZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LGk9dGhpcy52aXN1YWxNYXBNb2RlbDtpZihlJiZudWxsIT1lLmRhdGFJbmRleCl7dmFyIG49dGhpcy5lY01vZGVsLmdldFNlcmllc0J5SW5kZXgoZS5zZXJpZXNJbmRleCk7aWYoaS5pc1RhcmdldFNlcmllcyhuKSl7dmFyIG89bi5nZXREYXRhKGUuZGF0YVR5cGUpLGE9by5nZXQoaS5nZXREYXRhRGltZW5zaW9uKG8pLGUuZGF0YUluZGV4LCEwKTtpc05hTihhKXx8dGhpcy5fc2hvd0luZGljYXRvcihhLGEpfX19LF9oaWRlSW5kaWNhdG9yOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fc2hhcGVzO3QuaW5kaWNhdG9yJiZ0LmluZGljYXRvci5hdHRyKCJpbnZpc2libGUiLCEwKSx0LmluZGljYXRvckxhYmVsJiZ0LmluZGljYXRvckxhYmVsLmF0dHIoImludmlzaWJsZSIsITApfSxfY2xlYXJIb3ZlckxpbmtUb1NlcmllczpmdW5jdGlvbigpe3RoaXMuX2hpZGVJbmRpY2F0b3IoKTt2YXIgdD10aGlzLl9ob3ZlckxpbmtEYXRhSW5kaWNlczt0aGlzLl9kaXNwYXRjaEhpZ2hEb3duKCJkb3ducGxheSIsYkwodCx0aGlzLnZpc3VhbE1hcE1vZGVsKSksdC5sZW5ndGg9MH0sX2NsZWFySG92ZXJMaW5rRnJvbVNlcmllczpmdW5jdGlvbigpe3RoaXMuX2hpZGVJbmRpY2F0b3IoKTt2YXIgdD10aGlzLmFwaS5nZXRacigpO3Qub2ZmKCJtb3VzZW92ZXIiLHRoaXMuX2hvdmVyTGlua0Zyb21TZXJpZXNNb3VzZU92ZXIpLHQub2ZmKCJtb3VzZW91dCIsdGhpcy5faGlkZUluZGljYXRvcil9LF9hcHBseVRyYW5zZm9ybTpmdW5jdGlvbih0LGUsaSxuKXt2YXIgbz11bChlLG4/bnVsbDp0aGlzLmdyb3VwKTtyZXR1cm4geWxbayh0KT8iYXBwbHlUcmFuc2Zvcm0iOiJ0cmFuc2Zvcm1EaXJlY3Rpb24iXSh0LG8saSl9LF9kaXNwYXRjaEhpZ2hEb3duOmZ1bmN0aW9uKHQsZSl7ZSYmZS5sZW5ndGgmJnRoaXMuYXBpLmRpc3BhdGNoQWN0aW9uKHt0eXBlOnQsYmF0Y2g6ZX0pfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJIb3ZlckxpbmtGcm9tU2VyaWVzKCksdGhpcy5fY2xlYXJIb3ZlckxpbmtUb1NlcmllcygpfSxyZW1vdmU6ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckhvdmVyTGlua0Zyb21TZXJpZXMoKSx0aGlzLl9jbGVhckhvdmVyTGlua1RvU2VyaWVzKCl9fSk7ZnVuY3Rpb24gREwodCxlLGksbil7cmV0dXJuIG5ldyBxcih7c2hhcGU6e3BvaW50czp0fSxkcmFnZ2FibGU6ISFpLGN1cnNvcjplLGRyaWZ0Omksb25tb3VzZW1vdmU6ZnVuY3Rpb24odCl7V3QodC5ldmVudCl9LG9uZHJhZ2VuZDpufSl9ZnVuY3Rpb24gQ0wodCl7dmFyIGU9dC5nZXQoImhvdmVyTGlua09uSGFuZGxlIik7cmV0dXJuISEobnVsbD09ZT90LmdldCgicmVhbHRpbWUiKTplKX1mdW5jdGlvbiBMTCh0KXtyZXR1cm4idmVydGljYWwiPT09dD8ibnMtcmVzaXplIjoiZXctcmVzaXplIn1nZih7dHlwZToic2VsZWN0RGF0YVJhbmdlIixldmVudDoiZGF0YVJhbmdlU2VsZWN0ZWQiLHVwZGF0ZToidXBkYXRlIn0sZnVuY3Rpb24oZSx0KXt0LmVhY2hDb21wb25lbnQoe21haW5UeXBlOiJ2aXN1YWxNYXAiLHF1ZXJ5OmV9LGZ1bmN0aW9uKHQpe3Quc2V0U2VsZWN0ZWQoZS5zZWxlY3RlZCl9KX0pLGZmKGlMKTt2YXIga0w9bUwuZXh0ZW5kKHt0eXBlOiJ2aXN1YWxNYXAucGllY2V3aXNlIixkZWZhdWx0T3B0aW9uOntzZWxlY3RlZDpudWxsLG1pbk9wZW46ITEsbWF4T3BlbjohMSxhbGlnbjoiYXV0byIsaXRlbVdpZHRoOjIwLGl0ZW1IZWlnaHQ6MTQsaXRlbVN5bWJvbDoicm91bmRSZWN0IixwaWVjZUxpc3Q6bnVsbCxjYXRlZ29yaWVzOm51bGwsc3BsaXROdW1iZXI6NSxzZWxlY3RlZE1vZGU6Im11bHRpcGxlIixpdGVtR2FwOjEwLGhvdmVyTGluazohMCxzaG93TGFiZWw6bnVsbH0sb3B0aW9uVXBkYXRlZDpmdW5jdGlvbih0LGUpe2tMLnN1cGVyQXBwbHkodGhpcywib3B0aW9uVXBkYXRlZCIsYXJndW1lbnRzKSx0aGlzLl9waWVjZUxpc3Q9W10sdGhpcy5yZXNldEV4dGVudCgpO3ZhciBpPXRoaXMuX21vZGU9dGhpcy5fZGV0ZXJtaW5lTW9kZSgpO1BMW3RoaXMuX21vZGVdLmNhbGwodGhpcyksdGhpcy5fcmVzZXRTZWxlY3RlZCh0LGUpO3ZhciBuPXRoaXMub3B0aW9uLmNhdGVnb3JpZXM7dGhpcy5yZXNldFZpc3VhbChmdW5jdGlvbih0LGUpeyJjYXRlZ29yaWVzIj09PWk/KHQubWFwcGluZ01ldGhvZD0iY2F0ZWdvcnkiLHQuY2F0ZWdvcmllcz1EKG4pKToodC5kYXRhRXh0ZW50PXRoaXMuZ2V0RXh0ZW50KCksdC5tYXBwaW5nTWV0aG9kPSJwaWVjZXdpc2UiLHQucGllY2VMaXN0PU4odGhpcy5fcGllY2VMaXN0LGZ1bmN0aW9uKHQpe3Q9RCh0KTtyZXR1cm4iaW5SYW5nZSIhPT1lJiYodC52aXN1YWw9bnVsbCksdH0pKX0pfSxjb21wbGV0ZVZpc3VhbE9wdGlvbjpmdW5jdGlvbigpe3ZhciBuPXRoaXMub3B0aW9uLGk9e30sdD1hXy5saXN0VmlzdWFsVHlwZXMoKSxvPXRoaXMuaXNDYXRlZ29yeSgpO2Z1bmN0aW9uIGEodCxlLGkpe3JldHVybiB0JiZ0W2VdJiYoUih0W2VdKT90W2VdLmhhc093blByb3BlcnR5KGkpOnRbZV09PT1pKX1FKG4ucGllY2VzLGZ1bmN0aW9uKGUpe0UodCxmdW5jdGlvbih0KXtlLmhhc093blByb3BlcnR5KHQpJiYoaVt0XT0xKX0pfSksRShpLGZ1bmN0aW9uKHQsZSl7dmFyIGk9MDtFKHRoaXMuc3RhdGVMaXN0LGZ1bmN0aW9uKHQpe2l8PWEobix0LGUpfHxhKG4udGFyZ2V0LHQsZSl9LHRoaXMpLGl8fEUodGhpcy5zdGF0ZUxpc3QsZnVuY3Rpb24odCl7KG5bdF18fChuW3RdPXt9KSlbZV09bEwoZSwiaW5SYW5nZSI9PT10PyJhY3RpdmUiOiJpbmFjdGl2ZSIsbyl9KX0sdGhpcyksbUwucHJvdG90eXBlLmNvbXBsZXRlVmlzdWFsT3B0aW9uLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sX3Jlc2V0U2VsZWN0ZWQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9wdGlvbixuPXRoaXMuX3BpZWNlTGlzdCxvPShlP2k6dCkuc2VsZWN0ZWR8fHt9O2lmKGkuc2VsZWN0ZWQ9byxFKG4sZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmdldFNlbGVjdGVkTWFwS2V5KHQpO28uaGFzT3duUHJvcGVydHkoaSl8fChvW2ldPSEwKX0sdGhpcyksInNpbmdsZSI9PT1pLnNlbGVjdGVkTW9kZSl7dmFyIGE9ITE7RShuLGZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5nZXRTZWxlY3RlZE1hcEtleSh0KTtvW2ldJiYoYT9vW2ldPSExOmE9ITApfSx0aGlzKX19LGdldFNlbGVjdGVkTWFwS2V5OmZ1bmN0aW9uKHQpe3JldHVybiJjYXRlZ29yaWVzIj09PXRoaXMuX21vZGU/dC52YWx1ZSsiIjp0LmluZGV4KyIifSxnZXRQaWVjZUxpc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGllY2VMaXN0fSxfZGV0ZXJtaW5lTW9kZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uO3JldHVybiB0LnBpZWNlcyYmMDx0LnBpZWNlcy5sZW5ndGg/InBpZWNlcyI6dGhpcy5vcHRpb24uY2F0ZWdvcmllcz8iY2F0ZWdvcmllcyI6InNwbGl0TnVtYmVyIn0sc2V0U2VsZWN0ZWQ6ZnVuY3Rpb24odCl7dGhpcy5vcHRpb24uc2VsZWN0ZWQ9RCh0KX0sZ2V0VmFsdWVTdGF0ZTpmdW5jdGlvbih0KXt2YXIgZT1hXy5maW5kUGllY2VJbmRleCh0LHRoaXMuX3BpZWNlTGlzdCk7cmV0dXJuIG51bGwhPWUmJnRoaXMub3B0aW9uLnNlbGVjdGVkW3RoaXMuZ2V0U2VsZWN0ZWRNYXBLZXkodGhpcy5fcGllY2VMaXN0W2VdKV0/ImluUmFuZ2UiOiJvdXRPZlJhbmdlIn0sZmluZFRhcmdldERhdGFJbmRpY2VzOmZ1bmN0aW9uKG4pe3ZhciBvPVtdO3JldHVybiB0aGlzLmVhY2hUYXJnZXRTZXJpZXMoZnVuY3Rpb24odCl7dmFyIGk9W10sZT10LmdldERhdGEoKTtlLmVhY2godGhpcy5nZXREYXRhRGltZW5zaW9uKGUpLGZ1bmN0aW9uKHQsZSl7YV8uZmluZFBpZWNlSW5kZXgodCx0aGlzLl9waWVjZUxpc3QpPT09biYmaS5wdXNoKGUpfSx0aGlzKSxvLnB1c2goe3Nlcmllc0lkOnQuaWQsZGF0YUluZGV4Oml9KX0sdGhpcyksb30sZ2V0UmVwcmVzZW50VmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU7aWYodGhpcy5pc0NhdGVnb3J5KCkpZT10LnZhbHVlO2Vsc2UgaWYobnVsbCE9dC52YWx1ZSllPXQudmFsdWU7ZWxzZXt2YXIgaT10LmludGVydmFsfHxbXTtlPWlbMF09PT0tMS8wJiZpWzFdPT09MS8wPzA6KGlbMF0raVsxXSkvMn1yZXR1cm4gZX0sZ2V0VmlzdWFsTWV0YTpmdW5jdGlvbihvKXtpZighdGhpcy5pc0NhdGVnb3J5KCkpe3ZhciBhPVtdLHI9W10scz10aGlzLHQ9dGhpcy5fcGllY2VMaXN0LnNsaWNlKCk7aWYodC5sZW5ndGgpe3ZhciBlPXRbMF0uaW50ZXJ2YWxbMF07ZSE9PS0xLzAmJnQudW5zaGlmdCh7aW50ZXJ2YWw6Wy0xLzAsZV19KSwoZT10W3QubGVuZ3RoLTFdLmludGVydmFsWzFdKSE9PTEvMCYmdC5wdXNoKHtpbnRlcnZhbDpbZSwxLzBdfSl9ZWxzZSB0LnB1c2goe2ludGVydmFsOlstMS8wLDEvMF19KTt2YXIgaT0tMS8wO3JldHVybiBFKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5pbnRlcnZhbDtlJiYoZVswXT5pJiZuKFtpLGVbMF1dLCJvdXRPZlJhbmdlIiksbihlLnNsaWNlKCkpLGk9ZVsxXSl9LHRoaXMpLHtzdG9wczphLG91dGVyQ29sb3JzOnJ9fWZ1bmN0aW9uIG4odCxlKXt2YXIgaT1zLmdldFJlcHJlc2VudFZhbHVlKHtpbnRlcnZhbDp0fSk7ZT1lfHxzLmdldFZhbHVlU3RhdGUoaSk7dmFyIG49byhpLGUpO3RbMF09PT0tMS8wP3JbMF09bjp0WzFdPT09MS8wP3JbMV09bjphLnB1c2goe3ZhbHVlOnRbMF0sY29sb3I6bn0se3ZhbHVlOnRbMV0sY29sb3I6bn0pfX19KSxQTD17c3BsaXROdW1iZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbixlPXRoaXMuX3BpZWNlTGlzdCxpPU1hdGgubWluKHQucHJlY2lzaW9uLDIwKSxuPXRoaXMuZ2V0RXh0ZW50KCksbz10LnNwbGl0TnVtYmVyO289TWF0aC5tYXgocGFyc2VJbnQobywxMCksMSksdC5zcGxpdE51bWJlcj1vO2Zvcih2YXIgYT0oblsxXS1uWzBdKS9vOythLnRvRml4ZWQoaSkhPT1hJiZpPDU7KWkrKzt0LnByZWNpc2lvbj1pLGE9K2EudG9GaXhlZChpKTt2YXIgcj0wO3QubWluT3BlbiYmZS5wdXNoKHtpbmRleDpyKyssaW50ZXJ2YWw6Wy0xLzAsblswXV0sY2xvc2U6WzAsMF19KTtmb3IodmFyIHM9blswXSxsPXIrbztyPGw7cys9YSl7dmFyIHU9cj09PW8tMT9uWzFdOnMrYTtlLnB1c2goe2luZGV4OnIrKyxpbnRlcnZhbDpbcyx1XSxjbG9zZTpbMSwxXX0pfXQubWF4T3BlbiYmZS5wdXNoKHtpbmRleDpyKyssaW50ZXJ2YWw6W25bMV0sMS8wXSxjbG9zZTpbMCwwXX0pLFlsKGUpLEUoZSxmdW5jdGlvbih0KXt0LnRleHQ9dGhpcy5mb3JtYXRWYWx1ZVRleHQodC5pbnRlcnZhbCl9LHRoaXMpfSxjYXRlZ29yaWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb247RSh0LmNhdGVnb3JpZXMsZnVuY3Rpb24odCl7dGhpcy5fcGllY2VMaXN0LnB1c2goe3RleHQ6dGhpcy5mb3JtYXRWYWx1ZVRleHQodCwhMCksdmFsdWU6dH0pfSx0aGlzKSxOTCh0LHRoaXMuX3BpZWNlTGlzdCl9LHBpZWNlczpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9uLGQ9dGhpcy5fcGllY2VMaXN0O0UodC5waWVjZXMsZnVuY3Rpb24odCxlKXtSKHQpfHwodD17dmFsdWU6dH0pO3ZhciBpPXt0ZXh0OiIiLGluZGV4OmV9O2lmKG51bGwhPXQubGFiZWwmJihpLnRleHQ9dC5sYWJlbCksdC5oYXNPd25Qcm9wZXJ0eSgidmFsdWUiKSl7dmFyIG49aS52YWx1ZT10LnZhbHVlO2kuaW50ZXJ2YWw9W24sbl0saS5jbG9zZT1bMSwxXX1lbHNle2Zvcih2YXIgbz1pLmludGVydmFsPVtdLGE9aS5jbG9zZT1bMCwwXSxyPVsxLDAsMV0scz1bLTEvMCwxLzBdLGw9W10sdT0wO3U8Mjt1Kyspe2Zvcih2YXIgaD1bWyJndGUiLCJndCIsIm1pbiJdLFsibHRlIiwibHQiLCJtYXgiXV1bdV0sYz0wO2M8MyYmbnVsbD09b1t1XTtjKyspb1t1XT10W2hbY11dLGFbdV09cltjXSxsW3VdPTI9PT1jO251bGw9PW9bdV0mJihvW3VdPXNbdV0pfWxbMF0mJm9bMV09PT0xLzAmJihhWzBdPTApLGxbMV0mJm9bMF09PT0tMS8wJiYoYVsxXT0wKSxvWzBdPT09b1sxXSYmYVswXSYmYVsxXSYmKGkudmFsdWU9b1swXSl9aS52aXN1YWw9YV8ucmV0cmlldmVWaXN1YWxzKHQpLGQucHVzaChpKX0sdGhpcyksTkwodCxkKSxZbChkKSxFKGQsZnVuY3Rpb24odCl7dmFyIGU9dC5jbG9zZSxpPVtbIjwiLCLiiaQiXVtlWzFdXSxbIj4iLCLiiaUiXVtlWzBdXV07dC50ZXh0PXQudGV4dHx8dGhpcy5mb3JtYXRWYWx1ZVRleHQobnVsbCE9dC52YWx1ZT90LnZhbHVlOnQuaW50ZXJ2YWwsITEsaSl9LHRoaXMpfX07ZnVuY3Rpb24gTkwodCxlKXt2YXIgaT10LmludmVyc2U7KCJ2ZXJ0aWNhbCI9PT10Lm9yaWVudD8haTppKSYmZS5yZXZlcnNlKCl9X0wuZXh0ZW5kKHt0eXBlOiJ2aXN1YWxNYXAucGllY2V3aXNlIixkb1JlbmRlcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuZ3JvdXA7YS5yZW1vdmVBbGwoKTt2YXIgcj10aGlzLnZpc3VhbE1hcE1vZGVsLHM9ci5nZXQoInRleHRHYXAiKSx0PXIudGV4dFN0eWxlTW9kZWwsbD10LmdldEZvbnQoKSx1PXQuZ2V0VGV4dENvbG9yKCksaD10aGlzLl9nZXRJdGVtQWxpZ24oKSxjPXIuaXRlbVNpemUsZT10aGlzLl9nZXRWaWV3RGF0YSgpLGk9ZS5lbmRzVGV4dCxkPVcoci5nZXQoInNob3dMYWJlbCIsITApLCFpKTtpJiZ0aGlzLl9yZW5kZXJFbmRzVGV4dChhLGlbMF0sYyxkLGgpLEUoZS52aWV3UGllY2VMaXN0LGZ1bmN0aW9uKHQpe3ZhciBlPXQucGllY2UsaT1uZXcgSWk7aS5vbmNsaWNrPUEodGhpcy5fb25JdGVtQ2xpY2ssdGhpcyxlKSx0aGlzLl9lbmFibGVIb3ZlckxpbmsoaSx0LmluZGV4SW5Nb2RlbFBpZWNlTGlzdCk7dmFyIG49ci5nZXRSZXByZXNlbnRWYWx1ZShlKTtpZih0aGlzLl9jcmVhdGVJdGVtU3ltYm9sKGksbixbMCwwLGNbMF0sY1sxXV0pLGQpe3ZhciBvPXRoaXMudmlzdWFsTWFwTW9kZWwuZ2V0VmFsdWVTdGF0ZShuKTtpLmFkZChuZXcgRnIoe3N0eWxlOnt4OiJyaWdodCI9PT1oPy1zOmNbMF0rcyx5OmNbMV0vMix0ZXh0OmUudGV4dCx0ZXh0VmVydGljYWxBbGlnbjoibWlkZGxlIix0ZXh0QWxpZ246aCx0ZXh0Rm9udDpsLHRleHRGaWxsOnUsb3BhY2l0eToib3V0T2ZSYW5nZSI9PT1vPy41OjF9fSkpfWEuYWRkKGkpfSx0aGlzKSxpJiZ0aGlzLl9yZW5kZXJFbmRzVGV4dChhLGlbMV0sYyxkLGgpLG11KHIuZ2V0KCJvcmllbnQiKSxhLHIuZ2V0KCJpdGVtR2FwIikpLHRoaXMucmVuZGVyQmFja2dyb3VuZChhKSx0aGlzLnBvc2l0aW9uR3JvdXAoYSl9LF9lbmFibGVIb3Zlckxpbms6ZnVuY3Rpb24odCxpKXtmdW5jdGlvbiBlKHQpe3ZhciBlPXRoaXMudmlzdWFsTWFwTW9kZWw7ZS5vcHRpb24uaG92ZXJMaW5rJiZ0aGlzLmFwaS5kaXNwYXRjaEFjdGlvbih7dHlwZTp0LGJhdGNoOmJMKGUuZmluZFRhcmdldERhdGFJbmRpY2VzKGkpLGUpfSl9dC5vbigibW91c2VvdmVyIixBKGUsdGhpcywiaGlnaGxpZ2h0IikpLm9uKCJtb3VzZW91dCIsQShlLHRoaXMsImRvd25wbGF5IikpfSxfZ2V0SXRlbUFsaWduOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy52aXN1YWxNYXBNb2RlbCxlPXQub3B0aW9uO2lmKCJ2ZXJ0aWNhbCI9PT1lLm9yaWVudClyZXR1cm4gd0wodCx0aGlzLmFwaSx0Lml0ZW1TaXplKTt2YXIgaT1lLmFsaWduO3JldHVybiBpJiYiYXV0byIhPT1pfHwoaT0ibGVmdCIpLGl9LF9yZW5kZXJFbmRzVGV4dDpmdW5jdGlvbih0LGUsaSxuLG8pe2lmKGUpe3ZhciBhPW5ldyBJaSxyPXRoaXMudmlzdWFsTWFwTW9kZWwudGV4dFN0eWxlTW9kZWw7YS5hZGQobmV3IEZyKHtzdHlsZTp7eDpuPyJyaWdodCI9PT1vP2lbMF06MDppWzBdLzIseTppWzFdLzIsdGV4dFZlcnRpY2FsQWxpZ246Im1pZGRsZSIsdGV4dEFsaWduOm4/bzoiY2VudGVyIix0ZXh0OmUsdGV4dEZvbnQ6ci5nZXRGb250KCksdGV4dEZpbGw6ci5nZXRUZXh0Q29sb3IoKX19KSksdC5hZGQoYSl9fSxfZ2V0Vmlld0RhdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnZpc3VhbE1hcE1vZGVsLGU9Tih0LmdldFBpZWNlTGlzdCgpLGZ1bmN0aW9uKHQsZSl7cmV0dXJue3BpZWNlOnQsaW5kZXhJbk1vZGVsUGllY2VMaXN0OmV9fSksaT10LmdldCgidGV4dCIpLG49dC5nZXQoIm9yaWVudCIpLG89dC5nZXQoImludmVyc2UiKTtyZXR1cm4oImhvcml6b250YWwiPT09bj9vOiFvKT9lLnJldmVyc2UoKTppPWkmJmkuc2xpY2UoKS5yZXZlcnNlKCkse3ZpZXdQaWVjZUxpc3Q6ZSxlbmRzVGV4dDppfX0sX2NyZWF0ZUl0ZW1TeW1ib2w6ZnVuY3Rpb24odCxlLGkpe3QuYWRkKG1nKHRoaXMuZ2V0Q29udHJvbGxlclZpc3VhbChlLCJzeW1ib2wiKSxpWzBdLGlbMV0saVsyXSxpWzNdLHRoaXMuZ2V0Q29udHJvbGxlclZpc3VhbChlLCJjb2xvciIpKSl9LF9vbkl0ZW1DbGljazpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZpc3VhbE1hcE1vZGVsLGk9ZS5vcHRpb24sbj1EKGkuc2VsZWN0ZWQpLG89ZS5nZXRTZWxlY3RlZE1hcEtleSh0KTsic2luZ2xlIj09PWkuc2VsZWN0ZWRNb2RlPyhuW29dPSEwLEUobixmdW5jdGlvbih0LGUpe25bZV09ZT09PW99KSk6bltvXT0hbltvXSx0aGlzLmFwaS5kaXNwYXRjaEFjdGlvbih7dHlwZToic2VsZWN0RGF0YVJhbmdlIixmcm9tOnRoaXMudWlkLHZpc3VhbE1hcElkOnRoaXMudmlzdWFsTWFwTW9kZWwuaWQsc2VsZWN0ZWQ6bn0pfX0pO2ZmKGlMKTt2YXIgT0wsRUw9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIix6TD0idW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdz9udWxsOndpbmRvdyxSTD0hMSxCTD16TCYmekwuZG9jdW1lbnQ7ZnVuY3Rpb24gVkwodCl7cmV0dXJuIE9MKHQpfWlmKEJMJiYhdi5jYW52YXNTdXBwb3J0ZWQpdHJ5e0JMLm5hbWVzcGFjZXMuenJ2bWx8fEJMLm5hbWVzcGFjZXMuYWRkKCJ6cnZtbCIsRUwpLE9MPWZ1bmN0aW9uKHQpe3JldHVybiBCTC5jcmVhdGVFbGVtZW50KCI8enJ2bWw6Iit0KycgY2xhc3M9Inpydm1sIj4nKX19Y2F0Y2godCl7T0w9ZnVuY3Rpb24odCl7cmV0dXJuIEJMLmNyZWF0ZUVsZW1lbnQoIjwiK3QrJyB4bWxucz0iJytFTCsnIiBjbGFzcz0ienJ2bWwiPicpfX12YXIgR0wsRkw9aXIuQ01ELFdMPU1hdGgucm91bmQsSEw9TWF0aC5zcXJ0LFpMPU1hdGguYWJzLFVMPU1hdGguY29zLFhMPU1hdGguc2luLFlMPU1hdGgubWF4O2lmKCF2LmNhbnZhc1N1cHBvcnRlZCl7dmFyIGpMPSIsIixxTD0icHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0IixLTD0yMTYwMCwkTD1LTC8yLEpMPWZ1bmN0aW9uKHQpe3Quc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3dpZHRoOjFweDtoZWlnaHQ6MXB4OyIsdC5jb29yZHNpemU9S0wrIiwiK0tMLHQuY29vcmRvcmlnaW49IjAsMCJ9LFFMPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4icmdiKCIrW3QsZSxpXS5qb2luKCIsIikrIikifSx0az1mdW5jdGlvbih0LGUpe2UmJnQmJmUucGFyZW50Tm9kZSE9PXQmJnQuYXBwZW5kQ2hpbGQoZSl9LGVrPWZ1bmN0aW9uKHQsZSl7ZSYmdCYmZS5wYXJlbnROb2RlPT09dCYmdC5yZW1vdmVDaGlsZChlKX0saWs9ZnVuY3Rpb24odCxlLGkpe3JldHVybiAxZTUqKHBhcnNlRmxvYXQodCl8fDApKzFlMyoocGFyc2VGbG9hdChlKXx8MCkraX0sbms9SG4sb2s9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPVJlKGUpO2k9K2ksaXNOYU4oaSkmJihpPTEpLG4mJih0LmNvbG9yPVFMKG5bMF0sblsxXSxuWzJdKSx0Lm9wYWNpdHk9aSpuWzNdKX0sYWs9ZnVuY3Rpb24odCxlLGksbil7dmFyIG89ImZpbGwiPT09ZSxhPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07bnVsbCE9aVtlXSYmIm5vbmUiIT09aVtlXSYmKG98fCFvJiZpLmxpbmVXaWR0aCk/KHRbbz8iZmlsbGVkIjoic3Ryb2tlZCJdPSJ0cnVlIixpW2VdaW5zdGFuY2VvZiBzcyYmZWsodCxhKSxhPWF8fFZMKGUpLG8/ZnVuY3Rpb24odCxlLGkpe3ZhciBuLG8sYT1lLmZpbGw7aWYobnVsbCE9YSlpZihhIGluc3RhbmNlb2Ygc3Mpe3ZhciByLHM9MCxsPVswLDBdLHU9MCxoPTEsYz1pLmdldEJvdW5kaW5nUmVjdCgpLGQ9Yy53aWR0aCxmPWMuaGVpZ2h0O2lmKCJsaW5lYXIiPT09YS50eXBlKXtyPSJncmFkaWVudCI7dmFyIHA9aS50cmFuc2Zvcm0sZz1bYS54KmQsYS55KmZdLG09W2EueDIqZCxhLnkyKmZdO3AmJihidChnLGcscCksYnQobSxtLHApKTt2YXIgdj1tWzBdLWdbMF0seT1tWzFdLWdbMV07KHM9MTgwKk1hdGguYXRhbjIodix5KS9NYXRoLlBJKTwwJiYocys9MzYwKSxzPDFlLTYmJihzPTApfWVsc2V7cj0iZ3JhZGllbnRyYWRpYWwiO2c9W2EueCpkLGEueSpmXSxwPWkudHJhbnNmb3JtO3ZhciB4PWkuc2NhbGUsXz1kLHc9ZjtsPVsoZ1swXS1jLngpL18sKGdbMV0tYy55KS93XSxwJiZidChnLGcscCksXy89eFswXSpLTCx3Lz14WzFdKktMO3ZhciBiPVlMKF8sdyk7dT0wL2IsaD0yKmEuci9iLXV9dmFyIFM9YS5jb2xvclN0b3BzLnNsaWNlKCk7Uy5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQub2Zmc2V0LWUub2Zmc2V0fSk7Zm9yKHZhciBNPVMubGVuZ3RoLEk9W10sVD1bXSxBPTA7QTxNO0ErKyl7dmFyIEQ9U1tBXSxDPShuPUQuY29sb3Isdm9pZCAwLG89UmUobiksW1FMKG9bMF0sb1sxXSxvWzJdKSxvWzNdXSk7VC5wdXNoKEQub2Zmc2V0KmgrdSsiICIrQ1swXSksMCE9PUEmJkEhPT1NLTF8fEkucHVzaChDKX1pZigyPD1NKXt2YXIgTD1JWzBdWzBdLGs9SVsxXVswXSxQPUlbMF1bMV0qZS5vcGFjaXR5LE49SVsxXVsxXSplLm9wYWNpdHk7dC50eXBlPXIsdC5tZXRob2Q9Im5vbmUiLHQuZm9jdXM9IjEwMCUiLHQuYW5nbGU9cyx0LmNvbG9yPUwsdC5jb2xvcjI9ayx0LmNvbG9ycz1ULmpvaW4oIiwiKSx0Lm9wYWNpdHk9Tix0Lm9wYWNpdHkyPVB9InJhZGlhbCI9PT1yJiYodC5mb2N1c3Bvc2l0aW9uPWwuam9pbigiLCIpKX1lbHNlIG9rKHQsYSxlLm9wYWNpdHkpfShhLGksbik6ZnVuY3Rpb24odCxlKXtlLmxpbmVEYXNoJiYodC5kYXNoc3R5bGU9ZS5saW5lRGFzaC5qb2luKCIgIikpLG51bGw9PWUuc3Ryb2tlfHxlLnN0cm9rZSBpbnN0YW5jZW9mIHNzfHxvayh0LGUuc3Ryb2tlLGUub3BhY2l0eSl9KGEsaSksdGsodCxhKSk6KHRbbz8iZmlsbGVkIjoic3Ryb2tlZCJdPSJmYWxzZSIsZWsodCxhKSl9LHJrPVtbXSxbXSxbXV07U3IucHJvdG90eXBlLmJydXNoVk1MPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc3R5bGUsaT10aGlzLl92bWxFbDtpfHwoaT1WTCgic2hhcGUiKSxKTChpKSx0aGlzLl92bWxFbD1pKSxhayhpLCJmaWxsIixlLHRoaXMpLGFrKGksInN0cm9rZSIsZSx0aGlzKTt2YXIgbj10aGlzLnRyYW5zZm9ybSxvPW51bGwhPW4sYT1pLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzdHJva2UiKVswXTtpZihhKXt2YXIgcj1lLmxpbmVXaWR0aDtpZihvJiYhZS5zdHJva2VOb1NjYWxlKXt2YXIgcz1uWzBdKm5bM10tblsxXSpuWzJdO3IqPUhMKFpMKHMpKX1hLndlaWdodD1yKyJweCJ9dmFyIGw9dGhpcy5wYXRofHwodGhpcy5wYXRoPW5ldyBpcik7dGhpcy5fX2RpcnR5UGF0aCYmKGwuYmVnaW5QYXRoKCksbC5zdWJQaXhlbE9wdGltaXplPSExLHRoaXMuYnVpbGRQYXRoKGwsdGhpcy5zaGFwZSksbC50b1N0YXRpYygpLHRoaXMuX19kaXJ0eVBhdGg9ITEpLGkucGF0aD1mdW5jdGlvbih0LGUpe3ZhciBpLG4sbyxhLHIscyxsPUZMLk0sdT1GTC5DLGg9RkwuTCxjPUZMLkEsZD1GTC5RLGY9W10scD10LmRhdGEsZz10LmxlbigpO2ZvcihhPTA7YTxnOyl7c3dpdGNoKG49IiIsaT0wLG89cFthKytdKXtjYXNlIGw6bj0iIG0gIixpPTEscj1wW2ErK10scz1wW2ErK10scmtbMF1bMF09cixya1swXVsxXT1zO2JyZWFrO2Nhc2UgaDpuPSIgbCAiLGk9MSxyPXBbYSsrXSxzPXBbYSsrXSxya1swXVswXT1yLHJrWzBdWzFdPXM7YnJlYWs7Y2FzZSBkOmNhc2UgdTpuPSIgYyAiLGk9Mzt2YXIgbSx2LHk9cFthKytdLHg9cFthKytdLF89cFthKytdLHc9cFthKytdO289PT1kPyhfPSgobT1fKSsyKnkpLzMsdz0oKHY9dykrMip4KS8zLHk9KHIrMip5KS8zLHg9KHMrMip4KS8zKToobT1wW2ErK10sdj1wW2ErK10pLHJrWzBdWzBdPXkscmtbMF1bMV09eCxya1sxXVswXT1fLHJrWzFdWzFdPXcscj1ya1syXVswXT1tLHM9cmtbMl1bMV09djticmVhaztjYXNlIGM6dmFyIGI9MCxTPTAsTT0xLEk9MSxUPTA7ZSYmKGI9ZVs0XSxTPWVbNV0sTT1ITChlWzBdKmVbMF0rZVsxXSplWzFdKSxJPUhMKGVbMl0qZVsyXStlWzNdKmVbM10pLFQ9TWF0aC5hdGFuMigtZVsxXS9JLGVbMF0vTSkpO3ZhciBBPXBbYSsrXSxEPXBbYSsrXSxDPXBbYSsrXSxMPXBbYSsrXSxrPXBbYSsrXStULFA9cFthKytdK2srVDthKys7dmFyIE49cFthKytdLE89QStVTChrKSpDLEU9RCtYTChrKSpMLHo9KHk9QStVTChQKSpDLHg9RCtYTChQKSpMLE4/IiB3YSAiOiIgYXQgIik7TWF0aC5hYnMoTy15KTwxZS00JiYoLjAxPE1hdGguYWJzKFAtayk/TiYmKE8rPS4wMTI1KTpNYXRoLmFicyhFLUQpPDFlLTQ/TiYmTzxBfHwhTiYmQTxPP3gtPS4wMTI1OngrPS4wMTI1Ok4mJkU8RHx8IU4mJkQ8RT95Kz0uMDEyNTp5LT0uMDEyNSksZi5wdXNoKHosV0woKChBLUMpKk0rYikqS0wtJEwpLGpMLFdMKCgoRC1MKSpJK1MpKktMLSRMKSxqTCxXTCgoKEErQykqTStiKSpLTC0kTCksakwsV0woKChEK0wpKkkrUykqS0wtJEwpLGpMLFdMKChPKk0rYikqS0wtJEwpLGpMLFdMKChFKkkrUykqS0wtJEwpLGpMLFdMKCh5Kk0rYikqS0wtJEwpLGpMLFdMKCh4KkkrUykqS0wtJEwpKSxyPXkscz14O2JyZWFrO2Nhc2UgRkwuUjp2YXIgUj1ya1swXSxCPXJrWzFdO1JbMF09cFthKytdLFJbMV09cFthKytdLEJbMF09UlswXStwW2ErK10sQlsxXT1SWzFdK3BbYSsrXSxlJiYoYnQoUixSLGUpLGJ0KEIsQixlKSksUlswXT1XTChSWzBdKktMLSRMKSxCWzBdPVdMKEJbMF0qS0wtJEwpLFJbMV09V0woUlsxXSpLTC0kTCksQlsxXT1XTChCWzFdKktMLSRMKSxmLnB1c2goIiBtICIsUlswXSxqTCxSWzFdLCIgbCAiLEJbMF0sakwsUlsxXSwiIGwgIixCWzBdLGpMLEJbMV0sIiBsICIsUlswXSxqTCxCWzFdKTticmVhaztjYXNlIEZMLlo6Zi5wdXNoKCIgeCAiKX1pZigwPGkpe2YucHVzaChuKTtmb3IodmFyIFY9MDtWPGk7VisrKXt2YXIgRz1ya1tWXTtlJiZidChHLEcsZSksZi5wdXNoKFdMKEdbMF0qS0wtJEwpLGpMLFdMKEdbMV0qS0wtJEwpLFY8aS0xP2pMOiIiKX19fXJldHVybiBmLmpvaW4oIiIpfShsLHRoaXMudHJhbnNmb3JtKSxpLnN0eWxlLnpJbmRleD1payh0aGlzLnpsZXZlbCx0aGlzLnosdGhpcy56MiksdGsodCxpKSxudWxsIT1lLnRleHQ/dGhpcy5kcmF3UmVjdFRleHQodCx0aGlzLmdldEJvdW5kaW5nUmVjdCgpKTp0aGlzLnJlbW92ZVJlY3RUZXh0KHQpfSxTci5wcm90b3R5cGUub25SZW1vdmU9ZnVuY3Rpb24odCl7ZWsodCx0aGlzLl92bWxFbCksdGhpcy5yZW1vdmVSZWN0VGV4dCh0KX0sU3IucHJvdG90eXBlLm9uQWRkPWZ1bmN0aW9uKHQpe3RrKHQsdGhpcy5fdm1sRWwpLHRoaXMuYXBwZW5kUmVjdFRleHQodCl9O3FuLnByb3RvdHlwZS5icnVzaFZNTD1mdW5jdGlvbih0KXt2YXIgZSxpLG49dGhpcy5zdHlsZSxvPW4uaW1hZ2U7aWYoZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiB0JiZ0LnRhZ05hbWUmJiJJTUciPT09dC50YWdOYW1lLnRvVXBwZXJDYXNlKCl9KG8pKXt2YXIgYT1vLnNyYztpZihhPT09dGhpcy5faW1hZ2VTcmMpZT10aGlzLl9pbWFnZVdpZHRoLGk9dGhpcy5faW1hZ2VIZWlnaHQ7ZWxzZXt2YXIgcj1vLnJ1bnRpbWVTdHlsZSxzPXIud2lkdGgsbD1yLmhlaWdodDtyLndpZHRoPSJhdXRvIixyLmhlaWdodD0iYXV0byIsZT1vLndpZHRoLGk9by5oZWlnaHQsci53aWR0aD1zLHIuaGVpZ2h0PWwsdGhpcy5faW1hZ2VTcmM9YSx0aGlzLl9pbWFnZVdpZHRoPWUsdGhpcy5faW1hZ2VIZWlnaHQ9aX1vPWF9ZWxzZSBvPT09dGhpcy5faW1hZ2VTcmMmJihlPXRoaXMuX2ltYWdlV2lkdGgsaT10aGlzLl9pbWFnZUhlaWdodCk7aWYobyl7dmFyIHU9bi54fHwwLGg9bi55fHwwLGM9bi53aWR0aCxkPW4uaGVpZ2h0LGY9bi5zV2lkdGgscD1uLnNIZWlnaHQsZz1uLnN4fHwwLG09bi5zeXx8MCx2PWYmJnAseT10aGlzLl92bWxFbDt5fHwoeT1CTC5jcmVhdGVFbGVtZW50KCJkaXYiKSxKTCh5KSx0aGlzLl92bWxFbD15KTt2YXIgeCxfPXkuc3R5bGUsdz0hMSxiPTEsUz0xO2lmKHRoaXMudHJhbnNmb3JtJiYoeD10aGlzLnRyYW5zZm9ybSxiPUhMKHhbMF0qeFswXSt4WzFdKnhbMV0pLFM9SEwoeFsyXSp4WzJdK3hbM10qeFszXSksdz14WzFdfHx4WzJdKSx3KXt2YXIgTT1bdSxoXSxJPVt1K2MsaF0sVD1bdSxoK2RdLEE9W3UrYyxoK2RdO2J0KE0sTSx4KSxidChJLEkseCksYnQoVCxULHgpLGJ0KEEsQSx4KTt2YXIgRD1ZTChNWzBdLElbMF0sVFswXSxBWzBdKSxDPVlMKE1bMV0sSVsxXSxUWzFdLEFbMV0pLEw9W107TC5wdXNoKCJNMTE9Iix4WzBdL2IsakwsIk0xMj0iLHhbMl0vUyxqTCwiTTIxPSIseFsxXS9iLGpMLCJNMjI9Iix4WzNdL1MsakwsIkR4PSIsV0wodSpiK3hbNF0pLGpMLCJEeT0iLFdMKGgqUyt4WzVdKSksXy5wYWRkaW5nPSIwICIrV0woRCkrInB4ICIrV0woQykrInB4IDAiLF8uZmlsdGVyPXFMKyIuTWF0cml4KCIrTC5qb2luKCIiKSsiLCBTaXppbmdNZXRob2Q9Y2xpcCkifWVsc2UgeCYmKHU9dSpiK3hbNF0saD1oKlMreFs1XSksXy5maWx0ZXI9IiIsXy5sZWZ0PVdMKHUpKyJweCIsXy50b3A9V0woaCkrInB4Ijt2YXIgaz10aGlzLl9pbWFnZUVsLFA9dGhpcy5fY3JvcEVsO2t8fChrPUJMLmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMuX2ltYWdlRWw9ayk7dmFyIE49ay5zdHlsZTtpZih2KXtpZihlJiZpKU4ud2lkdGg9V0woYiplKmMvZikrInB4IixOLmhlaWdodD1XTChTKmkqZC9wKSsicHgiO2Vsc2V7dmFyIE89bmV3IEltYWdlLEU9dGhpcztPLm9ubG9hZD1mdW5jdGlvbigpe08ub25sb2FkPW51bGwsZT1PLndpZHRoLGk9Ty5oZWlnaHQsTi53aWR0aD1XTChiKmUqYy9mKSsicHgiLE4uaGVpZ2h0PVdMKFMqaSpkL3ApKyJweCIsRS5faW1hZ2VXaWR0aD1lLEUuX2ltYWdlSGVpZ2h0PWksRS5faW1hZ2VTcmM9b30sTy5zcmM9b31QfHwoKFA9QkwuY3JlYXRlRWxlbWVudCgiZGl2IikpLnN0eWxlLm92ZXJmbG93PSJoaWRkZW4iLHRoaXMuX2Nyb3BFbD1QKTt2YXIgej1QLnN0eWxlO3oud2lkdGg9V0woKGMrZypjL2YpKmIpLHouaGVpZ2h0PVdMKChkK20qZC9wKSpTKSx6LmZpbHRlcj1xTCsiLk1hdHJpeChEeD0iKy1nKmMvZipiKyIsRHk9IistbSpkL3AqUysiKSIsUC5wYXJlbnROb2RlfHx5LmFwcGVuZENoaWxkKFApLGsucGFyZW50Tm9kZSE9PVAmJlAuYXBwZW5kQ2hpbGQoayl9ZWxzZSBOLndpZHRoPVdMKGIqYykrInB4IixOLmhlaWdodD1XTChTKmQpKyJweCIseS5hcHBlbmRDaGlsZChrKSxQJiZQLnBhcmVudE5vZGUmJih5LnJlbW92ZUNoaWxkKFApLHRoaXMuX2Nyb3BFbD1udWxsKTt2YXIgUj0iIixCPW4ub3BhY2l0eTtCPDEmJihSKz0iLkFscGhhKG9wYWNpdHk9IitXTCgxMDAqQikrIikgIiksUis9cUwrIi5BbHBoYUltYWdlTG9hZGVyKHNyYz0iK28rIiwgU2l6aW5nTWV0aG9kPXNjYWxlKSIsTi5maWx0ZXI9Uix5LnN0eWxlLnpJbmRleD1payh0aGlzLnpsZXZlbCx0aGlzLnosdGhpcy56MiksdGsodCx5KSxudWxsIT1uLnRleHQmJnRoaXMuZHJhd1JlY3RUZXh0KHQsdGhpcy5nZXRCb3VuZGluZ1JlY3QoKSl9fSxxbi5wcm90b3R5cGUub25SZW1vdmU9ZnVuY3Rpb24odCl7ZWsodCx0aGlzLl92bWxFbCksdGhpcy5fdm1sRWw9bnVsbCx0aGlzLl9jcm9wRWw9bnVsbCx0aGlzLl9pbWFnZUVsPW51bGwsdGhpcy5yZW1vdmVSZWN0VGV4dCh0KX0scW4ucHJvdG90eXBlLm9uQWRkPWZ1bmN0aW9uKHQpe3RrKHQsdGhpcy5fdm1sRWwpLHRoaXMuYXBwZW5kUmVjdFRleHQodCl9O3ZhciBzayxsaz0ibm9ybWFsIix1az17fSxoaz0wLGNrPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0dMPWZ1bmN0aW9uKHQsZSl7dmFyIGk9Qkw7c2t8fCgoc2s9aS5jcmVhdGVFbGVtZW50KCJkaXYiKSkuc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7dG9wOi0yMDAwMHB4O2xlZnQ6MDtwYWRkaW5nOjA7bWFyZ2luOjA7Ym9yZGVyOm5vbmU7d2hpdGUtc3BhY2U6cHJlOyIsQkwuYm9keS5hcHBlbmRDaGlsZChzaykpO3RyeXtzay5zdHlsZS5mb250PWV9Y2F0Y2godCl7fXJldHVybiBzay5pbm5lckhUTUw9IiIsc2suYXBwZW5kQ2hpbGQoaS5jcmVhdGVUZXh0Tm9kZSh0KSkse3dpZHRoOnNrLm9mZnNldFdpZHRofX0sdW5bIm1lYXN1cmVUZXh0Il09R0w7Zm9yKHZhciBkaz1uZXcgTWksZms9ZnVuY3Rpb24odCxlLGksbil7dmFyIG89dGhpcy5zdHlsZTt0aGlzLl9fZGlydHkmJmtuKG8pO3ZhciBhPW8udGV4dDtpZihudWxsIT1hJiYoYSs9IiIpLGEpe2lmKG8ucmljaCl7dmFyIHI9d24oYSxvKTthPVtdO2Zvcih2YXIgcz0wO3M8ci5saW5lcy5sZW5ndGg7cysrKXtmb3IodmFyIGw9ci5saW5lc1tzXS50b2tlbnMsdT1bXSxoPTA7aDxsLmxlbmd0aDtoKyspdS5wdXNoKGxbaF0udGV4dCk7YS5wdXNoKHUuam9pbigiIikpfWE9YS5qb2luKCJcbiIpfXZhciBjLGQsZj1vLnRleHRBbGlnbixwPW8udGV4dFZlcnRpY2FsQWxpZ24sZz1mdW5jdGlvbih0KXt2YXIgZT11a1t0XTtpZighZSl7MTAwPGhrJiYoaGs9MCx1az17fSk7dmFyIGksbj1jay5zdHlsZTt0cnl7bi5mb250PXQsaT1uLmZvbnRGYW1pbHkuc3BsaXQoIiwiKVswXX1jYXRjaCh0KXt9ZT17c3R5bGU6bi5mb250U3R5bGV8fGxrLHZhcmlhbnQ6bi5mb250VmFyaWFudHx8bGssd2VpZ2h0Om4uZm9udFdlaWdodHx8bGssc2l6ZTowfHBhcnNlRmxvYXQobi5mb250U2l6ZXx8MTIpLGZhbWlseTppfHwiTWljcm9zb2Z0IFlhSGVpIn0sdWtbdF09ZSxoaysrfXJldHVybiBlfShvLmZvbnQpLG09Zy5zdHlsZSsiICIrZy52YXJpYW50KyIgIitnLndlaWdodCsiICIrZy5zaXplKydweCAiJytnLmZhbWlseSsnIic7aT1pfHxjbihhLG0sZixwLG8udGV4dFBhZGRpbmcsby50ZXh0TGluZUhlaWdodCk7dmFyIHY9dGhpcy50cmFuc2Zvcm07aWYodiYmIW4mJihkay5jb3B5KGUpLGRrLmFwcGx5VHJhbnNmb3JtKHYpLGU9ZGspLG4pYz1lLngsZD1lLnk7ZWxzZXt2YXIgeT1vLnRleHRQb3NpdGlvbjtpZih5IGluc3RhbmNlb2YgQXJyYXkpYz1lLngrbmsoeVswXSxlLndpZHRoKSxkPWUueStuayh5WzFdLGUuaGVpZ2h0KSxmPWZ8fCJsZWZ0IjtlbHNle3ZhciB4PXRoaXMuY2FsY3VsYXRlVGV4dFBvc2l0aW9uP3RoaXMuY2FsY3VsYXRlVGV4dFBvc2l0aW9uKHt9LG8sZSk6cG4oe30sbyxlKTtjPXgueCxkPXgueSxmPWZ8fHgudGV4dEFsaWduLHA9cHx8eC50ZXh0VmVydGljYWxBbGlnbn19Yz1kbihjLGkud2lkdGgsZiksZD1mbihkLGkuaGVpZ2h0LHApLGQrPWkuaGVpZ2h0LzI7dmFyIF8sdyxiLFM9VkwsTT10aGlzLl90ZXh0Vm1sRWw7TT93PShfPShiPU0uZmlyc3RDaGlsZCkubmV4dFNpYmxpbmcpLm5leHRTaWJsaW5nOihNPVMoImxpbmUiKSxfPVMoInBhdGgiKSx3PVMoInRleHRwYXRoIiksYj1TKCJza2V3Iiksdy5zdHlsZVsidi10ZXh0LWFsaWduIl09ImxlZnQiLEpMKE0pLF8udGV4dHBhdGhvaz0hMCx3Lm9uPSEwLE0uZnJvbT0iMCAwIixNLnRvPSIxMDAwIDAuMDUiLHRrKE0sYiksdGsoTSxfKSx0ayhNLHcpLHRoaXMuX3RleHRWbWxFbD1NKTt2YXIgST1bYyxkXSxUPU0uc3R5bGU7diYmbj8oYnQoSSxJLHYpLGIub249ITAsYi5tYXRyaXg9dlswXS50b0ZpeGVkKDMpK2pMK3ZbMl0udG9GaXhlZCgzKStqTCt2WzFdLnRvRml4ZWQoMykrakwrdlszXS50b0ZpeGVkKDMpKyIsMCwwIixiLm9mZnNldD0oV0woSVswXSl8fDApKyIsIisoV0woSVsxXSl8fDApLGIub3JpZ2luPSIwIDAiLFQubGVmdD0iMHB4IixULnRvcD0iMHB4Iik6KGIub249ITEsVC5sZWZ0PVdMKGMpKyJweCIsVC50b3A9V0woZCkrInB4Iiksdy5zdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIFN0cmluZyh0KS5yZXBsYWNlKC8mL2csIiZhbXA7IikucmVwbGFjZSgvIi9nLCImcXVvdDsiKX0oYSk7dHJ5e3cuc3R5bGUuZm9udD1tfWNhdGNoKHQpe31hayhNLCJmaWxsIix7ZmlsbDpvLnRleHRGaWxsLG9wYWNpdHk6by5vcGFjaXR5fSx0aGlzKSxhayhNLCJzdHJva2UiLHtzdHJva2U6by50ZXh0U3Ryb2tlLG9wYWNpdHk6by5vcGFjaXR5LGxpbmVEYXNoOm8ubGluZURhc2h8fG51bGx9LHRoaXMpLE0uc3R5bGUuekluZGV4PWlrKHRoaXMuemxldmVsLHRoaXMueix0aGlzLnoyKSx0ayh0LE0pfX0scGs9ZnVuY3Rpb24odCl7ZWsodCx0aGlzLl90ZXh0Vm1sRWwpLHRoaXMuX3RleHRWbWxFbD1udWxsfSxnaz1mdW5jdGlvbih0KXt0ayh0LHRoaXMuX3RleHRWbWxFbCl9LG1rPVtYbixqbixxbixTcixGcl0sdms9MDt2azxtay5sZW5ndGg7dmsrKyl7dmFyIHlrPW1rW3ZrXS5wcm90b3R5cGU7eWsuZHJhd1JlY3RUZXh0PWZrLHlrLnJlbW92ZVJlY3RUZXh0PXBrLHlrLmFwcGVuZFJlY3RUZXh0PWdrfUZyLnByb3RvdHlwZS5icnVzaFZNTD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnN0eWxlO251bGwhPWUudGV4dD90aGlzLmRyYXdSZWN0VGV4dCh0LHt4OmUueHx8MCx5OmUueXx8MCx3aWR0aDowLGhlaWdodDowfSx0aGlzLmdldEJvdW5kaW5nUmVjdCgpLCEwKTp0aGlzLnJlbW92ZVJlY3RUZXh0KHQpfSxGci5wcm90b3R5cGUub25SZW1vdmU9ZnVuY3Rpb24odCl7dGhpcy5yZW1vdmVSZWN0VGV4dCh0KX0sRnIucHJvdG90eXBlLm9uQWRkPWZ1bmN0aW9uKHQpe3RoaXMuYXBwZW5kUmVjdFRleHQodCl9fWZ1bmN0aW9uIHhrKHQpe3JldHVybiBwYXJzZUludCh0LDEwKX1mdW5jdGlvbiBfayh0LGUpeyFmdW5jdGlvbigpe2lmKCFSTCYmQkwpe1JMPSEwO3ZhciB0PUJMLnN0eWxlU2hlZXRzO3QubGVuZ3RoPDMxP0JMLmNyZWF0ZVN0eWxlU2hlZXQoKS5hZGRSdWxlKCIuenJ2bWwiLCJiZWhhdmlvcjp1cmwoI2RlZmF1bHQjVk1MKSIpOnRbMF0uYWRkUnVsZSgiLnpydm1sIiwiYmVoYXZpb3I6dXJsKCNkZWZhdWx0I1ZNTCkiKX19KCksdGhpcy5yb290PXQsdGhpcy5zdG9yYWdlPWU7dmFyIGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iiksbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtpLnN0eWxlLmNzc1RleHQ9ImRpc3BsYXk6aW5saW5lLWJsb2NrO292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDozMDBweDtoZWlnaHQ6MTUwcHg7IixuLnN0eWxlLmNzc1RleHQ9InBvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDsiLHQuYXBwZW5kQ2hpbGQoaSksdGhpcy5fdm1sUm9vdD1uLHRoaXMuX3ZtbFZpZXdwb3J0PWksdGhpcy5yZXNpemUoKTt2YXIgbz1lLmRlbEZyb21TdG9yYWdlLGE9ZS5hZGRUb1N0b3JhZ2U7ZS5kZWxGcm9tU3RvcmFnZT1mdW5jdGlvbih0KXtvLmNhbGwoZSx0KSx0JiZ0Lm9uUmVtb3ZlJiZ0Lm9uUmVtb3ZlKG4pfSxlLmFkZFRvU3RvcmFnZT1mdW5jdGlvbih0KXt0Lm9uQWRkJiZ0Lm9uQWRkKG4pLGEuY2FsbChlLHQpfSx0aGlzLl9maXJzdFBhaW50PSEwfV9rLnByb3RvdHlwZT17Y29uc3RydWN0b3I6X2ssZ2V0VHlwZTpmdW5jdGlvbigpe3JldHVybiJ2bWwifSxnZXRWaWV3cG9ydFJvb3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdm1sVmlld3BvcnR9LGdldFZpZXdwb3J0Um9vdE9mZnNldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Vmlld3BvcnRSb290KCk7aWYodClyZXR1cm57b2Zmc2V0TGVmdDp0Lm9mZnNldExlZnR8fDAsb2Zmc2V0VG9wOnQub2Zmc2V0VG9wfHwwfX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3RvcmFnZS5nZXREaXNwbGF5TGlzdCghMCwhMCk7dGhpcy5fcGFpbnRMaXN0KHQpfSxfcGFpbnRMaXN0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl92bWxSb290LGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIG49dFtpXTtuLmludmlzaWJsZXx8bi5pZ25vcmU/KG4uX19hbHJlYWR5Tm90VmlzaWJsZXx8bi5vblJlbW92ZShlKSxuLl9fYWxyZWFkeU5vdFZpc2libGU9ITApOihuLl9fYWxyZWFkeU5vdFZpc2libGUmJm4ub25BZGQoZSksbi5fX2FscmVhZHlOb3RWaXNpYmxlPSExLG4uX19kaXJ0eSYmKG4uYmVmb3JlQnJ1c2gmJm4uYmVmb3JlQnJ1c2goKSwobi5icnVzaFZNTHx8bi5icnVzaCkuY2FsbChuLGUpLG4uYWZ0ZXJCcnVzaCYmbi5hZnRlckJydXNoKCkpKSxuLl9fZGlydHk9ITF9dGhpcy5fZmlyc3RQYWludCYmKHRoaXMuX3ZtbFZpZXdwb3J0LmFwcGVuZENoaWxkKGUpLHRoaXMuX2ZpcnN0UGFpbnQ9ITEpfSxyZXNpemU6ZnVuY3Rpb24odCxlKXt0PW51bGw9PXQ/dGhpcy5fZ2V0V2lkdGgoKTp0LGU9bnVsbD09ZT90aGlzLl9nZXRIZWlnaHQoKTplO2lmKHRoaXMuX3dpZHRoIT09dHx8dGhpcy5faGVpZ2h0IT09ZSl7dGhpcy5fd2lkdGg9dCx0aGlzLl9oZWlnaHQ9ZTt2YXIgaT10aGlzLl92bWxWaWV3cG9ydC5zdHlsZTtpLndpZHRoPXQrInB4IixpLmhlaWdodD1lKyJweCJ9fSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5yb290LmlubmVySFRNTD0iIix0aGlzLl92bWxSb290PXRoaXMuX3ZtbFZpZXdwb3J0PXRoaXMuc3RvcmFnZT1udWxsfSxnZXRXaWR0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93aWR0aH0sZ2V0SGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH0sY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLl92bWxWaWV3cG9ydCYmdGhpcy5yb290LnJlbW92ZUNoaWxkKHRoaXMuX3ZtbFZpZXdwb3J0KX0sX2dldFdpZHRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5yb290LGU9dC5jdXJyZW50U3R5bGU7cmV0dXJuKHQuY2xpZW50V2lkdGh8fHhrKGUud2lkdGgpKS14ayhlLnBhZGRpbmdMZWZ0KS14ayhlLnBhZGRpbmdSaWdodCl8MH0sX2dldEhlaWdodDpmdW5jdGlvbigpe3ZhciB0PXRoaXMucm9vdCxlPXQuY3VycmVudFN0eWxlO3JldHVybih0LmNsaWVudEhlaWdodHx8eGsoZS5oZWlnaHQpKS14ayhlLnBhZGRpbmdUb3ApLXhrKGUucGFkZGluZ0JvdHRvbSl8MH19LEUoWyJnZXRMYXllciIsImluc2VydExheWVyIiwiZWFjaExheWVyIiwiZWFjaEJ1aWx0aW5MYXllciIsImVhY2hPdGhlckxheWVyIiwiZ2V0TGF5ZXJzIiwibW9kTGF5ZXIiLCJkZWxMYXllciIsImNsZWFyTGF5ZXIiLCJ0b0RhdGFVUkwiLCJwYXRoVG9JbWFnZSJdLGZ1bmN0aW9uKHQpe19rLnByb3RvdHlwZVt0XT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtmaSgnSW4gSUU4LjAgVk1MIG1vZGUgcGFpbnRlciBub3Qgc3VwcG9ydCBtZXRob2QgIicrdCsnIicpfX0odCl9KSxEbygidm1sIixfayk7ZnVuY3Rpb24gd2sodCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLHQpfXZhciBiaz1pci5DTUQsU2s9QXJyYXkucHJvdG90eXBlLmpvaW4sTWs9Im5vbmUiLElrPU1hdGgucm91bmQsVGs9TWF0aC5zaW4sQWs9TWF0aC5jb3MsRGs9TWF0aC5QSSxDaz0yKk1hdGguUEksTGs9MTgwL0RrLGtrPTFlLTQ7ZnVuY3Rpb24gUGsodCl7cmV0dXJuIElrKDFlNCp0KS8xZTR9ZnVuY3Rpb24gTmsodCl7cmV0dXJuIHQ8a2smJi1razx0fWZ1bmN0aW9uIE9rKHQsZSl7ZSYmRWsodCwidHJhbnNmb3JtIiwibWF0cml4KCIrU2suY2FsbChlLCIsIikrIikiKX1mdW5jdGlvbiBFayh0LGUsaSl7aSYmKCJsaW5lYXIiPT09aS50eXBlfHwicmFkaWFsIj09PWkudHlwZSl8fHQuc2V0QXR0cmlidXRlKGUsaSl9ZnVuY3Rpb24gemsodCxlLGksbil7aWYoZnVuY3Rpb24odCxlKXt2YXIgaT1lP3QudGV4dEZpbGw6dC5maWxsO3JldHVybiBudWxsIT1pJiZpIT09TWt9KGUsaSkpe3ZhciBvPWk/ZS50ZXh0RmlsbDplLmZpbGw7RWsodCwiZmlsbCIsbz0idHJhbnNwYXJlbnQiPT09bz9NazpvKSxFayh0LCJmaWxsLW9wYWNpdHkiLG51bGwhPWUuZmlsbE9wYWNpdHk/ZS5maWxsT3BhY2l0eSplLm9wYWNpdHk6ZS5vcGFjaXR5KX1lbHNlIEVrKHQsImZpbGwiLE1rKTtpZihmdW5jdGlvbih0LGUpe3ZhciBpPWU/dC50ZXh0U3Ryb2tlOnQuc3Ryb2tlO3JldHVybiBudWxsIT1pJiZpIT09TWt9KGUsaSkpe3ZhciBhPWk/ZS50ZXh0U3Ryb2tlOmUuc3Ryb2tlO0VrKHQsInN0cm9rZSIsYT0idHJhbnNwYXJlbnQiPT09YT9NazphKSxFayh0LCJzdHJva2Utd2lkdGgiLChpP2UudGV4dFN0cm9rZVdpZHRoOmUubGluZVdpZHRoKS8oIWkmJmUuc3Ryb2tlTm9TY2FsZT9uLmdldExpbmVTY2FsZSgpOjEpKSxFayh0LCJwYWludC1vcmRlciIsaT8ic3Ryb2tlIjoiZmlsbCIpLEVrKHQsInN0cm9rZS1vcGFjaXR5IixudWxsIT1lLnN0cm9rZU9wYWNpdHk/ZS5zdHJva2VPcGFjaXR5OmUub3BhY2l0eSksZS5saW5lRGFzaD8oRWsodCwic3Ryb2tlLWRhc2hhcnJheSIsZS5saW5lRGFzaC5qb2luKCIsIikpLEVrKHQsInN0cm9rZS1kYXNob2Zmc2V0IixJayhlLmxpbmVEYXNoT2Zmc2V0fHwwKSkpOkVrKHQsInN0cm9rZS1kYXNoYXJyYXkiLCIiKSxlLmxpbmVDYXAmJkVrKHQsInN0cm9rZS1saW5lY2FwIixlLmxpbmVDYXApLGUubGluZUpvaW4mJkVrKHQsInN0cm9rZS1saW5lam9pbiIsZS5saW5lSm9pbiksZS5taXRlckxpbWl0JiZFayh0LCJzdHJva2UtbWl0ZXJsaW1pdCIsZS5taXRlckxpbWl0KX1lbHNlIEVrKHQsInN0cm9rZSIsTWspfXZhciBSaz17fTtSay5icnVzaD1mdW5jdGlvbih0KXt2YXIgZT10LnN0eWxlLGk9dC5fX3N2Z0VsO2l8fChpPXdrKCJwYXRoIiksdC5fX3N2Z0VsPWkpLHQucGF0aHx8dC5jcmVhdGVQYXRoUHJveHkoKTt2YXIgbj10LnBhdGg7aWYodC5fX2RpcnR5UGF0aCl7bi5iZWdpblBhdGgoKSxuLnN1YlBpeGVsT3B0aW1pemU9ITEsdC5idWlsZFBhdGgobix0LnNoYXBlKSx0Ll9fZGlydHlQYXRoPSExO3ZhciBvPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxpPXQuZGF0YSxuPXQubGVuKCksbz0wO288bjspe3ZhciBhPSIiLHI9MDtzd2l0Y2goaVtvKytdKXtjYXNlIGJrLk06YT0iTSIscj0yO2JyZWFrO2Nhc2UgYmsuTDphPSJMIixyPTI7YnJlYWs7Y2FzZSBiay5ROmE9IlEiLHI9NDticmVhaztjYXNlIGJrLkM6YT0iQyIscj02O2JyZWFrO2Nhc2UgYmsuQTp2YXIgcz1pW28rK10sbD1pW28rK10sdT1pW28rK10saD1pW28rK10sYz1pW28rK10sZD1pW28rK10sZj1pW28rK10scD1pW28rK10sZz1NYXRoLmFicyhkKSxtPU5rKGctQ2spfHwocD9Dazw9ZDpDazw9LWQpLHY9MDxkP2QlQ2s6ZCVDaytDayx5PSExO3k9ISFtfHwhTmsoZykmJkRrPD12PT0hIXA7dmFyIHg9UGsocyt1KkFrKGMpKSxfPVBrKGwraCpUayhjKSk7bSYmKGQ9cD9Day0xZS00OjFlLTQtQ2sseT0hMCw5PT09byYmZS5wdXNoKCJNIix4LF8pKTt2YXIgdz1QayhzK3UqQWsoYytkKSksYj1QayhsK2gqVGsoYytkKSk7ZS5wdXNoKCJBIixQayh1KSxQayhoKSxJayhmKkxrKSwreSwrcCx3LGIpO2JyZWFrO2Nhc2UgYmsuWjphPSJaIjticmVhaztjYXNlIGJrLlI6dz1QayhpW28rK10pLGI9UGsoaVtvKytdKTt2YXIgUz1QayhpW28rK10pLE09UGsoaVtvKytdKTtlLnB1c2goIk0iLHcsYiwiTCIsdytTLGIsIkwiLHcrUyxiK00sIkwiLHcsYitNLCJMIix3LGIpfWEmJmUucHVzaChhKTtmb3IodmFyIEk9MDtJPHI7SSsrKWUucHVzaChQayhpW28rK10pKX1yZXR1cm4gZS5qb2luKCIgIil9KG4pO28uaW5kZXhPZigiTmFOIik8MCYmRWsoaSwiZCIsbyl9emsoaSxlLCExLHQpLE9rKGksdC50cmFuc2Zvcm0pLG51bGwhPWUudGV4dD9aayh0LHQuZ2V0Qm91bmRpbmdSZWN0KCkpOlhrKHQpfTt2YXIgQms9e2JydXNoOmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3R5bGUsaT1lLmltYWdlO2kgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50JiYoaT1pLnNyYyk7aWYoaSl7dmFyIG49ZS54fHwwLG89ZS55fHwwLGE9ZS53aWR0aCxyPWUuaGVpZ2h0LHM9dC5fX3N2Z0VsO3N8fChzPXdrKCJpbWFnZSIpLHQuX19zdmdFbD1zKSxpIT09dC5fX2ltYWdlU3JjJiYoZnVuY3Rpb24odCxlLGkpe3Quc2V0QXR0cmlidXRlTlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiLGUsaSl9KHMsImhyZWYiLGkpLHQuX19pbWFnZVNyYz1pKSxFayhzLCJ3aWR0aCIsYSksRWsocywiaGVpZ2h0IixyKSxFayhzLCJ4IixuKSxFayhzLCJ5IixvKSxPayhzLHQudHJhbnNmb3JtKSxudWxsIT1lLnRleHQ/WmsodCx0LmdldEJvdW5kaW5nUmVjdCgpKTpYayh0KX19fSxWaz17fSxHaz1uZXcgTWksRms9e30sV2s9W10sSGs9e2xlZnQ6InN0YXJ0IixyaWdodDoiZW5kIixjZW50ZXI6Im1pZGRsZSIsbWlkZGxlOiJtaWRkbGUifSxaaz1mdW5jdGlvbih0LGUpe3ZhciBpPXQuc3R5bGUsbj10LnRyYW5zZm9ybSxvPXQgaW5zdGFuY2VvZiBGcnx8aS50cmFuc2Zvcm1UZXh0O3QuX19kaXJ0eSYma24oaSk7dmFyIGE9aS50ZXh0O2lmKG51bGwhPWEmJihhKz0iIiksVW4oYSxpKSl7bnVsbD09YSYmKGE9IiIpLCFvJiZuJiYoR2suY29weShlKSxHay5hcHBseVRyYW5zZm9ybShuKSxlPUdrKTt2YXIgcj10Ll9fdGV4dFN2Z0VsO3J8fChyPXdrKCJ0ZXh0IiksdC5fX3RleHRTdmdFbD1yKTt2YXIgcz1yLnN0eWxlLGw9aS5mb250fHxsbix1PXIuX19jb21wdXRlZEZvbnQ7bCE9PXIuX19zdHlsZUZvbnQmJihzLmZvbnQ9ci5fX3N0eWxlRm9udD1sLHU9ci5fX2NvbXB1dGVkRm9udD1zLmZvbnQpO3ZhciBoPWkudGV4dFBhZGRpbmcsYz1pLnRleHRMaW5lSGVpZ2h0LGQ9dC5fX3RleHRDb3RlbnRCbG9jaztkJiYhdC5fX2RpcnR5VGV4dHx8KGQ9dC5fX3RleHRDb3RlbnRCbG9jaz1fbihhLHUsaCxjLGkudHJ1bmNhdGUpKTt2YXIgZj1kLm91dGVySGVpZ2h0LHA9ZC5saW5lSGVpZ2h0O1ZuKEZrLHQsaSxlKTt2YXIgZz1Gay5iYXNlWCxtPUZrLmJhc2VZLHY9RmsudGV4dEFsaWdufHwibGVmdCIseT1Gay50ZXh0VmVydGljYWxBbGlnbjshZnVuY3Rpb24odCxlLGksbixvLGEscil7aWUoV2spLGUmJmkmJm5lKFdrLGkpO3ZhciBzPW4udGV4dFJvdGF0aW9uO2lmKG8mJnMpe3ZhciBsPW4udGV4dE9yaWdpbjsiY2VudGVyIj09PWw/KGE9by53aWR0aC8yK28ueCxyPW8uaGVpZ2h0LzIrby55KTpsJiYoYT1sWzBdK28ueCxyPWxbMV0rby55KSxXa1s0XS09YSxXa1s1XS09cixyZShXayxXayxzKSxXa1s0XSs9YSxXa1s1XSs9cn1Payh0LFdrKX0ocixvLG4saSxlLGcsbSk7dmFyIHg9ZyxfPWZuKG0sZix5KTtoJiYoeD1mdW5jdGlvbih0LGUsaSl7cmV0dXJuInJpZ2h0Ij09PWU/dC1pWzFdOiJjZW50ZXIiPT09ZT90K2lbM10vMi1pWzFdLzI6dCtpWzNdfShnLHYsaCksXys9aFswXSksXys9cC8yLHprKHIsaSwhMCx0KTt2YXIgdz1kLmNhbkNhY2hlQnlUZXh0U3RyaW5nLGI9dC5fX3RzcGFuTGlzdHx8KHQuX190c3Bhbkxpc3Q9W10pLFM9Yi5sZW5ndGg7aWYodyYmdC5fX2NhbkNhY2hlQnlUZXh0U3RyaW5nJiZ0Ll9fdGV4dD09PWEpe2lmKHQuX19kaXJ0eVRleHQmJlMpZm9yKHZhciBNPTA7TTxTOysrTSlVayhiW01dLHYseCxfK00qcCl9ZWxzZXt0Ll9fdGV4dD1hLHQuX19jYW5DYWNoZUJ5VGV4dFN0cmluZz13O3ZhciBJPWQubGluZXMsVD1JLmxlbmd0aDtmb3IoTT0wO008VDtNKyspe3ZhciBBPWJbTV0sRD1JW01dO0E/QS5fX3pyVGV4dCE9PUQmJihBLmlubmVySFRNTD0iIixBLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKEQpKSk6KEE9YltNXT13aygidHNwYW4iKSxyLmFwcGVuZENoaWxkKEEpLEEuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoRCkpKSxVayhBLHYseCxfK00qcCl9aWYoVDxTKXtmb3IoO008UztNKyspci5yZW1vdmVDaGlsZChiW01dKTtiLmxlbmd0aD1UfX19fTtmdW5jdGlvbiBVayh0LGUsaSxuKXtFayh0LCJkb21pbmFudC1iYXNlbGluZSIsIm1pZGRsZSIpLEVrKHQsInRleHQtYW5jaG9yIixIa1tlXSksRWsodCwieCIsaSksRWsodCwieSIsbil9ZnVuY3Rpb24gWGsodCl7dCYmdC5fX3RleHRTdmdFbCYmKHQuX190ZXh0U3ZnRWwucGFyZW50Tm9kZSYmdC5fX3RleHRTdmdFbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQuX190ZXh0U3ZnRWwpLHQuX190ZXh0U3ZnRWw9bnVsbCx0Ll9fdHNwYW5MaXN0PVtdLHQuX190ZXh0PW51bGwpfWZ1bmN0aW9uIFlrKCl7fWZ1bmN0aW9uIGprKHQsZSl7Zm9yKHZhciBpPTAsbj1lLmxlbmd0aCxvPTAsYT0wO2k8bjtpKyspe3ZhciByPWVbaV07aWYoci5yZW1vdmVkKXtmb3Iocz1bXSxsPWE7bDxhK3IuY291bnQ7bCsrKXMucHVzaChsKTtyLmluZGljZXM9cyxhKz1yLmNvdW50fWVsc2V7Zm9yKHZhciBzPVtdLGw9bztsPG8rci5jb3VudDtsKyspcy5wdXNoKGwpO3IuaW5kaWNlcz1zLG8rPXIuY291bnQsci5hZGRlZHx8KGErPXIuY291bnQpfX1yZXR1cm4gZX1Way5kcmF3UmVjdFRleHQ9WmssVmsuYnJ1c2g9ZnVuY3Rpb24odCl7bnVsbCE9dC5zdHlsZS50ZXh0P1prKHQsITEpOlhrKHQpfSxZay5wcm90b3R5cGU9e2RpZmY6ZnVuY3Rpb24obCx1LHQpe3Q9dHx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV9LHRoaXMuZXF1YWxzPXQ7dmFyIGg9dGhpcztsPWwuc2xpY2UoKTt2YXIgYz0odT11LnNsaWNlKCkpLmxlbmd0aCxkPWwubGVuZ3RoLGY9MSxlPWMrZCxwPVt7bmV3UG9zOi0xLGNvbXBvbmVudHM6W119XSxpPXRoaXMuZXh0cmFjdENvbW1vbihwWzBdLHUsbCwwKTtpZihwWzBdLm5ld1BvcysxPj1jJiZkPD1pKzEpe2Zvcih2YXIgbj1bXSxvPTA7bzx1Lmxlbmd0aDtvKyspbi5wdXNoKG8pO3JldHVyblt7aW5kaWNlczpuLGNvdW50OnUubGVuZ3RofV19ZnVuY3Rpb24gYSgpe2Zvcih2YXIgdD0tMSpmO3Q8PWY7dCs9Mil7dmFyIGUsaT1wW3QtMV0sbj1wW3QrMV0sbz0obj9uLm5ld1BvczowKS10O2kmJihwW3QtMV09dm9pZCAwKTt2YXIgYT1pJiZpLm5ld1BvcysxPGMscj1uJiYwPD1vJiZvPGQ7aWYoYXx8cil7aWYoIWF8fHImJmkubmV3UG9zPG4ubmV3UG9zPyhlPXtuZXdQb3M6KHM9bikubmV3UG9zLGNvbXBvbmVudHM6cy5jb21wb25lbnRzLnNsaWNlKDApfSxoLnB1c2hDb21wb25lbnQoZS5jb21wb25lbnRzLHZvaWQgMCwhMCkpOigoZT1pKS5uZXdQb3MrKyxoLnB1c2hDb21wb25lbnQoZS5jb21wb25lbnRzLCEwLHZvaWQgMCkpLG89aC5leHRyYWN0Q29tbW9uKGUsdSxsLHQpLGUubmV3UG9zKzE+PWMmJmQ8PW8rMSlyZXR1cm4gamsoaCxlLmNvbXBvbmVudHMsdSxsKTtwW3RdPWV9ZWxzZSBwW3RdPXZvaWQgMH12YXIgcztmKyt9Zm9yKDtmPD1lOyl7dmFyIHI9YSgpO2lmKHIpcmV0dXJuIHJ9fSxwdXNoQ29tcG9uZW50OmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10W3QubGVuZ3RoLTFdO24mJm4uYWRkZWQ9PT1lJiZuLnJlbW92ZWQ9PT1pP3RbdC5sZW5ndGgtMV09e2NvdW50Om4uY291bnQrMSxhZGRlZDplLHJlbW92ZWQ6aX06dC5wdXNoKHtjb3VudDoxLGFkZGVkOmUscmVtb3ZlZDppfSl9LGV4dHJhY3RDb21tb246ZnVuY3Rpb24odCxlLGksbil7Zm9yKHZhciBvPWUubGVuZ3RoLGE9aS5sZW5ndGgscj10Lm5ld1BvcyxzPXItbixsPTA7cisxPG8mJnMrMTxhJiZ0aGlzLmVxdWFscyhlW3IrMV0saVtzKzFdKTspcisrLHMrKyxsKys7cmV0dXJuIGwmJnQuY29tcG9uZW50cy5wdXNoKHtjb3VudDpsfSksdC5uZXdQb3M9cixzfSx0b2tlbml6ZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5zbGljZSgpfSxqb2luOmZ1bmN0aW9uKHQpe3JldHVybiB0LnNsaWNlKCl9fTt2YXIgcWs9bmV3IFlrO2Z1bmN0aW9uIEtrKHQsZSxpLG4sbyl7dGhpcy5fenJJZD10LHRoaXMuX3N2Z1Jvb3Q9ZSx0aGlzLl90YWdOYW1lcz0ic3RyaW5nIj09dHlwZW9mIGk/W2ldOmksdGhpcy5fbWFya0xhYmVsPW4sdGhpcy5fZG9tTmFtZT1vfHwiX2RvbSIsdGhpcy5uZXh0SWQ9MH1mdW5jdGlvbiAkayh0LGUpe0trLmNhbGwodGhpcyx0LGUsWyJsaW5lYXJHcmFkaWVudCIsInJhZGlhbEdyYWRpZW50Il0sIl9fZ3JhZGllbnRfaW5fdXNlX18iKX1mdW5jdGlvbiBKayh0LGUpe0trLmNhbGwodGhpcyx0LGUsImNsaXBQYXRoIiwiX19jbGlwcGF0aF9pbl91c2VfXyIpfWZ1bmN0aW9uIFFrKHQsZSl7S2suY2FsbCh0aGlzLHQsZSxbImZpbHRlciJdLCJfX2ZpbHRlcl9pbl91c2VfXyIsIl9zaGFkb3dEb20iKX1mdW5jdGlvbiB0UCh0KXtyZXR1cm4gdCYmKHQuc2hhZG93Qmx1cnx8dC5zaGFkb3dPZmZzZXRYfHx0LnNoYWRvd09mZnNldFl8fHQudGV4dFNoYWRvd0JsdXJ8fHQudGV4dFNoYWRvd09mZnNldFh8fHQudGV4dFNoYWRvd09mZnNldFkpfWZ1bmN0aW9uIGVQKHQpe3JldHVybiBwYXJzZUludCh0LDEwKX1mdW5jdGlvbiBpUCh0LGUpe3JldHVybiBlJiZ0JiZlLnBhcmVudE5vZGUhPT10fWZ1bmN0aW9uIG5QKHQsZSxpKXtpZihpUCh0LGUpJiZpKXt2YXIgbj1pLm5leHRTaWJsaW5nO24/dC5pbnNlcnRCZWZvcmUoZSxuKTp0LmFwcGVuZENoaWxkKGUpfX1mdW5jdGlvbiBvUCh0LGUpe2lmKGlQKHQsZSkpe3ZhciBpPXQuZmlyc3RDaGlsZDtpP3QuaW5zZXJ0QmVmb3JlKGUsaSk6dC5hcHBlbmRDaGlsZChlKX19ZnVuY3Rpb24gYVAodCxlKXtlJiZ0JiZlLnBhcmVudE5vZGU9PT10JiZ0LnJlbW92ZUNoaWxkKGUpfWZ1bmN0aW9uIHJQKHQpe3JldHVybiB0Ll9fdGV4dFN2Z0VsfWZ1bmN0aW9uIHNQKHQpe3JldHVybiB0Ll9fc3ZnRWx9S2sucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnQ9d2ssS2sucHJvdG90eXBlLmdldERlZnM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fc3ZnUm9vdCxuPXRoaXMuX3N2Z1Jvb3QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImRlZnMiKTtyZXR1cm4gMD09PW4ubGVuZ3RoP3Q/KChuPWUuaW5zZXJ0QmVmb3JlKHRoaXMuY3JlYXRlRWxlbWVudCgiZGVmcyIpLGUuZmlyc3RDaGlsZCkpLmNvbnRhaW5zfHwobi5jb250YWlucz1mdW5jdGlvbih0KXt2YXIgZT1uLmNoaWxkcmVuO2lmKCFlKXJldHVybiExO2Zvcih2YXIgaT1lLmxlbmd0aC0xOzA8PWk7LS1pKWlmKGVbaV09PT10KXJldHVybiEwO3JldHVybiExfSksbik6bnVsbDpuWzBdfSxLay5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSl7aWYodCl7dmFyIGk9dGhpcy5nZXREZWZzKCExKTtpZih0W3RoaXMuX2RvbU5hbWVdJiZpLmNvbnRhaW5zKHRbdGhpcy5fZG9tTmFtZV0pKSJmdW5jdGlvbiI9PXR5cGVvZiBlJiZlKHQpO2Vsc2V7dmFyIG49dGhpcy5hZGQodCk7biYmKHRbdGhpcy5fZG9tTmFtZV09bil9fX0sS2sucHJvdG90eXBlLmFkZERvbT1mdW5jdGlvbih0KXt0aGlzLmdldERlZnMoITApLmFwcGVuZENoaWxkKHQpfSxLay5wcm90b3R5cGUucmVtb3ZlRG9tPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RGVmcyghMSk7ZSYmdFt0aGlzLl9kb21OYW1lXSYmKGUucmVtb3ZlQ2hpbGQodFt0aGlzLl9kb21OYW1lXSksdFt0aGlzLl9kb21OYW1lXT1udWxsKX0sS2sucHJvdG90eXBlLmdldERvbXM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLmdldERlZnMoITEpO2lmKCFpKXJldHVybltdO3ZhciBuPVtdO3JldHVybiBFKHRoaXMuX3RhZ05hbWVzLGZ1bmN0aW9uKHQpe3ZhciBlPWkuZ2V0RWxlbWVudHNCeVRhZ05hbWUodCk7bj1uLmNvbmNhdChbXS5zbGljZS5jYWxsKGUpKX0pLG59LEtrLnByb3RvdHlwZS5tYXJrQWxsVW51c2VkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREb21zKCksZT10aGlzO0UodCxmdW5jdGlvbih0KXt0W2UuX21hcmtMYWJlbF09IjAifSl9LEtrLnByb3RvdHlwZS5tYXJrVXNlZD1mdW5jdGlvbih0KXt0JiYodFt0aGlzLl9tYXJrTGFiZWxdPSIxIil9LEtrLnByb3RvdHlwZS5yZW1vdmVVbnVzZWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldERlZnMoITEpO2lmKGUpe3ZhciB0PXRoaXMuZ2V0RG9tcygpLGk9dGhpcztFKHQsZnVuY3Rpb24odCl7IjEiIT09dFtpLl9tYXJrTGFiZWxdJiZlLnJlbW92ZUNoaWxkKHQpfSl9fSxLay5wcm90b3R5cGUuZ2V0U3ZnUHJveHk9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBTcj9Sazp0IGluc3RhbmNlb2YgcW4/Qms6dCBpbnN0YW5jZW9mIEZyP1ZrOlJrfSxLay5wcm90b3R5cGUuZ2V0VGV4dFN2Z0VsZW1lbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuX190ZXh0U3ZnRWx9LEtrLnByb3RvdHlwZS5nZXRTdmdFbGVtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fc3ZnRWx9LHcoJGssS2spLCRrLnByb3RvdHlwZS5hZGRXaXRob3V0VXBkYXRlPWZ1bmN0aW9uKGEscil7aWYociYmci5zdHlsZSl7dmFyIHM9dGhpcztFKFsiZmlsbCIsInN0cm9rZSJdLGZ1bmN0aW9uKHQpe2lmKHIuc3R5bGVbdF0mJigibGluZWFyIj09PXIuc3R5bGVbdF0udHlwZXx8InJhZGlhbCI9PT1yLnN0eWxlW3RdLnR5cGUpKXt2YXIgZSxpPXIuc3R5bGVbdF0sbj1zLmdldERlZnMoITApO2kuX2RvbT8oZT1pLl9kb20sbi5jb250YWlucyhpLl9kb20pfHxzLmFkZERvbShlKSk6ZT1zLmFkZChpKSxzLm1hcmtVc2VkKHIpO3ZhciBvPWUuZ2V0QXR0cmlidXRlKCJpZCIpO2Euc2V0QXR0cmlidXRlKHQsInVybCgjIitvKyIpIil9fSl9fSwkay5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3ZhciBlO2lmKCJsaW5lYXIiPT09dC50eXBlKWU9dGhpcy5jcmVhdGVFbGVtZW50KCJsaW5lYXJHcmFkaWVudCIpO2Vsc2V7aWYoInJhZGlhbCIhPT10LnR5cGUpcmV0dXJuIGZpKCJJbGxlZ2FsIGdyYWRpZW50IHR5cGUuIiksbnVsbDtlPXRoaXMuY3JlYXRlRWxlbWVudCgicmFkaWFsR3JhZGllbnQiKX1yZXR1cm4gdC5pZD10LmlkfHx0aGlzLm5leHRJZCsrLGUuc2V0QXR0cmlidXRlKCJpZCIsInpyIit0aGlzLl96cklkKyItZ3JhZGllbnQtIit0LmlkKSx0aGlzLnVwZGF0ZURvbSh0LGUpLHRoaXMuYWRkRG9tKGUpLGV9LCRrLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oaSl7dmFyIG49dGhpcztLay5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcyxpLGZ1bmN0aW9uKCl7dmFyIHQ9aS50eXBlLGU9aS5fZG9tLnRhZ05hbWU7ImxpbmVhciI9PT10JiYibGluZWFyR3JhZGllbnQiPT09ZXx8InJhZGlhbCI9PT10JiYicmFkaWFsR3JhZGllbnQiPT09ZT9uLnVwZGF0ZURvbShpLGkuX2RvbSk6KG4ucmVtb3ZlRG9tKGkpLG4uYWRkKGkpKX0pfSwkay5wcm90b3R5cGUudXBkYXRlRG9tPWZ1bmN0aW9uKHQsZSl7aWYoImxpbmVhciI9PT10LnR5cGUpZS5zZXRBdHRyaWJ1dGUoIngxIix0LngpLGUuc2V0QXR0cmlidXRlKCJ5MSIsdC55KSxlLnNldEF0dHJpYnV0ZSgieDIiLHQueDIpLGUuc2V0QXR0cmlidXRlKCJ5MiIsdC55Mik7ZWxzZXtpZigicmFkaWFsIiE9PXQudHlwZSlyZXR1cm4gdm9pZCBmaSgiSWxsZWdhbCBncmFkaWVudCB0eXBlLiIpO2Uuc2V0QXR0cmlidXRlKCJjeCIsdC54KSxlLnNldEF0dHJpYnV0ZSgiY3kiLHQueSksZS5zZXRBdHRyaWJ1dGUoInIiLHQucil9dC5nbG9iYWw/ZS5zZXRBdHRyaWJ1dGUoImdyYWRpZW50VW5pdHMiLCJ1c2VyU3BhY2VPblVzZSIpOmUuc2V0QXR0cmlidXRlKCJncmFkaWVudFVuaXRzIiwib2JqZWN0Qm91bmRpbmdCb3giKSxlLmlubmVySFRNTD0iIjtmb3IodmFyIGk9dC5jb2xvclN0b3BzLG49MCxvPWkubGVuZ3RoO248bzsrK24pe3ZhciBhPXRoaXMuY3JlYXRlRWxlbWVudCgic3RvcCIpO2Euc2V0QXR0cmlidXRlKCJvZmZzZXQiLDEwMCppW25dLm9mZnNldCsiJSIpO3ZhciByPWlbbl0uY29sb3I7aWYoci5pbmRleE9mKCExKSl7dmFyIHM9UmUocilbM10sbD1HZShyKTthLnNldEF0dHJpYnV0ZSgic3RvcC1jb2xvciIsIiMiK2wpLGEuc2V0QXR0cmlidXRlKCJzdG9wLW9wYWNpdHkiLHMpfWVsc2UgYS5zZXRBdHRyaWJ1dGUoInN0b3AtY29sb3IiLGlbbl0uY29sb3IpO2UuYXBwZW5kQ2hpbGQoYSl9dC5fZG9tPWV9LCRrLnByb3RvdHlwZS5tYXJrVXNlZD1mdW5jdGlvbih0KXtpZih0LnN0eWxlKXt2YXIgZT10LnN0eWxlLmZpbGw7ZSYmZS5fZG9tJiZLay5wcm90b3R5cGUubWFya1VzZWQuY2FsbCh0aGlzLGUuX2RvbSksKGU9dC5zdHlsZS5zdHJva2UpJiZlLl9kb20mJktrLnByb3RvdHlwZS5tYXJrVXNlZC5jYWxsKHRoaXMsZS5fZG9tKX19LHcoSmssS2spLEprLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRTdmdFbGVtZW50KHQpO2UmJnRoaXMudXBkYXRlRG9tKGUsdC5fX2NsaXBQYXRocywhMSk7dmFyIGk9dGhpcy5nZXRUZXh0U3ZnRWxlbWVudCh0KTtpJiZ0aGlzLnVwZGF0ZURvbShpLHQuX19jbGlwUGF0aHMsITApLHRoaXMubWFya1VzZWQodCl9LEprLnByb3RvdHlwZS51cGRhdGVEb209ZnVuY3Rpb24odCxlLGkpe2lmKGUmJjA8ZS5sZW5ndGgpe3ZhciBuLG8sYT10aGlzLmdldERlZnMoITApLHI9ZVswXSxzPWk/Il90ZXh0RG9tIjoiX2RvbSI7cltzXT8obz1yW3NdLmdldEF0dHJpYnV0ZSgiaWQiKSxuPXJbc10sYS5jb250YWlucyhuKXx8YS5hcHBlbmRDaGlsZChuKSk6KG89InpyIit0aGlzLl96cklkKyItY2xpcC0iK3RoaXMubmV4dElkLCsrdGhpcy5uZXh0SWQsKG49dGhpcy5jcmVhdGVFbGVtZW50KCJjbGlwUGF0aCIpKS5zZXRBdHRyaWJ1dGUoImlkIixvKSxhLmFwcGVuZENoaWxkKG4pLHJbc109bik7dmFyIGw9dGhpcy5nZXRTdmdQcm94eShyKTtpZihyLnRyYW5zZm9ybSYmci5wYXJlbnQuaW52VHJhbnNmb3JtJiYhaSl7dmFyIHU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoci50cmFuc2Zvcm0pO29lKHIudHJhbnNmb3JtLHIucGFyZW50LmludlRyYW5zZm9ybSxyLnRyYW5zZm9ybSksbC5icnVzaChyKSxyLnRyYW5zZm9ybT11fWVsc2UgbC5icnVzaChyKTt2YXIgaD10aGlzLmdldFN2Z0VsZW1lbnQocik7bi5pbm5lckhUTUw9IiIsbi5hcHBlbmRDaGlsZChoLmNsb25lTm9kZSgpKSx0LnNldEF0dHJpYnV0ZSgiY2xpcC1wYXRoIiwidXJsKCMiK28rIikiKSwxPGUubGVuZ3RoJiZ0aGlzLnVwZGF0ZURvbShuLGUuc2xpY2UoMSksaSl9ZWxzZSB0JiZ0LnNldEF0dHJpYnV0ZSgiY2xpcC1wYXRoIiwibm9uZSIpfSxKay5wcm90b3R5cGUubWFya1VzZWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0Ll9fY2xpcFBhdGhzJiZFKHQuX19jbGlwUGF0aHMsZnVuY3Rpb24odCl7dC5fZG9tJiZLay5wcm90b3R5cGUubWFya1VzZWQuY2FsbChlLHQuX2RvbSksdC5fdGV4dERvbSYmS2sucHJvdG90eXBlLm1hcmtVc2VkLmNhbGwoZSx0Ll90ZXh0RG9tKX0pfSx3KFFrLEtrKSxRay5wcm90b3R5cGUuYWRkV2l0aG91dFVwZGF0ZT1mdW5jdGlvbih0LGUpe2lmKGUmJnRQKGUuc3R5bGUpKXt2YXIgaTtpZihlLl9zaGFkb3dEb20paT1lLl9zaGFkb3dEb20sdGhpcy5nZXREZWZzKCEwKS5jb250YWlucyhlLl9zaGFkb3dEb20pfHx0aGlzLmFkZERvbShpKTtlbHNlIGk9dGhpcy5hZGQoZSk7dGhpcy5tYXJrVXNlZChlKTt2YXIgbj1pLmdldEF0dHJpYnV0ZSgiaWQiKTt0LnN0eWxlLmZpbHRlcj0idXJsKCMiK24rIikifX0sUWsucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmNyZWF0ZUVsZW1lbnQoImZpbHRlciIpO3JldHVybiB0Ll9zaGFkb3dEb21JZD10Ll9zaGFkb3dEb21JZHx8dGhpcy5uZXh0SWQrKyxlLnNldEF0dHJpYnV0ZSgiaWQiLCJ6ciIrdGhpcy5fenJJZCsiLXNoYWRvdy0iK3QuX3NoYWRvd0RvbUlkKSx0aGlzLnVwZGF0ZURvbSh0LGUpLHRoaXMuYWRkRG9tKGUpLGV9LFFrLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxlKXtpZih0UChlLnN0eWxlKSl7dmFyIGk9dGhpcztLay5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcyxlLGZ1bmN0aW9uKCl7aS51cGRhdGVEb20oZSxlLl9zaGFkb3dEb20pfSl9ZWxzZSB0aGlzLnJlbW92ZSh0LGUpfSxRay5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQsZSl7bnVsbCE9ZS5fc2hhZG93RG9tSWQmJih0aGlzLnJlbW92ZURvbSh0KSx0LnN0eWxlLmZpbHRlcj0iIil9LFFrLnByb3RvdHlwZS51cGRhdGVEb209ZnVuY3Rpb24odCxlKXt2YXIgaT1lLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJmZURyb3BTaGFkb3ciKTtpPTA9PT1pLmxlbmd0aD90aGlzLmNyZWF0ZUVsZW1lbnQoImZlRHJvcFNoYWRvdyIpOmlbMF07dmFyIG4sbyxhLHIscz10LnN0eWxlLGw9dC5zY2FsZSYmdC5zY2FsZVswXXx8MSx1PXQuc2NhbGUmJnQuc2NhbGVbMV18fDE7aWYocy5zaGFkb3dCbHVyfHxzLnNoYWRvd09mZnNldFh8fHMuc2hhZG93T2Zmc2V0WSluPXMuc2hhZG93T2Zmc2V0WHx8MCxvPXMuc2hhZG93T2Zmc2V0WXx8MCxhPXMuc2hhZG93Qmx1cixyPXMuc2hhZG93Q29sb3I7ZWxzZXtpZighcy50ZXh0U2hhZG93Qmx1cilyZXR1cm4gdm9pZCB0aGlzLnJlbW92ZURvbShlLHMpO249cy50ZXh0U2hhZG93T2Zmc2V0WHx8MCxvPXMudGV4dFNoYWRvd09mZnNldFl8fDAsYT1zLnRleHRTaGFkb3dCbHVyLHI9cy50ZXh0U2hhZG93Q29sb3J9aS5zZXRBdHRyaWJ1dGUoImR4IixuL2wpLGkuc2V0QXR0cmlidXRlKCJkeSIsby91KSxpLnNldEF0dHJpYnV0ZSgiZmxvb2QtY29sb3IiLHIpO3ZhciBoPWEvMi9sKyIgIithLzIvdTtpLnNldEF0dHJpYnV0ZSgic3RkRGV2aWF0aW9uIixoKSxlLnNldEF0dHJpYnV0ZSgieCIsIi0xMDAlIiksZS5zZXRBdHRyaWJ1dGUoInkiLCItMTAwJSIpLGUuc2V0QXR0cmlidXRlKCJ3aWR0aCIsTWF0aC5jZWlsKGEvMioyMDApKyIlIiksZS5zZXRBdHRyaWJ1dGUoImhlaWdodCIsTWF0aC5jZWlsKGEvMioyMDApKyIlIiksZS5hcHBlbmRDaGlsZChpKSx0Ll9zaGFkb3dEb209ZX0sUWsucHJvdG90eXBlLm1hcmtVc2VkPWZ1bmN0aW9uKHQpe3QuX3NoYWRvd0RvbSYmS2sucHJvdG90eXBlLm1hcmtVc2VkLmNhbGwodGhpcyx0Ll9zaGFkb3dEb20pfTtmdW5jdGlvbiBsUCh0LGUsaSxuKXt0aGlzLnJvb3Q9dCx0aGlzLnN0b3JhZ2U9ZSx0aGlzLl9vcHRzPWk9TCh7fSxpfHx7fSk7dmFyIG89d2soInN2ZyIpO28uc2V0QXR0cmlidXRlKCJ4bWxucyIsImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiksby5zZXRBdHRyaWJ1dGUoInZlcnNpb24iLCIxLjEiKSxvLnNldEF0dHJpYnV0ZSgiYmFzZVByb2ZpbGUiLCJmdWxsIiksby5zdHlsZS5jc3NUZXh0PSJ1c2VyLXNlbGVjdDpub25lO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDsiLHRoaXMuZ3JhZGllbnRNYW5hZ2VyPW5ldyAkayhuLG8pLHRoaXMuY2xpcFBhdGhNYW5hZ2VyPW5ldyBKayhuLG8pLHRoaXMuc2hhZG93TWFuYWdlcj1uZXcgUWsobixvKTt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTthLnN0eWxlLmNzc1RleHQ9Im92ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZSIsdGhpcy5fc3ZnUm9vdD1vLHRoaXMuX3ZpZXdwb3J0PWEsdC5hcHBlbmRDaGlsZChhKSxhLmFwcGVuZENoaWxkKG8pLHRoaXMucmVzaXplKGkud2lkdGgsaS5oZWlnaHQpLHRoaXMuX3Zpc2libGVMaXN0PVtdfWxQLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bFAsZ2V0VHlwZTpmdW5jdGlvbigpe3JldHVybiJzdmcifSxnZXRWaWV3cG9ydFJvb3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld3BvcnR9LGdldFZpZXdwb3J0Um9vdE9mZnNldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Vmlld3BvcnRSb290KCk7aWYodClyZXR1cm57b2Zmc2V0TGVmdDp0Lm9mZnNldExlZnR8fDAsb2Zmc2V0VG9wOnQub2Zmc2V0VG9wfHwwfX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3RvcmFnZS5nZXREaXNwbGF5TGlzdCghMCk7dGhpcy5fcGFpbnRMaXN0KHQpfSxzZXRCYWNrZ3JvdW5kQ29sb3I6ZnVuY3Rpb24odCl7dGhpcy5fdmlld3BvcnQuc3R5bGUuYmFja2dyb3VuZD10fSxfcGFpbnRMaXN0OmZ1bmN0aW9uKHQpe3RoaXMuZ3JhZGllbnRNYW5hZ2VyLm1hcmtBbGxVbnVzZWQoKSx0aGlzLmNsaXBQYXRoTWFuYWdlci5tYXJrQWxsVW51c2VkKCksdGhpcy5zaGFkb3dNYW5hZ2VyLm1hcmtBbGxVbnVzZWQoKTt2YXIgZSxpLG49dGhpcy5fc3ZnUm9vdCxvPXRoaXMuX3Zpc2libGVMaXN0LGE9dC5sZW5ndGgscj1bXTtmb3IoZT0wO2U8YTtlKyspe3ZhciBzPXRbZV0sbD0oaT1zKWluc3RhbmNlb2YgU3I/Ums6aSBpbnN0YW5jZW9mIHFuP0JrOmkgaW5zdGFuY2VvZiBGcj9WazpSayx1PXNQKHMpfHxyUChzKTtzLmludmlzaWJsZXx8KHMuX19kaXJ0eSYmKGwmJmwuYnJ1c2gocyksdGhpcy5jbGlwUGF0aE1hbmFnZXIudXBkYXRlKHMpLHMuc3R5bGUmJih0aGlzLmdyYWRpZW50TWFuYWdlci51cGRhdGUocy5zdHlsZS5maWxsKSx0aGlzLmdyYWRpZW50TWFuYWdlci51cGRhdGUocy5zdHlsZS5zdHJva2UpLHRoaXMuc2hhZG93TWFuYWdlci51cGRhdGUodSxzKSkscy5fX2RpcnR5PSExKSxyLnB1c2gocykpfXZhciBoLGM9ZnVuY3Rpb24odCxlLGkpe3JldHVybiBxay5kaWZmKHQsZSxpKX0obyxyKTtmb3IoZT0wO2U8Yy5sZW5ndGg7ZSsrKXtpZigocD1jW2VdKS5yZW1vdmVkKWZvcih2YXIgZD0wO2Q8cC5jb3VudDtkKyspe3U9c1Aocz1vW3AuaW5kaWNlc1tkXV0pO3ZhciBmPXJQKHMpO2FQKG4sdSksYVAobixmKX19Zm9yKGU9MDtlPGMubGVuZ3RoO2UrKyl7dmFyIHA7aWYoKHA9Y1tlXSkuYWRkZWQpZm9yKGQ9MDtkPHAuY291bnQ7ZCsrKXt1PXNQKHM9cltwLmluZGljZXNbZF1dKSxmPXJQKHMpO2g/blAobix1LGgpOm9QKG4sdSksdT9uUChuLGYsdSk6aD9uUChuLGYsaCk6b1AobixmKSxuUChuLGYsdSksaD1mfHx1fHxoLHRoaXMuZ3JhZGllbnRNYW5hZ2VyLmFkZFdpdGhvdXRVcGRhdGUodXx8ZixzKSx0aGlzLnNoYWRvd01hbmFnZXIuYWRkV2l0aG91dFVwZGF0ZSh1fHxmLHMpLHRoaXMuY2xpcFBhdGhNYW5hZ2VyLm1hcmtVc2VkKHMpfWVsc2UgaWYoIXAucmVtb3ZlZClmb3IoZD0wO2Q8cC5jb3VudDtkKyspe3U9c1Aocz1yW3AuaW5kaWNlc1tkXV0pLGY9clAocyksdT1zUChzKSxmPXJQKHMpO3RoaXMuZ3JhZGllbnRNYW5hZ2VyLm1hcmtVc2VkKHMpLHRoaXMuZ3JhZGllbnRNYW5hZ2VyLmFkZFdpdGhvdXRVcGRhdGUodXx8ZixzKSx0aGlzLnNoYWRvd01hbmFnZXIubWFya1VzZWQocyksdGhpcy5zaGFkb3dNYW5hZ2VyLmFkZFdpdGhvdXRVcGRhdGUodXx8ZixzKSx0aGlzLmNsaXBQYXRoTWFuYWdlci5tYXJrVXNlZChzKSxmJiZuUChuLGYsdSksaD11fHxmfHxofX10aGlzLmdyYWRpZW50TWFuYWdlci5yZW1vdmVVbnVzZWQoKSx0aGlzLmNsaXBQYXRoTWFuYWdlci5yZW1vdmVVbnVzZWQoKSx0aGlzLnNoYWRvd01hbmFnZXIucmVtb3ZlVW51c2VkKCksdGhpcy5fdmlzaWJsZUxpc3Q9cn0sX2dldERlZnM6ZnVuY3Rpb24odCl7dmFyIG4sZT10aGlzLl9zdmdSb290O3JldHVybiAwIT09KG49dGhpcy5fc3ZnUm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZGVmcyIpKS5sZW5ndGg/blswXTp0Pygobj1lLmluc2VydEJlZm9yZSh3aygiZGVmcyIpLGUuZmlyc3RDaGlsZCkpLmNvbnRhaW5zfHwobi5jb250YWlucz1mdW5jdGlvbih0KXt2YXIgZT1uLmNoaWxkcmVuO2lmKCFlKXJldHVybiExO2Zvcih2YXIgaT1lLmxlbmd0aC0xOzA8PWk7LS1pKWlmKGVbaV09PT10KXJldHVybiEwO3JldHVybiExfSksbik6bnVsbH0scmVzaXplOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fdmlld3BvcnQ7aS5zdHlsZS5kaXNwbGF5PSJub25lIjt2YXIgbj10aGlzLl9vcHRzO2lmKG51bGwhPXQmJihuLndpZHRoPXQpLG51bGwhPWUmJihuLmhlaWdodD1lKSx0PXRoaXMuX2dldFNpemUoMCksZT10aGlzLl9nZXRTaXplKDEpLGkuc3R5bGUuZGlzcGxheT0iIix0aGlzLl93aWR0aCE9PXR8fHRoaXMuX2hlaWdodCE9PWUpe3RoaXMuX3dpZHRoPXQsdGhpcy5faGVpZ2h0PWU7dmFyIG89aS5zdHlsZTtvLndpZHRoPXQrInB4IixvLmhlaWdodD1lKyJweCI7dmFyIGE9dGhpcy5fc3ZnUm9vdDthLnNldEF0dHJpYnV0ZSgid2lkdGgiLHQpLGEuc2V0QXR0cmlidXRlKCJoZWlnaHQiLGUpfX0sZ2V0V2lkdGg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2lkdGh9LGdldEhlaWdodDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9oZWlnaHR9LF9nZXRTaXplOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX29wdHMsaT1bIndpZHRoIiwiaGVpZ2h0Il1bdF0sbj1bImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0Il1bdF0sbz1bInBhZGRpbmdMZWZ0IiwicGFkZGluZ1RvcCJdW3RdLGE9WyJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nQm90dG9tIl1bdF07aWYobnVsbCE9ZVtpXSYmImF1dG8iIT09ZVtpXSlyZXR1cm4gcGFyc2VGbG9hdChlW2ldKTt2YXIgcj10aGlzLnJvb3Qscz1kb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKHIpO3JldHVybihyW25dfHxlUChzW2ldKXx8ZVAoci5zdHlsZVtpXSkpLShlUChzW29dKXx8MCktKGVQKHNbYV0pfHwwKXwwfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5yb290LmlubmVySFRNTD0iIix0aGlzLl9zdmdSb290PXRoaXMuX3ZpZXdwb3J0PXRoaXMuc3RvcmFnZT1udWxsfSxjbGVhcjpmdW5jdGlvbigpe3RoaXMuX3ZpZXdwb3J0JiZ0aGlzLnJvb3QucmVtb3ZlQ2hpbGQodGhpcy5fdmlld3BvcnQpfSxwYXRoVG9EYXRhVXJsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVmcmVzaCgpLCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD1VVEYtOCwiK3RoaXMuX3N2Z1Jvb3Qub3V0ZXJIVE1MfX0sRShbImdldExheWVyIiwiaW5zZXJ0TGF5ZXIiLCJlYWNoTGF5ZXIiLCJlYWNoQnVpbHRpbkxheWVyIiwiZWFjaE90aGVyTGF5ZXIiLCJnZXRMYXllcnMiLCJtb2RMYXllciIsImRlbExheWVyIiwiY2xlYXJMYXllciIsInRvRGF0YVVSTCIsInBhdGhUb0ltYWdlIl0sZnVuY3Rpb24odCl7bFAucHJvdG90eXBlW3RdPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe2ZpKCdJbiBTVkcgbW9kZSBwYWludGVyIG5vdCBzdXBwb3J0IG1ldGhvZCAiJyt0KyciJyl9fSh0KX0pLERvKCJzdmciLGxQKSx0LnZlcnNpb249IjQuNi4wIix0LmRlcGVuZGVuY2llcz17enJlbmRlcjoiNC4yLjAifSx0LlBSSU9SSVRZPUlkLHQuaW5pdD1mdW5jdGlvbih0LGUsaSl7dmFyIG49Y2YodCk7aWYobilyZXR1cm4gbjt2YXIgbz1uZXcga2QodCxlLGkpO3JldHVybiBvLmlkPSJlY18iK3JmKyssb2Zbby5pZF09byxqbyh0LGxmLG8uaWQpLGZ1bmN0aW9uKG4pe3ZhciBvPSJfX2Nvbm5lY3RVcGRhdGVTdGF0dXMiO2Z1bmN0aW9uIGEodCxlKXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dFtpXVtvXT1lfX13ZChLZCxmdW5jdGlvbih0LGUpe24uX21lc3NhZ2VDZW50ZXIub24oZSxmdW5jdGlvbih0KXtpZihhZltuLmdyb3VwXSYmMCE9PW5bb10pe2lmKHQmJnQuZXNjYXBlQ29ubmVjdClyZXR1cm47dmFyIGU9bi5tYWtlQWN0aW9uRnJvbUV2ZW50KHQpLGk9W107d2Qob2YsZnVuY3Rpb24odCl7dCE9PW4mJnQuZ3JvdXA9PT1uLmdyb3VwJiZpLnB1c2godCl9KSxhKGksMCksd2QoaSxmdW5jdGlvbih0KXsxIT09dFtvXSYmdC5kaXNwYXRjaEFjdGlvbihlKX0pLGEoaSwyKX19KX0pfShvKSxvfSx0LmNvbm5lY3Q9ZnVuY3Rpb24oZSl7aWYoayhlKSl7dmFyIHQ9ZTtlPW51bGwsd2QodCxmdW5jdGlvbih0KXtudWxsIT10Lmdyb3VwJiYoZT10Lmdyb3VwKX0pLGU9ZXx8ImdfIitzZisrLHdkKHQsZnVuY3Rpb24odCl7dC5ncm91cD1lfSl9cmV0dXJuIGFmW2VdPSEwLGV9LHQuZGlzQ29ubmVjdD11Zix0LmRpc2Nvbm5lY3Q9aGYsdC5kaXNwb3NlPWZ1bmN0aW9uKHQpeyJzdHJpbmciPT10eXBlb2YgdD90PW9mW3RdOnQgaW5zdGFuY2VvZiBrZHx8KHQ9Y2YodCkpLHQgaW5zdGFuY2VvZiBrZCYmIXQuaXNEaXNwb3NlZCgpJiZ0LmRpc3Bvc2UoKX0sdC5nZXRJbnN0YW5jZUJ5RG9tPWNmLHQuZ2V0SW5zdGFuY2VCeUlkPWZ1bmN0aW9uKHQpe3JldHVybiBvZlt0XX0sdC5yZWdpc3RlclRoZW1lPWRmLHQucmVnaXN0ZXJQcmVwcm9jZXNzb3I9ZmYsdC5yZWdpc3RlclByb2Nlc3Nvcj1wZix0LnJlZ2lzdGVyUG9zdFVwZGF0ZT1mdW5jdGlvbih0KXtRZC5wdXNoKHQpfSx0LnJlZ2lzdGVyQWN0aW9uPWdmLHQucmVnaXN0ZXJDb29yZGluYXRlU3lzdGVtPW1mLHQuZ2V0Q29vcmRpbmF0ZVN5c3RlbURpbWVuc2lvbnM9ZnVuY3Rpb24odCl7dmFyIGU9bmguZ2V0KHQpO2lmKGUpcmV0dXJuIGUuZ2V0RGltZW5zaW9uc0luZm8/ZS5nZXREaW1lbnNpb25zSW5mbygpOmUuZGltZW5zaW9ucy5zbGljZSgpfSx0LnJlZ2lzdGVyTGF5b3V0PXZmLHQucmVnaXN0ZXJWaXN1YWw9eWYsdC5yZWdpc3RlckxvYWRpbmc9X2YsdC5leHRlbmRDb21wb25lbnRNb2RlbD13Zix0LmV4dGVuZENvbXBvbmVudFZpZXc9YmYsdC5leHRlbmRTZXJpZXNNb2RlbD1TZix0LmV4dGVuZENoYXJ0Vmlldz1NZix0LnNldENhbnZhc0NyZWF0b3I9ZnVuY3Rpb24odCl7ZigiY3JlYXRlQ2FudmFzIix0KX0sdC5yZWdpc3Rlck1hcD1mdW5jdGlvbih0LGUsaSl7eWQucmVnaXN0ZXJNYXAodCxlLGkpfSx0LmdldE1hcD1mdW5jdGlvbih0KXt2YXIgZT15ZC5yZXRyaWV2ZU1hcCh0KTtyZXR1cm4gZSYmZVswXSYme2dlb0pzb246ZVswXS5nZW9KU09OLHNwZWNpYWxBcmVhczplWzBdLnNwZWNpYWxBcmVhc319LHQuZGF0YVRvb2w9e30sdC56cmVuZGVyPUxvLHQubnVtYmVyPXFsLHQuZm9ybWF0PWN1LHQudGhyb3R0bGU9SWMsdC5oZWxwZXI9eWcsdC5tYXRyaXg9aGUsdC52ZWN0b3I9SXQsdC5jb2xvcj1qZSx0LnBhcnNlR2VvSlNPTj1NZyx0LnBhcnNlR2VvSnNvbj1SZyx0LnV0aWw9QmcsdC5ncmFwaGljPVZnLHQuTGlzdD1XZix0Lk1vZGVsPUlsLHQuQXhpcz1FZyx0LmVudj12fSk7Cg=="},{"meta":{"name":"layer.js","url":"https://lib.baomitu.com/layer/2.3/layer.js","ts":1676036817504,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"qrcode.min.js","url":"https://lib.baomitu.com/qrcode-generator/1.4.4/qrcode.min.js","ts":1676036817503,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"FileSaver.min.js","url":"https://lib.baomitu.com/FileSaver.js/2.0.5/FileSaver.min.js","ts":1676036817494,"mimetype":"text/javascript"},"source":"KGZ1bmN0aW9uKGEsYil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sYik7ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIGV4cG9ydHMpYigpO2Vsc2V7YigpLGEuRmlsZVNhdmVyPXtleHBvcnRzOnt9fS5leHBvcnRzfX0pKHRoaXMsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgYj9iPXthdXRvQm9tOiExfToib2JqZWN0IiE9dHlwZW9mIGImJihjb25zb2xlLndhcm4oIkRlcHJlY2F0ZWQ6IEV4cGVjdGVkIHRoaXJkIGFyZ3VtZW50IHRvIGJlIGEgb2JqZWN0IiksYj17YXV0b0JvbTohYn0pLGIuYXV0b0JvbSYmL15ccyooPzp0ZXh0XC9cUyp8YXBwbGljYXRpb25cL3htbHxcUypcL1xTKlwreG1sKVxzKjsuKmNoYXJzZXRccyo9XHMqdXRmLTgvaS50ZXN0KGEudHlwZSk/bmV3IEJsb2IoWyJcdUZFRkYiLGFdLHt0eXBlOmEudHlwZX0pOmF9ZnVuY3Rpb24gYyhhLGIsYyl7dmFyIGQ9bmV3IFhNTEh0dHBSZXF1ZXN0O2Qub3BlbigiR0VUIixhKSxkLnJlc3BvbnNlVHlwZT0iYmxvYiIsZC5vbmxvYWQ9ZnVuY3Rpb24oKXtnKGQucmVzcG9uc2UsYixjKX0sZC5vbmVycm9yPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiY291bGQgbm90IGRvd25sb2FkIGZpbGUiKX0sZC5zZW5kKCl9ZnVuY3Rpb24gZChhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vcGVuKCJIRUFEIixhLCExKTt0cnl7Yi5zZW5kKCl9Y2F0Y2goYSl7fXJldHVybiAyMDA8PWIuc3RhdHVzJiYyOTk+PWIuc3RhdHVzfWZ1bmN0aW9uIGUoYSl7dHJ5e2EuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSl9Y2F0Y2goYyl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIk1vdXNlRXZlbnRzIik7Yi5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCw4MCwyMCwhMSwhMSwhMSwhMSwwLG51bGwpLGEuZGlzcGF0Y2hFdmVudChiKX19dmFyIGY9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy53aW5kb3c9PT13aW5kb3c/d2luZG93OiJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOiJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwuZ2xvYmFsPT09Z2xvYmFsP2dsb2JhbDp2b2lkIDAsYT1mLm5hdmlnYXRvciYmL01hY2ludG9zaC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmL0FwcGxlV2ViS2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYhL1NhZmFyaS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxnPWYuc2F2ZUFzfHwoIm9iamVjdCIhPXR5cGVvZiB3aW5kb3d8fHdpbmRvdyE9PWY/ZnVuY3Rpb24oKXt9OiJkb3dubG9hZCJpbiBIVE1MQW5jaG9yRWxlbWVudC5wcm90b3R5cGUmJiFhP2Z1bmN0aW9uKGIsZyxoKXt2YXIgaT1mLlVSTHx8Zi53ZWJraXRVUkwsaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7Zz1nfHxiLm5hbWV8fCJkb3dubG9hZCIsai5kb3dubG9hZD1nLGoucmVsPSJub29wZW5lciIsInN0cmluZyI9PXR5cGVvZiBiPyhqLmhyZWY9YixqLm9yaWdpbj09PWxvY2F0aW9uLm9yaWdpbj9lKGopOmQoai5ocmVmKT9jKGIsZyxoKTplKGosai50YXJnZXQ9Il9ibGFuayIpKTooai5ocmVmPWkuY3JlYXRlT2JqZWN0VVJMKGIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnJldm9rZU9iamVjdFVSTChqLmhyZWYpfSw0RTQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGopfSwwKSl9OiJtc1NhdmVPck9wZW5CbG9iImluIG5hdmlnYXRvcj9mdW5jdGlvbihmLGcsaCl7aWYoZz1nfHxmLm5hbWV8fCJkb3dubG9hZCIsInN0cmluZyIhPXR5cGVvZiBmKW5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGIoZixoKSxnKTtlbHNlIGlmKGQoZikpYyhmLGcsaCk7ZWxzZXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7aS5ocmVmPWYsaS50YXJnZXQ9Il9ibGFuayIsc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9KX19OmZ1bmN0aW9uKGIsZCxlLGcpe2lmKGc9Z3x8b3BlbigiIiwiX2JsYW5rIiksZyYmKGcuZG9jdW1lbnQudGl0bGU9Zy5kb2N1bWVudC5ib2R5LmlubmVyVGV4dD0iZG93bmxvYWRpbmcuLi4iKSwic3RyaW5nIj09dHlwZW9mIGIpcmV0dXJuIGMoYixkLGUpO3ZhciBoPSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iPT09Yi50eXBlLGk9L2NvbnN0cnVjdG9yL2kudGVzdChmLkhUTUxFbGVtZW50KXx8Zi5zYWZhcmksaj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO2lmKChqfHxoJiZpfHxhKSYmInVuZGVmaW5lZCIhPXR5cGVvZiBGaWxlUmVhZGVyKXt2YXIgaz1uZXcgRmlsZVJlYWRlcjtrLm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBhPWsucmVzdWx0O2E9aj9hOmEucmVwbGFjZSgvXmRhdGE6W147XSo7LywiZGF0YTphdHRhY2htZW50L2ZpbGU7IiksZz9nLmxvY2F0aW9uLmhyZWY9YTpsb2NhdGlvbj1hLGc9bnVsbH0say5yZWFkQXNEYXRhVVJMKGIpfWVsc2V7dmFyIGw9Zi5VUkx8fGYud2Via2l0VVJMLG09bC5jcmVhdGVPYmplY3RVUkwoYik7Zz9nLmxvY2F0aW9uPW06bG9jYXRpb24uaHJlZj1tLGc9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bC5yZXZva2VPYmplY3RVUkwobSl9LDRFNCl9fSk7Zi5zYXZlQXM9Zy5zYXZlQXM9ZywidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWcpfSk7CgovLyMgc291cmNlTWFwcGluZ1VSTD1GaWxlU2F2ZXIubWluLmpzLm1hcA=="}]},{"name":"CSDN/知乎/哔哩哔哩/简书免登录去除弹窗广告 🛡","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.zhihu.com/*","https://*.zhihu.com/*","https://blog.csdn.net/*","https://*.csdn.net/*","https://www.jianshu.com/*","https://*.jianshu.com/*","https://www.bilibili.com/*","https://*.bilibili.com/*","https://juejin.cn/*"],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676860441243,"data":{"menu_GAEEScript_tc_CSDN":"bfalse","menu_GAEEScript_tc_Jianshu":"btrue","menu_GAEEScript_tc_Zhihu":"btrue"}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/428960-csdn-%E7%9F%A5%E4%B9%8E-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9-%E7%AE%80%E4%B9%A6%E5%85%8D%E7%99%BB%E5%BD%95%E5%8E%BB%E9%99%A4%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A/code/CSDN%E7%9F%A5%E4%B9%8E%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E7%AE%80%E4%B9%A6%E5%85%8D%E7%99%BB%E5%BD%95%E5%8E%BB%E9%99%A4%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A%20%F0%9F%9B%A1.user.js","uuid":"2c8b4512-6693-4342-bce4-bc03724fc264","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1675753020402,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.cookie.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery-cookie/1.4.0/jquery.cookie.js","ts":1675753020433,"mimetype":"text/javascript"},"source":"LyohCiAqIGpRdWVyeSBDb29raWUgUGx1Z2luIHYxLjQuMAogKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQogKgogKiBDb3B5cmlnaHQgMjAxMyBLbGF1cyBIYXJ0bAogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKICovCihmdW5jdGlvbiAoZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewoJCS8vIEFNRC4gUmVnaXN0ZXIgYXMgYW5vbnltb3VzIG1vZHVsZS4KCQlkZWZpbmUoWydqcXVlcnknXSwgZmFjdG9yeSk7Cgl9IGVsc2UgewoJCS8vIEJyb3dzZXIgZ2xvYmFscy4KCQlmYWN0b3J5KGpRdWVyeSk7Cgl9Cn0oZnVuY3Rpb24gKCQpIHsKCgl2YXIgcGx1c2VzID0gL1wrL2c7CgoJZnVuY3Rpb24gZW5jb2RlKHMpIHsKCQlyZXR1cm4gY29uZmlnLnJhdyA/IHMgOiBlbmNvZGVVUklDb21wb25lbnQocyk7Cgl9CgoJZnVuY3Rpb24gZGVjb2RlKHMpIHsKCQlyZXR1cm4gY29uZmlnLnJhdyA/IHMgOiBkZWNvZGVVUklDb21wb25lbnQocyk7Cgl9CgoJZnVuY3Rpb24gc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpIHsKCQlyZXR1cm4gZW5jb2RlKGNvbmZpZy5qc29uID8gSlNPTi5zdHJpbmdpZnkodmFsdWUpIDogU3RyaW5nKHZhbHVlKSk7Cgl9CgoJZnVuY3Rpb24gcGFyc2VDb29raWVWYWx1ZShzKSB7CgkJaWYgKHMuaW5kZXhPZignIicpID09PSAwKSB7CgkJCS8vIFRoaXMgaXMgYSBxdW90ZWQgY29va2llIGFzIGFjY29yZGluZyB0byBSRkMyMDY4LCB1bmVzY2FwZS4uLgoJCQlzID0gcy5zbGljZSgxLCAtMSkucmVwbGFjZSgvXFwiL2csICciJykucmVwbGFjZSgvXFxcXC9nLCAnXFwnKTsKCQl9CgoJCXRyeSB7CgkJCS8vIFJlcGxhY2Ugc2VydmVyLXNpZGUgd3JpdHRlbiBwbHVzZXMgd2l0aCBzcGFjZXMuCgkJCS8vIElmIHdlIGNhbid0IGRlY29kZSB0aGUgY29va2llLCBpZ25vcmUgaXQsIGl0J3MgdW51c2FibGUuCgkJCXMgPSBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKHBsdXNlcywgJyAnKSk7CgkJfSBjYXRjaChlKSB7CgkJCXJldHVybjsKCQl9CgoJCXRyeSB7CgkJCS8vIElmIHdlIGNhbid0IHBhcnNlIHRoZSBjb29raWUsIGlnbm9yZSBpdCwgaXQncyB1bnVzYWJsZS4KCQkJcmV0dXJuIGNvbmZpZy5qc29uID8gSlNPTi5wYXJzZShzKSA6IHM7CgkJfSBjYXRjaChlKSB7fQoJfQoKCWZ1bmN0aW9uIHJlYWQocywgY29udmVydGVyKSB7CgkJdmFyIHZhbHVlID0gY29uZmlnLnJhdyA/IHMgOiBwYXJzZUNvb2tpZVZhbHVlKHMpOwoJCXJldHVybiAkLmlzRnVuY3Rpb24oY29udmVydGVyKSA/IGNvbnZlcnRlcih2YWx1ZSkgOiB2YWx1ZTsKCX0KCgl2YXIgY29uZmlnID0gJC5jb29raWUgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgb3B0aW9ucykgewoKCQkvLyBXcml0ZQoJCWlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmICEkLmlzRnVuY3Rpb24odmFsdWUpKSB7CgkJCW9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgY29uZmlnLmRlZmF1bHRzLCBvcHRpb25zKTsKCgkJCWlmICh0eXBlb2Ygb3B0aW9ucy5leHBpcmVzID09PSAnbnVtYmVyJykgewoJCQkJdmFyIGRheXMgPSBvcHRpb25zLmV4cGlyZXMsIHQgPSBvcHRpb25zLmV4cGlyZXMgPSBuZXcgRGF0ZSgpOwoJCQkJdC5zZXREYXRlKHQuZ2V0RGF0ZSgpICsgZGF5cyk7CgkJCX0KCgkJCXJldHVybiAoZG9jdW1lbnQuY29va2llID0gWwoJCQkJZW5jb2RlKGtleSksICc9Jywgc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpLAoJCQkJb3B0aW9ucy5leHBpcmVzID8gJzsgZXhwaXJlcz0nICsgb3B0aW9ucy5leHBpcmVzLnRvVVRDU3RyaW5nKCkgOiAnJywgLy8gdXNlIGV4cGlyZXMgYXR0cmlidXRlLCBtYXgtYWdlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUUKCQkJCW9wdGlvbnMucGF0aCAgICA/ICc7IHBhdGg9JyArIG9wdGlvbnMucGF0aCA6ICcnLAoJCQkJb3B0aW9ucy5kb21haW4gID8gJzsgZG9tYWluPScgKyBvcHRpb25zLmRvbWFpbiA6ICcnLAoJCQkJb3B0aW9ucy5zZWN1cmUgID8gJzsgc2VjdXJlJyA6ICcnCgkJCV0uam9pbignJykpOwoJCX0KCgkJLy8gUmVhZAoKCQl2YXIgcmVzdWx0ID0ga2V5ID8gdW5kZWZpbmVkIDoge307CgoJCS8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXkKCQkvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC4gQWxzbyBwcmV2ZW50cyBvZGQgcmVzdWx0IHdoZW4KCQkvLyBjYWxsaW5nICQuY29va2llKCkuCgkJdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUgPyBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJykgOiBbXTsKCgkJZm9yICh2YXIgaSA9IDAsIGwgPSBjb29raWVzLmxlbmd0aDsgaSA8IGw7IGkrKykgewoJCQl2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7CgkJCXZhciBuYW1lID0gZGVjb2RlKHBhcnRzLnNoaWZ0KCkpOwoJCQl2YXIgY29va2llID0gcGFydHMuam9pbignPScpOwoKCQkJaWYgKGtleSAmJiBrZXkgPT09IG5hbWUpIHsKCQkJCS8vIElmIHNlY29uZCBhcmd1bWVudCAodmFsdWUpIGlzIGEgZnVuY3Rpb24gaXQncyBhIGNvbnZlcnRlci4uLgoJCQkJcmVzdWx0ID0gcmVhZChjb29raWUsIHZhbHVlKTsKCQkJCWJyZWFrOwoJCQl9CgoJCQkvLyBQcmV2ZW50IHN0b3JpbmcgYSBjb29raWUgdGhhdCB3ZSBjb3VsZG4ndCBkZWNvZGUuCgkJCWlmICgha2V5ICYmIChjb29raWUgPSByZWFkKGNvb2tpZSkpICE9PSB1bmRlZmluZWQpIHsKCQkJCXJlc3VsdFtuYW1lXSA9IGNvb2tpZTsKCQkJfQoJCX0KCgkJcmV0dXJuIHJlc3VsdDsKCX07CgoJY29uZmlnLmRlZmF1bHRzID0ge307CgoJJC5yZW1vdmVDb29raWUgPSBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7CgkJaWYgKCQuY29va2llKGtleSkgIT09IHVuZGVmaW5lZCkgewoJCQkvLyBNdXN0IG5vdCBhbHRlciBvcHRpb25zLCB0aHVzIGV4dGVuZGluZyBhIGZyZXNoIG9iamVjdC4uLgoJCQkkLmNvb2tpZShrZXksICcnLCAkLmV4dGVuZCh7fSwgb3B0aW9ucywgeyBleHBpcmVzOiAtMSB9KSk7CgkJCXJldHVybiB0cnVlOwoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9OwoKfSkpOwo="}]},{"name":"🔥持续更新🔥 CSDN广告完全过滤、人性化脚本优化：🆕 不用再登录了！让你体验令人惊喜的崭新CSDN。","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676860505278,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/378351-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-csdn%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4-%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96-%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86-%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0csdn/code/%F0%9F%94%A5%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%F0%9F%94%A5%20CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E3%80%81%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96%EF%BC%9A%F0%9F%86%95%20%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86%EF%BC%81%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0CSDN%E3%80%82.user.js","uuid":"5b79ec0c-777a-447b-ada0-70608fef4ae3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDwn5Sl5oyB57ut5pu05paw8J+UpSBDU0RO5bm/5ZGK5a6M5YWo6L+H5ruk44CB5Lq65oCn5YyW6ISa5pys5LyY5YyW77ya8J+GlSDkuI3nlKjlho3nmbvlvZXkuobvvIHorqnkvaDkvZPpqozku6Tkurrmg4rllpznmoTltK3mlrBDU0RO44CCCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9naXRodWIuY29tL2FkbGVyZWQKLy8gQHZlcnNpb24gICAgICA0LjEuMgovLyBAZGVzY3JpcHRpb24gIOKaoe+4j+WFqOaWsDQuMOeJiOacrO+8geaLpeacieaVsOmhueeLrOWutuWKn+iDveeahOacgOW8ukNTRE7ohJrmnKzvvIzkuI3mnI3mr5TkuIDmr5TimqHvuI988J+VtuaXoOmcgOeZu+W9lUNTRE7vvIzojrflvpfmr5TkvJrlkZjmm7TkvbPnmoTkvZPpqox88J+WpeiHquWumuS5ieiDjOaZr+Wbvu+8jOWIhui+qOeOh+iHqumAgumFje+8jOWIhuWxj+S4jeeUqOa7muWKqHzwn5K+6LaF57qn6aKE5LyY5YyWfPCflJbni6zlrrbotoXnuqflhY3kvJrlkZh88J+Pt+eLrOWutuWOn+WIm+aWh+eroOWFjeeZu+W9leWxleW8gHzwn5SM54us5a625o6o6I2Q5YaF5a656Ieq55Sx5byA5YWzfPCfk6Dni6zlrrblhY3nmbvlvZXlpI3liLZ88J+Ul+eLrOWutumYsuWklumTvumHjeWumuWQkXzwn5Od54us5a626K665Z2b5pyq55m75b2V6Ieq5Yqo5bGV5byA5paH56ug44CB6K+E6K66fPCfjLXlhajpnaLlh4DljJZ88J+TiOayiea1uOmYheivu3zwn6e05YeA5YyW5Ymq6LS05p2/fPCfk5XkvZzogIXkv6Hmga/mlofnq6Dpobbpg6jlsZXnpLoKLy8gQGF1dGhvciAgICAgICBBZGxlcgovLyBAY29ubmVjdCAgICAgIHd3dy5jc2RuLm5ldAovLyBAaW5jbHVkZSAgICAgICo6Ly8qLmNzZG4ubmV0LyoKLy8gQHJlcXVpcmUgICAgICBodHRwczovL2xmMjYtY2RuLXRvcy5ieXRlY2RudHAuY29tL2Nkbi9leHBpcmUtMS1NL2pxdWVyeS1jb29raWUvMS40LjEvanF1ZXJ5LmNvb2tpZS5taW4uanMKLy8gQHJlcXVpcmUgICAgICBodHRwczovL2xmMjYtY2RuLXRvcy5ieXRlY2RudHAuY29tL2Nkbi9leHBpcmUtMS1NL25wcm9ncmVzcy8wLjIuMC9ucHJvZ3Jlc3MubWluLmpzCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9sZjI2LWNkbi10b3MuYnl0ZWNkbnRwLmNvbS9jZG4vZXhwaXJlLTEtTS9jbGlwYm9hcmQuanMvMi4wLjEwL2NsaXBib2FyZC5taW4uanMKLy8gQHN1cHBvcnRVUkwgICBodHRwczovL2dpdGh1Yi5jb20vYWRsZXJlZC9DU0ROR3JlZW5lci9pc3N1ZXMvbmV3P2Fzc2lnbmVlcz1hZGxlcmVkJmxhYmVscz1oZWxwK3dhbnRlZCZ0ZW1wbGF0ZT1JU1NVRV9URU1QTEFURS5tZCZ0aXRsZT0KLy8gQGNvbnRyaWJ1dGlvblVSTCBodHRwczovL2RvYy5zdGFja292ZXJmbG93Lndpa2kvd2ViLyMvMjE/cGFnZV9pZD0xMzgKLy8gQGdyYW50ICAgICAgICBHTV9hZGRTdHlsZQovLyBAZ3JhbnQgICAgICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICAgICAgR01fZ2V0VmFsdWUKLy8gQGFudGlmZWF0dXJlICB0cmFja2luZyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT4+PiDor7TmmI7vvJrmiJHku6zku4XkvJrlnKhDU0RO6aG16Z2i5pS26ZuG5oKo5L2/55SoQ1NETkdyZWVuZXLnmoTmg4XlhrXvvIzluK7liqnmiJHku6zkuobop6NDU0ROR3JlZW5lcueahOeUqOaIt+aVsOmHj+OAgui/meS4quaTjeS9nOS7heS8muaUtumbhuaCqOeahElQ5Zyw5Z2A5L+h5oGv77yM5LiN5YyF5ZCr5oKo6byg5qCH44CB6ZSu55uY54K55Ye75Zyo5YaF55qE5omA5pyJ5pON5L2c77yM5rKh5pyJ5Lu75L2V5a6J5YWo6aOO6Zmp77yM5LiN5Lya5Lqn55Sf5oCn6IO95o2f6ICX44CC5Li65LqG5L+d5oqk5oKo55qE55+l5oOF5p2D5Lul5Y+K5L2/55So5L2T6aqM77yM54m55ZGK55+l5LqO5oKo44CC5Luj56CB5byA5rqQ5Y+v5a6h6K6h77yMQ1NETkdyZWVuZXLogIHniYzohJrmnKzvvIzmnInlj6PnmobnopHjgILor7fmgqjmlL7lv4Plronoo4XjgIIgPDw8PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLy8gQG5vdGUgICAgICAgICAyMy0wMi0wMyA0LjEuMiDkv67lpI3kuobml6Dms5XnmbvlvZXnmoTpl67popjvvIjor4TorrrkuI3nmbvlvZXml6Dms5XliqDovb3mmoLml6Dop6PlhrPmlrnmoYjvvIzmiJHku6zlnKjmjIHnu63liqrlipvkuK3vvIkKLy8gQG5vdGUgICAgICAgICAyMi0wNS0zMCA0LjEuMSDlip/og73kv67lpI3vvIzlub/lkYrlsY/olL0KLy8gQG5vdGUgICAgICAgICAyMi0wMS0xOCA0LjEuMCDku6PnoIHmipjlj6DpgILphY0KLy8gQG5vdGUgICAgICAgICAyMi0wMS0wNSA0LjAuOSDmm7TmlrDlub/lkYoKLy8gQG5vdGUgICAgICAgICAyMS0xMi0xMiA0LjAuOCDlsY/olL3lrabnlJ/orqTor4EKLy8gQG5vdGUgICAgICAgICAyMS0xMC0yMSA0LjAuNyDlsY/olL3nuqLljIXpm6gKLy8gQG5vdGUgICAgICAgICAyMS0wOS0yNCA0LjAuNiDkv67lpI3nmbvlvZXlvLnnqpfml6Dms5XlvbvlupXljrvpmaTnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMS0wOS0yMCA0LjAuNSDlop7liqDoh6rlrprkuYnog4zmma/lip/og70KLy8gQG5vdGUgICAgICAgICAyMS0wOS0xMyA0LjAuNCDlop7liqDkuIDkuKrmsqHmnInmlLbpkrHnmoTlub/lkYrvvIjlnKjorr7nva7ph4zvvIzkuI3lvbHlk43kvZPpqozvvIkKLy8gQG5vdGUgICAgICAgICAyMS0wOS0wMSA0LjAuMyDlop7liqDnlKjmiLfkvb/nlKjmg4XlhrXnu5/orqHmqKHlnZcKLy8gQG5vdGUgICAgICAgICAyMS0wOC0yNSA0LjAuMiDkv67lpI3lj7Pkvqfnva7pobbmoI/mjInpkq7mtojlpLHnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMS0wOC0yMSA0LjAuMSDljrvpmaTlj7Pkvqfmgqzmta7moI/vvIzkvJjljJbohJrmnKwKLy8gQG5vdGUgICAgICAgICAyMS0wOC0yMCA0LjAuMCDlhajmlrA0LjDlj5HluIPvvIFVSee+juWMlu+8jOS7o+eggeS8mOWMlu+8jOWFvOWuuUZpcmVmb3jvvIzmm7TlpJrmjpLniYjmqKHlvI8KLy8gQG5vdGUgICAgICAgICAyMS0wOC0yMCAzLjUuNyDkv67lpI3ml6Dms5XlrozmlbTlpI3liLbjgIHkv53lrZhjc2Ru55qE572R6aG15Lya6Lez6L2s6aaW6aG155qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjEtMDgtMTkgMy41LjYg6Ieq5Yqo6ZqQ6JeP5bqV5qCP5Yqf6IO95pS55Li65aeL57uI6ZqQ6JeP5bqV5qCPCi8vIEBub3RlICAgICAgICAgMjEtMDgtMTggMy41LjUg5L+u5aSN5peg5rOV6YCJ5oup5aSN5Yi255qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjEtMDYtMTcgMy41LjQg5Y676Zmk5Y+z5L6n57qi5YyF5oKs5rWu56qXCi8vIEBub3RlICAgICAgICAgMjEtMDQtMTggMy41LjMg5aKe5Yqg5pi+56S65bCP5bqX55qE6K6+5a6aCi8vIEBub3RlICAgICAgICAgMjEtMDMtMTMgMy41LjIg5Y675Li76aG15bm/5ZGK77yM5Y675paH56ug6aG16Z2i5o6o6I2Q5YaF5a65VGl0bGUKLy8gQG5vdGUgICAgICAgICAyMS0wMy0wMSAzLjUuMSDkv67mlLnmlofmoYgKLy8gQG5vdGUgICAgICAgICAyMS0wMi0wNiAzLjUuMCDkv67lpI3kuIrkvKDotYTmupDnlYzpnaLmoIfnrb7pgInmi6nmtojlpLHnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMS0wMS0xNyAzLjQuOSDliKDpmaTmlofnq6DpobXlkozorrrlnZvlub/lkYrvvIzmmoLml7blgZznlKjlj7PkvqfmoI/mu5rliqjlip/og73vvIhDU0RO6ZmQ5Yi277yJCi8vIEBub3RlICAgICAgICAgMjEtMDEtMTUgMy40Ljgg5L+d5a2Y5oyJ6ZKu5LyY5YyW77yM5L+u5aSN5pi+56S65Yib5L2c5Lit5b+D5oyJ6ZKu5Yqf6IO95aSx5pWI55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjEtMDEtMTUgMy40Ljcg5pS56L+b6ISa5pys57uG6IqC77yM5aKe5Yqg5bm/5ZGK5bGP6JS96IO95Yqb77yM5L+u5aSN57u/5YyW5oyJ6ZKu6ZSZ5L2N55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMTItMjUgMy40LjYg5Li76aG16YOo5YiG5bWM5YWl5byP5bm/5ZGK5Yig6ZmkCi8vIEBub3RlICAgICAgICAgMjAtMTItMTggMy40LjUg5L+u5aSN57u/5YyW6K6+5a6a5oyJ6ZKu5o6S54mI5LiN5q2j56Gu55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMTItMTUgMy40LjQg5L+u5aSN5LqG5p+Q5Lqb5a2Q6aG15pi+56S65LiN5q2j5bi455qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMTAtMjMgMy40LjMg6YCC5bqU5paw54mIQ1NETu+8jOWOu+mZpOS4u+mhteWSjOeZu+W9lemhteW5v+WRiu+8jOS7peWPiueZu+W9leaPkOekuu+8jOW5tuenu+mZpOW6lemDqOS/oeaBrwovLyBAbm90ZSAgICAgICAgIDIwLTEwLTIwIDMuNC4yIOWIoOmZpOWPs+S+p+W5v+WRigovLyBAbm90ZSAgICAgICAgIDIwLTA5LTI2IDMuNC4xIOS/ruaUueaOkueJiOiuvuWumu+8jOS/ruWkjeeZu+W9leahhuW8ueWHuueahOmXrumimAovLyBAbm90ZSAgICAgICAgIDIwLTA5LTI0IDMuNC4wIOe0p+aApeS/ruWkjeeUseS6jkNTRE7liY3nq6/moLflvI/kv67mlLnlr7zoh7Torr7lrprlvIDlhbPkuKLlpLHnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMC0wOC0yNyAzLjMuOSDntKfmgKXkv67lpI3nlLHkuo5DU0RO5YmN56uv5qC35byP5L+u5pS55a+86Ie06ISa5pys5aSx5pWI55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMDgtMjYgMy4zLjgg5ZCI5rOV6ISa5pys5o+Q56S6Ci8vIEBub3RlICAgICAgICAgMjAtMDctMjAgMy4zLjcg5L+u5aSN6I+c5Y2V5qCP5Zyo5Yib5L2c5Lit5b+D5pi+56S65byC5bi455qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMDctMTggMy4zLjYg5bel5YW3566x5oyJ6ZKu5LyY5YyWCi8vIEBub3RlICAgICAgICAgMjAtMDctMDUgMy4zLjUg6K+E6K665aSN5Yi25Yqf6IO95Lqk5LqS5LyY5YyWCi8vIEBub3RlICAgICAgICAgMjAtMDctMDQgMy4zLjQg5L+u5aSN5Y+z5L6n5qCP5raI5aSx55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMDctMDMgMy4zLjMg5paw5aKe5aSN5Yi26K+E6K665Yqf6IO977yB5Yig6Zmk6aG26YOo5bm/5ZGKCi8vIEBub3RlICAgICAgICAgMjAtMDYtMjggMy4zLjIg5o+Q56S65L+u5pS5Ci8vIEBub3RlICAgICAgICAgMjAtMDYtMjcgMy4zLjEg5by556qX5o+Q56S66YC76L6R5L+u5pS55Li65LuF5o+Q56S65LiA5qyh44CCCi8vIEBub3RlICAgICAgICAgMjAtMDYtMjcgMy4zLjAg572R56uZ5qCH6aKY5paw5raI5oGv5o+Q6YaS5Y676ZmkCi8vIEBub3RlICAgICAgICAgMjAtMDYtMjYgMy4yLjkg5oGi5aSNR3JlYXN5Rm9ya+W5s+WPsOiEmuacrOaUr+aMgQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTIxIDMuMi4wIOiEmuacrOi/geenu+mAmuefpQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTIxIDMuMS45IOWinuWKoOiHquWKqOmakOiXj+W6leagj+WKn+iDvQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTIxIDMuMS44IOWinuWKoOiHquWKqOmakOiXj+mhtuagj+WKn+iDve+8jOS/ruWkjemAiemhueeql+WPo+iiq+eCuei1numVv+adoeaMoeS9j+eahEJ1Z++8jOmAiemhueeql+WPo+W4g+WxgOS/ruaUuQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTIwIDMuMS43IOiuvue9rueql+WPo+Wkp+Wwj+WbuuWumu+8jOWinuWKoOaJk+i1j+WFpeWPowovLyBAbm90ZSAgICAgICAgIDIwLTA2LTE5IDMuMS42IOaYvuekuuaOqOiNkOWGheWuueaMiemSruWbnuW9ku+8jOaWsOW4g+WxgOe0p+aApeS/ruWkjQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTE4IDMuMS41IOiHquWumuS5ieWKn+iDveabtOaWsAovLyBAbm90ZSAgICAgICAgIDIwLTA2LTE2IDMuMS40IOaUr+aMgeWkp+mDqOWIhuWKn+iDveaooeWdl+WMluaYvuekugovLyBAbm90ZSAgICAgICAgIDIwLTA2LTE0IDMuMS4zIOe7v+WMluiuvuWumuS8mOWMlgovLyBAbm90ZSAgICAgICAgIDIwLTA2LTE0IDMuMS4yIElTU1VF5qih5p2/6LCD5pW0U3VwcG9ydCBVUkwKLy8gQG5vdGUgICAgICAgICAyMC0wNi0xNCAzLjEuMSDlop7liqDmkJzljZrkuLvmlofnq6DmqKHlnZcKLy8gQG5vdGUgICAgICAgICAyMC0wNi0xMyAzLjEuMCDkv67lpI3orr7nva7ov4fmnJ/nmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMC0wNi0xMiAzLjAuOSDmoIfpopjlm57mu5oKLy8gQG5vdGUgICAgICAgICAyMC0wNi0xMiAzLjAuOCDkuLvpobXlub/lkYrliKDpmaTvvIznu7/ljJborr7nva7ku4XmmL7npLrlnKjmlofnq6DpobXpnaLvvIzliKDpmaTpobXohJrvvIzpobbpg6jkvJjljJbvvIzoi6XlubLnu4boioLkvJjljJYKLy8gQG5vdGUgICAgICAgICAyMC0wNi0xMSAzLjAuNyDlop7liqDlrpjmlrlRUeS6pOa1gee+pO+8jOWinuWKoOWFs+mXreW8uuWItueZveiJsuS4u+mimOWKn+iDvQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTExIDMuMC42IOeUqOaIt+WQjeeJh+WKn+iDveS8mOWMlgovLyBAbm90ZSAgICAgICAgIDIwLTA2LTExIDMuMC41IOS8mOWMluWKoOi9vemAn+W6pgovLyBAbm90ZSAgICAgICAgIDIwLTA2LTEwIDMuMC40IOS/ruWkjeiuvue9rueVjOmdoumBruaMoeeahOmXrumimO+8jOaYvuekuuWNmuS4u+WktOWDjwovLyBAbm90ZSAgICAgICAgIDIwLTA2LTA5IDMuMC4zIOm7mOiupOiuvuWumuS/ruaUuQovLyBAbm90ZSAgICAgICAgIDIwLTA2LTA5IDMuMC4yIOS/ruWkjeaOqOiNkOWGheWuueaMiemSruWIt+aWsOS4jeeUn+aViOeahOmXrumimO+8jOWinuWKoOW3peWFt+euseaPkOekuuahhgovLyBAbm90ZSAgICAgICAgIDIwLTA2LTA4IDMuMC4xIOiuvue9ruS4reW/g+aOqOWHuu+8geWinuWKoOa1j+iniOaViOaenOmAiemhuSAmJiBHcmVlbiBCb29rIEljb24gVXBkYXRlCi8vIEBub3RlICAgICAgICAgMjAtMDYtMDggMy4wLjAg6K6+572u5Lit5b+D5o6o5Ye677yB5aKe5Yqg5rWP6KeI5pWI5p6c6YCJ6aG5Ci8vIEBub3RlICAgICAgICAgMjAtMDYtMDcgMi40LjIg6K6+572u6Kej6ICm77yM5LiL5Liq54mI5pys5pCe6YWN572u5Lit5b+DCi8vIEBub3RlICAgICAgICAgMjAtMDYtMDYgMi40LjEg5L+u5aSN5paH56ug5YaF5a655raI5aSx55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMDYtMDQgMi40LjAg5L+u5aSN5o6o6I2Q5oyJ6ZKu6ZSZ5L2N55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMjAtMDYtMDQgMi4zLjkg56qE5bGP6YCC6YWN5LyY5YyWCi8vIEBub3RlICAgICAgICAgMjAtMDYtMDQgMi4zLjgg6buR5aSc5qih5byP5Ye6546w6Zeu6aKY77yM57Sn5oCl5Zue5qGj5YiwIDIuMy42Ci8vIEBub3RlICAgICAgICAgMjAtMDYtMDMgMi4zLjcg5oSf6LCiIEBBbGV4TFdUIOWinuWKoOm7keaal+aooeW8jwovLyBAbm90ZSAgICAgICAgIDIwLTA2LTAyIDIuMy42IEFkc0J5R29vZ2xlIOWIoOmZpAovLyBAbm90ZSAgICAgICAgIDIwLTA1LTI1IDIuMy41IOaEn+iwoiBAUnlhbklQTyDkv67lpI0gQ2Fubm90IHJlYWQgcHJvcGVydHkgJ3JlcGxhY2UnIG9mIHVuZGVmaW5lZCDmiqXplJnnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAyMC0wNS0yNCAyLjMuNCDkv67lpI3lhY3nmbvlvZXlpI3liLblip/og70KLy8gQG5vdGUgICAgICAgICAyMC0wNS0yMiAyLjMuMyBMb2dv5LiO6IOM5pmv5ZCM5q2lCi8vIEBub3RlICAgICAgICAgMjAtMDUtMjIgMi4zLjIg5rex5bqm5Yig6Zmk6IOM5pmvCi8vIEBub3RlICAgICAgICAgMjAtMDUtMjAgMi4zLjEg6YCa6L+HcmVxdWlyZeS9v+eUqE5Qcm9ncmVzcwovLyBAbm90ZSAgICAgICAgIDIwLTA1LTIwIDIuMy4wIOaYvuekuuaOqOiNkOWGheWuueaMiemSruagt+W8j+WGhee9ru+8jOWJlOmZpENETgovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE3IDIuMi45IOi/m+W6puadoeagt+W8j+abtOaWsO+8jOaXtumXtOW7tuaXtuS8mOWMlgovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE3IDIuMi44IOabtOaWsOiEmuacrOaPj+i/sO+8jOWxleW8gOivhOiuuueahOaJgOacieWbnuWkje+8jOWIoOmZpOWIm+S9nOS4reW/g+aMiemSru+8jOWKoOi9vei/m+W6puadoQovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE3IDIuMi43IOabtOaWsOiEmuacrOaPj+i/sAovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE2IDIuMi42IOS/ruWkjeesrOS4gOasoeeCueWHu+aYvuekuuaOqOiNkOWGheWuueaXoOWPjeW6lOeahOmXrumimAovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE2IDIuMi41IOWIoOmZpOaKouaymeWPkeinkuagh++8jOS/ruaUueaYvuekuuaOqOiNkOWGheWuueaMiemSruagt+W8jwovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE2IDIuMi40IOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi+KAnEhlcm9uWmhhbmfigJ3nmoRJc3N1ZeW7uuiuru+8jOWIoOmZpOaJgOacieWNmuWuouiKsemHjOiDoeWTqOeahOiDjOaZr++8jOS4u+mhteWIhuexu+S4reW5v+WRiua4hemZpO+8jENTU+agt+W8j+aOp+WItuWuveW6pumAgumFjeS7o+eggeS8mOWMlgovLyBAbm90ZSAgICAgICAgIDIwLTA1LTE2IDIuMi4zIOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi+KAnFJldGlyZWRXb3JsZOKAneeahOS7o+eggei0oeeMru+8jOS9v+eUqENTU+adpeaOp+WItuagt+W8j++8jOiAjOS4jeaYr0pT77yM5aKe5aSn54G15rS75oCn44CCCi8vIEBub3RlICAgICAgICAgMjAtMDUtMTMgMi4yLjIg5bGP6JS95oKo55qE57yp5pS+5LiN5pivMTAwJeeahOaPkOekugovLyBAbm90ZSAgICAgICAgIDIwLTA0LTI5IDIuMi4xIOaEn+iwouWkp+WutueahOaUr+aMge+8jOWinuWKoOebruW9leaYvuekuu+8jOiHquWKqOWIpOaWreaYr+WQpuWtmOWcqOebruW9leiwg+aVtOmhtemdouWuveW6pu+8jOWxj+iUveaWsOWinuW5v+WRiu+8jOasoui/juWkp+WutuS9k+mqjOW5tuaPkOWHuuaEj+inge+8gQovLyBAbm90ZSAgICAgICAgIDIwLTA0LTE1IDIuMi4wIOS4gOS6m+W5v+WRiuiiq+WFtuS7luaPkuS7tuWxj+iUveWvvOiHtOeahOW8guW4uOaXoOinhuS5iwovLyBAbm90ZSAgICAgICAgIDIwLTAzLTMwIDIuMS45IOW5suaOieKAnOiusOW9leS9oOeahOWIm+S9nOWOhueoi+KAne+8jOW5suaOieacqueZu+W9leaDheWGteS4i+eahOinkuagh+aPkOmGkgovLyBAbm90ZSAgICAgICAgIDIwLTAzLTEzIDIuMS44IOeqhOWxj+mAgumFjeWKoOW8ugovLyBAbm90ZSAgICAgICAgIDIwLTAzLTEzIDIuMS43IOabtOaWsOeugOS7iwovLyBAbm90ZSAgICAgICAgIDIwLTAzLTEyIDIuMS42IOWuveW6puiHqumAguW6lO+8iOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi0xlb25HN+eahOW7uuiuru+8ie+8geS/ruWkjeWJqui0tOadv+WHgOWMluaXoOaViOeahOmXrumimOOAggovLyBAbm90ZSAgICAgICAgIDIwLTAzLTA0IDIuMS41IOmAgumFjUFkR3VhcmQKLy8gQG5vdGUgICAgICAgICAyMC0wMi0yNyAyLjEuNCDkvJjljJblhY3nmbvlvZXlpI3liLYKLy8gQG5vdGUgICAgICAgICAyMC0wMi0yNSAyLjEuMyDlhY3nmbvlvZXlpI3liLbmm7TmlrDvvIznjrDlt7Llj6/nlKgKLy8gQG5vdGUgICAgICAgICAyMC0wMi0yNCAyLjEuMiBCeSBHaXRodWJASmFsaW5XYW5nIOabtOaUueWOu+mZpOWJqui0tOadv+WKq+aMgeeahOaWueW8j++8jOS9v+W+l+WOn+aWh+agvOW8j+WcqOWkjeWItuaXtuiDveWkn+S/neeVmQovLyBAbm90ZSAgICAgICAgIDIwLTAyLTIyIDIuMS4xIOe0p+aApeS/ruWkjeeUseS6jiBDU0ROIOS/ruaUueWJjeerr+e7k+aehOWvvOiHtOeahOaWh+eroOmUmeS9jQovLyBAbm90ZSAgICAgICAgIDIwLTAyLTExIDIuMS4wIOiLpeW5suWKqOeUu+S8mOWMlu+8jOinhuinieS9k+mqjOabtOa1geeVhQovLyBAbm90ZSAgICAgICAgIDIwLTAyLTA2IDIuMC45IOatpuaxieWKoOayue+8geS/ruaUueaOqOiNkOWGheWuueWIh+aNouW8gOWFs+S9jee9ru+8jOWHj+Wwkei/neWSjOaEnwovLyBAbm90ZSAgICAgICAgIDIwLTAxLTE3IDIuMC44IOWOu+mZpOWPs+S+p+W5v+WRigovLyBAbm90ZSAgICAgICAgIDIwLTAxLTE3IDIuMC43IOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi+KAnGdsZWFuc+KAneeahOW7uuiuru+8jOWOu+aOiemhteWktOW5v+WRigovLyBAbm90ZSAgICAgICAgIDE5LTEyLTEyIDIuMC42IOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi+KAnHlleHVlc29uZ+KAneeahOW7uuiuru+8jOWwhuS9nOiAheS/oeaBr+WcqOaWh+eroOmhtumDqOWxleekugovLyBAbm90ZSAgICAgICAgIDE5LTEwLTMwIDIuMC41IOe+juWMlumakOiXj+aMiemSru+8jOWinuWKoOeCueWHu+WKqOeUuwovLyBAbm90ZSAgICAgICAgIDE5LTEwLTMwIDIuMC40IOWIoOmZpENTRE7lrpjmlrnlnKjkuLvpobXmjqjpgIHnmoTmlofnq6DvvIjlpKflpJrmmK/lub/lkYrvvIkKLy8gQG5vdGUgICAgICAgICAxOS0xMC0zMCAyLjAuMyDmt7vliqDmm7TlpJrlsY/olL3ohJrmnKwKLy8gQG5vdGUgICAgICAgICAxOS0xMC0zMCAyLjAuMCDnpZ3oh6rlt7HnlJ/ml6Xlv6vkuZB+5a6M5YWo6YeN5YaZQ1NETkdyZWVuZXLvvIznu5/kuIDkvb/nlKhKUXVlcnnvvIzmlYjnjofmm7Tpq5gKLy8gQG5vdGUgICAgICAgICAxOS0xMC0yNyAxLjUuMiDliKDpmaTliIbkuqvmtbfmiqXmj5DnpLomJuaEn+iwokdpdEh1YueahOaci+WPi+KAnENITi1TVFVERU5U4oCd55qE5Y+N6aaI77yM5Y676Zmk5bqV6YOo6K++56iL5o6o6I2QCi8vIEBub3RlICAgICAgICAgMTktMTAtMjcgMS41LjEg5oSf6LCi5p2l6IeqR2l0SHVi55qE5pyL5Y+L4oCcQ0hOLVNUVURFTlTigJ3nmoTnu4boh7TlpI3njrDlj43ppojvvIzljrvpmaTkuoblupXpg6jnmoTor77nqIvmjqjojZDlub/lkYoKLy8gQG5vdGUgICAgICAgICAxOS0xMC0wNCAxLjUuMCDnp7vpmaTkuoblupXpg6jkuLvpopjkv6Hmga/lkozmiZPotY8KLy8gQG5vdGUgICAgICAgICAxOS0wOS0xMCAxLjQuOSDmhJ/osKLmnaXoh6pHaXRIdWLnmoTmnIvlj4vigJxwcm9ncmFtbWVyWmXigJ3nmoTnu4boh7TlpI3njrDlj43ppojvvIzkv67lpI3kuobor4TorrrljLrngrnlh7vmn6XnnIvlm57lpI3lkI7vvIzlt7Lnu4/lsZXlvIDnmoTor4TorrrkvJrmlLbotbfnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAxOS0wOS0wNCAxLjQuOCDmhJ/osKLmnaXoh6pHaXRIdWLnmoTmnIvlj4vigJxkd2RjdGjigJ3nmoTnu4boh7TlpI3njrDlj43ppojvvIznjrDlnKjmn6XnnIvljp/liJvmlofnq6DkuI3kvJrml6DpmZDlvLnnmbvlvZXnqpflj6PkuobvvIzkuJTliqDlvLrkuoboh6rliqjlsZXlvIDlip/og70KLy8gQG5vdGUgICAgICAgICAxOS0wOC0yMCAxLjQuNyDmhJ/osKLmsrnlj4nnlKjmiLfigJxTdXByZW1lU2ly4oCd55qE5Y+N6aaI77yM5L+u5aSN5LqG5Y+z5L6n5oKs5rWu5qCP6YGu5oyh5paH56ug55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMTktMDgtMTQgMS40LjYg5peg6K+t44CC5Yia5pu05paw55qE5YWN55m75b2V5aSN5Yi277yM5Y+I5pS55LqG44CC5L+u5aSN77yBCi8vIEBub3RlICAgICAgICAgMTktMDgtMTMgMS40LjUg5pu05paw5LqG54us5a625Yqf6IO977ya5YWN55m75b2V5aSN5Yi2Ci8vIEBub3RlICAgICAgICAgMTktMDgtMTMgMS40LjQg5oSf6LCi5p2l6IeqR2l0SHVi55qE5pyL5Y+L4oCcaWFtc3VueGluZ+KAneeahOWPjemmiO+8jOS/ruWkjeS6humhtumDqOS4jei0tOi+ueeahOmXrumimAovLyBAbm90ZSAgICAgICAgIDE5LTA4LTAxIDEuNC4zIOaEn+iwouayueWPieeUqOaIt+KAnGRkZGR54oCd55qE5Y+N6aaI77yM5Y676Zmk5LqG5pu05aSa5o6o5bm/5bm/5ZGKCi8vIEBub3RlICAgICAgICAgMTktMDctMzAgMS40LjIg5oSf6LCi5rK55Y+J55So5oi34oCc5ZGo5LmJ5p2w4oCd55qE5Y+N6aaI77yM5aKe5Yqg5LqG6ZiyQ1NETuWklumTvumHjeWumuWQkeeahOWKn+iDve+8iENTRE7oh63mtYHmsJPvvIkKLy8gQG5vdGUgICAgICAgICAxOS0wNy0yMCAxLjQuMSDkv67lpI3kuobmjqjojZDlhoXlrrnlvIDlhbPot6jmlofnq6Dml6DmlYjpl67popjvvIjlv5jkuobphY3nva5Db29raWXkvZznlKjln5/vvIkKLy8gQG5vdGUgICAgICAgICAxOS0wNy0xOSAxLjQuMCAxLiDmnoTmnrblpKfmm7TmlrAgMi4g5oSf6LCi5p2l6IeqR2l0SHVi55qE5pyL5Y+LImx1a2VtaW4i55qE5Y+N6aaI77yM5Yqg5YWl5LqG5LiL5pa55o6o6I2Q5YaF5a655piv5ZCm6ZqQ6JeP5byA5YWz77yI5a6e55So77yJCi8vIEBub3RlICAgICAgICAgMTktMDctMTMgMS4zLjAg5oSf6LCi5p2l6IeqR2l0SHVi55qE5pyL5Y+L4oCcSG9sYXBsYWNl4oCd55qE5Y+N6aaI77yM5L+u5aSN5LqG5paH56ug5peg5rOV6Ieq5Yqo5bGV5byA55qE6Zeu6aKY77yIQ1NETuaAu+aUuei/meS4qu+8jOS7pOS6uuWktOeWvO+8iQovLyBAbm90ZSAgICAgICAgIDE5LTA2LTA4IDEuMi42IOaEn+iwouayueWPieeUqOaIt+KAnERlc2t5QWtp4oCd55qE5Y+N6aaI77yM5L+u5aSN5LqG5paH56ug5peg5rOV6Ieq5Yqo5bGV5byA55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMTktMDYtMDcgMS4yLjQg5L+u5aSN5LqG55m75b2V5ZCO6K+E6K665peg5rOV5q2j5bi45omT5byA55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMTktMDYtMDcgMS4yLjMg5oSf6LCi5rK55Y+J55So5oi3IuawuOi/nOeahOauv+S4iyLnmoTlj43ppojvvIzlnKjkuIDkuIrljYjnmoTliqrlipvmlLvlhYvkuIvvvIznu4jkuo7lrp7njrDkuobmnKrnmbvlvZXlsZXlvIDor4TorrrnmoTor63lj6UKLy8gQG5vdGUgICAgICAgICAxOS0wNi0wNSAxLjIuMCDkv67lpI3kuobor4Torrrml6Dms5Xoh6rliqjlsZXlvIDnmoRCVUcKLy8gQG5vdGUgICAgICAgICAxOS0wNi0wNCAxLjEuOSDkv67lpI3kuobml6Dms5Xoh6rliqjlsZXlvIDnmoRCVUfvvIjoh6rpl63kuobvvIkKLy8gQG5vdGUgICAgICAgICAxOS0wNi0wNCAxLjEuNiBDU0RO5aSq5Z2P5LqG77yM5oqK4oCc5raI5oGv4oCd5oyJ6ZKu55qEQ2xhc3Porr7nva7miJDkuobigJxHaXRDaGF04oCd77yM5omA5Lul5L+u5aSN5LqG4oCc5raI5oGv4oCd5oyJ6ZKu5raI5aSx55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgMTktMDYtMDQgMS4xLjUgMS4g5LyY5YyW5LqG6K665Z2b5L2T6aqMIDIu576O5YyW44CB5LyY5YyW5Luj56CB57uT5p6ECi8vIEBub3RlICAgICAgICAgMTktMDYtMDQgMS4xLjQg5oSf6LCi5p2l6IeqR2l0SHVi55qE5pyL5Y+L4oCcaWFtc3VueGluZ+KAneeahOWPjemmiO+8jOWinuWKoOS6huiuuuWdm+W5v+WRiuWMuemFjeinhOWImQovLyBAbm90ZSAgICAgICAgIDE5LTA2LTAzIDEuMS4zIOaEn+iwouadpeiHqkdpdEh1YueahOaci+WPi+KAnHdhbmd3ZWkxMzXigJ3nmoTlj43ppojvvIzljrvpmaTkuobor4TorrrljLrkuIrmlrnnmoTlub/lkYoKLy8gQG5vdGUgICAgICAgICAxOS0wNS0yNyAxLjEuMiDmhJ/osKLmsrnlj4nnlKjmiLfigJzlpI/kvJ/mnbDigJ3nmoTlj43ppojvvIzkv67lpI3kuoblr4zmlofmnKznvJbovpHlmajml6Dms5Xkvb/nlKjnmoTpl67popgKLy8gQG5vdGUgICAgICAgICAxOS0wNS0yNSAxLjEuMCAxLiDkv67lpI3kuobkuLvpobXlub/lkYrnmoTpl67popggMi4g6K665Z2b6Ieq5Yqo5bGV5byAIDMuIOiuuuWdm+W5v+WRiua2iOmZpAovLyBAbm90ZSAgICAgICAgIDE5LTA1LTI1IDEuMC45IOaEn+iwouayueWPieeUqOaIt+KAnOa4o+a4o+S4jeWHhuivtOivneKAneeahOWPjemmiO+8jOS/ruWkjeS6huaUtuiXj+aMiemSrua2iOWkseeahOmXrumimAovLyBAbm90ZSAgICAgICAgIDE5LTAzLTAxIDEuMC4zIOa3u+WKoOmhtemdoumAieaLqeaAp+i/h+a7pOinhOWImQovLyBAbm90ZSAgICAgICAgIDE5LTAzLTAxIDEuMC4yIOWinuWKoOS6huWHgOWMluWJqui0tOadv+WKn+iDvQovLyBAbm90ZSAgICAgICAgIDE5LTAzLTAxIDEuMC4xIOS/ruWkjeS6huaOkueJiOmXrumimCwg5LyY5YyW5LqG5Luj56CB57uT5p6ECi8vIEBub3RlICAgICAgICAgMTktMDItMjYgMS4wLjAg5Yid54mI5Y+R5biDCi8vID09L1VzZXJTY3JpcHQ9PQp2YXIgdmVyc2lvbiA9ICI0LjEuMiI7CnZhciBjdXJyZW50VVJMID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CmlmIChjdXJyZW50VVJMLmluZGV4T2YoIj8iKSAhPT0gLTEpIHsKICAgIGN1cnJlbnRVUkwgPSBjdXJyZW50VVJMLnN1YnN0cmluZygwLCBjdXJyZW50VVJMLmluZGV4T2YoIj8iKSk7Cn0KdmFyIGxpc3Q7CnZhciB3aW5kb3dUb3AgPSAwOwp2YXIgc3RhcnRUaW1lTWlsbGkgPSBEYXRlLm5vdygpOwp2YXIgc3RvcFRpbWVNaWxsaSA9IDA7Ci8vIOmFjee9ruaOp+WItuexuwpjbGFzcyBDb25maWcgewogICAgZ2V0KGtleSwgdmFsdWUpIHsKICAgICAgICB2YXIgY29va2llID0gJC5jb29raWUoa2V5KTsKICAgICAgICBpZiAoY29va2llID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KGtleSwgdmFsdWUpOwogICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJSZW5ldyBrZXk6ICIgKyBrZXkgKyAiIDogIiArIHZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgIH0KICAgICAgICBjb25zb2xlLmRlYnVnKCJSZWFkIGtleTogIiArIGtleSArICIgOiAiICsgY29va2llKTsKICAgICAgICBpZiAoY29va2llID09PSAidHJ1ZSIpIHsgcmV0dXJuIHRydWU7IH0KICAgICAgICBpZiAoY29va2llID09PSAiZmFsc2UiKSB7IHJldHVybiBmYWxzZTsgfQogICAgICAgIHJldHVybiBjb29raWU7CiAgICB9CgogICAgZ2V0UyhrZXksIHZhbHVlKSB7CiAgICAgICAgdmFyIGNvb2tpZSA9ICQuY29va2llKGtleSk7CiAgICAgICAgaWYgKGNvb2tpZSA9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldChrZXksIHZhbHVlKTsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiUmVuZXcga2V5OiAiICsga2V5ICsgIiA6ICIgKyB2YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgICB9CiAgICAgICAgY29uc29sZS5kZWJ1ZygiUmVhZCBrZXk6ICIgKyBrZXkgKyAiIDogIiArIGNvb2tpZSk7CiAgICAgICAgcmV0dXJuIGNvb2tpZTsKICAgIH0KCiAgICBzZXQoc2V0S2V5LCBzZXRWYWx1ZSkgewogICAgICAgICQuY29va2llKHNldEtleSwgc2V0VmFsdWUsIHsKICAgICAgICAgICAgcGF0aDogJy8nLAogICAgICAgICAgICBleHBpcmVzOiAzNjUKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmRlYnVnKCJLZXkgc2V0OiAiICsgc2V0S2V5ICsgIiA6ICIgKyBzZXRWYWx1ZSk7CiAgICB9CgogICAgbGlzdGVuQnV0dG9uKGVsZW1lbnQsIGxpc3RlbktleSwgdHJ1ZUFjdGlvbiwgZmFsc2VBY3Rpb24pIHsKICAgICAgICAkKGVsZW1lbnQpLmNsaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IHN0YXR1cyA9IG5ldyBDb25maWcoKS5nZXQobGlzdGVuS2V5LCB0cnVlKTsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiU3RhdHVzOiAiICsgc3RhdHVzKTsKICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gInRydWUiIHx8IHN0YXR1cykgewogICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiS2V5IHNldDogIiArIGxpc3RlbktleSArICIgOjogIiArIGZhbHNlKTsKICAgICAgICAgICAgICAgIG5ldyBDb25maWcoKS5zZXQobGlzdGVuS2V5LCBmYWxzZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJLZXkgc2V0OiAiICsgbGlzdGVuS2V5ICsgIiA6OiAiICsgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KGxpc3RlbktleSwgdHJ1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0KCiAgICBsaXN0ZW5CdXR0b25BbmRBY3Rpb24oZWxlbWVudCwgbGlzdGVuS2V5LCB0cnVlQWN0aW9uLCBmYWxzZUFjdGlvbikgewogICAgICAgICQoZWxlbWVudCkuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsZXQgc3RhdHVzID0gbmV3IENvbmZpZygpLmdldChsaXN0ZW5LZXksIHRydWUpOwogICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJTdGF0dXM6ICIgKyBzdGF0dXMpOwogICAgICAgICAgICBpZiAoc3RhdHVzID09PSAidHJ1ZSIgfHwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJLZXkgc2V0OiAiICsgbGlzdGVuS2V5ICsgIiA6OiAiICsgZmFsc2UpOwogICAgICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldChsaXN0ZW5LZXksIGZhbHNlKTsKICAgICAgICAgICAgICAgIGZhbHNlQWN0aW9uKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJLZXkgc2V0OiAiICsgbGlzdGVuS2V5ICsgIiA6OiAiICsgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KGxpc3RlbktleSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICB0cnVlQWN0aW9uKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0KfQp2YXIgY29uZmlnID0gbmV3IENvbmZpZygpOwp2YXIgcHJvZ3Jlc3MgPSAwOwpjbGFzcyBQcm9ncmVzcyB7CiAgICBpbml0KCkgewogICAgICAgIHByb2dyZXNzID0gMDsKICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsKICAgICAgICAkKCIjZ3JlZW5lclByb2dyZXNzIikudGV4dCgi57u/5YyW5LitLi4uIik7CiAgICAgICAgJCgiLnRvb2xiYXItc2VhcmNoIikuaGlkZSgpOwogICAgfQoKICAgIHNldFByb2dyZXNzKHApIHsKICAgICAgICBwcm9ncmVzcyA9IHA7CiAgICAgICAgJCgiI2dyZWVuZXJQcm9ncmVzcyIpLnRleHQocHJvZ3Jlc3MgKyAiJSIpOwogICAgICAgIE5Qcm9ncmVzcy5zZXQocHJvZ3Jlc3MgLyAxMDApOwogICAgICAgIGNvbnNvbGUubG9nKHByb2dyZXNzICsgIiUiKTsKICAgIH0KCiAgICBpbmNQcm9ncmVzcyhwKSB7CiAgICAgICAgcHJvZ3Jlc3MgPSBwcm9ncmVzcyArIHA7CiAgICAgICAgcHJvZ3Jlc3MgPSBwcm9ncmVzcyA+IDEwMCA/IDEwMCA6IHByb2dyZXNzOwogICAgICAgICQoIiNncmVlbmVyUHJvZ3Jlc3MiKS50ZXh0KHByb2dyZXNzICsgIiUiKTsKICAgICAgICBOUHJvZ3Jlc3Muc2V0KHByb2dyZXNzIC8gMTAwKTsKICAgICAgICBjb25zb2xlLmxvZyhwcm9ncmVzcyArICIlIik7CiAgICB9CgogICAgZG9uZSgpIHsKICAgICAgICBwcm9ncmVzcyA9IDEwMDsKICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICQoIiNncmVlbmVyUHJvZ3Jlc3MiKS5odG1sKHByb3RlY3Rfc3ZnICsgJyBDU0ROR3JlZW5lciDmraPlnKjlrojmiqTmgqjnmoTmtY/op4jkvZPpqownKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCIjZ3JlZW5lclByb2dyZXNzIikuZmFkZU91dCg1MDApOwogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgJCgiLnRvb2xiYXItc2VhcmNoIikuZmFkZUluKDUwMCk7CiAgICAgICAgICAgICAgICBpZiAoIWlzRmlyZWZveCgpKSB7CiAgICAgICAgICAgICAgICAgICAgLy8g5o+Q56S6CiAgICAgICAgICAgICAgICAgICAgbGV0IHRpcHNDb29raWUgPSBjb25maWcuZ2V0KCJzaG93VGlwIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRpcHNDb29raWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1RpcHMoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY29uZmlnLnNldCgic2hvd1RpcCIsIGZhbHNlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgNTAwKTsKICAgICAgICB9LCAxNTAwKTsKICAgIH0KfQp2YXIgcHJvZ3Jlc3NvciA9IG5ldyBQcm9ncmVzcygpOwoKLy8g6Ieq5a6a5LmJIENTUwovLyDov5vluqbmnaEKJCgnaGVhZCcpLmFwcGVuZCgiPHN0eWxlPiNucHJvZ3Jlc3N7cG9pbnRlci1ldmVudHM6bm9uZX0jbnByb2dyZXNzIC5iYXJ7YmFja2dyb3VuZDojZjQ0NDQ0O3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MTAzMTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MnB4fSNucHJvZ3Jlc3MgLnBlZ3tkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7d2lkdGg6MTAwcHg7aGVpZ2h0OjEwMCU7Ym94LXNoYWRvdzowIDAgMTBweCAjZjQ0NDQ0LDAgMCA1cHggI2Y0NDQ0NDtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDNkZWcpIHRyYW5zbGF0ZSgwLC00cHgpOy1tcy10cmFuc2Zvcm06cm90YXRlKDNkZWcpIHRyYW5zbGF0ZSgwLC00cHgpO3RyYW5zZm9ybTpyb3RhdGUoM2RlZykgdHJhbnNsYXRlKDAsLTRweCl9I25wcm9ncmVzcyAuc3Bpbm5lcntkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MTAzMTt0b3A6MTVweDtyaWdodDoxNXB4fSNucHJvZ3Jlc3MgLnNwaW5uZXItaWNvbnt3aWR0aDoxOHB4O2hlaWdodDoxOHB4O2JveC1zaXppbmc6Ym9yZGVyLWJveDtib3JkZXI6c29saWQgMnB4IHRyYW5zcGFyZW50O2JvcmRlci10b3AtY29sb3I6I2Y0NDQ0NDtib3JkZXItbGVmdC1jb2xvcjojZjQ0NDQ0O2JvcmRlci1yYWRpdXM6NTAlOy13ZWJraXQtYW5pbWF0aW9uOm5wcm9ncmVzcy1zcGlubmVyIC40cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOm5wcm9ncmVzcy1zcGlubmVyIC40cyBsaW5lYXIgaW5maW5pdGV9Lm5wcm9ncmVzcy1jdXN0b20tcGFyZW50e292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZX0ubnByb2dyZXNzLWN1c3RvbS1wYXJlbnQgI25wcm9ncmVzcyAuYmFyLC5ucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCAjbnByb2dyZXNzIC5zcGlubmVye3Bvc2l0aW9uOmFic29sdXRlfUAtd2Via2l0LWtleWZyYW1lcyBucHJvZ3Jlc3Mtc3Bpbm5lcnswJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMCl9MTAwJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19QGtleWZyYW1lcyBucHJvZ3Jlc3Mtc3Bpbm5lcnswJXt0cmFuc2Zvcm06cm90YXRlKDApfTEwMCV7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX08L3N0eWxlPiIpOwovLyDorr7nva7nqpflj6MKJCgnaGVhZCcpLmFwcGVuZCgiPHN0eWxlPi5ibGFja19vdmVybGF5e3RvcDowJTtsZWZ0OjAlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjojMDAwO3otaW5kZXg6MTAwMTstbW96LW9wYWNpdHk6MC44O29wYWNpdHk6LjEwO2ZpbHRlcjphbHBoYShvcGFjaXR5PTg4KX0uYmxhY2tfb3ZlcmxheSwud2hpdGVfY29udGVudHtkaXNwbGF5Om5vbmU7cG9zaXRpb246YWJzb2x1dGV9LndoaXRlX2NvbnRlbnR7ei1pbmRleDo5OTk5IWltcG9ydGFudDt0b3A6MjUlO2xlZnQ6MjUlO3dpZHRoOjY1MHB4O2hlaWdodDo2MCU7cGFkZGluZzoyMHB4O2JvcmRlcjowcHg7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuOSk7ei1pbmRleDoxMDAyO292ZXJmbG93OmF1dG99PC9zdHlsZT4iKTsKLy8g5o+Q56S65p2hCiQoJ2hlYWQnKS5hcHBlbmQoIjxzdHlsZT4udHJpcHNjb257cGFkZGluZzoxMHB4fTwvc3R5bGU+Iik7Ci8vIOaMiemSru+8iOaXp++8iQokKCdoZWFkJykuYXBwZW5kKCI8c3R5bGU+I3RvZ2dsZS1idXR0b257ZGlzcGxheTpub25lfS5idXR0b24tbGFiZWx7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6ODJweDtiYWNrZ3JvdW5kLWNvbG9yOiNjY2M7Ym9yZGVyOjFweCBzb2xpZCAjY2NjO2JvcmRlci1yYWRpdXM6MzBweDtjdXJzb3I6cG9pbnRlcn0uY2lyY2xle3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDozMHB4O2hlaWdodDozMHB4O2JvcmRlci1yYWRpdXM6NTAlO2JhY2tncm91bmQtY29sb3I6I2ZmZn0uYnV0dG9uLWxhYmVsIC50ZXh0e2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE4cHg7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9Lm9ue2NvbG9yOiNmZmY7ZGlzcGxheTpub25lO3RleHQtaW5kZW50OjEwcHh9Lm9mZntjb2xvcjojZmZmO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RleHQtaW5kZW50OjUzcHh9LmJ1dHRvbi1sYWJlbCAuY2lyY2xle2xlZnQ6MDt0cmFuc2l0aW9uOmFsbCAuM3N9I3RvZ2dsZS1idXR0b246Y2hlY2tlZCtsYWJlbC5idXR0b24tbGFiZWwgLmNpcmNsZXtsZWZ0OjUwcHh9I3RvZ2dsZS1idXR0b246Y2hlY2tlZCtsYWJlbC5idXR0b24tbGFiZWwgLm9ue2Rpc3BsYXk6aW5saW5lLWJsb2NrfSN0b2dnbGUtYnV0dG9uOmNoZWNrZWQrbGFiZWwuYnV0dG9uLWxhYmVsIC5vZmZ7ZGlzcGxheTpub25lfSN0b2dnbGUtYnV0dG9uOmNoZWNrZWQrbGFiZWwuYnV0dG9uLWxhYmVse2JhY2tncm91bmQtY29sb3I6Izc4ZDY5MH08L3N0eWxlPiIpOwovLyDkv53lrZjmjInpkq4KJCgnaGVhZCcpLmFwcGVuZCgiPHN0eWxlPi5zYXZlQnV0dG9ue2JhY2tncm91bmQtY29sb3I6IzE5YTRlZDtib3JkZXI6bm9uZTtjb2xvcjojZmZmO3BhZGRpbmc6NXB4IDE1cHg7dGV4dC1hbGlnbjpjZW50ZXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOjE0cHg7Y3Vyc29yOnBvaW50ZXJ9PC9zdHlsZT4iKTsKLy8gU3RhciDmoLflvI8KJCgnaGVhZCcpLmFwcGVuZCgiPHN0eWxlPi5naXZlTWVPbmVTdGFyOmhvdmVye2NvbG9yOiNGRjY5QjQ7fTwvc3R5bGU+Iik7Ci8vIOiuvue9rueql+WPo+aWh+Wtl+aViOaenAppZiAoaXNGaXJlZm94KCkpIHsKICAgICQoJ2hlYWQnKS5hcHBlbmQoIjxzdHlsZT4uY29uZmlnQ29udGFpbmVyIGxhYmVse2ZvbnQtc2l6ZToxNXB4fS5jb25maWdDb250YWluZXIgcHtmb250LXNpemU6MTVweH0uZ2l2ZU1lT25lU3Rhcntmb250LXNpemU6MTVweH0uY29uZmlnQ29udGFpbmVyIC50aXRsZXtmb250LXNpemU6MjBweH0uY29uZmlnQ29udGFpbmVyIC5ib2xke2ZvbnQtd2VpZ2h0OmJvbGQ7bWFyZ2luLWJvdHRvbTo1cHh9PC9zdHlsZT4iKTsKfSBlbHNlIHsKICAgICQoJ2hlYWQnKS5hcHBlbmQoIjxzdHlsZT4uY29uZmlnQ29udGFpbmVyIGxhYmVse2ZvbnQtc2l6ZTo1cHh9LmNvbmZpZ0NvbnRhaW5lciBwe2ZvbnQtc2l6ZToxMHB4fS5naXZlTWVPbmVTdGFye2ZvbnQtc2l6ZToxNXB4fS5jb25maWdDb250YWluZXIgLnRpdGxle2ZvbnQtc2l6ZToyMHB4fS5jb25maWdDb250YWluZXIgLmJvbGR7Zm9udC13ZWlnaHQ6Ym9sZDttYXJnaW4tYm90dG9tOjVweH08L3N0eWxlPiIpOwp9Ci8vIFNWRwovL3ZhciBzYXZlX3N2ZyA9ICc8c3ZnIHQ9IjE1OTUwODI2NTAxNzMiIGNsYXNzPSJpY29uIiB2aWV3Qm94PSIwIDAgMTA3NSAxMDI0IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgcC1pZD0iMjA3OCIgd2lkdGg9IjE0MCIgaGVpZ2h0PSIxNDAiPjxwYXRoIGQ9Ik03NTMuNzYzOTAyIDY4NS44MzAyNDRhNDguOTUyMTk1IDQ4Ljk1MjE5NSAwIDAgMSA0OS4xNTItNDguNzAyNDM5YzgxLjQyMDQ4OCAwIDE0MS4xNjIxNDYtNjUuMzg2MTQ2IDE0MS4xNjIxNDctMTQ2LjA1NzM2NiAwLTQzLjUwNzUxMi0xMy4wMzcyNjgtODIuNDE5NTEyLTQzLjQ1NzU2MS0xMDkuMjQzMzE3YTE0Mi4zNjA5NzYgMTQyLjM2MDk3NiAwIDAgMC0yMC4yODAxOTUtMTQuOTM1NDE1IDE1OC4wNDU2NTkgMTU4LjA0NTY1OSAwIDAgMC0xMS4yMzkwMjUtNi4yNDM5MDJsLTIuNzQ3MzE3LTEuMjk4NzMyYTE1NS44NDc4MDUgMTU1Ljg0NzgwNSAwIDAgMC05LjE5MTAyNC0zLjk5NjA5N2MtMS4zNDg2ODMtMC41NDk0NjMtMi42OTczNjYtMC45OTkwMjQtNC4wOTYtMS40OTg1MzdhMTUyLjM1MTIyIDE1Mi4zNTEyMiAwIDAgMC04LjQ5MTcwNy0yLjg0NzIxOWMtMS45NDgwOTgtMC41OTk0MTUtMy44OTYxOTUtMC45OTkwMjQtNS44NDQyOTMtMS40OTg1MzctMi40OTc1NjEtMC41OTk0MTUtNC45NDUxNzEtMS4yNDg3OC03LjQ5MjY4My0xLjc0ODI5My0yLjU5NzQ2My0wLjQ5OTUxMi01LjM0NDc4LTAuODk5MTIyLTguMDQyMTQ2LTEuMjQ4NzgtMS45NDgwOTgtMC4yNDk3NTYtMy44NDYyNDQtMC41OTk0MTUtNS44NDQyOTMtMC43OTkyMmExNTMuMTUwNDM5IDE1My4xNTA0MzkgMCAwIDAtMTQuNDM1OTAzLTAuNzQ5MjY4Yy0xLjQ5ODUzNyAwLTIuOTk3MDczIDAuMTk5ODA1LTQuNTQ1NTYxIDAuMjQ5NzU2YTI2NS4zOTA4MjkgMjY1LjM5MDgyOSAwIDAgMC01LjU5NDUzNi0yNC41MjYwNDljLTAuNDk5NTEyLTEuOTk4MDQ5LTEuMjk4NzMyLTMuODQ2MjQ0LTEuODk4MTQ2LTUuODQ0MjkyYTI2Ny40Mzg4MjkgMjY3LjQzODgyOSAwIDAgMC01Ljk0NDE5Ni0xNy45ODI0MzljLTAuNjQ5MzY2LTEuNzk4MjQ0LTEuNDk4NTM3LTMuNDk2NTg1LTIuMTk3ODUzLTUuMjk0ODNhMjgzLjEyMzUxMiAyODMuMTIzNTEyIDAgMCAwLTcuNzQyNDM5LTE3LjczMjY4M0w3NzIuNzQ1MzY2IDI2OS43MzY1ODVhMjgyLjk3MzY1OSAyODIuOTczNjU5IDAgMCAwLTkuNzkwNDM5LTE3LjgzMjU4NUM3MTQuMzAyNDM5IDE3MS41ODI0MzkgNjI1Ljg4ODc4IDEyNC44NzgwNDkgNTI0LjQ4NzgwNSAxMjQuODc4MDQ5Yy0xMDEuNDAwOTc2IDAtMTg5LjkxNDUzNyA0Ni42NTQ0MzktMjM4LjUxNzA3MyAxMjYuOTc2LTMuNDk2NTg1IDUuNzk0MzQxLTYuNjkzNDYzIDExLjc4ODQ4OC05Ljc5MDQzOSAxNy44MzI1ODVsLTIuMTk3ODU0IDQuMDk2YTI4My41MjMxMjIgMjgzLjUyMzEyMiAwIDAgMC03Ljc0MjQzOSAxNy43MzI2ODNsLTIuMTk3ODU0IDUuMjQ0ODc4Yy0yLjI0NzgwNSA1Ljg5NDI0NC00LjE0NTk1MSAxMS45ODgyOTMtNS45OTQxNDYgMTguMDMyMzktMC41NDk0NjMgMS45OTgwNDktMS4yOTg3MzIgMy44NDYyNDQtMS44NDgxOTUgNS44NDQyOTNhMjY2LjczOTUxMiAyNjYuNzM5NTEyIDAgMCAwLTUuNTk0NTM3IDI0LjQ3NjA5OGMtMS40OTg1MzcgMC0yLjk5NzA3My0wLjE5OTgwNS00LjU0NTU2MS0wLjE5OTgwNS00Ljg5NTIyIDAtOS42OTA1MzcgMC4yOTk3MDctMTQuNDg1ODUzIDAuNzQ5MjY4LTEuOTk4MDQ5IDAuMTk5ODA1LTMuODQ2MjQ0IDAuNDk5NTEyLTUuNzk0MzQyIDAuNzk5MjItMi42OTczNjYgMC4zNDk2NTktNS40NDQ2ODMgMC42OTkzMTctOC4wOTIwOTcgMS4yNDg3OC0yLjQ5NzU2MSAwLjQ5OTUxMi00Ljk5NTEyMiAxLjE0ODg3OC03LjQ5MjY4MyAxLjc0ODI5My0xLjg5ODE0NiAwLjQ5OTUxMi0zLjg0NjI0NCAwLjg5OTEyMi01Ljc5NDM0MiAxLjQ5ODUzNmExNTMuNjQ5OTUxIDE1My42NDk5NTEgMCAwIDAtOC40OTE3MDcgMi43OTcyNjlsLTQuMDk2IDEuNDk4NTM2YTE2NC4yODk1NjEgMTY0LjI4OTU2MSAwIDAgMC05LjI0MDk3NiAzLjk5NjA5OGwtMi42OTczNjYgMS4zNDg2ODNhMTQ1LjU1Nzg1NCAxNDUuNTU3ODU0IDAgMCAwLTMxLjQ2OTI2OCAyMS4xNzkzMTdDMTE3Ljg4NDg3OCA0MDguNjAwOTc2IDEwNC44OTc1NjEgNDQ3LjU2MjkyNyAxMDQuODk3NTYxIDQ5MS4wNzA0MzljMCA4MC42NzEyMiA1OS43NDE2NTkgMTQ2LjA1NzM2NiAxNDEuMTYyMTQ2IDE0Ni4wNTczNjZhNDguOTUyMTk1IDQ4Ljk1MjE5NSAwIDAgMSA0OS4xNTIgNDguNzAyNDM5IDQ4Ljk1MjE5NSA0OC45NTIxOTUgMCAwIDEtNDkuMTUyIDQ4LjcwMjQzOWMtMTM1LjcxNzQ2MyAwLTI0NS43MTAwNDktMTA4Ljk5MzU2MS0yNDUuNzEwMDQ4LTI0My40NjIyNDQgMC0xMDkuNjkyODc4IDczLjIyODQ4OC0yMDIuNDAyMzQxIDE3My44MzAyNDMtMjMyLjg3MjU4NUEzNzUuODMyOTc2IDM3NS44MzI5NzYgMCAwIDEgNTI0LjQ4NzgwNSAyMC4zMzAxNDZhMzc1Ljg4MjkyNyAzNzUuODgyOTI3IDAgMCAxIDM1MC4zMDc5MDIgMjM3Ljg2NzcwOGMxMDAuNjAxNzU2IDMwLjQ3MDI0NCAxNzMuODMwMjQ0IDEyMy4xNzk3MDcgMTczLjgzMDI0NCAyMzIuODcyNTg1IDAgMTM0LjQ2ODY4My0xMDkuOTkyNTg1IDI0My40NjIyNDQtMjQ1LjcxMDA0OSAyNDMuNDYyMjQ0YTQ4Ljk1MjE5NSA0OC45NTIxOTUgMCAwIDEtNDkuMTAyMDQ4LTQ4LjcwMjQzOXoiIHAtaWQ9IjIwNzkiPjwvcGF0aD48cGF0aCBkPSJNNDg3Ljk3MzQ2MyAzODYuMTIyOTI3YTQ5LjEwMjA0OSA0OS4xMDIwNDkgMCAwIDEgNzIuOTI4NzgxIDAuMDk5OTAybDE0Ny4zNTYwOTcgMTYyLjA0MTc1NmM2Ljk5MzE3MSA3Ljc0MjQzOSAxMS40ODg3OCAxOS40MzEwMjQgMTIuNTM3NzU3IDMwLjEyMDU4NmwwLjI0OTc1NiAxMi45MzczNjZjMCAxOS40ODA5NzYtMjAuNDggMzkuNjYxMjY4LTM5LjIxMTcwOCAzOS42NjEyNjhoLTEwNC44OTc1NjF2MjYyLjk5MzE3MWE1Mi40NDg3OCA1Mi40NDg3OCAwIDEgMS0xMDQuODk3NTYxIDB2LTI2Mi45OTMxNzFoLTEwNC44OTc1NjFjLTEzLjg4NjQzOSAwLTM5LjIxMTcwNy0yMS43Mjg3OC0zOS4yMTE3MDctMzkuNjYxMjY4di0xMi45ODczMTdjMC0xMi40ODc4MDUgNC43OTUzMTctMjEuMjc5MjIgMTIuNjM3NjU5LTI5LjkyMDc4MWwxNDcuMzU2MDk3LTE2Mi4yOTE1MTJ6IiBwLWlkPSIyMDgwIj48L3BhdGg+PC9zdmc+JzsKdmFyIHN0YXJfc3ZnXzEgPSAnPHN2ZyB0PSIxNTk1MDgzNjMxNjg1IiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwNTEgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9IjIxNzMiIHdpZHRoPSIxNDAiIGhlaWdodD0iMTQwIj48cGF0aCBkPSJNNTI1LjgzNzgzOCA4NTIuNDEwODExTDE5OS4yNjQ4NjUgMTAwMS44NTk0NTlsNDEuNTEzNTEzLTM1Ny4wMTYyMTZMMCAzODEuOTI0MzI0bDM1MS40ODEwODEtNjkuMTg5MTg5TDUyNS44Mzc4MzggMGwxNzQuMzU2NzU3IDMxMi43MzUxMzVMMTA1MS42NzU2NzYgMzgxLjkyNDMyNGwtMjQwLjc3ODM3OSAyNjIuOTE4OTE5IDQxLjUxMzUxNCAzNTcuMDE2MjE2eiIgZmlsbD0iI0ZGRDU2NiIgcC1pZD0iMjE3NCI+PC9wYXRoPjwvc3ZnPic7CnZhciBzdGFyX3N2Z18yID0gJyA8c3ZnIHQ9IjE1OTUwODM3MTUzMTIiIGNsYXNzPSJpY29uIiB2aWV3Qm94PSIwIDAgMTAyNCAxMDI0IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgcC1pZD0iNzg0OCIgd2lkdGg9IjE0MCIgaGVpZ2h0PSIxNDAiPjxwYXRoIGQ9Ik0xMDE0LjAwMTM0NyA4NjYuMDkwMjM2TDgxMC4yMzU2OSA2NjIuMzI0NTc5bDE0NS40OTc2NDMtODQuMTI2NTk5YzExLjM3Nzc3OC02LjU1MDg0MiAxNy45Mjg2Mi0xOC45NjI5NjMgMTYuODk0Mjc2LTMyLjA2NDY0Ny0xLjAzNDM0My0xMy4xMDE2ODQtOS4zMDkwOTEtMjQuNDc5NDYxLTIxLjM3NjQzMS0yOS4zMDYzOTdsLTY0OC4xODg1NTItMjU4LjU4NTg1OWMtMTIuNzU2OTAyLTUuMTcxNzE3LTI3LjIzNzcxLTIuMDY4Njg3LTM2Ljg5MTU4MiA3LjU4NTE4Ni05LjY1Mzg3MiA5LjY1Mzg3Mi0xMi43NTY5MDIgMjQuMTM0NjgtNy41ODUxODUgMzYuODkxNTgybDI1OC41ODU4NTggNjQ4LjUzMzMzM2M0LjgyNjkzNiAxMi4wNjczNCAxNi4yMDQ3MTQgMjAuNjg2ODY5IDI5LjMwNjM5NyAyMS4zNzY0MzEgMTMuMTAxNjg0IDEuMDM0MzQzIDI1LjUxMzgwNS01LjUxNjQ5OCAzMi4wNjQ2NDctMTYuODk0Mjc2bDg0LjEyNjU5OS0xNDUuNDk3NjQzIDIwMy43NjU2NTcgMjAzLjc2NTY1N2M2LjU1MDg0MiA2LjU1MDg0MiAxNS4xNzAzNyA5Ljk5ODY1MyAyNC4xMzQ2OCA5Ljk5ODY1MyA4Ljk2NDMxIDAgMTcuOTI4NjItMy40NDc4MTEgMjQuMTM0NjgtOS45OTg2NTNsOTkuMjk2OTctOTkuMjk2OTdjMTMuNDQ2NDY1LTEzLjQ0NjQ2NSAxMy40NDY0NjUtMzUuMTY3Njc3IDAtNDguNjE0MTQxek0xNTAuMzI0NTc5IDEwMi4wNTUyMTljLTEzLjQ0NjQ2NS0xMy40NDY0NjUtMzUuMTY3Njc3LTEzLjQ0NjQ2NS00OC4yNjkzNiAwLTEzLjQ0NjQ2NSAxMy40NDY0NjUtMTMuNDQ2NDY1IDM1LjE2NzY3NyAwIDQ4LjI2OTM2bDc2LjE5NjYzMyA3Ni4xOTY2MzNjNi41NTA4NDIgNi41NTA4NDIgMTUuNTE1MTUyIDkuOTk4NjUzIDI0LjEzNDY4IDkuOTk4NjUzczE3LjU4MzgzOC0zLjQ0NzgxMSAyNC4xMzQ2OC05Ljk5ODY1M2MxMy40NDY0NjUtMTMuNDQ2NDY1IDEzLjQ0NjQ2NS0zNS4xNjc2NzcgMC00OC4yNjkzNkwxNTAuMzI0NTc5IDEwMi4wNTUyMTl6TTE3Ni4xODMxNjUgMzM4LjU3NTA4NGMwLTE4Ljk2Mjk2My0xNS4xNzAzNy0zNC4xMzMzMzMtMzQuMTMzMzMzLTM0LjEzMzMzM0gzNC4xMzMzMzNjLTE4Ljk2Mjk2MyAwLTM0LjEzMzMzMyAxNS4xNzAzNy0zNC4xMzMzMzMgMzQuMTMzMzMzczE1LjE3MDM3IDM0LjEzMzMzMyAzNC4xMzMzMzMgMzQuMTMzMzM0aDEwNy41NzE3MThjMTguOTYyOTYzIDAgMzQuNDc4MTE0LTE1LjE3MDM3IDM0LjQ3ODExNC0zNC4xMzMzMzR6TTE2Mi4zOTE5MTkgNDQ0LjQyMjg5NmwtNzYuMTk2NjMzIDc1Ljg1MTg1MWMtMTMuNDQ2NDY1IDEzLjQ0NjQ2NS0xMy40NDY0NjUgMzUuMTY3Njc3IDAgNDguMjY5MzYxIDYuNTUwODQyIDYuNTUwODQyIDE1LjUxNTE1MiA5Ljk5ODY1MyAyNC4xMzQ2OCA5Ljk5ODY1M3MxNy41ODM4MzgtMy40NDc4MTEgMjQuMTM0NjgtOS45OTg2NTNsNzYuMTk2NjMzLTc2LjE5NjYzM2MxMy40NDY0NjUtMTMuNDQ2NDY1IDEzLjQ0NjQ2NS0zNS4xNjc2NzcgMC00OC4yNjkzNjEtMTMuNDQ2NDY1LTEzLjEwMTY4NC0zNS4xNjc2NzctMTMuMTAxNjg0LTQ4LjI2OTM2IDAuMzQ0Nzgyek0zMzguNTc1MDg0IDE3Ni4xODMxNjVjMTguOTYyOTYzIDAgMzQuMTMzMzMzLTE1LjE3MDM3IDM0LjEzMzMzNC0zNC4xMzMzMzNWMzQuMTMzMzMzYzAtMTguOTYyOTYzLTE1LjE3MDM3LTM0LjEzMzMzMy0zNC4xMzMzMzQtMzQuMTMzMzMzcy0zNC4xMzMzMzMgMTUuMTcwMzctMzQuMTMzMzMzIDM0LjEzMzMzM3YxMDcuNTcxNzE4YzAgMTguOTYyOTYzIDE1LjE3MDM3IDM0LjQ3ODExNCAzNC4xMzMzMzMgMzQuNDc4MTE0ek00NjguNTU3NTc2IDIyMC42NTk5MzNjOC42MTk1MjkgMCAxNy41ODM4MzgtMy40NDc4MTEgMjQuMTM0NjgtOS45OTg2NTRMNTY4Ljg4ODg4OSAxMzQuNDY0NjQ2YzEzLjQ0NjQ2NS0xMy40NDY0NjUgMTMuNDQ2NDY1LTM1LjE2NzY3NyAwLTQ4LjI2OTM2LTEzLjQ0NjQ2NS0xMy40NDY0NjUtMzUuMTY3Njc3LTEzLjQ0NjQ2NS00OC4yNjkzNiAwbC03Ni4xOTY2MzMgNzYuMTk2NjMzYy0xMy40NDY0NjUgMTMuNDQ2NDY1LTEzLjQ0NjQ2NSAzNS4xNjc2NzcgMCA0OC4yNjkzNiA2LjU1MDg0MiA2LjU1MDg0MiAxNS41MTUxNTIgOS45OTg2NTMgMjQuMTM0NjggOS45OTg2NTR6IiBmaWxsPSIjMmMyYzJjIiBwLWlkPSI3ODQ5Ij48L3BhdGg+PC9zdmc+JzsKdmFyIHN0YXJfc3ZnXzMgPSAnIDxzdmcgdD0iMTU5NTA4MzkyNTQzOCIgY2xhc3M9Imljb24iIHZpZXdCb3g9IjAgMCAxMjA0IDEwMjQiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwLWlkPSI0ODA5IiB3aWR0aD0iMTQwIiBoZWlnaHQ9IjE0MCI+PHBhdGggZD0iTTEwODguODY0MzQ4IDYxOC4xMzcwMWExNTU1LjAwOTM4NCAxNTU1LjAwOTM4NCAwIDAgMS0xNTAuMjczMDA0IDE2Ny4xMzczMDhjLTUyLjg4MTY0MiA1MS4xOTUyMTItMTA3LjkzMTU1MiAxMDEuMTg1ODMtMTYzLjY0Mzk4OSAxNDcuMjYxNTIxLTMzLjg0OTA2OSAyNy41MjQ5NTUtNjAuMjI5NjYxIDQ4LjY2NTU2Ni03Ni4xOTA1MjEgNjAuMjI5NjYxYTE2Mi45ODE0NjIgMTYyLjk4MTQ2MiAwIDAgMS0xOTEuODkxNjk5IDBjLTE1LjUzOTI1My0xMi4wNDU5MzItNDIuMTYwNzYzLTMyLjY0NDQ3Ni03Ni4xOTA1MjEtNjAuODMxOTU3YTI2MzguNDgwNzU0IDI2MzguNDgwNzU0IDAgMCAxLTE2NC4zNjY3NDUtMTQ3LjI2MTUyMSAxNTc5LjEwMTI0OSAxNTc5LjEwMTI0OSAwIDAgMS0xNTAuMjczMDA0LTE2NS44MTIyNTdBNDY4LjEwNDkyNCA0NjguMTA0OTI0IDAgMCAxIDAuMTUyOTk4IDM0NC43NTQ1NzkgMzE1LjU0MzE5MyAzMTUuNTQzMTkzIDAgMCAxIDEwOS4wNDgyMjUgOTYuMzY3NDU3YTM5OS40NDMxMTEgMzk5LjQ0MzExMSAwIDAgMSA0OTMuODgzMjE5LTIwLjQ3ODA4NCAzOTguNjYwMTI1IDM5OC42NjAxMjUgMCAwIDEgNDkzLjg4MzIxOSAyMC40NzgwODRBMzE1LjQ4Mjk2NCAzMTUuNDgyOTY0IDAgMCAxIDEyMDQuNzQ2MjE1IDM0My4zMDkwNjdhNDY2Ljg0MDEwMSA0NjYuODQwMTAxIDAgMCAxLTExNS43MDExNzggMjc0LjY0NzI1NHoiIGZpbGw9IiNGRTRCODMiIHAtaWQ9IjQ4MTAiPjwvcGF0aD48L3N2Zz4nOwp2YXIgc3Rhcl9zdmdfNCA9ICcgPHN2ZyB0PSIxNTk1MDg0MDg5MTE1IiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9IjgwMDgiIHdpZHRoPSIxNDAiIGhlaWdodD0iMTQwIj48cGF0aCBkPSJNNTEyIDQ2LjU0NTQ1NUMyNTYgNDYuNTQ1NDU1IDQ2LjU0NTQ1NSAyNTYgNDYuNTQ1NDU1IDUxMnMyMDkuNDU0NTQ1IDQ2NS40NTQ1NDUgNDY1LjQ1NDU0NSA0NjUuNDU0NTQ1IDQ2NS40NTQ1NDUtMjA5LjQ1NDU0NSA0NjUuNDU0NTQ1LTQ2NS40NTQ1NDVTNzY4IDQ2LjU0NTQ1NSA1MTIgNDYuNTQ1NDU1eiBtMCA4MzcuODE4MTgxYy0yMDQuOCAwLTM3Mi4zNjM2MzYtMTY3LjU2MzYzNi0zNzIuMzYzNjM2LTM3Mi4zNjM2MzZzMTY3LjU2MzYzNi0zNzIuMzYzNjM2IDM3Mi4zNjM2MzYtMzcyLjM2MzYzNiAzNzIuMzYzNjM2IDE2Ny41NjM2MzYgMzcyLjM2MzYzNiAzNzIuMzYzNjM2LTE2Ny41NjM2MzYgMzcyLjM2MzYzNi0zNzIuMzYzNjM2IDM3Mi4zNjM2MzZ6IiBmaWxsPSIjMDBDNUM1IiBwLWlkPSI4MDA5Ij48L3BhdGg+PHBhdGggZD0iTTY1Ni4yOTA5MDkgNTg2LjQ3MjcyN2MtNzkuMTI3MjczIDY5LjgxODE4Mi0yMDkuNDU0NTQ1IDY5LjgxODE4Mi0yODguNTgxODE4IDAtMTguNjE4MTgyLTEzLjk2MzYzNi00MS44OTA5MDktMTMuOTYzNjM2LTYwLjUwOTA5MSA0LjY1NDU0Ni0xMy45NjM2MzYgMTMuOTYzNjM2LTEzLjk2MzYzNiA0MS44OTA5MDkgNC42NTQ1NDUgNjAuNTA5MDkxIDU1Ljg1NDU0NSA1MS4yIDEyNS42NzI3MjcgNzQuNDcyNzI3IDIwMC4xNDU0NTUgNzQuNDcyNzI3czE0NC4yOTA5MDktMjcuOTI3MjczIDIwMC4xNDU0NTUtNzQuNDcyNzI3YzE4LjYxODE4Mi0xMy45NjM2MzYgMTguNjE4MTgyLTQxLjg5MDkwOSA0LjY1NDU0NS02MC41MDkwOTFzLTQxLjg5MDkwOS0xOC42MTgxODItNjAuNTA5MDkxLTQuNjU0NTQ2ek0zNTguNCA0NjAuOGMyNy45MjcyNzMgMCA1MS4yLTIzLjI3MjcyNyA1MS4yLTUxLjJzLTIzLjI3MjcyNy01NS44NTQ1NDUtNTEuMi01NS44NTQ1NDVjLTI3LjkyNzI3MyAwLTUxLjIgMjMuMjcyNzI3LTUxLjIgNTEuMnMyMy4yNzI3MjcgNTUuODU0NTQ1IDUxLjIgNTUuODU0NTQ1ek02NjUuNiA0NjAuOGMyNy45MjcyNzMgMCA1MS4yLTIzLjI3MjcyNyA1MS4yLTUxLjJzLTIzLjI3MjcyNy01MS4yLTUxLjItNTEuMi01MS4yIDIzLjI3MjcyNy01MS4yIDUxLjIgMjMuMjcyNzI3IDUxLjIgNTEuMiA1MS4yeiIgZmlsbD0iIzAwQzVDNSIgcC1pZD0iODAxMCI+PC9wYXRoPjwvc3ZnPic7CnZhciBzdGFyX3N2ZyA9IHN0YXJfc3ZnXzEgKyBzdGFyX3N2Z18yICsgc3Rhcl9zdmdfMyArIHN0YXJfc3ZnXzQ7CnZhciBkb25hdGVfc3ZnID0gJzxzdmcgdD0iMTU5Mjk4MjUwODI1OCIgY2xhc3M9Imljb24iIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwLWlkPSI0MjA3IiB3aWR0aD0iMzIiIGhlaWdodD0iMzIiPjxwYXRoIGQ9Ik02NjQuNDggMjM0LjQzMmEzMiAzMiAwIDAgMC00NS4yNDgtMC44bC03Ni4yNTYgNzMuNi03My4zNDQtNzMuMjE2YTMyIDMyIDAgMSAwLTQ1LjI0OCA0NS4zMTJsNzIuMzg0IDcyLjI1NmgtNDkuMjhhMzIgMzIgMCAwIDAgMCA2NGg2My43NzZ2MzJoLTYzLjc3NmEzMiAzMiAwIDAgMCAwIDY0aDYzLjc3NnY2NS42NjRhMzIgMzIgMCAxIDAgNjQgMHYtNjUuNjY0aDY0LjI4OGEzMiAzMiAwIDEgMCAwLTY0aC02NC4yODh2LTMyaDY0LjI4OGEzMiAzMiAwIDEgMCAwLTY0aC01MC4zNjhsNzQuNDY0LTcxLjg3MmEzMi4wMzIgMzIuMDMyIDAgMCAwIDAuODMyLTQ1LjI4eiBtMjc1LjIgNTAzLjU1MmE5MDE3LjU2OCA5MDE3LjU2OCAwIDAgMC0xNDEuNjY0LTU2LjczNiAzNjguNTEyIDM2OC41MTIgMCAwIDAgOTcuNTY4LTI0OC42MDhjMC0yMDIuOTEyLTE2NS4xMi0zNjgtMzY4LjA2NC0zNjhzLTM2OCAxNjUuMDg4LTM2OCAzNjhjMCAxNi4yMjQgMS4wMjQgMzIuMzUyIDMuMDcyIDQ3Ljk2OCAyLjMwNCAxNy41MDQgMTguNDk2IDI5LjY2NCAzNS45MDQgMjcuNTg0YTMyIDMyIDAgMCAwIDI3LjU4NC0zNS45MDQgMzA0LjUxMiAzMDQuNTEyIDAgMCAxLTIuNTYtMzkuNjQ4YzAtMTY3LjYxNiAxMzYuMzg0LTMwNCAzMDQtMzA0IDE2Ny42NDggMCAzMDQuMDY0IDEzNi4zODQgMzA0LjA2NCAzMDRhMzAwLjU0NCAzMDAuNTQ0IDAgMCAxLTk2LjEyOCAyMjEuNDcyYy0wLjc2OCAwLjczNi0xLjA4OCAxLjc2LTEuODI0IDIuNTI4LTQyLjg0OC0xNS45MzYtNzkuMzI4LTI4LjQ4LTkzLjc2LTMwLjY1Ni0yNC44OTYtMy45MDQtNDguNjcyIDcuNjE2LTYzLjEwNCAyOC44OTYtMTIuMDMyIDE3Ljc5Mi0xNS4wNzIgMzguODE2LTguMDk2IDU2LjI1NiA0LjI4OCAxMC42NTYgMjAuNTEyIDMyLjg5NiAzOS43NzYgNTcuMjgtNDYuNDMyLTAuMDY0LTExNy4zMTItNi4zMzYtMTkyLjgzMi0zNS40ODgtMzEuMjY0LTEyLjA2NC02OS40NC01Mi42NC0xMDMuMTM2LTg4LjQxNi00Ny45NjgtNTAuOTc2LTkzLjI4LTk5LjEwNC0xNDIuNTYtOTkuMTA0LTE4LjMzNiAwLTM1Ljc0NCA2Ljg0OC01MC4zMzYgMTkuNzc2LTE4LjI0IDE2LjIyNC0zNS4xMzYgNDguMzItMTIgMTA5LjI0OCA0Mi42MjQgMTEyLjE2IDIwOC41NDQgMjg1LjEyIDM0MS43MjggMjg1LjEyaDQ3OC4xNDRhMzIgMzIgMCAwIDAgMzItMzJ2LTE2MGEzMS44NCAzMS44NCAwIDAgMC0xOS43NzYtMjkuNTY4eiBtLTQ0LjE2IDE1Ny42aC00NDUuMTJsLTEuMDI0IDMydi0zMmMtOTcuNiAwLTI0Ny4wNzItMTUyLjEyOC0yODEuOTItMjQzLjg3Mi0xMC4xMTItMjYuNjU2LTYuNzItMzcuNDA4LTUuMzQ0LTM4LjYyNCA0LjEyOC0zLjY0OCA2LjUyOC0zLjY0OCA3Ljg0LTMuNjQ4IDIxLjYzMiAwIDY0LjYwOCA0NS42MzIgOTUuOTY4IDc4Ljk0NCA0MC4yMjQgNDIuNzUyIDgxLjg1NiA4Ni45NDQgMTI2LjY1NiAxMDQuMjU2IDg1LjIxNiAzMi44OTYgMTY0Ljg5NiAzOS44MDggMjE2LjczNiAzOS44MDggNDEuMzc2IDAgNjcuNTg0LTQuMzUyIDY4LjY3Mi00LjU0NGEzMiAzMiAwIDAgMCAxOS4xMzYtNTIuMTZjLTI3LjAwOC0zMi4wOTYtNTguNTkyLTcxLjgwOC02Ny4yOTYtODUuMzQ0IDAuMjg4LTAuNTc2IDAuNTEyLTEuMDI0IDAuMzUyLTEuMTUyIDIyLjg0OCAzLjQ4OCAxNjIuNDMyIDU3Ljk1MiAyNjUuMjggOTkuODR2MTA2LjQ5NnoiIHAtaWQ9IjQyMDgiPjwvcGF0aD48L3N2Zz4nOwp2YXIgc2V0X3N2ZyA9ICc8c3ZnIHQ9IjE1OTI5ODI5NzAzNzUiIGNsYXNzPSJpY29uIiB2aWV3Qm94PSIwIDAgMTAyNCAxMDI0IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgcC1pZD0iMTAxMTIiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCI+PHBhdGggZD0iTTI1NiAxMDIuNGg1MTJsMjU2IDI1Ni01MTIgNTYzLjJMMCAzNTguNHoiIGZpbGw9IiMyNkNENjMiIHAtaWQ9IjEwMTEzIj48L3BhdGg+PHBhdGggZD0iTTI1NiAxMDIuNGwyNTYgMjU2SDB6TTc2OCAxMDIuNGwyNTYgMjU2SDUxMnpNNTEyIDkyMS42bDIwNC44LTU2My4ySDMwNy4yeiIgZmlsbD0iIzE0QTM0NSIgcC1pZD0iMTAxMTQiPjwvcGF0aD48L3N2Zz4nOwp2YXIgc2F2ZV9zdmcgPSAnPHN2ZyB0PSIxNjI5NDQ4NTg4MzUxIiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9Ijc4NDkiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjAwIj48cGF0aCBkPSJNNTEyIDBDMjI5LjIgMCAwIDIyOS4yIDAgNTEyczIyOS4yIDUxMiA1MTIgNTEyIDUxMi0yMjkuMiA1MTItNTEyUzc5NC44IDAgNTEyIDB6IG0wIDk0NS4yQzI3My4xIDk0NS4yIDc4LjggNzUwLjkgNzguOCA1MTJTMjczLjEgNzguOCA1MTIgNzguOCA5NDUuMiAyNzMuMSA5NDUuMiA1MTIgNzUwLjkgOTQ1LjIgNTEyIDk0NS4yeiIgcC1pZD0iNzg1MCIgZmlsbD0iI2ZmZmZmZiI+PC9wYXRoPjxwYXRoIGQ9Ik02ODAuOSAzNTkuNEw0NjEgNTgyLjMgMzQxLjYgNDczLjZjLTE2LTE0LjYtNDEtMTMuNC01NS42IDIuNi0xNC43IDE2LjEtMTMuNSA0MSAyLjYgNTUuNkw0MzYgNjY2LjFjNy41IDYuOCAxNyAxMC4yIDI2LjUgMTAuMiAxMC4yIDAgMjAuMy0zLjkgMjgtMTEuN0w3MzcgNDE0LjdjMTUuMy0xNS41IDE1LjEtNDAuNC0wLjQtNTUuNy0xNS41LTE1LjItNDAuNS0xNS4xLTU1LjcgMC40eiIgcC1pZD0iNzg1MSIgZmlsbD0iI2ZmZmZmZiI+PC9wYXRoPjwvc3ZnPic7CnZhciBzZXR0aW5nc19zdmcgPSAnPHN2ZyB0PSIxNjI5NDMzMzYwNDYyIiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9IjI4NzAiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjAwIj48cGF0aCBkPSJNMTAwNi40MzggMTcuNTQ4Yy0wLjAzMiAwLTQzMC40My0xMTIuOTY2LTc4MC40NSAyMzcuMDIyLTI4OC45OSAyODkuMDA4LTMzLjUyMiA1NzYuOTY2LTMzLjUyMiA1NzYuOTY2czI4Ny45NTggMjU1LjQ4NCA1NzYuOTUyLTMzLjU1QzExMTkuNDM2IDQ0OC4wMTIgMTAwNi40NjggMTcuNjEyIDEwMDYuNDM4IDE3LjU0OHoiIGZpbGw9IiM5RUQzNkEiIHAtaWQ9IjI4NzEiPjwvcGF0aD48cGF0aCBkPSJNMTAwNi40MzggMTcuNTQ4bC00Mi42NzQtOC4yMTZjMC4wMzIgMC4wNjIgMTEyLjk5OCA0MzguNjc4LTIzNi45OSA3ODguNjUyLTk2LjM0NCA5Ni40MDYtMTkyLjU5OCAxMzIuMjA4LTI3OC4xMDQgMTM3LjE0NCA5NS40MSA1LjUgMjA4LTI0LjM2OCAzMjAuNzQ4LTEzNy4xNDRDMTExOS40MzYgNDQ4LjAxMiAxMDA2LjQ2OCAxNy42MTIgMTAwNi40MzggMTcuNTQ4eiIgZmlsbD0iI0ZGRkZGRiIgb3BhY2l0eT0iLjIiIHAtaWQ9IjI4NzIiPjwvcGF0aD48cGF0aCBkPSJNNjAwLjQwNiA0MjMuNjEyYy04LjMwOC04LjM0LTIxLjgzNi04LjM0LTMwLjE0OCAwTDYuNCA5ODcuNDI2Yy04LjMyNiA4LjM3Mi04LjMyNiAyMS44NjggMCAzMC4xOCA4LjMyNiA4LjMwOCAyMS44MjIgOC4zMDggMzAuMTYyIDBMNjAwLjQwNiA0NTMuNzZjOC4zNC04LjM0MiA4LjM0LTIxLjgzOCAwLTMwLjE0OHoiIGZpbGw9IiM4QUMwNTQiIHAtaWQ9IjI4NzMiPjwvcGF0aD48L3N2Zz4nOwp2YXIgcHJvdGVjdF9zdmcgPSAnPHN2ZyB0PSIxNjI5NTYwNTM4ODA1IiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9IjMyMTIiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjAwIj48cGF0aCBkPSJNODAwLjMgMjA1LjFMNTM0LjggMTE2Yy0xNi01LjQtMzMuMy01LjMtNDkuMiAwLjJsLTI2NC41IDkyLjNjLTI5LjMgMTAtNDkgMzcuNS00OS4xIDY4LjRsMS43IDI2NS40YzAuNyA4MSAzMS4xIDE1OC45IDg1LjYgMjE4LjkgMjUgMjcuNyA1Ni45IDUxLjUgOTcuOCA3Mi43bDE0NCA3NC42YzkgNC43IDE5LjcgNC42IDI4LjctMC4yTDY3Mi41IDgzMmM0MC40LTIxLjYgNzIuMi00NS43IDk2LjktNzMuOCA1My42LTYwLjYgODMtMTM4LjkgODIuNi0yMTkuOGwtMS43LTI2NS42Yy0wLjUtMzAuOS0yMC41LTU4LjEtNTAtNjcuN3oiIGZpbGw9IiMwN0MxNjAiIHAtaWQ9IjMyMTMiPjwvcGF0aD48cGF0aCBkPSJNNDc0LjEgNjUyYy03LjEgMC0xMy44LTIuOC0xOC45LTcuOGwtMTUxLTE1MS4xYy0xMC40LTEwLjQtMTAuNC0yNy40IDAtMzcuOHMyNy40LTEwLjQgMzcuOCAwbDEzMi4xIDEzMi4yIDIwNy43LTIwNy43YzEwLjQtMTAuNCAyNy40LTEwLjQgMzcuOCAwIDEwLjQgMTAuNCAxMC40IDI3LjQgMCAzNy44TDQ5MyA2NDQuMmMtNSA1LTExLjggNy44LTE4LjkgNy44eiIgZmlsbD0iI0ZGRkZGRiIgcC1pZD0iMzIxNCI+PC9wYXRoPjwvc3ZnPic7CgovLyBqcXVlcnkuc2hvd3RpcHMuanMKKGZ1bmN0aW9uKGpRdWVyeSkgewoJalF1ZXJ5LmZuLnNob3dUaXBzID0gZnVuY3Rpb24ob3B0aW9ucyxlbGVtKXsKCQl2YXIgY29uZmlnID0gewoJCQlza2luOiJ0cmlwcyIsCgkJCWNvbnRlbnQ6JCh0aGlzKS5hdHRyKCJ0aXBzIil8fCLlvLnlh7rnsbvlnovnmoTmsJTms6Hmj5DnpLrvvIEiLCAgLy/msJTms6Hmj5DnpLrlhoXlrrnph4zpnaLlj6/ku6XmmK9IVE1M77yM6buY6K6k5pi+56S66Ieq5a6a5LmJ55qE5o+Q56S65YaF5a65CgkJCXdpZHRoOiJhdXRvIiwgIC8v6buY6K6k5Li6YXV0b++8jOWPr+S7peWGmeWFt+S9k+WwuuWvuOWmgu+8mjIwMAoJCQlhbGlnblRvOlsicmlnaHQiLCJjZW50ZXIiXSwgIC8v566t5aS05pa55ZCRCgkJCWNvbG9yOlsicmdiKDI0NywgMjA2LCA1NykiLCIjRkZGRUY0Il0sICAvL+i/memHjOaYr+aPkOekuuWxgueahOmjjuagvO+8jOesrOS4gOS4quWPguaVsOS4uuaPkOekuui+ueahhuminOiJsu+8jOesrOS6jOS4quWPguaVsOS4uuaPkOekuuiDjOaZr+minOiJsgoJCQl0eXBlOiJodG1sIiwgICAvL+aYvuekuuWGheWuueexu+WeiwoJCQl0cmlnZ2VyOiJjbGljayIsICAgIC8v6buY6K6k5Li654K55Ye75pi+56S677yMc2hvd+S4uuWIneWni+WMluWwseaYvuekuu+8jGhvdmVy5Li657uP6L+H5pi+56S677yMZm9jdXPnhKbngrnmmL7npLrvvIxtb3VzZei3n+maj+m8oOagh+aYvuekuumakOiXjwoJCQlzcGFjaW5nOjEwLCAgLy/pu5jorqTkuLrnrq3lpLTot53nprvlr7nosaHnmoTlsLrlr7gKCQkJY3VzdG9taWQ6IiIsICAvL+iHquWumuS5iUlECgkJCWlzY2xvc2U6ZmFsc2UsICAgLy/mmK/lkKbmmL7npLrlhbPpl63mjInpkq4KCQkJc3VjY2VzcyA6IG51bGwgICAgLy/miJDlip/lkI7nmoTlm57osIPlh73mlbAKCQl9OwoJCXZhciBvcHRzID0galF1ZXJ5LmV4dGVuZChjb25maWcsIG9wdGlvbnMpOwoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXsKCQkJdmFyIHRoYXQgPSBqUXVlcnkodGhpcyksdGlwQm94LHRpcElkLHNlbGZILHNlbGZXLGNvbklkLGRvY1csIHNwYSA9IG9wdHMuc3BhY2luZywgc2tpbj1vcHRzLnNraW47CgkJCXZhciBNYXRocmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOTk5OTk5OSk7CiAgICAgICAgICAgIHZhciBwbXIgPSAob3B0cy5jdXN0b21pZD09IiIpID8gTWF0aHJhbmRvbSA6b3B0cy5jdXN0b21pZC5yZXBsYWNlKC9bIy5dLywgIiIpOwoJCQl2YXIgcG9pbnRlcj1vcHRzLmFsaWduVG8ubGVuZ3RoPT09MSA/ICcnK29wdHMuYWxpZ25Ub1swXSsnJyA6ICcnK29wdHMuYWxpZ25Ub1swXSsnLScrb3B0cy5hbGlnblRvWzFdKycnOwoKCQkJaWYodHlwZW9mIGVsZW0gPT0gJ3N0cmluZycpIHsKCQkJCWlmKGVsZW0gPT0ic2hvdyIpewoJCQkJCWpRdWVyeSgnI3RpcCcrcG1yKS5zaG93KCk7ICBqUXVlcnkoIiNjb24iK3BtcikuaHRtbChvcHRzLmNvbnRlbnQpOwoJCQkJCXNob3dQb3NpdGlvbihwb2ludGVyLGpRdWVyeSgnI3RpcCcrcG1yKSk7CgkJCQkJfTsKCQkJCWlmKGVsZW0gPT0iaGlkZSIpe2pRdWVyeSgnI3RpcCcrcG1yKS5oaWRlKCl9OwoJCQl9OwoJCQlpZih0eXBlb2YgZWxlbSA9PSAnJyB8fCB0eXBlb2YgZWxlbSA9PSB1bmRlZmluZWQpe3JldHVybiB0cnVlfTsKCQkJaWYoalF1ZXJ5KCcjdGlwJytwbXIpLmxlbmd0aD09MSl7cmV0dXJuIGZhbHNlO30KCQkJdGlwQm94PWpRdWVyeSgnPGRpdiBjbGFzcz0iJytza2luKycgJytza2luKyctJytwb2ludGVyKyciIGlkPSJ0aXAnK3BtcisnIj48aT48L2k+PGVtPjwvZW0+PGRpdiBjbGFzcz0iJytza2luKydjb24iIGlkPSJjb24nK3BtcisnIj48L2Rpdj48L2Rpdj4nKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KTsKCQkJdGlwSWQgPSBqUXVlcnkoIiN0aXAiK3Btcik7CgkJCWNvbklkID0galF1ZXJ5KCIjY29uIitwbXIpOwoKCQkJdmFyIGVkZ2Vjb2xvcj0nYm9yZGVyLScrb3B0cy5hbGlnblRvWzBdKyctY29sb3InLCB0Zmk9dGlwSWQuZmluZCgiaSIpLCB0ZmVtPXRpcElkLmZpbmQoImVtIiksIHRmaWVtPXRpcElkLmZpbmQoImksZW0iKTsKCQkJdGlwSWQuY3NzKHsncG9zaXRpb24nOidhYnNvbHV0ZScsYm9yZGVyOicxcHggc29saWQnLCdib3JkZXItY29sb3InOm9wdHMuY29sb3JbMF0sJ2JhY2tncm91bmQtY29sb3InOm9wdHMuY29sb3JbMV19KTsKCQkJaWYob3B0cy5hbGlnblRvWzFdPT0nY2VudGVyJyl7IHZhciBvZmZwb3M9NTAscGVyY2VuPSIlIjsgfWVsc2V7IHZhciBvZmZwb3M9NSxwZXJjZW49InB4IjsgfTsKCQkJdGZpZW0uY3NzKHt3aWR0aDowLGhlaWdodDowLGNvbnRlbnQ6JycsJ3Bvc2l0aW9uJzonYWJzb2x1dGUnfSkKCQkJdGZpLmNzcyh7Ym9yZGVyOic4cHggc29saWQgdHJhbnNwYXJlbnQnLCd6LWluZGV4Jzo1fSk7CgkJCXRmZW0uY3NzKHtib3JkZXI6JzdweCBzb2xpZCB0cmFuc3BhcmVudCcsJ3otaW5kZXgnOjEwfSk7CgkJCXN3aXRjaCAocG9pbnRlcikgewoJCQkJY2FzZSAndG9wLWNlbnRlcic6CgkJCQljYXNlICdib3R0b20tY2VudGVyJzoKCQkJCWNhc2UgJ3RvcC1sZWZ0JzoKCQkJCWNhc2UgJ2JvdHRvbS1sZWZ0JzoKCQkJCQl2YXIgcG9pPSJsZWZ0IjsKCQkJCQlpZihwb2ludGVyPT0ndG9wLWNlbnRlcicgfHwgcG9pbnRlcj09J2JvdHRvbS1jZW50ZXInKXsKCQkJCQkJdGZpLmNzcyh7Im1hcmdpbi1sZWZ0IjoiLThweCJ9KTsKCQkJCQkJdGZlbS5jc3MoeyJtYXJnaW4tbGVmdCI6Ii03cHgifSk7CgkJCQkJfQoJCQkJICAgIGJyZWFrOwoJCQkJY2FzZSAnbGVmdC1jZW50ZXInOgoJCQkJY2FzZSAncmlnaHQtY2VudGVyJzoKCQkJCWNhc2UgJ2xlZnQtdG9wJzoKCQkJCWNhc2UgJ3JpZ2h0LXRvcCc6CgkJCQkJdmFyIHBvaT0idG9wIjsKCQkJCQlpZihwb2ludGVyPT0nbGVmdC1jZW50ZXInIHx8IHBvaW50ZXI9PSdyaWdodC1jZW50ZXInKXsKCQkJCQkJdGZpLmNzcyh7Im1hcmdpbi10b3AiOiItOHB4In0pOwoJCQkJCQl0ZmVtLmNzcyh7Im1hcmdpbi10b3AiOiItN3B4In0pOwoJCQkJCX0KCQkJCSAgICBicmVhazsKCQkJCWRlZmF1bHQ6CgkJCQkJdmFyIHBvaT0icmlnaHQiOwoJCQkJICAgIGJyZWFrOwoJCQl9OwoKCQkJaWYocG9pbnRlcj09J2ZvbGxvdycpewoJCQkJdGZpLmNzcyh7J2JvcmRlci1ib3R0b20tY29sb3InOm9wdHMuY29sb3JbMF0sbGVmdDonJytvZmZwb3MrcGVyY2VuKycnLGJvdHRvbTonMTAwJSd9KTsKCQkJCXRmZW0uY3NzKHsnYm9yZGVyLWJvdHRvbS1jb2xvcic6b3B0cy5jb2xvclsxXSxsZWZ0OicnKyhvZmZwb3MrKG9wdHMuYWxpZ25Ub1sxXT09J2NlbnRlcic/MDoxKSkrcGVyY2VuKycnLGJvdHRvbTonMTAwJSd9KTsKCQkJfWVsc2V7CgkJCQl0ZmkuY3NzKGVkZ2Vjb2xvcixvcHRzLmNvbG9yWzBdKS5jc3MocG9pLCcnK29mZnBvcytwZXJjZW4rJycpOwoJCQkJdGZlbS5jc3MoZWRnZWNvbG9yLG9wdHMuY29sb3JbMV0pLmNzcyhwb2ksJycrKG9mZnBvcysob3B0cy5hbGlnblRvWzFdPT0nY2VudGVyJz8wOjEpKStwZXJjZW4rJycpOwoJCQkJdGZpZW0uY3NzKG9wdHMuYWxpZ25Ub1swXSwnMTAwJScpOwoJCQl9OwoKCQkJc3dpdGNoIChvcHRzLnR5cGUpIHsKCQkJCWNhc2UgJ2h0bWwnOmNvbklkLmh0bWwob3B0cy5jb250ZW50KTsgYnJlYWs7CgkJCQljYXNlICdpZCcgIDoKCQkJCSAgICB2YXIgdGVtcGlkPWpRdWVyeShvcHRzLmNvbnRlbnQpICx3cmFwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CgkJCQkJaWYodGVtcGlkLmNzcygiZGlzcGxheSIpID09ICJub25lIil7ICB0ZW1waWQuY3NzKHtkaXNwbGF5OiJibG9jayJ9KTsgfQoJCQkJCWNvbklkLmFwcGVuZCh0ZW1waWQpOwoJCQkJICAgIGJyZWFrOwoJCQl9OwoJCQlpZihvcHRzLmlzY2xvc2UpewoJCQkJalF1ZXJ5KCc8c3BhbiBjbGFzcz0iJytza2luKydjbG9zZSIgaWQ9ImNsb3NlJytwbXIrJyI+JnRpbWVzOzwvc3Bhbj4nKS5hcHBlbmRUbyh0aXBJZCk7CgkJCQl0aXBJZC5maW5kKCIjY2xvc2UiK3BtcisiIikub24oImNsaWNrIixmdW5jdGlvbigpe3RpcElkLmhpZGUoKTt9KTsKCQkJfQoKCQkJaWYodHlwZW9mIG9wdHMud2lkdGggPT09ICdzdHJpbmcnKXsKCQkJCWRvY1cgPSBwYXJzZUludChkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoKihvcHRzLndpZHRoLnJlcGxhY2UoJyUnLCcnKS8xMDApKTsKCQkJCSh0eXBlb2Ygb3B0cy53aWR0aCA9PSAnYXV0bycgfHwgdHlwZW9mIG9wdHMud2lkdGggPT0gJycpID8gdGlwQm94LmNzcyh7d2lkdGg6J2F1dG8nfSkgOiB0aXBCb3guY3NzKHt3aWR0aDpkb2NXfSk7CgkJCQl0aXBCb3guaGVpZ2h0KCk7CgkJCX1lbHNlewoJCQkJdGlwQm94LndpZHRoKG9wdHMud2lkdGgpLmhlaWdodCgpOwoJCQl9CiAgICAgICAgICAgIGZ1bmN0aW9uIHNob3dQb3NpdGlvbihwb2ludGVyLGNlbGwpewoJCQkJdmFyIHNlbGZIID0gdGhhdC5vdXRlckhlaWdodCh0cnVlKSwgc2VsZlcgPSB0aGF0Lm91dGVyV2lkdGgodHJ1ZSk7CgkJCQl2YXIgcG9zdD10aGF0Lm9mZnNldCgpLnRvcCwgcG9zbD10aGF0Lm9mZnNldCgpLmxlZnQ7CgkJCQl2YXIgdGlwQ2VsbD0oY2VsbD09IiIgfHwgY2VsbD09dW5kZWZpbmVkKSA/IHRpcElkIDogY2VsbDsKCQkJICAgIHZhciB0aXBIPXRpcENlbGwub3V0ZXJIZWlnaHQodHJ1ZSksIHRpcFc9dGlwQ2VsbC5vdXRlcldpZHRoKHRydWUpOwoKCQkJCXN3aXRjaCAocG9pbnRlcikgewoJCQkJCWNhc2UgJ3RvcC1sZWZ0JzogdGlwQ2VsbC5jc3Moe3RvcDpwb3N0LXRpcEgtc3BhLGxlZnQ6cG9zbH0pOyBicmVhazsKCQkJCQljYXNlICd0b3AtY2VudGVyJzogdGlwQ2VsbC5jc3Moe3RvcDpwb3N0LXRpcEgtc3BhLGxlZnQ6cG9zbC0odGlwVy8yKSsoc2VsZlcvMil9KTsgYnJlYWs7CgkJCQkJY2FzZSAndG9wLXJpZ2h0JzogdGlwQ2VsbC5jc3Moe3RvcDpwb3N0LXRpcEgtc3BhLGxlZnQ6cG9zbC0odGlwVy1zZWxmVyl9KTsgYnJlYWs7CgkJCQkJY2FzZSAnYm90dG9tLWxlZnQnOiB0aXBDZWxsLmNzcyh7dG9wOnBvc3Qrc2VsZkgrc3BhLGxlZnQ6cG9zbH0pOyBicmVhazsKCQkJCQljYXNlICdib3R0b20tY2VudGVyJzogdGlwQ2VsbC5jc3Moe3RvcDpwb3N0K3NlbGZIK3NwYSxsZWZ0OnBvc2wtKHRpcFcvMikrKHNlbGZXLzIpfSk7IGJyZWFrOwoJCQkJCWNhc2UgJ2JvdHRvbS1yaWdodCc6IHRpcENlbGwuY3NzKHt0b3A6cG9zdCtzZWxmSCtzcGEsbGVmdDpwb3NsLSh0aXBXLXNlbGZXKX0pOyBicmVhazsKCQkJCQljYXNlICdsZWZ0LXRvcCc6IHRpcENlbGwuY3NzKHt0b3A6cG9zdCxsZWZ0OnBvc2wtdGlwVy1zcGF9KTsgYnJlYWs7CgkJCQkJY2FzZSAnbGVmdC1jZW50ZXInOiB0aXBDZWxsLmNzcyh7dG9wOnBvc3QtKHRpcEgvMikrKHNlbGZILzIpLGxlZnQ6cG9zbC10aXBXLXNwYX0pOyBicmVhazsKCQkJCQljYXNlICdyaWdodC10b3AnOiB0aXBDZWxsLmNzcyh7dG9wOnBvc3QsbGVmdDpwb3NsK3NlbGZXK3NwYX0pOyBicmVhazsKCQkJCQljYXNlICdyaWdodC1jZW50ZXInOiB0aXBDZWxsLmNzcyh7dG9wOnBvc3QtKHRpcEgvMikrKHNlbGZILzIpLGxlZnQ6cG9zbCtzZWxmVytzcGF9KTsgYnJlYWs7CgkJCQkJY2FzZSAnZm9sbG93JzogdGhhdC5tb3VzZW1vdmUoZnVuY3Rpb24oZSkgeyB0aXBDZWxsLmNzcyh7dG9wOmUucGFnZVkgKyAzMCxsZWZ0OmUucGFnZVggLSA2fSk7IH0pOyBicmVhazsKCQkJCX07CgkJCX0KCQkJdGlwQm94LmhpZGUoKTsKCQkJc3dpdGNoIChvcHRzLnRyaWdnZXIpewoJCQkJY2FzZSAnc2hvdyc6c2hvd1Bvc2l0aW9uKHBvaW50ZXIpO3RpcEJveC5zaG93KCk7YnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICdjbGljayc6dGhhdC5jbGljayhmdW5jdGlvbigpe3Nob3dQb3NpdGlvbihwb2ludGVyKTt0aXBCb3guc2hvdygpO30pO2JyZWFrOwoJCQkJY2FzZSAnaG92ZXInOnRoYXQuaG92ZXIoZnVuY3Rpb24oKXtzaG93UG9zaXRpb24ocG9pbnRlcik7dGlwQm94LnNob3coKTsgdGlwQm94Lm9uKCJtb3VzZW92ZXIiLGZ1bmN0aW9uKCl7alF1ZXJ5KHRoaXMpLnNob3coKX0pLm9uKCJtb3VzZW91dCIsZnVuY3Rpb24oKXtqUXVlcnkodGhpcykuaGlkZSgpfSl9LGZ1bmN0aW9uKCl7dGlwQm94LmhpZGUoKTt9KTticmVhazsKCQkJCWNhc2UgJ2ZvY3VzJzp0aGF0LmZvY3VzKGZ1bmN0aW9uKCl7c2hvd1Bvc2l0aW9uKHBvaW50ZXIpO3RpcEJveC5zaG93KCk7fSk7ICB0aGF0LmJsdXIoZnVuY3Rpb24oKXt0aXBCb3guaGlkZSgpO30pO2JyZWFrOwoJCQkJY2FzZSAnbW91c2UnOnRoYXQuaG92ZXIoZnVuY3Rpb24oKXtzaG93UG9zaXRpb24ocG9pbnRlcik7dGlwQm94LnNob3coKTt9LGZ1bmN0aW9uKCl7dGlwQm94LmhpZGUoKTt9KTticmVhazsKCQkJfTsKCQkJc2V0VGltZW91dChmdW5jdGlvbigpe29wdHMuc3VjY2VzcyAmJiBvcHRzLnN1Y2Nlc3MoKTt9LCAxKTsKCQl9KTsKCX0KfSkoalF1ZXJ5KTsKCihmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgbCgiQ1NETkdyZWVuZXIgViIgKyB2ZXJzaW9uKTsKICAgIGlmIChpc0ZpcmVmb3goKSkgewogICAgICAgIGNvbnNvbGUubG9nKCLmgqjmraPlnKjkvb/nlKjngavni5DmtY/op4jlmajvvIzlsIbkvb/nlKjlhbzlrrnmqKHlvI/ov5DooYwgQ1NETkdyZWVuZXLjgIIiKTsKICAgIH0KICAgIHByb2dyZXNzb3IuaW5pdCgpOwoKICAgIC8vIOe7v+WMluiuvuWumuaMiemSrueCueWHu+S6i+S7tgogICAgbGV0IGpzcyA9ICIiOwogICAganNzICs9ICI8c2NyaXB0PmZ1bmN0aW9uIHNob3dDb25maWcoKSB7IjsKICAgIGpzcyArPSAiJCh3aW5kb3cpLnNjcm9sbFRvcCgwKTsiOwogICAganNzICs9ICIkKCcud2hpdGVfY29udGVudCcpLmZhZGVJbig1MDApOyI7CiAgICBqc3MgKz0gIiQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2hpZGRlbicpOyI7CiAgICBqc3MgKz0gIiQoJ2JvZHknKS5jc3MoJ2ZpbHRlcicsJ2JsdXIoM3B4KScpOyI7CiAgICBqc3MgKz0gIiQoJ2JvZHknKS5jc3MoJ3BvaW50ZXItZXZlbnRzJywnbm9uZScpIjsKICAgIGpzcyArPSAifTwvc2NyaXB0PiI7CiAgICAkKCJib2R5IikuYXBwZW5kKGpzcyk7CgogICAgLy8g5L+d5a2Y5oyJ6ZKu54K55Ye75LqL5Lu2CiAgICBsZXQgc2F2ZUpzcyA9ICIiOwogICAgc2F2ZUpzcyArPSAiPHNjcmlwdD5mdW5jdGlvbiBzYXZlQW5kUmVsb2FkKCkgeyI7CiAgICBzYXZlSnNzICs9ICIkKCcjY29uZmlnQ29udGVudCcpLmZhZGVPdXQoMjAwKTsiOwogICAgc2F2ZUpzcyArPSAic2V0VGltZW91dChmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9LDIwMCkiOwogICAgc2F2ZUpzcyArPSAifTwvc2NyaXB0PiI7CiAgICAkKCJib2R5IikuYXBwZW5kKHNhdmVKc3MpOwoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGJsb2NrVVJMID0gY3VycmVudFVSTC5zcGxpdCgiLyIpLmxlbmd0aDsKICAgICAgICB2YXIgbWFpbiA9IC8od3d3XC5jc2RuXC5uZXRcLykkLzsKICAgICAgICB2YXIgbWFpbk5hdiA9IC9uYXYvOwogICAgICAgIHZhciBhcnRpY2xlID0gL2FydGljbGUvOwogICAgICAgIHZhciBiYnMgPSAvYmJzXC5jc2RuXC5uZXQvOwogICAgICAgIHZhciBibG9nID0gL2Jsb2dcLmNzZG5cLm5ldC87CiAgICAgICAgdmFyIGJsb2cyID0gL1wvYXJ0aWNsZVwvbGlzdFwvLzsKICAgICAgICB2YXIgZG93bmxvYWQgPSAvZG93bmxvYWRcLmNzZG5cLm5ldC87CiAgICAgICAgdmFyIGxvZ2luID0gL3Bhc3Nwb3J0XC5jc2RuXC5uZXQvOwogICAgICAgIHZhciB6b25lID0gL21lXC5jc2RuXC5uZXQvOwogICAgICAgIHZhciBvdGhlciA9IC8od3d3XC5jc2RuXC5uZXRcLykvOwogICAgICAgIHZhciBtcCA9IC9tcFwuY3NkblwubmV0LzsKICAgICAgICB2YXIgYXJ0aWNsZV9tb250aCA9IC9hcnRpY2xlXC9tb250aC87CgogICAgICAgIC8vIOaVsOe7hOWIneWni+WMlgogICAgICAgIGxpc3QgPSBbXTsKICAgICAgICAvLyDlpLTpg6jliIYKICAgICAgICAvLyBBUFAKICAgICAgICAvLyBwdXQoIi5hcHAtYXBwIik7CiAgICAgICAgLy8gVklQCiAgICAgICAgcHV0KCIudmlwLWNhaXNlIik7CiAgICAgICAgLy8g6K6w5b2V5L2g55qE5oiQ6ZW/5Y6G56iL77yI6K6w5Liq5q+b77yJCiAgICAgICAgcHV0KCIjd3JpdGVHdWlkZSIpOwogICAgICAgIC8vIOaWsOmAmuefpeWwj+WchueCue+8iOacqueZu+W9leaJjea2iOaOie+8iQogICAgICAgIGlmICgkKCIudXNlcmluZm8gYSIpLnRleHQoKSA9PT0gJ+eZu+W9lS/ms6jlhownKSB7CiAgICAgICAgICAgIHB1dCgiI21zZy1jaXJjbGUiKTsKICAgICAgICB9CiAgICAgICAgLy8g6aG26YOo6LC35q2M5bm/5ZGKCiAgICAgICAgcHV0KCIuYWRzYnlnb29nbGUiKTsKICAgICAgICAvLyDmgqzmta7lnKjpobbmoI/mjInpkq7kuIrlh7rnjrDnmoTkuoznu7TnoIEKICAgICAgICBwdXQoIi5hcHBDb250cm9sIik7CiAgICAgICAgLy8g6aG26YOo5bm/5ZGKCiAgICAgICAgcHV0KCIuYWR2ZXJ0LWJnIik7CgogICAgICAgIGlmIChtYWluLnRlc3QoY3VycmVudFVSTCkgfHwgbWFpbk5hdi50ZXN0KGN1cnJlbnRVUkwpKSB7CiAgICAgICAgICAgIGwoIuato+WcqOS8mOWMluS4u+mhteS9k+mqjC4uLiIpOwogICAgICAgICAgICAvLyDluLjop4QKICAgICAgICAgICAgLy8g5aS06YOo5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLmJhbm5lci1hZC1ib3giKTsKICAgICAgICAgICAgLy8g5bWM5YWl5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiI2twX2JveF8yMTEiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLnNsaWRlLW91dGVyIik7CiAgICAgICAgICAgIC8vIOWPs+S+p+ivpuaDhQogICAgICAgICAgICBwdXQoIi5wZXJzaW9uX2FydGljbGUiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n5o6o6I2QCiAgICAgICAgICAgICQoIi5mZWVkX2NvbXBhbnkiKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5bm/5ZGK6L2u5pKtCiAgICAgICAgICAgIHB1dCgiLmVsLWNhcm91c2VsX19jb250YWluZXIiKTsKICAgICAgICAgICAgLy8g6aG26YOo5qiq5bmFCiAgICAgICAgICAgIHB1dCgiLnRvb2xiYXItYWR2ZXJ0Iik7CiAgICAgICAgICAgIC8vIOmhtuagj1ZJUOmAiemhuQogICAgICAgICAgICAkKCcudG9vbGJhci1zdWJNZW51LWJveCcpLmZpbmQoIltocmVmPSdodHRwczovL21hbGwuY3Nkbi5uZXQvdmlwJ10iKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8gQ1NETuW3peWFt+W5v+WRigogICAgICAgICAgICBwdXQoIiNmbG9vci1hZF82NCIpOwogICAgICAgICAgICBjbGVhbigxMCk7CiAgICAgICAgICAgIC8vIGNvbW1vbig1LCAxMCk7CiAgICAgICAgICAgIC8vIOWNmuWuouWPiuS4u+mhteS8mOWMlgogICAgICAgICAgICBjb21tb24oOSwgMTApOwogICAgICAgICAgICBsb29wKDMpOwogICAgICAgICAgICBsb29wKDEpOwogICAgICAgIH0gZWxzZSBpZiAoKGJsb2cudGVzdChjdXJyZW50VVJMKSAmJiBibG9ja1VSTCA9PT0gNCkgfHwgYmxvZzIudGVzdChjdXJyZW50VVJMKSkgewogICAgICAgICAgICBsKCLmraPlnKjkvJjljJbkuKrkurrljZrlrqLkuLvpobXkvZPpqowuLi4iKTsKICAgICAgICAgICAgLy8g5bi46KeECiAgICAgICAgICAgIC8vIOWktOmDqOW5v+WRigogICAgICAgICAgICBwdXQoIi5iYW5uZXItYWQtYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+W5v+WRigogICAgICAgICAgICBwdXQoIi5zbGlkZS1vdXRlciIpOwogICAgICAgICAgICAvLyDlj7Pkvqfor6bmg4UKICAgICAgICAgICAgcHV0KCIucGVyc2lvbl9hcnRpY2xlIik7CiAgICAgICAgICAgIC8vIOW3puS+p+W5v+WRigogICAgICAgICAgICBwdXQoIi5tYjgiKTsKICAgICAgICAgICAgcHV0KCIja3BfYm94XzUwMyIpOwogICAgICAgICAgICBwdXQoIiNrcF9ib3hfMjE0Iik7CiAgICAgICAgICAgIGNsZWFuKDEwKTsKICAgICAgICAgICAgLy8gY29tbW9uKDUsIDEwKTsKICAgICAgICAgICAgbG9vcCgzKTsKICAgICAgICAgICAgbG9vcCgxKTsKICAgICAgICB9IGVsc2UgaWYgKGFydGljbGUudGVzdChjdXJyZW50VVJMKSAmJiAhbXAudGVzdChjdXJyZW50VVJMKSAmJiAhYXJ0aWNsZV9tb250aC50ZXN0KGN1cnJlbnRVUkwpKSB7CiAgICAgICAgICAgIGwoIuato+WcqOS8mOWMlumYheivu+S9k+mqjC4uLiIpOwogICAgICAgICAgICAvLyDnu7/ljJborr7lrpoKICAgICAgICAgICAgaWYgKGlzRmlyZWZveCgpKSB7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoIi50b29sYmFyLWNvbnRhaW5lci1taWRkbGUiKS5wcmVwZW5kKCI8ZGl2IGlkPSdncmVlbmVyUHJvZ3Jlc3MnIHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0Jz48L2Rpdj4iKTsKICAgICAgICAgICAgICAgICAgICBsZXQgaHRtbE9mMCA9ICc8ZGl2IGNsYXNzPSJ0b29sYmFyLWJ0biBjc2RuLXRvb2xiYXItZmwiPjxhIGlkPSJncmVlbmVyU2V0dGluZ3MiIHRpdGxlPSLngrnlh7vmiZPlvIAgQ1NETkdyZWVuZXIg57u/5YyW6K6+5a6aIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIG9uY2xpY2s9InNob3dDb25maWcoKTsiPicgKyBzZXR0aW5nc19zdmcgKyAnPC9hPjwvZGl2Pic7CiAgICAgICAgICAgICAgICAgICAgJCgiLnRvb2xiYXItYnRucyIpLnByZXBlbmQoaHRtbE9mMCk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRmlyZWZveCgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaPkOekugogICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGlwc0Nvb2tpZSA9IGNvbmZpZy5nZXQoInNob3dUaXAiLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpcHNDb29raWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dUaXBzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLnNldCgic2hvd1RpcCIsIGZhbHNlKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCAzMDAwKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoIi50b29sYmFyLWNvbnRhaW5lci1taWRkbGUiKS5wcmVwZW5kKCI8ZGl2IGlkPSdncmVlbmVyUHJvZ3Jlc3MnIHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0Jz48L2Rpdj4iKTsKICAgICAgICAgICAgICAgIGxldCBodG1sT2YwID0gJzxkaXYgY2xhc3M9InRvb2xiYXItYnRuIGNzZG4tdG9vbGJhci1mbCI+PGEgaWQ9ImdyZWVuZXJTZXR0aW5ncyIgdGl0bGU9IueCueWHu+aJk+W8gCBDU0ROR3JlZW5lciDnu7/ljJborr7lrpoiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgb25jbGljaz0ic2hvd0NvbmZpZygpOyI+JyArIHNldHRpbmdzX3N2ZyArICc8L2E+PC9kaXY+JzsKICAgICAgICAgICAgICAgICQoIi50b29sYmFyLWJ0bnMiKS5wcmVwZW5kKGh0bWxPZjApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICAvLyDlj7Pkvqflub/lkYrvvIzmlL7liLDnrKzkuIDkuKrmuIXpmaQKICAgICAgICAgICAgLy8gcHV0KCIucmVjb21tZW5kLXJpZ2h0Iik7CiAgICAgICAgICAgIHB1dCgiI2FkZEFkQm94Iik7CiAgICAgICAgICAgIC8vIHB1dCgiLmFzaWRlLWJveC5raW5kX3BlcnNvbi5kLWZsZXguZmxleC1jb2x1bW4iKTsKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLXRvcC1hZGJveCIpOwogICAgICAgICAgICAvLyBwdXQoIi5yZWNvbW1lbmQtbGlzdC1ib3guZC1mbGV4LmZsZXgtY29sdW1uLmFzaWRlLWJveCIpOwogICAgICAgICAgICAvLyDlt6bkvqflub/lkYoKICAgICAgICAgICAgLy8gcHV0KCIjY29udGFpbmVyIik7CiAgICAgICAgICAgIC8vIOW/q+adpeWGmeWNmuWuouWQpwogICAgICAgICAgICBwdXQoIi5ibG9nX3RpcF9ib3giKTsKICAgICAgICAgICAgLy8g5o6o6I2Q5YWz5rOo55So5oi3CiAgICAgICAgICAgIHB1dCgiLmJsb2ctZXhwZXJ0LXJlY29tbWVuZC1ib3giKTsKICAgICAgICAgICAgLy8g5Y+z5LiL6KeSVklQCiAgICAgICAgICAgIHB1dCgiLm1lYXUtZ290b3AtYm94Iik7CiAgICAgICAgICAgIC8vIOW5v+WRigogICAgICAgICAgICBwdXQoIi5tZWRpYXZfYWQiKTsKICAgICAgICAgICAgcHV0KCIucHVsbGxvZy1ib3giKTsKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLWFkLWJveCIpOwogICAgICAgICAgICBwdXQoIi5ib3gtc2hhZG93Iik7CiAgICAgICAgICAgIHB1dCgiLnR5cGVfaG90X3dvcmQiKTsKICAgICAgICAgICAgcHV0KCIuZm91cnRoX2NvbHVtbiIpOwogICAgICAgICAgICAvLyDpq5jliIbovqjnjofml7blj7Pkvqfmlofnq6DmjqjojZAKICAgICAgICAgICAgLy8gcHV0KCIucmlnaHQtaXRlbSIpOwogICAgICAgICAgICAvLyDlub/lkYoKICAgICAgICAgICAgcHV0KCIjYXNpZGVGb290ZXIiKTsKICAgICAgICAgICAgcHV0KCIjYWQtZGl2Iik7CiAgICAgICAgICAgIHB1dCgiIzQ3OSIpOwogICAgICAgICAgICBwdXQoIiM0ODAiKTsKICAgICAgICAgICAgLy8g5omT6LWPCiAgICAgICAgICAgIHB1dCgiLnBvc3RUaW1lIik7CiAgICAgICAgICAgIC8vIOivvueoi+aOqOiNkAogICAgICAgICAgICBwdXQoIi50MCIpOwogICAgICAgICAgICAvLyDliIbkuqvmtbfmiqUKICAgICAgICAgICAgcHV0KCIuc2hhcmVTdWdnZXN0Iik7CiAgICAgICAgICAgIC8vIOW6lemDqOS4u+mimAogICAgICAgICAgICBwdXQoIi50ZW1wbGF0ZS1ib3giKTsKICAgICAgICAgICAgLy8g6K+E6K665Yy65bm/5ZGKCiAgICAgICAgICAgIHB1dCgiZGl2I2RtcF9hZF81OCIpOwogICAgICAgICAgICAvLyDmiZPotY8KICAgICAgICAgICAgcHV0KCIucmV3YXJkLXVzZXItYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+aJk+i1j+aMiemSrgogICAgICAgICAgICBwdXQoIi50by1yZXdhcmQiKTsKICAgICAgICAgICAgLy8g5o6o6I2Q5YaF5a655bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLnJlY29tbWVuZC1yZWNvbW1lbmQtYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+W5v+WRigogICAgICAgICAgICBwdXQoIi5pbmRleFN1cGVyaXNlIik7CiAgICAgICAgICAgIC8vIOaKouaymeWPkeinkuaghwogICAgICAgICAgICBwdXQoIi5jb21tZW50LXNvZmEtZmxhZyIpOwogICAgICAgICAgICAvLyDpobVqaW8KICAgICAgICAgICAgcHV0KCIuYm90dG9tLXB1Yi1mb290ZXIiKTsKICAgICAgICAgICAgLy8g55m75b2V5p+l55yL5pyq6K+75raI5oGvCiAgICAgICAgICAgIHB1dCgiLnRvb2xiYXItbm90aWNlLWJ1YmJsZSIpOwogICAgICAgICAgICAvLyDlj7Pkvqflub/lkYoKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLXRvcC1hZGJveCIpOwogICAgICAgICAgICAvLyDlj7Pkvqflm5vkuKrlub/lkYoKICAgICAgICAgICAgcHV0KCIucHJvZ3JhbW1lcjFCb3giKTsKICAgICAgICAgICAgcHV0KCIucHJvZ3JhbW1lcjJCb3giKTsKICAgICAgICAgICAgcHV0KCIucHJvZ3JhbW1lcjNCb3giKTsKICAgICAgICAgICAgcHV0KCIucHJvZ3JhbW1lcjRCb3giKTsKICAgICAgICAgICAgLy8g54K56LWe5rCU5rOhCiAgICAgICAgICAgIHB1dCgiLnRyaXBsZXQtcHJvbXB0Iik7CiAgICAgICAgICAgIC8vIOmhtumDqOaoquW5hQogICAgICAgICAgICBwdXQoIi50b29sYmFyLWFkdmVydCIpOwogICAgICAgICAgICAvLyDlupXpg6jkv6Hmga8KICAgICAgICAgICAgcHV0KCIuYmxvZy1mb290ZXItYm90dG9tIik7CiAgICAgICAgICAgIC8vIOWPs+S+p+agj+W5v+WRigogICAgICAgICAgICBwdXQoIiM2NTI3Iik7CiAgICAgICAgICAgIHB1dCgiI3JlY29tbWVuZEFkQm94Iik7CiAgICAgICAgICAgIC8vIOaOqOiNkOWGheWuuVRpdGxlCiAgICAgICAgICAgIHB1dCgiLnJlY29tbWVuZC10aXQtbW9kIik7CiAgICAgICAgICAgIC8vIOe6ouWMheaPkOmGkgogICAgICAgICAgICBwdXQoIi5jc2RuLXJlZHBhY2stbG90dGVyeS1idG4tYm94Iik7CiAgICAgICAgICAgIC8vIOWtpueUn+iupOivgQogICAgICAgICAgICBwdXQoIi5jc2RuLWhpZ2hzY2hvb2wtd2luZG93Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+aCrOa1ruagj+mZpOe9rumhtuS7peWklueahOaMiemSrgogICAgICAgICAgICBwdXQoIi5vcHRpb24tYm94W2RhdGEtdHlwZT0nZ3VpZGUnXSwub3B0aW9uLWJveFtkYXRhLXR5cGU9J2NzJ10sLmNzZG4tY29tbW9uLWxvZ28tYWR2ZXJ0Iik7CiAgICAgICAgICAgIGNsZWFuKDEwKTsKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgLy8g5bGV5byA6K+E6K6655qE5omA5pyJ5Zue5aSNCiAgICAgICAgICAgICAgICQoJy5idG4tcmVhZC1yZXBseScpLmNsaWNrKCk7CiAgICAgICAgICAgIH0sIDE1MDApOwogICAgICAgICAgICAvLyDkuLvliqjliqDlhaXlj7PkvqfmoI8KICAgICAgICAgICAgaWYgKCQoIi5yZWNvbW1lbmQtcmlnaHQiKS5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgICAgICQoIiNtYWluQm94IikuYWZ0ZXIoJzxkaXYgY2xhc3M9InJlY29tbWVuZC1yaWdodCAgYWxpZ24taXRlbXMtc3RyZXRjaCBjbGVhcmZpeCIgaWQ9InJpZ2h0QXNpZGUiPjxhc2lkZSBjbGFzcz0icmVjb21tZW5kLXJpZ2h0X2FzaWRlIj48ZGl2IGlkPSJyZWNvbW1lbmQtcmlnaHQiIHN0eWxlPSJoZWlnaHQ6IDEwMCU7IHBvc2l0aW9uOiBmaXhlZDsgdG9wOiA1MnB4OyBvdmVyZmxvdzogc2Nyb2xsOyI+PC9kaXY+PC9hc2lkZT48L2Rpdj4nKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyDkuIrmoI/mjInpkq7liKDpmaQKICAgICAgICAgICAgJCgiLnRvb2xiYXItbWVudXMgPiBsaSA+IGE6Y29udGFpbnMoJ+S4k+agj+ivvueoiycpIikucGFyZW50KCkucmVtb3ZlKCk7CiAgICAgICAgICAgICQoIi50b29sYmFyLW1lbnVzID4gbGkgPiBhOmNvbnRhaW5zKCfmj5Lku7YnKSIpLnBhcmVudCgpLnJlbW92ZSgpOwogICAgICAgICAgICAkKCIudG9vbGJhci1tZW51cyA+IGxpID4gYTpjb250YWlucygn6K6k6K+BJykiKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5L+u5aSN5peg5rOV6YCJ5oup5aSN5Yi2CiAgICAgICAgICAgICQoImNvZGUiKS5jc3MoInVzZXItc2VsZWN0IiwiYXV0byIpOwogICAgICAgICAgICAkKCIjY29udGVudF92aWV3cyIpLmNzcygidXNlci1zZWxlY3QiLCJhdXRvIik7CiAgICAgICAgICAgICQoInByZSIpLmNzcygidXNlci1zZWxlY3QiLCJhdXRvIik7NwogICAgICAgICAgICAvLyDlm77niYfmt7fmloflrZfml7bvvIzml6Dms5XlrozmlbTlpI3liLbvvIzlm77niYfkuI3kvJrooqvlpI3liLbkuIvmnaUgaHR0cHM6Ly9naXRodWIuY29tL2FkbGVyZWQvQ1NETkdyZWVuZXIvaXNzdWVzLzg3CiAgICAgICAgICAgIC8vbGV0IGVsID0gJCgibWFpbiAuYmxvZy1jb250ZW50LWJveCIpWzBdOwogICAgICAgICAgICAvL2xldCBlbENsb25lID0gZWwuY2xvbmVOb2RlKHRydWUpOwogICAgICAgICAgICAvL2VsLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGVsQ2xvbmUsIGVsKTsKICAgICAgICAgICAgLy8g5L+d5a2YY3NkbueahOe9kemhteWGjeasoeaJk+W8gOS8muiHquWKqOi3s+i9rOWIsOmmlumhtSBodHRwczovL2dpdGh1Yi5jb20vYWRsZXJlZC9DU0ROR3JlZW5lci9pc3N1ZXMvOTcKICAgICAgICAgICAgJCgiW29uZXJyb3JdIikucmVtb3ZlKCk7CiAgICAgICAgICAgIC8vIENTRE7ph43lrprlkJHlpJbpk77kuI3og73lnKjmlrDnmoTnqpflj6Pot7PovawgaHR0cHM6Ly9naXRodWIuY29tL2FkbGVyZWQvQ1NETkdyZWVuZXIvaXNzdWVzLzgwCiAgICAgICAgICAgICQoIiNhcnRpY2xlX2NvbnRlbnQgYVtocmVmXSIpLmF0dHIoInRhcmdldCIsICJfYmxhbmsiKTsKICAgICAgICAgICAgLy8g5pCc57Si5qGG5LyY5YyWCiAgICAgICAgICAgIC8vJCgiI3Rvb2xiYXItc2VhcmNoLWlucHV0IikuY3NzKCJ3aWR0aCIsICJjYWxjKDEwMCUgLSA0MDBweCkiKTsKICAgICAgICAgICAgLy8g5Y+W5raI5Luj56CB5oqY5Y+gCiAgICAgICAgICAgICQoIi5sb29rLW1vcmUtcHJlQ29kZSIpLmNsaWNrKCk7CiAgICAgICAgICAgIC8vIOivoumXruaOqOiNkOaYr+WQpuacieaEj+S5ieeahOmXruWNt+iwg+afpQogICAgICAgICAgICAkKCIjcmVjb21tZW5kTnBzIikucmVtb3ZlKCk7CiAgICAgICAgICAgIC8vIOe7v+WMluiuvue9rgogICAgICAgICAgICBjb21tb24oNiwgMSk7CiAgICAgICAgICAgIC8vIOWxj+W5lemAgumFjQogICAgICAgICAgICBjb21tb24oNCwgMSk7CiAgICAgICAgICAgIC8vIOivhOiuugogICAgICAgICAgICBjb21tb24oMSwgMzApOwogICAgICAgICAgICAvLyDlhbblroMKICAgICAgICAgICAgY29tbW9uKDIsIDIwKTsKICAgICAgICAgICAgLy8g6aG26YOo5pi+56S65L2c6ICF5L+h5oGvCiAgICAgICAgICAgIGNvbW1vbig4LCAxKTsKICAgICAgICAgICAgLy8g5Y2a5a6i5Y+K5Li76aG15LyY5YyWCiAgICAgICAgICAgIGNvbW1vbig5LCAxMCk7CiAgICAgICAgICAgIC8vIOW+queOr+e6v+eoi+W8gOWniwogICAgICAgICAgICBsb29wKDIpOwogICAgICAgICAgICBsb29wKDMpOwogICAgICAgIH0gZWxzZSBpZiAoYmJzLnRlc3QoY3VycmVudFVSTCkpIHsKICAgICAgICAgICAgbCgi5q2j5Zyo5LyY5YyW6K665Z2b5L2T6aqMLi4uIik7CiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICAvLyDor4TorrrltYzlhaXlsI/lub/lkYoKICAgICAgICAgICAgcHV0KCIucG9zdF9yZWNvbW1lbmQiKTsKICAgICAgICAgICAgLy8g5bqV6YOo5o6o6I2QCiAgICAgICAgICAgIHB1dCgiI3Bvc3RfZmVlZF93cmFwIik7CiAgICAgICAgICAgIC8vIOW6lemDqOebuOWFs+aWh+eroOmHjOmdoueahOW5v+WRigogICAgICAgICAgICBwdXQoIi5iYnNfZmVlZF9hZF9ib3giKTsKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLWFkLWJveCIpOwogICAgICAgICAgICAvLyDlupXpg6jnm7jlhbPmloflrZfph4zpnaLnmoTng63or43mj5DnpLoKICAgICAgICAgICAgcHV0KCIudHlwZV9ob3Rfd29yZCIpOwogICAgICAgICAgICAvLyDlupXpg6jok53oibJmbGV45bGe5oCn55qE5bm/5ZGK5qCPK+eZu+W9leazqOWGjOahhgogICAgICAgICAgICBwdXQoIi5wdWxsbG9nLWJveCIpOwogICAgICAgICAgICAvLyDnjJzkvaDllpzmrKIKICAgICAgICAgICAgcHV0KCIucGVyc29uYWxpemVkLXJlY29tbWVuZC1ib3giKTsKICAgICAgICAgICAgLy8g5Y+R5biW5YeP5Y2K5o+Q56S6CiAgICAgICAgICAgIHB1dCgiLnRvdGFzdC1ib3giKTsKICAgICAgICAgICAgLy8g6aG26YOo5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLnJlY29tbWVuZC1yaWdodCIpOwogICAgICAgICAgICAvLyDpobbpg6jlub/lkYoKICAgICAgICAgICAgcHV0KCIuYWRfdG9wIik7CiAgICAgICAgICAgIC8vIOWPs+S+p+W5v+WRigogICAgICAgICAgICBwdXQoIi5hZF8xIik7CiAgICAgICAgICAgIGNsZWFuKDEwKTsKICAgICAgICAgICAgLy8g5bGV5byACiAgICAgICAgICAgIGNvbW1vbigzLCA1MCk7CiAgICAgICAgICAgIC8vIGNvbW1vbig1LCAxMCk7CiAgICAgICAgICAgIGxvb3AoMyk7CiAgICAgICAgfSBlbHNlIGlmIChkb3dubG9hZC50ZXN0KGN1cnJlbnRVUkwpKSB7CiAgICAgICAgICAgIGwoIuato+WcqOS8mOWMluS4i+i9vemhteS9k+mqjC4uLiIpOwogICAgICAgICAgICAvLyDluLjop4QKICAgICAgICAgICAgcHV0KCIuZml4ZWRfZGwiKTsKICAgICAgICAgICAgcHV0KCJpbmRleFN1cGVyaXNlIik7CiAgICAgICAgICAgIC8vIOWPs+S+p+aOqOiNkAogICAgICAgICAgICBwdXQoIi5jb250ZW50X3JlY29tIik7CiAgICAgICAgICAgIGNsZWFuKDEwKTsKICAgICAgICAgICAgLy8gY29tbW9uKDUsIDEwKTsKICAgICAgICAgICAgbG9vcCgzKTsKICAgICAgICB9IGVsc2UgaWYgKGxvZ2luLnRlc3QoY3VycmVudFVSTCkpIHsKICAgICAgICAgICAgbCgi5q2j5Zyo5LyY5YyW55m75b2V6aG15L2T6aqMLi4uIik7CiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICAvLyDnmbvlvZXnlYzpnaLlpKflm77lub/lkYoKICAgICAgICAgICAgcHV0KCIubWFpbi10dSIpOwogICAgICAgICAgICBjbGVhbigxMCk7CiAgICAgICAgICAgIC8vIGNvbW1vbig1LCAxMCk7CiAgICAgICAgICAgIGxvb3AoMyk7CiAgICAgICAgfSBlbHNlIGlmICh6b25lLnRlc3QoY3VycmVudFVSTCkpIHsKICAgICAgICAgICAgbCgi5q2j5Zyo5LyY5YyW5Liq5Lq656m66Ze05L2T6aqMLi4uIik7CiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICBjbGVhbigxMCk7CiAgICAgICAgICAgIGNvbW1vbig3LCAxMCk7CiAgICAgICAgICAgIC8vIGNvbW1vbig1LCAxMCk7CiAgICAgICAgICAgIGxvb3AoMyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbCgi5ZOm6LGB77yM5aW95YGP6Zeo55qE6aG16Z2i77yM5oiR5p2l6K+V552A5LyY5YyW5LiA5LiL5ZOmLi4uIik7CiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICAvLyDlsZXlvIDlhajmlocKICAgICAgICAgICAgJCgnLnJlYWRtb3JlX2J0bicpLmNsaWNrKCk7CiAgICAgICAgICAgIC8vICoqKiBpbmRleCAqKioKICAgICAgICAgICAgLy8g5aS06YOo5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLmJhbm5lci1hZC1ib3giKTsKICAgICAgICAgICAgLy8g5bWM5YWl5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiI2twX2JveF8yMTEiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLnNsaWRlLW91dGVyIik7CiAgICAgICAgICAgIC8vIOWPs+S+p+ivpuaDhQogICAgICAgICAgICBwdXQoIi5wZXJzaW9uX2FydGljbGUiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n5o6o6I2QCiAgICAgICAgICAgICQoIi5mZWVkX2NvbXBhbnkiKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8gKioqIGFydGljbGUgKioqCiAgICAgICAgICAgIC8vIOW4uOinhAogICAgICAgICAgICAvLyDlj7Pkvqflub/lkYrvvIzmlL7liLDnrKzkuIDkuKrmuIXpmaQKICAgICAgICAgICAgcHV0KCIjYWRkQWRCb3giKTsKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLXRvcC1hZGJveCIpOwogICAgICAgICAgICAvLyDlv6vmnaXlhpnljZrlrqLlkKcKICAgICAgICAgICAgcHV0KCIuYmxvZ190aXBfYm94Iik7CiAgICAgICAgICAgIC8vIOaOqOiNkOWFs+azqOeUqOaItwogICAgICAgICAgICBwdXQoIi5ibG9nLWV4cGVydC1yZWNvbW1lbmQtYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S4i+inklZJUAogICAgICAgICAgICBwdXQoIi5tZWF1LWdvdG9wLWJveCIpOwogICAgICAgICAgICAvLyDlub/lkYoKICAgICAgICAgICAgcHV0KCIubWVkaWF2X2FkIik7CiAgICAgICAgICAgIHB1dCgiLnB1bGxsb2ctYm94Iik7CiAgICAgICAgICAgIHB1dCgiLnJlY29tbWVuZC1hZC1ib3giKTsKICAgICAgICAgICAgLy9wdXQoIi5ib3gtc2hhZG93Iik7IOafkOS6m+mhtemdouW8guW4uO+8jOS+i+WmgmNsb3VkLmNzZG4ubmV0CiAgICAgICAgICAgIHB1dCgiLnR5cGVfaG90X3dvcmQiKTsKICAgICAgICAgICAgcHV0KCIuZm91cnRoX2NvbHVtbiIpOwogICAgICAgICAgICAvLyBjbG91ZC5jc2RuLm5ldCDlpLTpg6jlub/lkYoKICAgICAgICAgICAgcHV0KCIja3BfYm94XzExOCIpOwogICAgICAgICAgICAvLyDlub/lkYoKICAgICAgICAgICAgcHV0KCIjYXNpZGVGb290ZXIiKTsKICAgICAgICAgICAgcHV0KCIjYWQtZGl2Iik7CiAgICAgICAgICAgIHB1dCgiIzQ3OSIpOwogICAgICAgICAgICBwdXQoIiM0ODAiKTsKICAgICAgICAgICAgLy8g5omT6LWPCiAgICAgICAgICAgIHB1dCgiLnBvc3RUaW1lIik7CiAgICAgICAgICAgIC8vIOivvueoi+aOqOiNkAogICAgICAgICAgICBwdXQoIi50MCIpOwogICAgICAgICAgICAvLyDliIbkuqvmtbfmiqUKICAgICAgICAgICAgcHV0KCIuc2hhcmVTdWdnZXN0Iik7CiAgICAgICAgICAgIC8vIOW6lemDqOS4u+mimAogICAgICAgICAgICBwdXQoIi50ZW1wbGF0ZS1ib3giKTsKICAgICAgICAgICAgLy8g6K+E6K665Yy65bm/5ZGKCiAgICAgICAgICAgIHB1dCgiZGl2I2RtcF9hZF81OCIpOwogICAgICAgICAgICAvLyDmiZPotY8KICAgICAgICAgICAgcHV0KCIucmV3YXJkLXVzZXItYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+aJk+i1j+aMiemSrgogICAgICAgICAgICBwdXQoIi50by1yZXdhcmQiKTsKICAgICAgICAgICAgLy8g5o6o6I2Q5YaF5a655bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLnJlY29tbWVuZC1yZWNvbW1lbmQtYm94Iik7CiAgICAgICAgICAgIC8vIOWPs+S+p+W5v+WRigogICAgICAgICAgICBwdXQoIi5pbmRleFN1cGVyaXNlIik7CiAgICAgICAgICAgIC8vIOaKouaymeWPkeinkuaghwogICAgICAgICAgICBwdXQoIi5jb21tZW50LXNvZmEtZmxhZyIpOwogICAgICAgICAgICAvLyDpobVqaW8KICAgICAgICAgICAgcHV0KCIuYm90dG9tLXB1Yi1mb290ZXIiKTsKICAgICAgICAgICAgLy8g55m75b2V5p+l55yL5pyq6K+75raI5oGvCiAgICAgICAgICAgIHB1dCgiLnRvb2xiYXItbm90aWNlLWJ1YmJsZSIpOwogICAgICAgICAgICAvLyDlj7Pkvqflub/lkYoKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLXRvcC1hZGJveCIpOwogICAgICAgICAgICAvLyDlrabpmaLlvLnlh7rlub/lkYoKICAgICAgICAgICAgJCgiLmZvdWNlX2Nsb3NlX2J0biIpLmNsaWNrKCk7CiAgICAgICAgICAgIC8vIOWFtuWugwogICAgICAgICAgICAvLyDlpLTpg6jlub/lkYoKICAgICAgICAgICAgcHV0KCIuYmFubmVyLWFkLWJveCIpOwogICAgICAgICAgICAvLyDlj7Pkvqflub/lkYoKICAgICAgICAgICAgcHV0KCIuc2xpZGUtb3V0ZXIiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n6K+m5oOFCiAgICAgICAgICAgIHB1dCgiLnBlcnNpb25fYXJ0aWNsZSIpOwogICAgICAgICAgICAvLyDlt6bkvqflub/lkYoKICAgICAgICAgICAgcHV0KCIja3BfYm94XzUwMyIpOwogICAgICAgICAgICBwdXQoIiNrcF9ib3hfMjE0Iik7CiAgICAgICAgICAgIC8vICoqKiBiYnMgKioqCiAgICAgICAgICAgIC8vIOivhOiuuuW1jOWFpeWwj+W5v+WRigogICAgICAgICAgICBwdXQoIi5wb3N0X3JlY29tbWVuZCIpOwogICAgICAgICAgICAvLyDlupXpg6jmjqjojZAKICAgICAgICAgICAgcHV0KCIjcG9zdF9mZWVkX3dyYXAiKTsKICAgICAgICAgICAgLy8g5bqV6YOo55u45YWz5paH56ug6YeM6Z2i55qE5bm/5ZGKCiAgICAgICAgICAgIHB1dCgiLmJic19mZWVkX2FkX2JveCIpOwogICAgICAgICAgICBwdXQoIi5yZWNvbW1lbmQtYWQtYm94Iik7CiAgICAgICAgICAgIC8vIOW6lemDqOebuOWFs+aWh+Wtl+mHjOmdoueahOeDreivjeaPkOekugogICAgICAgICAgICBwdXQoIi50eXBlX2hvdF93b3JkIik7CiAgICAgICAgICAgIC8vIOW6lemDqOiTneiJsmZsZXjlsZ7mgKfnmoTlub/lkYrmoI8r55m75b2V5rOo5YaM5qGGCiAgICAgICAgICAgIHB1dCgiLnB1bGxsb2ctYm94Iik7CiAgICAgICAgICAgIC8vIOeMnOS9oOWWnOasogogICAgICAgICAgICBwdXQoIi5wZXJzb25hbGl6ZWQtcmVjb21tZW5kLWJveCIpOwogICAgICAgICAgICAvLyDlj5HluJblh4/ljYrmj5DnpLoKICAgICAgICAgICAgcHV0KCIudG90YXN0LWJveCIpOwogICAgICAgICAgICAvLyDpobbpg6jlub/lkYoKICAgICAgICAgICAgcHV0KCIucmVjb21tZW5kLXJpZ2h0Iik7CiAgICAgICAgICAgIC8vIOmhtumDqOW5v+WRigogICAgICAgICAgICBwdXQoIi5hZF90b3AiKTsKICAgICAgICAgICAgLy8gKioqIGRvd25sb2FkICoqKgogICAgICAgICAgICBwdXQoIi5maXhlZF9kbCIpOwogICAgICAgICAgICBwdXQoImluZGV4U3VwZXJpc2UiKTsKICAgICAgICAgICAgLy8g5Y+z5L6n5o6o6I2QCiAgICAgICAgICAgIHB1dCgiLmNvbnRlbnRfcmVjb20iKTsKICAgICAgICAgICAgY2xlYW4oMTApOwogICAgICAgIH0KICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBwcm9ncmVzc29yLmRvbmUoKTsKICAgICAgICB9LCAwKTsKICAgICAgICBzdG9wVGltZU1pbGxpID0gRGF0ZS5ub3coKTsKICAgICAgICBsKCLkvJjljJblrozmr5UhIOiAl+aXtiAiICsgKHN0b3BUaW1lTWlsbGkgLSBzdGFydFRpbWVNaWxsaSkgKyAibXMiKTsKICAgICAgICAvLyDlu7bov5/ltYzlhaXnlKjmiLfkvb/nlKjohJrmnKzmg4XlhrVKU++8jOS4jeW9seWTjeaAp+iDvQogICAgICAgICQoImhlYWQiKS5hcHBlbmQoJzxzY3JpcHQgY2hhcnNldD0iVVRGLTgiIGlkPSJMQV9DT0xMRUNUIiBzcmM9Ii8vc2RrLjUxLmxhL2pzLXNkay1wcm8ubWluLmpzIj48L3NjcmlwdD4nKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCJoZWFkIikuYXBwZW5kKCc8c2NyaXB0PkxBLmluaXQoe2lkOiAiSlFURGlPVloycFJqR2ExSyIsY2s6ICJKUVREaU9WWjJwUmpHYTFLIn0pPC9zY3JpcHQ+Jyk7CiAgICAgICAgfSwgMjAwMCk7CiAgICB9LCAwKTsKfSkoKTsKCmZ1bmN0aW9uIGwobG9nKSB7CiAgICBjb25zb2xlLmxvZygiW0NTRE5HcmVlbmVyXSAiICsgbG9nKTsKfQoKZnVuY3Rpb24gZShlcnJvcikgewogICAgY29uc29sZS5lcnJvcigiW0NTRE5HcmVlbmVyXSAiICsgZXJyb3IpOwp9CgpmdW5jdGlvbiBjbGVhcigpIHsKICAgIGxpc3QgPSBbXTsKfQoKZnVuY3Rpb24gcHV0KHRhZykgewogICAgbGlzdC5wdXNoKHRhZyk7Cn0KCmZ1bmN0aW9uIGNsZWFuKHRpbWVzKSB7CiAgICB2YXIgbG9vcCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAtLXRpbWVzOwogICAgICAgIGlmICh0aW1lcyA8PSAwKSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwobG9vcCk7CiAgICAgICAgfQogICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbGlzdC5sZW5ndGg7IGsrKykgewogICAgICAgICAgICAkKGxpc3Rba10pLnJlbW92ZSgpOwogICAgICAgIH0KICAgIH0sIDEwMCk7CiAgICBwcm9ncmVzc29yLmluY1Byb2dyZXNzKDEwKTsKfQoKZnVuY3Rpb24gbG9vcChudW0pIHsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAobnVtID09PSAxKSB7CiAgICAgICAgICAgIC8vIOS4u+mhteS4remXtOeahOW5v+WRigogICAgICAgICAgICAkKCIuSl9hZHYiKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5Li76aG15pyJ5paw55qE5YaF5a655qiq5p2hCiAgICAgICAgICAgICQoIi5mZWVkLWZpeC1ib3giKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5Li76aG15bm/5ZGKIGlmcmFtZQogICAgICAgICAgICBpZiAoY3VycmVudFVSTCA9PSAiaHR0cHM6Ly93d3cuY3Nkbi5uZXQvIikgewogICAgICAgICAgICAgICAgJCgiaWZyYW1lIikucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8g5Yig6ZmkIENTRE4g5a6Y5pa55Zyo5Li76aG155qE5paH56ug77yI5aSn5aSa5piv5bm/5ZGK77yJCiAgICAgICAgICAgICQoImxpLmNsZWFyZml4IikuZWFjaChmdW5jdGlvbihpbmRleCwgZWxlKSB7CiAgICAgICAgICAgICAgICB2YXIgYmFubmVkID0gL2NzZG48XC9hPi87CiAgICAgICAgICAgICAgICB2YXIgYU1hcmsgPSAkKGVsZSkuZmluZCgiLm5hbWUiKS5odG1sKCk7CiAgICAgICAgICAgICAgICBpZiAoYmFubmVkLnRlc3QoYU1hcmspKSB7CiAgICAgICAgICAgICAgICAgICAgJChlbGUpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8g5Li76aG15bm/5ZGKCiAgICAgICAgICAgICQoImxpIikuZWFjaChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgbGV0IHNlbGYgPSAkKHRoaXMpOwogICAgICAgICAgICAgICAgbGV0IGRhdGFUeXBlID0gc2VsZi5hdHRyKCdkYXRhLXR5cGUnKTsKICAgICAgICAgICAgICAgIGlmIChkYXRhVHlwZSA9PT0gJ2FkJykgewogICAgICAgICAgICAgICAgICAgIHNlbGYucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAvLyDkuLvpobXlub/lkYoKICAgICAgICAgICAgJCgibGkgPiBkaXYgPiBkaXYgPiBoMiA+IGFbaHJlZio9J2h0dHBzOi8vZWR1LmNzZG4ubmV0J10iKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgJCgibGkgPiBkaXYgPiBkaXYgPiBoMiA+IGFbaHJlZio9J2h0dHBzOi8vbWFya2V0aW5nLmNzZG4ubmV0J10iKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5a6Y5pa56ISa5pys5qiq5bmFCiAgICAgICAgICAgICQoIi50b29sYmFyLWFkdmVydCIpLnJlbW92ZSgpOwogICAgICAgIH0gZWxzZSBpZiAobnVtID09PSAyKSB7CiAgICAgICAgICAgIC8vIOivhOiuuuafpeeci+abtOWkmuWxleW8gOebkeWQrAogICAgICAgICAgICAkKCJkaXYuY29tbWVudC1saXN0LWJveCIpLmNzcygibWF4LWhlaWdodCIsICJub25lIik7CiAgICAgICAgICAgIC8vIOWxj+iUveaCqOeahOe8qeaUvuS4jeaYrzEwMCXnmoTmj5DnpLoKICAgICAgICAgICAgJCgnLmxlZnRQb3AnKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5a6Y5pa56ISa5pys5qiq5bmFCiAgICAgICAgICAgICQoIi50b29sYmFyLWFkdmVydCIpLnJlbW92ZSgpOwogICAgICAgIH0gZWxzZSBpZiAobnVtID09IDMpIHsKICAgICAgICAgICAgLy8g5b6q546v5Yig6Zmk55m75b2V5o+Q56S65qGGCiAgICAgICAgICAgIC8vJCgiLnBhc3Nwb3J0LWxvZ2luLWNvbnRhaW5lciIpLnJlbW92ZSgpOwogICAgICAgICAgICAvLyDnuqLljIXpm6gKICAgICAgICAgICAgJCgiI2NzZG4tcmVkcGFjayIpLnJlbW92ZSgpOwogICAgICAgIH0KICAgIH0sIDUwMCk7Cn0KCmZ1bmN0aW9uIGNvbW1vbihudW0sIHRpbWVzKSB7CiAgICB2YXIgbG9vcCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAtLXRpbWVzOwogICAgICAgIGlmICh0aW1lcyA8PSAwKSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwobG9vcCk7CiAgICAgICAgfQogICAgICAgIGlmIChudW0gPT09IDEpIHsKICAgICAgICAgICAgLy8g5p+l55yL5pu05aSaCiAgICAgICAgICAgICQoIi5idG4tcmVhZG1vcmUiKS5yZW1vdmVDbGFzcygibm8tbG9naW4iKTsKICAgICAgICAgICAgJCgiLmJ0bi1yZWFkbW9yZSIpLmFkZENsYXNzKCJmYW5zLXJlYWQtbW9yZSIpOwogICAgICAgICAgICAkKCIuYnRuLXJlYWRtb3JlIikucmVtb3ZlQXR0cigiaHJlZiIpOwogICAgICAgICAgICAkKCIuYnRuLXJlYWRtb3JlIikucmVtb3ZlQXR0cigidGFyZ2V0Iik7CiAgICAgICAgICAgICQoIi5idG4tcmVhZG1vcmUiKS5yZW1vdmVBdHRyKCJyZWwiKTsKICAgICAgICAgICAgJCgiLmJ0bi1yZWFkbW9yZSIpLmNsaWNrKCk7CiAgICAgICAgICAgIC8vIOW3sueZu+W9leeUqOaIt+WxleW8gOivhOiuugogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJ0bk1vcmVDb21tZW50IikuY2xpY2soKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkge30KICAgICAgICAgICAgLy8g5Yig6Zmk5p+l55yL5pu05aSa5oyJ6ZKuCiAgICAgICAgICAgICQoIiNidG5Nb3JlQ29tbWVudCIpLnBhcmVudCgiZGl2Lm9wdC1ib3giKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8g5bGV5byA5YaF5a65CiAgICAgICAgICAgICQoImRpdi5jb21tZW50LWxpc3QtYm94IikuY3NzKCJtYXgtaGVpZ2h0IiwgIm5vbmUiKTsKICAgICAgICAgICAgLy8g5pS55Zue6IOM5pmv6aKc6ImyCiAgICAgICAgICAgICQoIi5sb2dpbi1tYXJrIikucmVtb3ZlKCk7CiAgICAgICAgICAgIC8vIOWIoOmZpOeZu+W9leahhgogICAgICAgICAgICAkKCIubG9naW4tYm94IikucmVtb3ZlKCk7CiAgICAgICAgfSBlbHNlIGlmIChudW0gPT09IDIpIHsKICAgICAgICAgICAgLy8g5oyh5L2P6K+E6K6655qE4oCc5Ye65aS05o6o6I2Q4oCdCiAgICAgICAgICAgIGlmICgkKCIucmVjb21tZW5kLWJveCIpLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgICAgICQoIi5yZWNvbW1lbmQtYm94IilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8g5Y676Zmk5o6o5bm/5bm/5ZGKCiAgICAgICAgICAgICQoImxpW2RhdGEtdHlwZT0nYWQnXSIpLnJlbW92ZSgpOwogICAgICAgICAgICAvLyDlhY3nmbvlvZXlpI3liLYKICAgICAgICAgICAgJCgiLmhsanMtYnV0dG9uIikucmVtb3ZlQ2xhc3MoInNpZ25pbiIpOwogICAgICAgICAgICAkKCIuaGxqcy1idXR0b24iKS5hZGRDbGFzcygiezJ9Iik7CiAgICAgICAgICAgICQoIi5obGpzLWJ1dHRvbiIpLmF0dHIoImRhdGEtdGl0bGUiLCAi5YWN55m75b2V5aSN5Yi2Iik7CiAgICAgICAgICAgICQoIi5obGpzLWJ1dHRvbiIpLmF0dHIoIm9uY2xpY2siLCAiaGxqcy5jb3B5Q29kZShldmVudCk7c2V0VGltZW91dChmdW5jdGlvbigpeyQoJy5obGpzLWJ1dHRvbicpLmF0dHIoJ2RhdGEtdGl0bGUnLCAn5YWN55m75b2V5aSN5Yi2Jyk7fSwzNTAwKTsiKTsKICAgICAgICAgICAgLy8g5Y676Zmk5Ymq6LS05p2/5Yqr5oyBCiAgICAgICAgICAgICQoImNvZGUiKS5hdHRyKCJvbmNsaWNrIiwgIm1kY3AuY29weUNvZGUoZXZlbnQpIik7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAvLyDlpI3liLbml7bkv53nlZnljp/mlofmoLzlvI/vvIzlj4LogIMgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9lbi9zY3JpcHRzLzM5MDUwMi1jc2RucmVtb3ZlY29weXJpZ2h0L2NvZGUKICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICJhcnRpY2xlVHlwZSIsIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgICAgICAgICAgICB3cml0YWJsZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICB9CiAgICAgICAgICAgIGNzZG4uY29weXJpZ2h0LmluaXQoIiIsICIiLCAiIik7CiAgICAgICAgICAgIC8vIOmhteWktOW5v+WRigogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY29sdW1uLWFkdmVydC1ib3giKVswXS5zdHlsZS5kaXNwbGF5PSJub25lIjsKICAgICAgICAgICAgfSBjYXRjaCAoZSkge30KICAgICAgICAgICAgLy8g6Ieq5Yqo5qOA5rWL5piv5ZCm5pyJ55uu5b2V77yM5aaC5p6c5rKh5pyJ5YiZ5Yig6Zmk5Y+z6L655qCP77yM5paH56ug5bGF5LitCiAgICAgICAgICAgIGlmICgkKCIucmVjb21tZW5kLXJpZ2h0X2FzaWRlIikuaHRtbCgpICYmICQoIi5yZWNvbW1lbmQtcmlnaHRfYXNpZGUiKS5odG1sKCkucmVwbGFjZSgvW1xyXG5dL2csICIiKS5yZXBsYWNlKC8oXHMpL2csICIiKSA9PT0gIiIpIHsKICAgICAgICAgICAgICAgICQoIiNyaWdodEFzaWRlIikucmVtb3ZlKCk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoJCgiLnJlY29tbWVuZC1yaWdodF9hc2lkZSIpLmh0bWwoKSAmJiAkKCIjcmVjb21tZW5kLXJpZ2h0IikuaHRtbCgpLnJlcGxhY2UoL1tcclxuXS9nLCAiIikucmVwbGFjZSgvKFxzKS9nLCAiIikgPT09ICIiKSB7CiAgICAgICAgICAgICAgICAkKCIjcmlnaHRBc2lkZSIpLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIOeZu+W9leaMiemSruaWh+Wtl+WkquWkmu+8jOS/ruaUuQogICAgICAgICAgICAkKCJhIikuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmF0dHIoJ2hyZWYnKSA9PT0gJ2h0dHBzOi8vcGFzc3BvcnQuY3Nkbi5uZXQvYWNjb3VudC9sb2dpbicpIHsKICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmh0bWwoJ+eZu+WFpScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8g6aG25qCP5bm/5ZGKCiAgICAgICAgICAgICQoImxpIikuZWFjaChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgbGV0IHNlbGYgPSAkKHRoaXMpOwogICAgICAgICAgICAgICAgbGV0IGRhdGFUeXBlID0gc2VsZi5hdHRyKCdkYXRhLXN1Yi1tZW51LXR5cGUnKTsKICAgICAgICAgICAgICAgIGlmIChkYXRhVHlwZSA9PT0gJ3ZpcCcpIHsKICAgICAgICAgICAgICAgICAgICBzZWxmLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGV0IGRhdGFUaXRsZSA9IHNlbGYuYXR0cigndGl0bGUnKTsKICAgICAgICAgICAgICAgIGlmIChkYXRhVGl0bGUgPT09ICfpq5jku7flgLzmupDnoIHor77nqIvliIbkuqsnIHx8IGRhdGFUaXRsZSA9PT0gJ+ezu+e7n+WtpuS5oMK36Zeu562Uwrfmr5TotZsnIHx8IGRhdGFUaXRsZSA9PT0gJ+eugOWNlemrmOaViOS8mOaDoOeahOS6keacjeWKoScpIHsKICAgICAgICAgICAgICAgICAgICBzZWxmLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8g6aG25qCPVklQ6YCJ6aG5CiAgICAgICAgICAgICQoJy50b29sYmFyLXN1Yk1lbnUtYm94JykuZmluZCgiW2hyZWY9J2h0dHBzOi8vbWFsbC5jc2RuLm5ldC92aXAnXSIpLnBhcmVudCgpLnJlbW92ZSgpOwogICAgICAgIH0gZWxzZSBpZiAobnVtID09IDMpIHsKICAgICAgICAgICAgLy/orrrlnZvoh6rliqjlsZXlvIAKICAgICAgICAgICAgJCgiLmpzX3Nob3dfdG9waWMiKS5jbGljaygpOwogICAgICAgIH0gZWxzZSBpZiAobnVtID09IDQpIHsKICAgICAgICAgICAgLyoqIOmFjee9ruaOp+WItiAqKi8KICAgICAgICAgICAgbGV0IGNvbmZpZyA9IG5ldyBDb25maWcoKTsKICAgICAgICAgICAgbGV0IHNtQ29va2llID0gY29uZmlnLmdldCgic2NyLXNtIiwgdHJ1ZSk7CiAgICAgICAgICAgIGxldCBtZENvb2tpZSA9IGNvbmZpZy5nZXQoInNjci1tZCIsIGZhbHNlKTsKICAgICAgICAgICAgbGV0IGxnQ29va2llID0gY29uZmlnLmdldCgic2NyLWxnIiwgZmFsc2UpOwogICAgICAgICAgICBsZXQgZm9Db29raWUgPSBjb25maWcuZ2V0KCJzY3ItZm8iLCBmYWxzZSkKCiAgICAgICAgICAgICQoIiNzY3Itc20iKS5wcm9wKCJjaGVja2VkIiwgc21Db29raWUpOwogICAgICAgICAgICAkKCIjc2NyLW1kIikucHJvcCgiY2hlY2tlZCIsIG1kQ29va2llKTsKICAgICAgICAgICAgJCgiI3Njci1sZyIpLnByb3AoImNoZWNrZWQiLCBsZ0Nvb2tpZSk7CiAgICAgICAgICAgICQoIiNzY3ItZm8iKS5wcm9wKCJjaGVja2VkIiwgZm9Db29raWUpOwoKICAgICAgICAgICAgaWYgKHNtQ29va2llKSB7CiAgICAgICAgICAgICAgICAvLyBTbWFsbCBTY3JlZW4gTW9kZQogICAgICAgICAgICAgICAgJCgiLm1haW5fZmF0aGVyIikucmVtb3ZlQ2xhc3MoImp1c3RpZnktY29udGVudC1jZW50ZXIiKTsKICAgICAgICAgICAgICAgIEdNX2FkZFN0eWxlKGAKICAgICAgICAgICAgICAgIG1haW57CiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGF1dG8haW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgIGZsb2F0OiBub25lIWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwdnc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluIGFydGljbGUgaW1newogICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGApOwogICAgICAgICAgICAgICAgJCgiI21haW5Cb3giKS5jc3MoIndpZHRoIiwgIjEwMCUiKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZENvb2tpZSkgewogICAgICAgICAgICAgICAgLy8gTWlkZGxlIFNjcmVlbiBNb2RlCiAgICAgICAgICAgICAgICAkKCIubWFpbl9mYXRoZXIiKS5yZW1vdmVDbGFzcygianVzdGlmeS1jb250ZW50LWNlbnRlciIpOwogICAgICAgICAgICB9IGVsc2UgaWYgKGxnQ29va2llKSB7CiAgICAgICAgICAgICAgICAvLyBMYXJnZSBTY3JlZW4gTW9kZQogICAgICAgICAgICAgICAgJCgiLmNvbnRhaW5lciIpLmNzcygibWFyZ2luIiwgIjAgYXV0byIpCiAgICAgICAgICAgIH0gZWxzZSBpZiAoZm9Db29raWUpIHsKICAgICAgICAgICAgICAgIC8vIEZvY3VzIG1vZGUKICAgICAgICAgICAgICAgICQoIi5yZWNvbW1lbmQtcmlnaHQiKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICQoIi5jb250YWluZXIiKS5jc3MoIndpZHRoIiwgIjEwMCUiKTsKICAgICAgICAgICAgICAgICQoIi5jb250YWluZXIgPiBtYWluIikuY3NzKCJ3aWR0aCIsICIxMDAlIik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIOWxj+W5leWwuuWvuOWNlemAieebkeWQrAogICAgICAgICAgICAkKCIjc2NyLXNtIikuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldCgic2NyLXNtIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbWQiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbGciLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItZm8iLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCIjc2NyLW1kIikuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldCgic2NyLW1kIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3Itc20iLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbGciLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItZm8iLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCIjc2NyLWxnIikuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldCgic2NyLWxnIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3Itc20iLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbWQiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItZm8iLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCIjc2NyLWZvIikuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbmV3IENvbmZpZygpLnNldCgic2NyLWZvIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3Itc20iLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbWQiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnKCkuc2V0KCJzY3ItbGciLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAvLyDliKTmlq3mmK/lkKbkuLrnmbvlvZXnirbmgIEKICAgICAgICAgICAgJCgiYSIpLmVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5hdHRyKCdocmVmJykgPT09ICdodHRwczovL3Bhc3Nwb3J0LmNzZG4ubmV0L2FjY291bnQvbG9naW4nKSB7CiAgICAgICAgICAgICAgICAgICAgLy8g5pyq55m75b2V5Yig6Zmk5peg55So5oyJ6ZKuCiAgICAgICAgICAgICAgICAgICAgJCgiYTpjb250YWlucygn5Lya5ZGY5Lit5b+DJykiKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAkKCJhOmNvbnRhaW5zKCfmlLbol48nKSIpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgICAgICQoImE6Y29udGFpbnMoJ+WKqOaAgScpIikucGFyZW50KCkucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgJCgiYTpjb250YWlucygn5Yib5L2cJykiKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAkKCIudG9vbGJhci1idG4tY29sbGVjdCIpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgICAgICQoIi5idG4td3JpdGUtbmV3IikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAobnVtID09IDUpIHsKICAgICAgICAgICAgLy8g5pS55Zue6IOM5pmv6aKc6ImyCiAgICAgICAgICAgICQoIi5sb2dpbi1tYXJrIikucmVtb3ZlKCk7CiAgICAgICAgICAgIC8vIOWIoOmZpOeZu+W9leahhgogICAgICAgICAgICAkKCIubG9naW4tYm94IikucmVtb3ZlKCk7CiAgICAgICAgfSBlbHNlIGlmIChudW0gPT0gNikgewogICAgICAgICAgICBsZXQgZGlkID0gZmFsc2U7CiAgICAgICAgICAgIGxldCBjb25maWdIVE1MID0gJyc7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxkaXYgY2xhc3M9ImNvbmZpZ0NvbnRhaW5lciI+PHA+PGEgY2xhc3M9InRpdGxlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYWRsZXJlZC9DU0ROR3JlZW5lciIgdGFyZ2V0PSJfYmxhbmsiPkNTRE5HcmVlbmVyPC9hPiA8c3VwPlYnICsgdmVyc2lvbiArICcgJyArIHNldHRpbmdzX3N2ZyArICc8L3N1cD48L3A+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPHA+PGEgaHJlZj0iLy9zaGFuZy5xcS5jb20vd3BhL3F1bndwYT9pZGtleT1kN2FkNmVhZDNmNTc3MjJlN2YwMGE0MjgxYWU3NWRiYWMyMTMyYzVhOGNmMzIxOTkyZDU3MzA5MDM3ZmNhZjYzIiB0YXJnZXQ9Il9ibGFuayI+5a6Y5pa5IFFRIOS6pOa1gee+pO+8mjEwNDIzNzA0NTM8L2E+PC9wPjxicj4nOwoKICAgICAgICAgICAgLy8g6K6+5a6a77ya5o6o6I2Q5YaF5a655oyJ6ZKuCiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxwIGNsYXNzPSJib2xkIj7moLnmja7lsY/luZXlsLrlr7jvvIzpgILphY3niYjlvI88L3A+PHA+5bu66K6u6YCQ5Liq5bCd6K+V5ZCO6YCJ5oup6YCC5ZCI5L2g55qE54mI5byP77yM5bGP5bmV6L+H5bCP5oiW6ICF54mI5byP6YCJ5oup5LiN5q2j56Gu5Y+z5L6n5qCP5Y+v6IO95rKh5pyJ56m66Ze05pi+56S677yM5a+86Ie05L6n5qCP5a6a5Yi25peg5pWI77yI6K+35bCd6K+V6LCD6IqC5rWP6KeI5Zmo57yp5pS+77yM5b+r5o236ZSuIEN0cmwr6byg5qCH5rua6L2u77yJ44CCPC9wPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxsYWJlbD48aW5wdXQgbmFtZT0iZGlzcGxheU1vZGUiIHR5cGU9InJhZGlvIiB2YWx1ZT0iIiBpZD0ic2NyLXNtIiAvPiDlubPpk7rmqKHlvI8o5LyY5YyW54mIKSA8L2xhYmVsPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxsYWJlbD48aW5wdXQgbmFtZT0iZGlzcGxheU1vZGUiIHR5cGU9InJhZGlvIiB2YWx1ZT0iIiBpZD0ic2NyLW1kIiAvPiDpgILlupTmqKHlvI8gPC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8bGFiZWw+PGlucHV0IG5hbWU9ImRpc3BsYXlNb2RlIiB0eXBlPSJyYWRpbyIgdmFsdWU9IiIgaWQ9InNjci1sZyIgLz4g5bGF5Lit5qih5byPIDwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGxhYmVsPjxpbnB1dCBuYW1lPSJkaXNwbGF5TW9kZSIgdHlwZT0icmFkaW8iIHZhbHVlPSIiIGlkPSJzY3ItZm8iIC8+IOayiea1uOaooeW8jyjml6DkvqfmoI8pPC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aHIgc3R5bGU9ImhlaWdodDoxcHg7Ym9yZGVyOm5vbmU7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NjY2NjYzttYXJnaW46IDVweCAwcHggNXB4IDBweDsiIC8+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPHAgY2xhc3M9ImJvbGQiPumAmueUqOiuvuWumjwvcD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8cD7oh6rlrprkuYnog4zmma/lm77vvJogPGlucHV0IHR5cGU9InRleHQiIGlkPSJiYWNrZ3JvdW5kSW1nVXJsIiBwbGFjZWhvbGRlcj0i5Zu+54mH5omA5Zyo572R5Z2A5oiWQmFzZTY0IiBzdHlsZT0iYm9yZGVyLXJhZGl1czogMnB4O2JvcmRlcjogMXB4IHNvbGlkICNmMGYwZjA7cGFkZGluZzo1cHg7d2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjVweDsiPiA8aW5wdXQgc3R5bGU9Im1hcmdpbi1ib3R0b206NXB4OyIgYWNjZXB0PSJpbWFnZS8qIiBpZD0idXBsb2FkX2JnIiB0eXBlPSJmaWxlIj48L3A+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLXJlY29tbWVuZC1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtcmVjb21tZW5kLWJ1dHRvbiIgY2xhc3M9Im1vZGVMYWJlbCI+5pi+56S65o6o6I2Q5YaF5a65PC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8YnI+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLXNob3AtYnV0dG9uIj4gPGxhYmVsIGZvcj0idG9nZ2xlLXNob3AtYnV0dG9uIiBjbGFzcz0ibW9kZUxhYmVsIj7mmL7npLrlsI/lupc8L2xhYmVsPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ0b2dnbGUtd2hpdGV0aGVtZS1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtd2hpdGV0aGVtZS1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPueZveiJsuS4u+mimCZEYXJrIFJlYWRlcuWFvOWuueaooeW8jzxicj48c3BhbiBzdHlsZT0iY29sb3I6ICM4MDgwODA7Ij4jIOmAiemhueS9nOeUqO+8muW8gOWQr+WQjuWPr+mAmui/h0RhcmsgUmVhZGVy5o+S5Lu254G15rS75o6n5Yi255m96Imy5LiO6buR5pqX5qih5byP77yMPGEgc3R5bGU9ImNvbG9yOiBncmVlbjsiIGhyZWY9Imh0dHBzOi8vY2hyb21lLnp6em1oLmNuL2luZm8/dG9rZW49ZWltYWRwYmNiZm5tYmtvcG9vamZla2hua2hkYmllZWgiIHRhcmdldD0iX2JsYW5rIj7mj5Lku7bkuIvovb3lnLDlnYDngrnmiJE8L2E+PC9zcGFuPjwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS1hdXRvc2l6ZS1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtYXV0b3NpemUtYnV0dG9uIiBjbGFzcz0ibW9kZUxhYmVsIj7lrr3luqboh6rliqjpgILlupQ8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjODA4MDgwOyI+IyDpgInpobnkvZznlKjvvJrlvIDlkK/mraTpgInpobnlj6/ku6XlnKjpobXpnaLlrr3luqbnvKnlsI/ml7boh6rliqjliIfmjaLoh7PlsI/lsY/mqKHlvI88L3NwYW4+PC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8YnI+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLWF1dG9oaWRldG9vbGJhci1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtYXV0b2hpZGV0b29sYmFyLWJ1dHRvbiIgY2xhc3M9Im1vZGVMYWJlbCI+5ZCR5LiL5rua5Yqo6Ieq5Yqo6ZqQ6JeP6aG25qCPPC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8YnI+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLWF1dG9oaWRlYm90dG9tYmFyLWJ1dHRvbiI+IDxsYWJlbCBmb3I9InRvZ2dsZS1hdXRvaGlkZWJvdHRvbWJhci1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuWni+e7iOmakOiXj+W6leagjzwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS13cml0ZWJsb2ctYnV0dG9uIj4gPGxhYmVsIGZvcj0idG9nZ2xlLXdyaXRlYmxvZy1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuaYvuekuuWIm+S9nOS4reW/g+aMiemSrjwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxociBzdHlsZT0iaGVpZ2h0OjFweDtib3JkZXI6bm9uZTtib3JkZXItdG9wOjFweCBzb2xpZCAjY2NjY2NjO21hcmdpbjogNXB4IDBweCA1cHggMHB4OyIgLz4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8cCBjbGFzcz0iYm9sZCI+PGI+5Y+z5L6n5qCP5a6a5Yi2PC9iPjwvcD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ0b2dnbGUtYXV0aG9yY2FyZC1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtYXV0aG9yY2FyZC1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuaYvuekuuS9nOiAheWQjeeJhzwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS1zZWFyY2hibG9nLWJ1dHRvbiI+IDxsYWJlbCBmb3I9InRvZ2dsZS1zZWFyY2hibG9nLWJ1dHRvbiIgY2xhc3M9Im1vZGVMYWJlbCI+5pi+56S65pCc5Y2a5Li75paH56ugPC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8YnI+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLW5ld2FydGljbGUtYnV0dG9uIj4gPGxhYmVsIGZvcj0idG9nZ2xlLW5ld2FydGljbGUtYnV0dG9uIiBjbGFzcz0ibW9kZUxhYmVsIj7mmL7npLrmnIDmlrDmlofnq6A8L2xhYmVsPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ0b2dnbGUtaG90YXJ0aWNsZS1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtaG90YXJ0aWNsZS1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuaYvuekuueDremXqOaWh+eroDwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS1uZXdjb21tZW50cy1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtbmV3Y29tbWVudHMtYnV0dG9uIiBjbGFzcz0ibW9kZUxhYmVsIj7mmL7npLrmnIDmlrDor4Torro8L2xhYmVsPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ0b2dnbGUta2luZHBlcnNvbi1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUta2luZHBlcnNvbi1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuaYvuekuuWIhuexu+S4k+agjzwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS1yZWNvbW1lbmRhcnRpY2xlLWJ1dHRvbiI+IDxsYWJlbCBmb3I9InRvZ2dsZS1yZWNvbW1lbmRhcnRpY2xlLWJ1dHRvbiIgY2xhc3M9Im1vZGVMYWJlbCI+5pi+56S65o6o6I2Q5paH56ugPC9sYWJlbD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8YnI+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0idG9nZ2xlLWFyY2hpdmUtYnV0dG9uIj4gPGxhYmVsIGZvcj0idG9nZ2xlLWFyY2hpdmUtYnV0dG9uIiBjbGFzcz0ibW9kZUxhYmVsIj7mmL7npLrlvZLmoaM8L2xhYmVsPic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ0b2dnbGUtY29udGVudC1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtY29udGVudC1idXR0b24iIGNsYXNzPSJtb2RlTGFiZWwiPuaYvuekuuebruW9lTwvbGFiZWw+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPjxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8ZGl2PjxoNj7msqHmnInmlLbpkrHnmoTlub/lkYo8L2g2PjxwPuaIkeWutummmea4r0NOMiAxME3kuLvmnLrkuIDkuKrmnIgyOe+8iOS5n+acieWbveWGhemrmOmYsuS4u+acuu+8ie+8jOmrmOmYskNETuWbveWGheWkluiKgueCuemDveacie+8iOmmmea4r+iKgueCueWFjeWkh+ahiO+8ie+8jOmdnuW4uOmAguWQiOWwj+ermemVv+S7peWPiumVv+acn+iiq+aUu+WHu+eahOe9keermeWTpiA6KTwvcD48YSBocmVmPSJodHRwczovL3d3dy50c3l2cHMuY29tL2FmZi9IRUhUUEdZTCIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL2Z0cC5zdGFja292ZXJmbG93Lndpa2kvYm9sby9hZC5wbmciIHN0eWxlPSJtYXgtd2lkdGg6IDUwMHB4OyI+PC9hPjwvZGl2Pjxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8ZGl2PjxoNj7msqHmnInmlLbpkrHnmoTlub/lkYogMjwvaDY+PHA+77yI5L2c6ICF5pys5Lq65bu66K6+55qE56S+5Yy6772ePC9wPjxwPuekvuWMuuS4reiBmumbhuS6huWQjOihjOS4mueahOWkp+S9rOWwj+eZve+8jOasoui/juWwj+S8meS8tOS7rOS4gOi1t+aRuOmxvO+8gTwvcD48YSBocmVmPSJodHRwczovL2Zpc2hwaS5jbiIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL3MyLmxvbGkubmV0LzIwMjIvMDEvMDUvMUhwQlpVcmFNY1I4aXN0LnBuZyIgc3R5bGU9IndpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ii8+PC9hPjwvZGl2Pic7CiAgICAgICAgICAgIGNvbmZpZ0hUTUwgKz0gJzxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hZGxlcmVkL0NTRE5HcmVlbmVyIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImdpdmVNZU9uZVN0YXIiPicgKyBzdGFyX3N2ZyArICcgPGI+54K55oiRfjwvYj4g5Yqo5Yqo5bCP5omL5ZyoIEdpdEh1YiDngrnkuKogU3RhciDlkozlhbPms6jvvIzmlK/mjIHmiJHnu6fnu63nu7TmiqTohJrmnKwgOik8L2E+PGJyPjxicj4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8cD7nibnliKvmj5DnpLrvvJpDU0ROR3JlZW5lciDohJrmnKzkuI3mj5Dkvpvku7vkvZXkvJrlkZjmlofnq6DnoLTop6PjgIHkvJrlkZjotYTmupDkuIvovb3lip/og73vvIzku4XpgILnlKjkuo7liY3nq6/kvJjljJbvvIzor7flnKhDU0RO5a6Y5pa55rig6YGT6LSt5LmwQ1NETuS8muWRmOS9k+mqjOS7mOi0ueWKn+iDveOAgjwvcD4nOwogICAgICAgICAgICBjb25maWdIVE1MICs9ICc8aHIgc3R5bGU9ImhlaWdodDoxcHg7Ym9yZGVyOm5vbmU7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NjY2NjYzttYXJnaW46IDVweCAwcHggNXB4IDBweDsiIC8+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPGJyPic7CgogICAgICAgICAgICAvLyBjb25maWdIVE1MICs9ICc8YSBocmVmPSJodHRwczovL2RvYy5zdGFja292ZXJmbG93Lndpa2kvd2ViLyMvMjE/cGFnZV9pZD0xMzgiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0ibWFyZ2luLXRvcDogNXB4OyBkaXNwbGF5OiBibG9jazsiPicgKyBkb25hdGVfc3ZnICsgJyDmiJHmmK/ogIHmnb/vvIzmipXluIHmiZPotY88L2E+JzsKICAgICAgICAgICAgY29uZmlnSFRNTCArPSAnPC9kaXY+PC9kaXY+PGRpdiBpZD0iZmFkZSIgY2xhc3M9ImJsYWNrX292ZXJsYXkiPjwvZGl2Pic7CiAgICAgICAgICAgIGxldCBzYXZlQnV0dG9uID0gJzxidXR0b24gY2xhc3M9InNhdmVCdXR0b24iIHN0eWxlPSJwb3NpdGlvbjogc3RpY2t5O3RvcDogNXB4O2xlZnQ6IGNhbGMoMTAwJSAtIDgwcHgpOyIgb25jbGljaz0ic2F2ZUFuZFJlbG9hZCgpOyI+JyArIHNhdmVfc3ZnICsgJyDlupTnlKg8L2J1dHRvbj4nOwogICAgICAgICAgICAvLyDnu7/ljJblmajorr7lrpoKICAgICAgICAgICAgJCgiYm9keSIpLmFmdGVyKCc8ZGl2IGlkPSJjb25maWdDb250ZW50IiBjbGFzcz0id2hpdGVfY29udGVudCI+JyArIHNhdmVCdXR0b24gKyBjb25maWdIVE1MKTsKCiAgICAgICAgICAgIC8qKiDphY3nva7mjqfliLYgKiovCiAgICAgICAgICAgIC8vIOaOqOiNkOWGheWuuQogICAgICAgICAgICAkKCIuYmxvZy1jb250ZW50LWJveCIpLmFwcGVuZCgiPGJyPjxkaXYgY2xhc3M9J2Jsb2ctY29udGVudC1ib3gnIGlkPSdyZWNvbW1lbmRTd2l0Y2gnIHN0eWxlPSd0ZXh0LWFsaWduOiByaWdodDsnPjwvZGl2PiIpOwogICAgICAgICAgICAkKCIjcmVjb21tZW5kU3dpdGNoOmxhc3QiKS5hcHBlbmQoJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRvZ2dsZS1idXR0b24iPiA8bGFiZWwgZm9yPSJ0b2dnbGUtYnV0dG9uIiBjbGFzcz0iYnV0dG9uLWxhYmVsIj4gPHNwYW4gY2xhc3M9ImNpcmNsZSI+PC9zcGFuPiA8c3BhbiBjbGFzcz0idGV4dCBvbiI+Jm5ic3A7PC9zcGFuPiA8c3BhbiBjbGFzcz0idGV4dCBvZmYiPiZuYnNwOzwvc3Bhbj4gPC9sYWJlbD4nICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cCBzdHlsZT0ibWFyZ2luLXRvcDogNXB4OyBmb250LXNpemU6IDEzcHg7Ij7mmL7npLrmjqjojZDlhoXlrrk8L3A+Jyk7CiAgICAgICAgICAgIGxldCByZWNvbW1lbmRDb29raWUgPSBjb25maWcuZ2V0KCJyZWNvbW1lbmQiLCBmYWxzZSk7CiAgICAgICAgICAgIGlmICghcmVjb21tZW5kQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIucmVjb21tZW5kLWJveCIpLmhpZGUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocmVjb21tZW5kQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLXJlY29tbWVuZC1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtcmVjb21tZW5kLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1yZWNvbW1lbmQtYnV0dG9uIiwgInJlY29tbWVuZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHskKCIucmVjb21tZW5kLWJveCIpLnNsaWRlRG93bigyMDApO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHskKCIucmVjb21tZW5kLWJveCIpLnNsaWRlVXAoMjAwKTt9KTsKICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbkFuZEFjdGlvbigiI3RvZ2dsZS1idXR0b24iLCAicmVjb21tZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHskKCIucmVjb21tZW5kLWJveCIpLnNsaWRlRG93bigyMDApO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHskKCIucmVjb21tZW5kLWJveCIpLnNsaWRlVXAoMjAwKTt9KTsKCiAgICAgICAgICAgIC8vIOaYvuekuuWwj+W6lwogICAgICAgICAgICBsZXQgc2hvcENvb2tpZSA9IGNvbmZpZy5nZXQoJ3Nob3AnLGZhbHNlKTsKICAgICAgICAgICAgaWYoIXNob3BDb29raWUpewogICAgICAgICAgICAgICAgJCgiI2NzZG4tc2hvcC13aW5kb3ciKS5oaWRlKCk7CiAgICAgICAgICAgICAgICAkKCIjY3Nkbi1zaG9wLXdpbmRvdy10b3AiKS5oaWRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHNob3BDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtc2hvcC1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLXNob3AtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLXNob3AtYnV0dG9uIiwgInNob3AiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSk7CgogICAgICAgICAgICAvLyDmmL7npLrkvZzogIXlkI3niYcKICAgICAgICAgICAgbGV0IGF1dGhvckNhcmRDb29raWUgPSBjb25maWcuZ2V0KCJhdXRob3JDYXJkIiwgdHJ1ZSk7CiAgICAgICAgICAgIGlmIChhdXRob3JDYXJkQ29va2llKSB7CiAgICAgICAgICAgICAgICAvLyDljZrkuLvkv6Hmga8KICAgICAgICAgICAgICAgICQoJyNyZWNvbW1lbmQtcmlnaHQnKS5hcHBlbmQoJCgnI2FzaWRlUHJvZmlsZScpLnByb3AoIm91dGVySFRNTCIpKTsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnI2FzaWRlUHJvZmlsZScpLmF0dHIoInN0eWxlIiwgIm1hcmdpbi10b3A6IDhweDsgd2lkdGg6IDMwMHB4OyIpOwogICAgICAgICAgICAgICAgfSwgNTAwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoYXV0aG9yQ2FyZENvb2tpZSkgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hdXRob3JjYXJkLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtYXV0aG9yY2FyZC1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbmZpZy5saXN0ZW5CdXR0b24oIiN0b2dnbGUtYXV0aG9yY2FyZC1idXR0b24iLCAiYXV0aG9yQ2FyZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSk7CgogICAgICAgICAgICAvLyDlvLrliLbnmb3oibLkuLvpopgKICAgICAgICAgICAgbGV0IHdoaXRlVGhlbWVDb29raWUgPSBjb25maWcuZ2V0KCJ3aGl0ZVRoZW1lIiwgZmFsc2UpOwogICAgICAgICAgICBpZiAod2hpdGVUaGVtZUNvb2tpZSkgewogICAgICAgICAgICAgICAgLy8g6IOM5pmv5Yig6ZmkCiAgICAgICAgICAgICAgICAkKCcubWFpbl9mYXRoZXInKS5hdHRyKCdzdHlsZScsICdiYWNrZ3JvdW5kLWltYWdlOiBub25lICFpbXBvcnRhbnQ7IGJhY2tncm91bmQtY29sb3I6ICNmNWY2Zjc7IGJhY2tncm91bmQ6ICNmNWY2Zjc7Jyk7CiAgICAgICAgICAgICAgICAkKCdbaHJlZl49Imh0dHBzOi8vY3NkbmltZy5jbi9yZWxlYXNlL3Bob2VuaXgvdGVtcGxhdGUvdGhlbWVzX3NraW4vIl0nKS5hdHRyKCdocmVmJywgJ2h0dHBzOi8vY3NkbmltZy5jbi9yZWxlYXNlL3Bob2VuaXgvdGVtcGxhdGUvdGhlbWVzX3NraW4vc2tpbi10ZWNobm9sb2d5L3NraW4tdGVjaG5vbG9neS02MzM2NTQ5NTU3Lm1pbi5jc3MnKTsKICAgICAgICAgICAgICAgICQoJyNjc2RuLXRvb2xiYXInKS5yZW1vdmVDbGFzcygnY3Nkbi10b29sYmFyLXNraW4tYmxhY2snKTsKICAgICAgICAgICAgICAgICQoJy5jc2RuLWxvZ28nKS5hdHRyKCdzcmMnLCAnLy9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvLnBuZz92PTIwMjAwNDE2LjEnKTsKICAgICAgICAgICAgICAgICQoJ2h0bWwnKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2Y1ZjZmNycpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh3aGl0ZVRoZW1lQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLXdoaXRldGhlbWUtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS13aGl0ZXRoZW1lLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS13aGl0ZXRoZW1lLWJ1dHRvbiIsICJ3aGl0ZVRoZW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOiDjOaZr+WbvgogICAgICAgICAgICBsZXQgYmFja2dyb3VuZEltYWdlID0gR01fZ2V0VmFsdWUoImJhY2tncm91bmRJbWFnZSIsICIiKTsKICAgICAgICAgICAgaWYgKGJhY2tncm91bmRJbWFnZSAhPT0gIiIpIHsKICAgICAgICAgICAgICAgICQoIiNiYWNrZ3JvdW5kSW1nVXJsIikudmFsKGJhY2tncm91bmRJbWFnZSk7CiAgICAgICAgICAgICAgICAkKCIubWFpbl9mYXRoZXIiKS5hdHRyKCdzdHlsZScsICdiYWNrZ3JvdW5kLWltYWdlOnVybCgnICsgYmFja2dyb3VuZEltYWdlICsgJyk7YmFja2dyb3VuZC1hdHRhY2htZW50OmZpeGVkO2JhY2tncm91bmQtc2l6ZToxMDAlOycpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICQoJyNiYWNrZ3JvdW5kSW1nVXJsJykub24oJ2lucHV0JywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgiYmFja2dyb3VuZEltYWdlIiwgJCgiI2JhY2tncm91bmRJbWdVcmwiKS52YWwoKSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCcjYmFja2dyb3VuZEltZ1VybCcpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCJiYWNrZ3JvdW5kSW1hZ2UiLCAkKCIjYmFja2dyb3VuZEltZ1VybCIpLnZhbCgpKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICQoIiN1cGxvYWRfYmciKS5vbignY2hhbmdlJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBsZXQgZmlsZSA9ICQoIiN1cGxvYWRfYmciKVswXS5maWxlc1swXTsKICAgICAgICAgICAgICAgIGxldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZGVuZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGJhc2U2NCA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgICAgICAgICAgICAkKCcjYmFja2dyb3VuZEltZ1VybCcpLnZhbChiYXNlNjQpOwogICAgICAgICAgICAgICAgICAgICQoJyNiYWNrZ3JvdW5kSW1nVXJsJykuY2hhbmdlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyDmkJzljZrkuLvmlofnq6AKICAgICAgICAgICAgbGV0IHNlYXJjaEJsb2dDb29raWUgPSBjb25maWcuZ2V0KCJzZWFyY2hCbG9nIiwgZmFsc2UpOwogICAgICAgICAgICBpZihzZWFyY2hCbG9nQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCcjcmVjb21tZW5kLXJpZ2h0JykuYXBwZW5kKCQoJyNhc2lkZVNlYXJjaEFydGljbGUnKS5wcm9wKCJvdXRlckhUTUwiKSk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoJyNhc2lkZVNlYXJjaEFydGljbGUnKS5hdHRyKCJzdHlsZSIsICJtYXJnaW4tdG9wOiA4cHg7IHdpZHRoOiAzMDBweDsiKTsKICAgICAgICAgICAgICAgICAgICB2YXIgaSA9ICQoIiNzZWFyY2gtYmxvZy13b3JkcyIpCiAgICAgICAgICAgICAgICAgICAgICAsIG4gPSAkKCIuYnRuLXNlYXJjaC1ibG9nIik7CiAgICAgICAgICAgICAgICAgICAgaS5rZXl1cChmdW5jdGlvbih0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuID0gdC5rZXlDb2RlOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoMTMgPT0gbikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBlbmNvZGVVUklDb21wb25lbnQoaS52YWwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzID0gIi8vc28uY3Nkbi5uZXQvc28vc2VhcmNoL3MuZG8/cT0iICsgZSArICImdD1ibG9nJnU9IiArIHVzZXJuYW1lOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHMpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBuLm9uKCJjbGljayIsIGZ1bmN0aW9uKHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSBlbmNvZGVVUklDb21wb25lbnQoaS52YWwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSA9ICIvL3NvLmNzZG4ubmV0L3NvL3NlYXJjaC9zLmRvP3E9IiArIG4gKyAiJnQ9YmxvZyZ1PSIgKyB1c2VybmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKGUpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgdC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9LCA1MDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChzZWFyY2hCbG9nQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLXNlYXJjaGJsb2ctYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1zZWFyY2hibG9nLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1zZWFyY2hibG9nLWJ1dHRvbiIsICJzZWFyY2hCbG9nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOacgOaWsOaWh+eroAogICAgICAgICAgICBsZXQgbmV3QXJ0aWNsZUNvb2tpZSA9IGNvbmZpZy5nZXQoIm5ld0FydGljbGUiLCBmYWxzZSk7CiAgICAgICAgICAgIGlmIChuZXdBcnRpY2xlQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCcjcmVjb21tZW5kLXJpZ2h0JykuYXBwZW5kKCQoJyNhc2lkZU5ld0FydGljbGUnKS5wcm9wKCJvdXRlckhUTUwiKSk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoJyNhc2lkZU5ld0FydGljbGUnKS5hdHRyKCJzdHlsZSIsICJtYXJnaW4tdG9wOiA4cHg7IHdpZHRoOiAzMDBweDsiKTsKICAgICAgICAgICAgICAgIH0sIDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChuZXdBcnRpY2xlQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLW5ld2FydGljbGUtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1uZXdhcnRpY2xlLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1uZXdhcnRpY2xlLWJ1dHRvbiIsICJuZXdBcnRpY2xlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOeDremXqOaWh+eroAogICAgICAgICAgICBsZXQgaG90QXJ0aWNsZUNvb2tpZSA9IGNvbmZpZy5nZXQoImhvdEFydGljbGUiLCBmYWxzZSk7CiAgICAgICAgICAgIGlmIChob3RBcnRpY2xlQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCcjcmVjb21tZW5kLXJpZ2h0JykuYXBwZW5kKCQoIiNhc2lkZUhvdEFydGljbGUiKS5wcm9wKCJvdXRlckhUTUwiKSk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoJyNhc2lkZUhvdEFydGljbGUnKS5hdHRyKCJzdHlsZSIsICJtYXJnaW4tdG9wOiA4cHg7IHdpZHRoOiAzMDBweDsiKTsKICAgICAgICAgICAgICAgICAgICAkKCcjYXNpZGVIb3RBcnRpY2xlIGltZycpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfSwgMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGhvdEFydGljbGVDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtaG90YXJ0aWNsZS1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWhvdGFydGljbGUtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLWhvdGFydGljbGUtYnV0dG9uIiwgImhvdEFydGljbGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30pOwoKICAgICAgICAgICAgLy8g5pyA5paw6K+E6K66CiAgICAgICAgICAgIGxldCBuZXdDb21tZW50c0Nvb2tpZSA9IGNvbmZpZy5nZXQoIm5ld0NvbW1lbnRzIiwgZmFsc2UpOwogICAgICAgICAgICBpZiAobmV3Q29tbWVudHNDb29raWUpIHsKICAgICAgICAgICAgICAgICQoJyNyZWNvbW1lbmQtcmlnaHQnKS5hcHBlbmQoJCgiI2FzaWRlTmV3Q29tbWVudHMiKS5wcm9wKCJvdXRlckhUTUwiKSk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoJyNhc2lkZU5ld0NvbW1lbnRzJykuYXR0cigic3R5bGUiLCAibWFyZ2luLXRvcDogOHB4OyB3aWR0aDogMzAwcHg7Iik7CiAgICAgICAgICAgICAgICAgICAgJCgiLmNvbW1lbnQuZWxsaXBzaXMiKS5hdHRyKCJzdHlsZSIsICJtYXgtaGVpZ2h0OiBub25lOyIpOwogICAgICAgICAgICAgICAgICAgICQoIi50aXRsZS50ZXh0LXRydW5jYXRlIikuYXR0cigic3R5bGUiLCAicGFkZGluZzogMCIpOwogICAgICAgICAgICAgICAgfSwgMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG5ld0NvbW1lbnRzQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLW5ld2NvbW1lbnRzLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtbmV3Y29tbWVudHMtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLW5ld2NvbW1lbnRzLWJ1dHRvbiIsICJuZXdDb21tZW50cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSk7CgogICAgICAgICAgICAvLyDliIbnsbvkuJPmoI8KICAgICAgICAgICAgbGV0IGtpbmRQZXJzb25Db29raWUgPSBjb25maWcuZ2V0KCJraW5kUGVyc29uIiwgZmFsc2UpOwogICAgICAgICAgICBpZiAoIWtpbmRQZXJzb25Db29raWUpIHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnI2FzaWRlQ2F0ZWdvcnknKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAkKCcua2luZF9wZXJzb24nKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0sIDApOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgnI3JlY29tbWVuZC1yaWdodCcpLmFwcGVuZCgkKCIjYXNpZGVDYXRlZ29yeSIpLnByb3AoIm91dGVySFRNTCIpKTsKICAgICAgICAgICAgICAgIGlmICgkKCIjYXNpZGVDYXRlZ29yeSIpLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICAkKCcua2luZF9wZXJzb24nKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJCgnLmtpbmRfcGVyc29uJykuYXR0cigic3R5bGUiLCAibWFyZ2luLXRvcDogOHB4OyB3aWR0aDogMzAwcHg7IGhlaWdodDoyNTVweDsiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnI2FzaWRlQ2F0ZWdvcnknKS5hdHRyKCJzdHlsZSIsICJtYXJnaW4tdG9wOiA4cHg7IHdpZHRoOiAzMDBweDsgZGlzcGxheTpibG9jayAhaW1wb3J0YW50OyIpOwogICAgICAgICAgICAgICAgICAgICQoImEuZmxleGlibGUtYnRuIikuY2xpY2soZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50cygnZGl2LmFzaWRlLWJveCcpLnJlbW92ZUNsYXNzKCdmbGV4aWJsZS1ib3gnKTsKICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCJwLnRleHQtY2VudGVyIikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0sIDUwMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGtpbmRQZXJzb25Db29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUta2luZHBlcnNvbi1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWtpbmRwZXJzb24tYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLWtpbmRwZXJzb24tYnV0dG9uIiwgImtpbmRQZXJzb24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30pOwoKICAgICAgICAgICAgLy8g55uu5b2VCiAgICAgICAgICAgIGxldCBjb250ZW50Q29va2llID0gY29uZmlnLmdldCgiY29udGVudCIsIHRydWUpOwogICAgICAgICAgICBpZiAoIWNvbnRlbnRDb29raWUpIHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnLmFsaWduLWl0ZW1zLXN0cmV0Y2guZ3JvdXBfaXRlbScpLnBhcmVudCgpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfSwgMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGNvbnRlbnRDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtY29udGVudC1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWNvbnRlbnQtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLWNvbnRlbnQtYnV0dG9uIiwgImNvbnRlbnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30pOwoKICAgICAgICAgICAgLy8g5o6o6I2Q5paH56ugCiAgICAgICAgICAgIGxldCByZWNvbW1lbmRBcnRpY2xlQ29va2llID0gY29uZmlnLmdldCgicmVjb21tZW5kQXJ0aWNsZSIsIGZhbHNlKTsKICAgICAgICAgICAgaWYgKCFyZWNvbW1lbmRBcnRpY2xlQ29va2llKSB7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICQoJy5yZWNvbW1lbmQtbGlzdC1ib3gnKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0sIDApOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAkKCcucmVjb21tZW5kLWxpc3QtYm94JykuYXR0cigic3R5bGUiLCAibWFyZ2luLXRvcDogOHB4OyB3aWR0aDogMzAwcHg7IGhlaWdodDoyNTVweDsiKTsKICAgICAgICAgICAgICAgIH0sIDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChyZWNvbW1lbmRBcnRpY2xlQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLXJlY29tbWVuZGFydGljbGUtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1yZWNvbW1lbmRhcnRpY2xlLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1yZWNvbW1lbmRhcnRpY2xlLWJ1dHRvbiIsICJyZWNvbW1lbmRBcnRpY2xlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOW9kuahowogICAgICAgICAgICBsZXQgYXJjaGl2ZUNvb2tpZSA9IGNvbmZpZy5nZXQoImFyY2hpdmUiLCBmYWxzZSk7CiAgICAgICAgICAgIGlmICghYXJjaGl2ZUNvb2tpZSkgewogICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAkKCcjYXNpZGVBcmNoaXZlJykucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICB9LCAwKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoJyNyZWNvbW1lbmQtcmlnaHQnKS5hcHBlbmQoJCgiI2FzaWRlQXJjaGl2ZSIpLnByb3AoIm91dGVySFRNTCIpKTsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnI2FzaWRlQXJjaGl2ZScpLmF0dHIoInN0eWxlIiwgIm1hcmdpbi10b3A6IDhweDsgd2lkdGg6IDMwMHB4OyBkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnQ7Iik7CiAgICAgICAgICAgICAgICB9LCA1MDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChhcmNoaXZlQ29va2llKSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWFyY2hpdmUtYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hcmNoaXZlLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1hcmNoaXZlLWJ1dHRvbiIsICJhcmNoaXZlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOiHquWKqOmdoOW3puW5s+mTugogICAgICAgICAgICBsZXQgYXV0b1NpemVDb29raWUgPSBjb25maWcuZ2V0KCJhdXRvU2l6ZSIsIGZhbHNlKTsKICAgICAgICAgICAgaWYgKGF1dG9TaXplQ29va2llKSB7CiAgICAgICAgICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgLy8g5paH56ug5a695bqm6Ieq6YCC5bqUCiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDwgMTEwMCkgewogICAgICAgICAgICAgICAgICAgICAgICAvLyDliKDpmaTljp/mnInlk43lupTlvI/moLflvI8KICAgICAgICAgICAgICAgICAgICAgICAgJCgiLm1haW5fZmF0aGVyIikucmVtb3ZlQ2xhc3MoImp1c3RpZnktY29udGVudC1jZW50ZXIiKTsKICAgICAgICAgICAgICAgICAgICAgICAgJCgiYXJ0aWNsZSIpLndpZHRoKHdpbmRvdy5pbm5lcldpZHRoIC0gMTUwKTsKICAgICAgICAgICAgICAgICAgICAgICAgR01fYWRkU3R5bGUoYAogICAgICAgICAgICAgICAgICAgICAgICBtYWluewogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGF1dG8haW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IG5vbmUhaW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA5MHZ3OwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIG1haW4gYXJ0aWNsZSBpbWd7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGApOwogICAgICAgICAgICAgICAgICAgICAgICBkaWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaWQgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoImFydGljbGUiKS5yZW1vdmVBdHRyKCJzdHlsZSIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlkID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCA1MDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChhdXRvU2l6ZUNvb2tpZSkgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hdXRvc2l6ZS1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWF1dG9zaXplLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1hdXRvc2l6ZS1idXR0b24iLCAiYXV0b1NpemUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30pOwoKICAgICAgICAgICAgLy8g6Ieq5Yqo6ZqQ6JeP6aG25qCPCiAgICAgICAgICAgIGxldCBhdXRvSGlkZVRvb2xiYXJDb29raWUgPSBjb25maWcuZ2V0KCJhdXRvSGlkZVRvb2xiYXIiLCB0cnVlKTsKICAgICAgICAgICAgaWYgKGF1dG9IaWRlVG9vbGJhckNvb2tpZSkgewogICAgICAgICAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA+IDEwMCkgewogICAgICAgICAgICAgICAgCSAgICBsZXQgc2Nyb2xsUyA9ICQodGhpcykuc2Nyb2xsVG9wKCk7CiAgICAgICAgICAgICAgICAJICAgIGlmIChzY3JvbGxTID49IHdpbmRvd1RvcCkgewogICAgICAgICAgICAgICAgCSAgICAJJCgnI2NzZG4tdG9vbGJhcicpLnNsaWRlVXAoMTAwKTsKICAgICAgICAgICAgICAgIAkgICAgCXdpbmRvd1RvcCA9IHNjcm9sbFM7CiAgICAgICAgICAgICAgICAJICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAJICAgIAkkKCcjY3Nkbi10b29sYmFyJykuc2xpZGVEb3duKDEwMCk7CiAgICAgICAgICAgICAgICAJICAgIAl3aW5kb3dUb3AgPSBzY3JvbGxTOwogICAgICAgICAgICAgICAgCSAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGF1dG9IaWRlVG9vbGJhckNvb2tpZSkgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hdXRvaGlkZXRvb2xiYXItYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hdXRvaGlkZXRvb2xiYXItYnV0dG9uIikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maWcubGlzdGVuQnV0dG9uKCIjdG9nZ2xlLWF1dG9oaWRldG9vbGJhci1idXR0b24iLCAiYXV0b0hpZGVUb29sYmFyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9KTsKCiAgICAgICAgICAgIC8vIOiHquWKqOmakOiXj+W6leagjwogICAgICAgICAgICBsZXQgYXV0b0hpZGVCb3R0b21CYXJDb29raWUgPSBjb25maWcuZ2V0KCJhdXRvSGlkZUJvdHRvbUJhciIsIHRydWUpOwogICAgICAgICAgICBpZiAoYXV0b0hpZGVCb3R0b21CYXJDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b29sQmFyQm94IC5sZWZ0LXRvb2xib3giKS5jc3MoewogICAgICAgICAgICAgICAgCXBvc2l0aW9uOiAicmVsYXRpdmUiLAogICAgICAgICAgICAgICAgCWxlZnQ6ICIwcHgiLAogICAgICAgICAgICAgICAgCWJvdHRvbTogIjAiLAogICAgICAgICAgICAgICAgCXdpZHRoOiAkKCIjdG9vbEJhckJveCIpLndpZHRoKCkgKyAicHgiCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAJJCgiI3Rvb2xCYXJCb3ggLmxlZnQtdG9vbGJveCIpLmNzcyh7CiAgICAgICAgICAgICAgICAJCXBvc2l0aW9uOiAicmVsYXRpdmUiLAogICAgICAgICAgICAgICAgCQlsZWZ0OiAiMHB4IiwKICAgICAgICAgICAgICAgIAkJYm90dG9tOiAiMCIsCiAgICAgICAgICAgICAgICAJCXdpZHRoOiAkKCIjdG9vbEJhckJveCIpLndpZHRoKCkgKyAicHgiCiAgICAgICAgICAgICAgICAJfSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChhdXRvSGlkZUJvdHRvbUJhckNvb2tpZSkgewogICAgICAgICAgICAgICAgJCgiI3RvZ2dsZS1hdXRvaGlkZWJvdHRvbWJhci1idXR0b24iKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKCIjdG9nZ2xlLWF1dG9oaWRlYm90dG9tYmFyLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS1hdXRvaGlkZWJvdHRvbWJhci1idXR0b24iLCAiYXV0b0hpZGVCb3R0b21CYXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge2xvY2F0aW9uLnJlbG9hZCgpO30pOwoKICAgICAgICAgICAgLy8g5Yib5L2c5Lit5b+D5oyJ6ZKuCiAgICAgICAgICAgIGxldCB3cml0ZUJsb2dDb29raWUgPSBjb25maWcuZ2V0KCJ3cml0ZUJsb2ciLCB0cnVlKTsKICAgICAgICAgICAgaWYgKCF3cml0ZUJsb2dDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIi50b29sYmFyLWJ0bi13cml0ZSIpLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh3cml0ZUJsb2dDb29raWUpIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtd3JpdGVibG9nLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICQoIiN0b2dnbGUtd3JpdGVibG9nLWJ1dHRvbiIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlnLmxpc3RlbkJ1dHRvbigiI3RvZ2dsZS13cml0ZWJsb2ctYnV0dG9uIiwgIndyaXRlQmxvZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtsb2NhdGlvbi5yZWxvYWQoKTt9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7bG9jYXRpb24ucmVsb2FkKCk7fSk7CgogICAgICAgICAgICAvLyDlj7Pkvqfmu5rliqjmnaEKICAgICAgICAgICAgLyoqIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbGV0IHJpZ2h0U2lkZUhlaWdodCA9IDA7CiAgICAgICAgICAgICAgICBsZXQgcGFnZUhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgnLmFsaWduLWl0ZW1zLXN0cmV0Y2guZ3JvdXBfaXRlbScpLnBhcmVudCgpKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgiI2FzaWRlUHJvZmlsZSIpKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgiI2FzaWRlU2VhcmNoQXJ0aWNsZSIpKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgiI2FzaWRlTmV3QXJ0aWNsZSIpKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgiI2FzaWRlSG90QXJ0aWNsZSIpKTsKICAgICAgICAgICAgICAgIHJpZ2h0U2lkZUhlaWdodCArPSBnZXRIZWlnaHQoJCgiI2FzaWRlTmV3Q29tbWVudHMiKSk7CiAgICAgICAgICAgICAgICByaWdodFNpZGVIZWlnaHQgKz0gZ2V0SGVpZ2h0KCQoIiNhc2lkZUNhdGVnb3J5IikpOwogICAgICAgICAgICAgICAgcmlnaHRTaWRlSGVpZ2h0ICs9IGdldEhlaWdodCgkKCIjYXNpZGVBcmNoaXZlIikpOwogICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiUmlnaHQgc2lkZSB0b3RhbCBoZWlnaHQ6ICIgKyByaWdodFNpZGVIZWlnaHQpOwogICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiUGFnZSBoZWlnaHQ6ICIgKyBwYWdlSGVpZ2h0KTsKICAgICAgICAgICAgICAgIGlmIChyaWdodFNpZGVIZWlnaHQgPiBwYWdlSGVpZ2h0KSB7CiAgICAgICAgICAgICAgICAgICAgJCgnI3JlY29tbWVuZC1yaWdodCcpLmNzcygib3ZlcmZsb3ciLCAic2Nyb2xsIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIDE1MDApOyAqLwogICAgICAgIH0gZWxzZSBpZiAobnVtID09PSA3KSB7CiAgICAgICAgICAgICQoIi5tZV9yIilbMV0ucmVtb3ZlKCk7CiAgICAgICAgfSBlbHNlIGlmIChudW0gPT09IDgpIHsKICAgICAgICAgICAgLyogJCgiLmFydGljbGUtYmFyLXRvcCIpLmFwcGVuZCgiPGJyPiIpOwogICAgICAgICAgICAkKCIuYXJ0aWNsZS1iYXItdG9wIikuYXBwZW5kKCQoIi5hc2lkZS1ib3gtZm9vdGVyQ2xhc3NpZnkiKS5jaGlsZHJlbigiZGQiKS5odG1sKCkpOwogICAgICAgICAgICAkKCJkbCIpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7CiAgICAgICAgICAgICAgICB2YXIga2V5ID0gJCh0aGlzKS5jaGlsZHJlbigiZHQiKTsKICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9ICQodGhpcykuY2hpbGRyZW4oImRkIikuY2hpbGRyZW4oInNwYW4iKTsKICAgICAgICAgICAgICAgIGlmIChrZXkuaHRtbCgpLmluZGV4T2YoIuWOn+WImyIpICE9IC0xKSB7CiAgICAgICAgICAgICAgICAgICAga2V5ID0gJCh0aGlzKS5jaGlsZHJlbigiZHQiKS5jaGlsZHJlbigiYSIpCiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAkKHRoaXMpLmNoaWxkcmVuKCJkZCIpLmNoaWxkcmVuKCJhIikuY2hpbGRyZW4oInNwYW4iKTsKICAgICAgICAgICAgICAgICAgICBhZGRJbmZvKGtleSwgdmFsdWUpOwogICAgICAgICAgICAgICAgfSBlbHNlCiAgICAgICAgICAgICAgICBpZiAodmFsdWUuaHRtbCgpICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgIGFkZEluZm8oa2V5LCB2YWx1ZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gKTsKICAgICAgICAgICAgZnVuY3Rpb24gYWRkSW5mbyhrZXksIHZhbHVlKSB7CiAgICAgICAgICAgICAgICB2YXIgYmluZCA9IGtleS5odG1sKCkgKyAiJm5ic3A7IiArIHZhbHVlLmh0bWwoKSArICImbmJzcDsmbmJzcDsiOwogICAgICAgICAgICAgICAgJCgiLmFydGljbGUtYmFyLXRvcCIpLmFwcGVuZChiaW5kICsgIiAiKTsKICAgICAgICAgICAgfSAqLwogICAgICAgICAgICAkKCIuYmxvZ19jb250YWluZXJfYXNpZGUiKS5yZW1vdmUoKTsKCiAgICAgICAgICAgIC8vIOagh+mimOa2iOaBr+aPkOmGkuWOu+mZpAogICAgICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC50aXRsZS5yZXBsYWNlKC9eXCguKj9cKS9nLCAiIik7CiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7CiAgICAgICAgICAgIC8vIOivhOiuuuWkjeWItuaMiemSrgogICAgICAgICAgICAkKCcuY29tbWVudC1ib3gnKS5wcmVwZW5kKCc8YnV0dG9uIGNsYXNzPSJjb21tZW50LWhpZGRlbi10ZXh0IiBzdHlsZT0iZGlzcGxheTpub25lIj5DT1BZIEJVVFRPTjwvYnV0dG9uPicpOwogICAgICAgICAgICAkKCcubmV3LW9wdC1ib3gubmV3LW9wdC1ib3gtYmcnKS5wcmVwZW5kKCc8YSBjbGFzcz0iYnRuIGJ0bi1yZXBvcnQgYnRuLWNvcHkiIG9uY2xpY2s9ImphdmFzY3JpcHQ6JChcJy5jb21tZW50LWhpZGRlbi10ZXh0XCcpLmF0dHIoXCdkYXRhLWNsaXBib2FyZC10ZXh0XCcsJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKFwnLm5ldy1jb21tZW50XCcpLnRleHQoKSkiPuWkjeWItuivhOiuujwvYT48c3BhbiBjbGFzcz0iYnRuLWJhciI+PC9zcGFuPicpOwogICAgICAgICAgICAkKCcuYnRuLWNvcHknKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZhciBjbGlwYm9hcmQgPSBuZXcgQ2xpcGJvYXJkSlMoJy5jb21tZW50LWhpZGRlbi10ZXh0Jyk7CiAgICAgICAgICAgICAgICBjbGlwYm9hcmQub24oJ3N1Y2Nlc3MnLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5pbmZvKCdBY3Rpb246JywgZS5hY3Rpb24pOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbygnVGV4dDonLCBlLnRleHQpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbygnVHJpZ2dlcjonLCBlLnRyaWdnZXIpOwogICAgICAgICAgICAgICAgICAgIGUuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICAgICAgICAgICAgICAkKCcuYnRuLWNvcHknKS5odG1sKCfmiJDlip8nKTsKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICAkKCcuYnRuLWNvcHknKS5odG1sKCflpI3liLbor4TorronKTsKICAgICAgICAgICAgICAgICAgICB9LCAxMDAwKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY2xpcGJvYXJkLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdBY3Rpb246JywgZS5hY3Rpb24pOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RyaWdnZXI6JywgZS50cmlnZ2VyKTsKICAgICAgICAgICAgICAgICAgICAkKCcuYnRuLWNvcHknKS5odG1sKCflpLHotKXvvIzor7fmiYvliqjlpI3liLYnKTsKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICAkKCcuYnRuLWNvcHknKS5odG1sKCflpI3liLbor4TorronKTsKICAgICAgICAgICAgICAgICAgICB9LCAxMDAwKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgJCgiLmNvbW1lbnQtaGlkZGVuLXRleHQiKS5jbGljaygpOwogICAgICAgICAgICAgICAgY2xpcGJvYXJkLmRlc3Ryb3koKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmIChudW0gPT09IDkpIHsKICAgICAgICAgICAgLy8g5Yig6ZmkQ1NETiBMT0dP5oKs5rWu5ZCO55qE5LqM57u056CBCiAgICAgICAgICAgICQoIi50b29sYmFyLXN1Yk1lbnUgPiBpbWciKS5wYXJlbnQoKS5yZW1vdmUoKTsKICAgICAgICB9CiAgICB9LCAxMDApOwogICAgcHJvZ3Jlc3Nvci5pbmNQcm9ncmVzcygxMCk7Cn0KCmZ1bmN0aW9uIHNob3dUaXBzKCkgewoJdmFyIGNvbmZpZyA9IHsKCQljb250ZW50OiAi5qyi6L+O5L2/55SoIENTRE5HcmVlbmVy77yM57u/5YyW6K6+5a6a5oyJ6ZKu5Zyo6L+Z6YeM77yBPGJyPjxhIG9uY2xpY2s9J2phdmFzY3JpcHQ6JChcIi50cmlwc1wiKS5yZW1vdmUoKTsnPuWlveeahO+8jOS7peWQjuS4jeWGjeaPkOekuuaIkTwvYT4iLAoJCXR5cGU6ICJodG1sIiwKCQlhbGlnblRvOiBbImJvdHRvbSIsICJyaWdodCJdLAoJCXRyaWdnZXI6ICJzaG93IiwKCQlpc2Nsb3NlOiBmYWxzZSwKCQljb2xvcjogWyIjQjJFMjgxIiwgIiNCMkUyODEiXQoJfTsKCSQoIiNncmVlbmVyU2V0dGluZ3MiKS5zaG93VGlwcyhjb25maWcpOwp9CgpmdW5jdGlvbiBnZXRIZWlnaHQoZWxlbWVudCkgewogICAgbGV0IG91dGVySGVpZ2h0ID0gZWxlbWVudC5vdXRlckhlaWdodCgpOwogICAgaWYgKG91dGVySGVpZ2h0ID09PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICByZXR1cm4gb3V0ZXJIZWlnaHQ7Cn0KCmZ1bmN0aW9uIGlzRmlyZWZveCgpIHsKICAgIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoIkZpcmVmb3giKSA+IDA7Cn0KCg==","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1676860516508,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1676860516507,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1676860516509,"mimetype":"text/javascript"},"source":""}]}]}